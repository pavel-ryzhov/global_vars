#include <iostream>
#include <fstream>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <set>

using namespace std;

char image[200][1000];
bool c[200][1000];
int width = 0;
int height;

struct pixel_set{
    set<pair<int, int> > s;
    double xc, yc;
    int left, top, right, bottom;
    pixel_set()
    {
        xc = yc = right = bottom = 0;
        left = top = 1e9;
    }
    void add_pixel(int x, int y)
    {
        s.insert( make_pair(x, y) );
    }
    void merge(pixel_set &b)
    {
        for(set<pair<int, int> >::iterator it = b.s.begin(); it != b.s.end(); it++)
            s.insert(*it);
        calculate_info();
    }
    pixel_set split_half()
    {
        int mid = (top + bottom) / 2;
        pixel_set second;

        for(set<pair<int, int> >::iterator it = s.begin(); it != s.end(); it++)
        {
            if(it->second > mid)
                second.add_pixel(it->first, it->second);
        }

        for(set<pair<int, int> >::iterator it = s.begin(); it != s.end(); )
        {
            if(it->second > mid)
                s.erase(it++);
            else
                it++;
        }
        second.calculate_info();
        calculate_info();
        return second;
    }
    void calculate_info()
    {
        xc = yc = 0;
        for(set<pair<int, int> >::iterator i = s.begin(); i != s.end(); i++)
        {
            xc += i->first;
            yc += i->second;
            left = min(left, i->first);
            right = max(right, i->first);
            top = min(top, i->second);
            bottom = max(bottom, i->second);
        }
        xc /= s.size();
        yc /= s.size();
    }
};

struct digit{
    char mat[100][100];
    int width, height;

    digit(){memset(mat, 0, 100*100);}
    digit(pixel_set s)
    {
        memset(mat, 0, 100*100);
        width = s.right - s.left + 1;
        height = s.bottom - s.top + 1;
        for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
        {
            mat[it->first - s.left][it->second - s.top] = image[it->first][it->second];
        }
    }
    void print()
    {
        for(int i = 0; i < width; i++)
        {
            for(int j = 0; j < height; j++)
            {
                switch(mat[i][j])
                {
                    case 0: cout << '.'; break;
                    case 1: cout << '%'; break;
                    case 2: cout << '#'; break;
                    case 3: cout << '@'; break;
                }
            }
            cout << "\n";
        }
        cout << endl;
    }
};

int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dy[] = {1, -1, 0, 0, 1, 1, -1, -1};

bool check(int i, int j)
{
    return i >= 0 && i <= height && j >= 0 && j <= width;
}

void dfs(int i, int j, int min_color, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1 ;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(check(ni, nj) && image[ni][nj] >= min_color)
                dfs(ni, nj, min_color, cur_set);
        }
    }
}

bool inside(pixel_set s, double x, double y)
{
    return y >= s.top && y <= s.bottom;
}

bool can_merge(const pixel_set &a, const pixel_set &b)
{
    return inside(b, a.xc, a.yc) || inside(a, b.xc, b.yc);
}

void bfs_add(pixel_set &s, int len)
{
    queue<pair<int, int> > q;
    int dist[200][1000];
    memset(dist, 0x0f, 200*1000*4);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        dist[it->first][it->second] = 0;
        q.push(*it);
    }

    while(!q.empty())
    {
        pair<int, int> p = q.front();
        q.pop();
        if(dist[p.first][p.second] < len)
        {
            if(image[p.first][p.second] == 1)
            {
                bool bad = 0;
                for(int k = 0; k < 8; k++)
                {
                    int ni = p.first + dx[k];
                    int nj = p.second + dy[k];
                    if(check(ni, nj) && image[ni][nj] > 2)
                        if(s.s.find(make_pair(ni, nj)) == s.s.end())
                        {
                            bad = 1;
                            break;
                        }
                }

                if(!bad)
                    s.add_pixel(p.first, p.second);
            }
            for(int k = 0; k < 8; k++)
            {
                int ni = p.first + dx[k];
                int nj = p.second + dy[k];
                if(check(ni, nj) && image[ni][nj] == 1 && dist[ni][nj] > 100)
                {
                    q.push(make_pair(ni, nj));
                    dist[ni][nj] = dist[p.first][p.second] + 1;
                }
            }
        }
    }
    s.calculate_info();
}

void dfs_set(int i, int j, pixel_set &s, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(s.s.find( make_pair(ni, nj)) != s.s.end() )
                dfs_set(ni, nj, s, cur_set);
        }
    }
}

pixel_set make_one_component(pixel_set &s, bool bad)
{
    if(bad)
        return s;
    vector<pixel_set> sets;
    pixel_set cur;
    memset(c, 0, 200*1000);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        int x = it->first;
        int y = it->second;
        if(!c[x][y])
        {
            dfs_set(x, y, s, cur);
            cur.calculate_info();
            if(cur.s.size() > 10)
                sets.push_back(cur);
            cur = pixel_set();
        }
    }
    if(sets.size() == 1)
        return sets[0];
    return sets[1];
}

int between(int xl, int xr, int xm)
{
    return xm >= xl && xm <= xr;
}

int dist(pixel_set a, pixel_set b)
{
    if( between(a.left, a.right, b.left) || between(a.left, a.right, b.right))
        return 0;

    if( between(b.left, b.right, a.left) || between(b.left, b.right, a.right))
        return 0;

    return 1000;
}

vector<digit> split_image()
{
    vector<pixel_set> sets;
    vector<digit> res;

    pixel_set cur;

    for(int j = 0; j < width; j++)
        for(int i = 0; i < height; i++)
            if(image[i][j] >= 2 && !c[i][j])
            {
                dfs(i, j, 2, cur);
                cur.calculate_info();

                sets.push_back(cur);
                cur = pixel_set();
            }

    bool *merged = new bool[sets.size()];
    memset(merged, 0, sets.size());

    vector<pixel_set> blacks;
    int cnt = 0;
    for(size_t i = 0; i < sets.size(); i++)
        if(!merged[i])
        {
            cnt++;
            cur = sets[i];
            for(size_t j = i+1; j < sets.size(); j++)
            {
                if(can_merge(cur, sets[j]))
                {
                    cur.merge(sets[j]);
                    merged[j] = 1;
                }
            }

            if(cur.s.size() > 10)
                blacks.push_back(cur);
            merged[i] = 1;
        }

    bool bad = 0;
    while(blacks.size() > 3)
    {
        bad = 1;
        int mi=0, mj=1;
        int mdist = 1000;
        for(size_t i = 0; i < blacks.size(); i++)
            for(size_t j = i+1; j < blacks.size(); j++)
            {
                if(dist(blacks[i], blacks[j]) < mdist)
                {
                    mi = i;
                    mj = j;
                }
            }
        pixel_set a = blacks[mi], b = blacks[mj];

        blacks.erase(blacks.begin() + mj);
        blacks.erase(blacks.begin() + mi);

        a.merge(b);
        blacks.push_back(a);

        cnt--;
    }

    if(blacks.size() == 1)
    {
        pixel_set a = blacks[0];
        pixel_set b = a.split_half();

        blacks.clear();
        blacks.push_back(a);
        blacks.push_back(b);
    }

    delete[] merged;

    for(size_t i = 0; i < blacks.size(); i++)
    {
        memset(c, 0, 200*1000);
        pixel_set s = blacks[i];
        bfs_add(s, 5);
        res.push_back(digit( make_one_component(s, bad)));
    }

    return res;
}
digit scale(digit d, int w, int h)
{
    digit res;
    res.width = w;
    res.height = h;

    for(int i = 0; i < w; i++)
        for(int j = 0; j < h; j++)
        {
            res.mat[i][j] = (d.mat[i*d.width/w][j*d.height/h] > 0 ? 3 : 0);
        }

  	for(int i = 0; i < d.width; i++)
        for(int j = 0; j < d.height; j++)
        {
            int ii = (double)i * w / d.width;
            int jj = (double)j * h / d.height;
            if(d.mat[i][j] == 3)
	            res.mat[ii][jj] = 3;
        }
    return res;
}

#define SIGMOID(x) (1.7159*tanh(0.66666667*x))
double a1[]={-0.0733,
0.0274,-0.183,-0.193,-0.199,0.735,0.457,0.17,-0.0498,-0.0534,0.313,0.418,-0.135,0.0668,-0.114,0.0677,0.349,0.361,0.479,0.261,-0.0345,0.139,-0.0612,-0.0919,-0.116,0.228,0.65,0.315,0.489,0.00729,0.0591,0.202,0.35,0.131,0.195,-0.0639,-0.163,0.135,0.0194,-0.0215,-0.298,-0.3,-0.218,-0.163,0.174,-0.387,-0.632,-0.38,-0.623,-0.463,0.78,0.517,-0.079,-0.146,-0.345,0.313,0.851,0.588,0.177,-0.0792,0.337,0.196,0.356,0.0423,0.0435,-0.0773,-0.174,-0.109,-0.0805,-0.402,0.179,-0.173,-0.214,-0.355,-0.31,-0.221,0.311,0.374,0.45,0.426,-0.504,0.17,0.616,0.574,0.32,-0.432,-0.336,0.14,0.385,0.299,-0.404,-0.276,-0.11,0.00458,0.352,-0.259,0.0279,0.124,-0.00112,0.134};
double a2[]={0.417,
0.208,0.268,-0.136,0.0881,-0.298,0.337,0.188,0.0554,0.0434,-0.264,0.0214,-0.0821,-0.149,-0.101,-0.233,0.0908,-0.214,-0.148,-0.29,-0.329,-0.153,-0.0568,0.0029,-0.0326,-0.162,0.0786,-0.0362,-0.0303,0.0505,0.0169,0.197,0.0375,0.0742,-0.0729,-0.00944,0.0386,0.208,0.161,0.0859,-0.0497,0.0645,-0.093,-0.16,-0.175,-0.0212,-0.186,0.147,-0.172,-0.202,0.26,0.24,0.123,-0.000466,-0.0334,-0.147,0.532,0.167,0.235,-0.0803,0.0291,0.177,0.226,0.103,-0.0222,-0.359,0.0517,-0.209,-0.175,-0.338,-0.377,-0.0255,0.0487,-0.0976,-0.0121,0.101,0.226,0.0892,0.0305,-0.0483,-0.0288,0.289,0.243,0.0338,-0.0253,-0.0433,0.0741,0.103,0.0184,-0.114,0.0818,-0.05,-0.288,-0.277,-0.261,0.0357,-0.201,-0.0386,-0.171,-0.223,-0.134,-0.12,-0.116,-0.15,-0.0337,-0.216,0.157,0.0182,0.13,0.172,-0.123,0.174,0.102,-0.000514,0.154,0.118,0.183,0.0098,0.00237,-0.0214,-0.0567,0.223,-0.199,-0.137,-0.122,-0.289,-0.0897,-0.0984,-0.0255,0.126,0.186,-0.194,-0.104,-0.106,-0.262,-0.192,-0.159,-0.00436,0.11,0.0325,-0.063,-0.0782,-0.0422,0.0357,0.166,0.21,-0.127,0.0476,0.179,0.303,-0.289,-0.279,-0.258,-0.0606,0.0924,0.0212,0.0526,0.0907,0.106,-0.119,-0.133,0.206,0.0155,0.0865,0.204,0.0327,0.28,0.0678,-0.0306,0.0998,0.0601,0.0916,0.0222,0.0266,-0.0917,-0.333,-0.142,-0.0701,0.1,0.189,0.0621,-0.0559,0.00603,-0.105,-0.263,-0.132,-0.0569,0.231,0.192,0.065,-0.0499,0.152,0.042,0.0995,0.0814,0.149,-0.0337,0.0742,-0.0633,-0.0892,-0.0802,-0.201,-0.125,0.00691,0.0491,-0.00571,0.00382,-0.0756,-0.0769,-0.0576,0.18,-0.109,-0.0808,-0.0251,0.164,0.172,-0.208,-0.0647,0.0706,0.0851,0.186,0.284,-0.0556,0.18,0.142,-0.136,-0.0844,-0.107,-0.0708,0.00708,-0.0709,-0.032,-0.033,-0.0506,-0.0793,-0.0912,-0.0435,0.015,-0.0247,-0.146,0.0485,-0.0646,0.00608,-0.0229,-0.0644,0.0161,-0.225,-0.191,-0.23,-0.0404,-0.197,-0.0784,-0.195,-0.0844,0.0046,0.129,-0.0294,-0.207,-0.0353,0.0551,0.178,-0.111,-0.0627,0.0306,0.056,0.148,-0.156,-0.0709,-0.000987,0.167,0.277,-0.122,-0.148,0.244,0.147,-0.276,-0.142,-0.0653,0.0207,0.258,0.451,-0.316,-0.0615,0.0433,0.221,0.0331,-0.102,-0.102,0.083,0.0463,0.331,-0.0586,0.00259,0.0613,0.183,0.147,-0.0428,0.0111,0.0599,0.0829,-0.168,0.0114,0.18,0.178,-0.0545,0.149,-0.0696,0.00908,0.154,0.0768,0.091,-0.0571,-0.0465,0.0252,0.189,0.165,0.0312,-0.241,-0.179,0.0285,0.152,0.19,-0.0742,-0.262,-0.316,-0.0369,-0.0596,0.0305,-0.095,-0.0374,-0.049,-0.0412,0.0759,0.184,-0.019,-0.154,-0.115,0.106,0.0992,-0.0321,-0.0961,-0.325,-0.0198,0.097,0.173,-0.0618,0.136,-0.303,-0.152,0.129,-0.106,0.0559,-0.0335,0.201,-0.0189,0.0355,-0.136,-0.00968,0.145,0.107,0.0291,-0.0373,-0.0548,0.0036,0.029,0.0193,-0.136,-0.182,-0.0885,0.185,0.147,0.172,-0.188,-0.14,-0.0403,0.138,0.145,0.212,-0.0584,0.00429,0.0683,-0.0314,0.143,0.229,-0.0898,-0.00437,-0.134,0.14,0.17,0.0509,0.0648,-0.198,-0.00499,0.235,0.251,-0.0497,0.103,-0.17,-0.0685,0.18,-0.409,-0.289,0.164,0.219,0.122,0.0387,-0.00376,-0.225,-0.0729,0.121,0.15,0.114,0.0321,-0.0808,-0.303,0.0589,-0.0207,-0.0824,0.0606,-0.109,-0.357,-0.0589,-0.0048,0.148,0.035,-0.328,0.125,0.0304,-0.0548,-0.0787,-0.0784,-0.243,0.0402,0.09,0.081,0.0204,0.067,-0.161,-0.237,-0.108,0.284,0.0872,0.0526,-0.0278,-0.0672,0.0201,-0.0678,-0.105,-0.138,-0.146,-0.675,-0.0479,0.132,0.0957,0.028,0.185,0.0392,-0.252,0.181,0.317,0.0474,0.125,-0.128,-0.241,-0.196,0.194,0.00702,0.0182,0.0128,-0.162,-0.155,-0.11,-0.0341,0.0468,-0.0297,-0.0332,0.163,0.0775,0.202,0.123,0.153,-0.252,0.152,0.263,0.115,0.111,-0.0329,-0.25,-0.104,0.084,0.213,0.162,0.111,-0.173,-0.164,-0.165,0.0234,0.119,0.00104,-0.315,0.147,
0.0328,0.0716,-0.0339,-0.0305,0.139,0.0506,0.0254,0.0841,0.287,0.141,-0.0535,-0.147,0.000443,-0.00228,0.124,-0.0371,-0.224,-0.0678,-0.091,-0.158,0.201,-0.153,-0.189,-0.0594,-0.124,-0.0844,-0.183,-0.323,-0.221,-0.0741,0.00813,0.0842,0.0592,-0.0382,-0.0705,-0.0705,0.207,0.0986,0.36,0.144,-0.205,0.02,-0.0392,-0.0666,0.143,0.0249,-0.15,-0.154,-0.0107,0.0373,0.114,-0.0943,-0.11,-0.0991,-0.0198,0.0625,-0.00822,0.0834,-0.00621,-0.0122,0.0114,0.026,-0.0118,0.29,0.298,0.0487,-0.0847,-0.075,-0.083,-0.108,0.0489,-0.18,-0.0394,-0.0362,-0.066,-0.111,-0.184,-0.166,-0.0795,-0.0103,-0.0685,0.0143,0.0276,-0.0688,0.0416,-0.0525,0.0375,0.164,0.265,0.144,-0.0601,-0.123,-0.0657,-0.13,0.194,-0.172,-0.111,-0.0842,-0.0655,-0.0067,0.206,0.136,-0.0273,0.0185,0.207,0.153,-0.118,-0.187,-0.00673,0.0247,0.28,0.0438,-0.0386,-0.0567,-0.065,0.159,0.0263,-0.0995,-0.0786,-0.0568,-0.281,0.14,-0.0925,-0.154,0.313,0.268,0.0574,-0.0954,0.122,0.0686,-0.0562,0.0755,0.0115,-0.00421,0.08,0.0717,-0.0327,-0.0172,0.0171,0.0188,0.0338,-0.0576,0.0247,0.0286,0.00753,0.208,0.241,0.0872,-0.125,0.335,0.46,0.1,-0.00349,0.0989,0.238,0.0385,-0.0111,-0.0316,-0.0605,-0.0242,0.175,0.122,-0.131,-0.0556,0.00451,0.179,-0.102,-0.017,-0.0992,0.0406,0.108,0.0754,-0.109,-0.0255,0.401,0.145,-0.106,0.164,0.118,0.223,-0.0438,-0.108,-0.0374,-0.0621,0.216,0.082,-0.0759,-0.000277,0.0581,-0.0307,0.0393,-0.0429,-0.0994,-0.114,0.00306,0.0863,0.00229,0.047,-0.198,0.294,0.124,0.106,-0.0507,0.0551,0.0244,0.0123,0.0808,-0.0311,-0.00595,-0.0498,-0.199,-0.0106,-0.0744,-0.0371,-0.0769,-0.215,-0.142,0.0338,-0.106,-0.00732,-0.334,-0.0981,-0.0711,0.116,0.196,0.116,0.115,-0.107,-0.192,-0.212,0.218,-0.0378,0.0611,0.11,0.173,0.00759,0.0856,0.084,0.109,-0.0137,-0.0663,-0.0352,-0.0923,-0.134,-0.105,0.183,0.0691,-0.0276,0.0432,0.529,0.362,0.00449,-0.0449,-0.148,-0.0928,0.25,0.076,0.0181,-0.154,-0.108,0.000866,0.0281,-0.00723,0.0318,-0.0409,-0.231,0.00915,-0.136,-0.0703,-0.00358,-0.172,-0.202,-0.085,-0.0347,0.224,0.169,0.154,-0.11,-0.42,-0.556,0.251,0.0257,0.0694,0.0666,-0.0244,0.154,0.12,0.112,-0.135,-0.224,0.00725,0.0161,-0.0661,-0.0467,-0.381,0.11,-0.108,0.0255,0.027,-0.156,-0.237,-0.044,0.0276,0.15,0.223,0.0888,-0.0517,0.00588,-0.0272,-0.0819,0.103,0.118,-0.0416,-0.0347,-0.151,0.0877,0.147,0.0383,-0.0349,-0.126,0.448,0.0523,-0.00316,0.0819,-0.193,0.000622,-0.00732,0.157,0.252,0.164,-0.174,0.0123,0.0423,-0.0506,0.146,0.0146,-0.124,0.0511,0.106,-0.0915,-0.125,0.103,0.00112,0.0939,0.061,0.0203,-0.079,0.0699,-0.064,-0.584,-0.32,0.0571,0.104,0.192,0.171,0.0296,-0.107,0.0523,0.0644,-0.00743,0.069,-0.043,-0.086,0.0647,-0.0271,0.155,0.158,0.0874,-0.0576,-0.0175,0.213,0.111,0.0798,-0.0857,-0.0781,0.122,0.138,0.135,0.44,0.403,-0.224,-0.0341,0.00522,0.0199,0.141,-0.108,-0.0416,0.0858,0.0301,0.0215,0.0624,0.0185,-0.0561,-0.0353,0.0932,-0.0491,-0.0544,-0.0601,-0.133,-0.257,-0.0729,-0.0857,0.0405,0.121,0.204,-0.28,-0.203,-0.0476,-0.00415,-0.107,-0.159,-0.126,0.0253,0.0149,0.0221,-0.0186,-0.0211,0.174,0.263,-0.0143,-0.0605,0.177,0.13,0.105,0.253,0.096,-0.0739,0.00843,0.124,0.0997,0.0255,0.124,-0.0848,-0.162,0.128,-0.0412,-0.169,-0.153,-0.179,-0.0515,-0.12,0.0907,-0.0134,-0.169,-0.27,0.388,-0.0199,0.235,0.039,-0.205,-0.0314,0.0555,0.152,0.292,0.285,-0.298,-0.058,-0.0578,-0.0312,-0.04,-0.226,-0.335,-0.151,-0.0884,-0.0322,-0.149,-0.108,0.162,-0.0719,-0.0227,0.0266,0.0116,0.0255,0.366,0.165,0.016,0.0556,0.155,0.309,0.14,-0.19,-0.0235,0.0317,0.0352,0.154,-0.257,-0.151,-0.00212,-0.0297,-0.246,-0.00559,0.12,-0.106,0.11,-0.0141,0.174,0.00122,0.34,0.047,0.295,
0.109,0.101,0.0823,0.13,-0.106,0.205,0.239,0.0522,-0.0594,0.204,0.0559,-0.0155,0.0675,-0.0171,-0.0565,-0.0401,-0.107,-0.151,-0.168,-0.0125,0.148,-0.334,-0.272,-0.315,-0.112,-0.104,0.00866,0.0358,-0.0741,-0.0101,0.12,-0.0149,-0.0236,0.0613,0.125,0.199,0.163,0.205,0.135,-0.115,-0.0111,0.0624,-0.0844,0.101,0.0217,-0.09,-0.0695,-0.147,-0.0387,0.285,0.311,0.0384,0.067,0.00596,-0.00078,0.338,0.121,0.148,0.0491,0.163,0.232,0.126,0.147,0.0733,-0.152,-0.0295,-0.0213,-0.057,-0.0805,-0.0291,0.123,-0.173,-0.155,-0.218,0.0275,0.0511,-0.0285,-0.00997,-0.0298,0.0495,0.228,0.0359,-0.144,0.205,0.271,0.142,-0.0105,0.102,0.0301,-0.0566,-0.0351,-0.24,-0.118,0.0519,-0.151,-0.159,-0.176,-0.254,-0.0318,-0.243,-0.0285,0.0666,0.115,0.0798,0.174,-0.0935,-0.11,0.0948,0.0646,0.213,0.037,0.0485,-0.0365,0.0777,-0.0919,-0.0963,0.16,-0.00982,-0.101,0.0682,0.0304,0.0427,0.014,-0.0294,-0.0592,0.0809,0.037,0.149,-0.0679,-0.099,-0.0119,-0.00827,0.136,0.0537,0.229,0.0438,-0.0959,-0.0335,0.0929,0.036,0.138,0.0184,-0.0123,-0.0814,-0.0924,0.147,0.0153,-0.137,-0.157,-0.321,0.0613,0.185,0.159,0.259,0.17,-0.112,-0.0447,0.0759,0.117,0.188,-0.0196,-0.076,-0.0132,0.0512,0.0139,0.031,0.149,-0.0592,0.0656,-0.0779,-0.0491,0.0562,0.0652,-0.0225,0.148,0.138,0.0842,0.272,0.227,0.0665,-0.16,0.112,0.162,0.15,0.245,0.0258,-0.0384,0.0483,0.0123,-0.0395,0.152,0.0573,0.0267,-0.0734,-0.239,0.2,0.105,0.0783,-0.105,-0.101,0.0299,-0.0253,-0.0796,-0.263,-0.336,-0.235,-0.0184,0.0242,0.126,-0.0711,-0.0296,-0.0439,0.000285,0.00802,-0.0368,0.106,0.1,0.0205,0.167,-0.144,0.647,0.301,0.152,-0.00996,-0.06,0.0681,-0.0691,-0.0948,0.161,0.318,0.0272,0.275,0.0657,-0.022,-0.33,-0.0487,0.0601,0.12,0.0383,-0.0554,-0.136,0.051,0.132,0.0613,0.0838,0.0329,-0.164,-0.0674,0.114,-0.136,-0.366,-0.284,-0.156,-0.0382,0.0456,-0.0705,0.0546,0.0783,-0.0728,-0.176,-0.217,-0.0611,-0.0598,-0.0143,0.0231,0.0757,0.0711,0.0546,0.0351,-0.123,0.255,-0.00772,0.0721,0.00658,-0.252,-0.1,-0.158,-0.0608,0.0979,0.0892,-0.00294,0.1,0.0526,-0.161,-0.347,-0.201,-0.0973,-0.0237,-0.0338,0.0524,-0.0226,-0.0221,-0.176,-0.0158,0.195,0.0778,-0.085,-0.125,-0.174,-0.0808,-0.0717,-0.0317,0.0761,-0.186,0.0391,-0.065,-0.0304,0.0853,0.0829,0.149,-0.0956,0.029,-0.0646,0.0561,0.118,-0.0687,0.0198,0.00281,0.109,0.0869,0.372,0.111,0.303,0.362,0.107,0.116,-0.088,-0.115,-0.0661,-0.06,0.123,0.0344,0.0584,0.0981,-0.0607,0.117,0.125,0.000901,0.018,0.224,-0.0458,-0.0211,0.0108,0.0213,-0.171,-0.204,-0.286,-0.313,-0.425,-0.115,-0.0963,-0.0859,-0.187,-0.157,-0.0324,-0.0918,-0.211,0.038,0.264,0.114,0.00779,-0.00526,0.0148,-0.0254,0.214,0.0205,0.0576,0.0738,-0.1,-0.0853,0.0252,-0.00545,0.034,0.000441,-0.0927,-0.0798,-0.106,-0.201,-0.226,-0.0847,-0.184,-0.283,0.0374,0.155,0.0431,-0.0549,-0.17,-0.102,0.00855,0.172,-0.139,0.0122,0.0515,-0.0134,0.0606,0.000565,0.0325,0.131,0.357,-0.085,-0.247,-0.167,0.00863,-0.0911,0.0335,-0.12,-0.0332,-0.122,0.15,0.00713,-0.202,0.00848,-0.0597,-0.00542,0.0389,0.00326,0.102,0.282,0.118,0.000833,0.393,0.311,0.112,0.113,-0.0776,-0.0324,0.0507,0.0157,0.0506,0.161,0.0325,0.0398,0.0933,-0.0136,-0.094,0.0128,0.0106,0.0644,-0.0815,-0.107,-0.279,-0.0475,0.0439,0.016,-0.000979,0.0718,-0.136,0.0235,0.053,-0.284,-0.383,-0.14,-0.049,0.0446,-0.0815,-0.213,-0.169,-0.198,-0.014,0.0361,-0.34,-0.00279,-0.0646,0.0493,0.016,-0.128,0.0383,0.168,0.0155,0.0405,0.139,0.0323,0.157,0.24,-0.31,-0.111,-0.0191,-0.109,0.173,0.441,-0.0953,-0.0282,0.149,-0.202,-0.00585,0.0231,-0.0733,0.199,-0.0942,-0.0153,-0.114,0.0662,0.0143,0.073,-0.0589,0.111,0.117,0.106,0.0505,0.319,
0.235,0.143,0.167,0.141,-0.0316,0.0621,0.0843,-0.108,-0.00868,-0.037,0.142,0.042,-0.0524,-0.0207,-0.0738,-0.0893,-0.0432,-0.0601,-0.0955,-0.00828,0.162,0.116,0.0802,0.00836,0.393,0.221,0.102,0.176,0.104,-0.0115,0.142,-0.0468,0.139,-0.0127,-0.0522,0.156,0.0102,-0.0565,-0.00273,-0.0802,-0.117,-0.0511,0.0251,0.0239,0.162,-0.0229,-0.117,-0.24,-0.22,0.529,0.508,0.215,0.341,0.235,0.0178,0.191,-0.0356,0.0208,-0.127,-0.181,-0.0168,-0.0664,-0.212,0.0555,-0.0984,-0.0174,-0.0201,-0.136,-0.0844,0.163,-0.0391,-0.14,-0.0624,-0.068,0.313,0.152,0.202,0.0993,0.06,-0.0824,0.04,-0.0666,-0.106,-0.0885,-0.192,0.116,-0.225,-0.137,0.00537,0.0327,-0.164,-0.103,-0.144,-0.00692,0.0411,-0.0918,-0.0924,-0.123,-0.112,-0.0904,0.0725,0.173,0.182,0.00314,-0.0691,-0.0944,-0.111,0.116,0.0452,0.101,-0.0341,-0.0362,0.082,0.0884,0.0306,-0.0703,0.159,0.0818,0.184,0.142,-0.145,0.0508,-0.0193,0.0276,0.0686,-0.0158,0.0638,-0.00453,-0.208,-0.289,-0.0127,0.0659,-0.00378,0.0798,0.106,-0.0427,-0.065,-0.0675,0.0343,0.163,0.0603,-0.163,0.0678,0.0262,0.114,0.0669,0.109,0.0234,0.0187,-0.131,0.0953,0.0617,0.125,-0.0357,-0.123,-0.0593,0.0795,0.222,0.116,0.149,-0.0396,0.0405,0.0071,0.0232,0.132,-0.0145,0.0515,0.134,0.164,0.0569,-0.0484,0.191,0.164,0.0298,0.0761,0.101,0.125,0.0309,-0.253,-0.257,-0.0936,0.101,0.0294,0.0451,0.0518,0.0305,-0.01,-0.0247,0.0854,0.0921,0.121,0.106,0.136,0.0444,-0.0383,0.222,0.229,0.0931,-0.0628,0.0121,-0.0717,-0.0149,0.127,0.214,0.168,0.0422,-0.0336,0.0474,-0.039,0.0305,-0.055,0.184,0.115,-0.0294,-0.0223,0.00675,0.0645,0.0271,-0.00549,-0.157,0.132,-0.0433,-0.111,-0.273,-0.029,-0.11,-0.147,0.0683,0.023,-0.0712,0.162,-0.075,-0.083,-0.103,0.144,0.107,0.147,0.0852,0.0385,-0.122,-0.106,0.0882,0.121,0.0853,-0.0791,0.151,0.12,0.202,0.225,-0.0808,0.0333,-0.0954,0.0446,0.334,0.171,-0.0575,0.0675,0.0716,0.149,0.0501,-0.0195,0.0936,0.0901,0.0357,0.0219,-0.036,0.0847,0.0266,-0.00711,-0.141,0.256,0.175,-0.0598,-0.0152,0.0353,-0.101,0.0711,0.244,0.29,0.168,0.197,-0.045,0.0841,0.0222,0.221,0.172,0.205,0.0303,-0.0961,-0.199,0.0396,-0.0138,-0.00135,-0.0839,-0.151,0.0981,-0.0329,-0.0753,-0.171,0.228,0.111,0.168,-0.103,-0.0594,-0.265,-0.0704,0.0199,0.0787,0.0426,-0.0402,-0.0621,-0.00605,0.16,0.0381,0.00983,-0.0977,-0.0629,0.0377,0.256,0.0459,0.0655,0.256,0.241,0.297,0.321,0.226,0.0107,-0.0518,-0.0736,-0.165,0.243,0.0906,-0.0364,0.0481,0.0149,0.0114,0.0616,0.13,-0.0724,0.00345,-0.0807,-0.0572,-0.0433,-0.11,-0.145,0.0416,0.0635,-0.101,-0.143,0.437,0.206,0.0877,-0.124,-0.206,-0.377,-0.072,-0.0305,-0.0272,-0.0923,-0.148,-0.175,-0.047,0.0702,-0.00742,-0.117,-0.0384,-0.0269,0.103,0.0917,0.0838,0.0831,-0.0708,-0.0399,0.287,0.209,0.125,-0.0757,-0.188,-0.0913,-0.236,0.0745,-0.138,0.0476,-0.128,0.0918,-0.138,-0.0593,-0.072,-0.0423,-0.0164,-0.0643,0.0253,-0.0754,0.00261,-0.0872,0.146,0.0276,0.143,0.106,-0.291,-0.0357,0.0701,0.12,-0.0143,0.0704,-0.0111,-0.24,0.00291,0.00285,0.189,-0.0585,-0.15,-0.108,-0.0477,0.0203,0.0814,-0.0694,-0.103,0.0783,-0.00421,0.237,0.151,-0.192,-0.0958,-0.055,0.15,-0.113,-0.143,0.0662,0.11,-0.108,0.104,0.156,0.12,0.0547,-0.11,0.0277,0.0383,-0.0373,0.0992,-0.173,-0.0361,0.0551,0.101,-0.0952,0.112,-0.063,-0.0558,0.106,-0.149,0.0346,0.201,0.0663,0.11,0.194,-0.197,-0.0916,-0.00774,0.221,0.152,0.0125,-0.17,0.0328,-0.0454,0.228,-0.129,-0.000211,-0.128,0.0432,0.00971,0.134,-0.0627,-0.0155,0.0256,0.0778,0.107,0.107,0.115,0.197,0.0509,-0.175,0.0858,0.179,0.175,0.0931,-0.233,-0.122,0.141,0.179,0.145,0.0329,-0.109,-0.113,0.12,0.0772,-0.0465,-0.0774,0.0822,-0.0112};
double a3[]={-0.011,
-0.136,-0.0401,-0.103,-0.0695,0.138,0.0772,-0.143,-0.0186,0.21,0.138,-0.188,-0.055,0.0245,-0.131,0.0552,0.0567,0.232,-0.0461,0.169,-0.137,0.162,-0.158,-0.0907,-0.0473,0.215,0.0712,-0.132,-0.0327,-0.103,0.19,-0.015,-0.0249,-0.107,0.248,0.209,0.0486,-0.131,0.125,-0.036,0.242,0.14,0.225,-0.0252,0.195,0.157,0.157,0.0909,0.352,0.185,0.121,-0.019,0.0789,-0.0281,0.177,0.0169,0.109,0.302,0.0905,0.0565,0.0385,0.121,-0.0275,-0.201,0.0387,-0.0479,0.0355,-0.22,0.101,-0.0311,-0.124,-0.134,-0.283,-0.142,-0.195,-0.114,0.0769,-0.0497,-0.162,0.024,-0.107,0.0959,-0.0405,-0.104,-0.437,-0.219,0.308,-0.0459,-0.0662,0.0818,-0.00444,0.157,-0.0713,0.0135,0.0558,0.12,0.589,0.175,-0.0017,-0.0266,0.0549,-0.0561,-0.0426,-0.144,0.0566,0.0331,-0.221,-0.152,0.177,0.0115,-0.18,-0.146,0.0947,-0.0529,-0.151,0.0894,0.148,-0.106,-0.158,-0.0624,-0.426,-0.0842,0.123,-0.0971,0.0739,-0.00676,-0.0469,0.062,0.19,0.00192,0.0993,0.0719,-0.26,0.0944,0.108,-0.0866,0.115,-0.0165,0.081,-0.00649,0.156,-0.0103,0.00878,-0.0565,0.188,-0.00869,-0.367,-0.00781,0.154,-0.0225,-0.0421,-0.0795,-0.0191,-0.0141,0.235,-0.0352,-0.0682,-0.137,0.0254,0.115,0.0358,-0.0166,0.125,-0.00303,0.0391,0.18,0.34,0.182,0.0979,0.167,-0.43,0.186,0.0288,0.0567,0.192,0.0128,0.084,-0.0265,0.213,-0.0592,-0.482,-0.0931,-0.0871,-0.191,-0.0502,0.0693,-0.0967,-0.0714,0.113,0.141,0.0677,0.175,0.00634,0.0361,0.0392,0.00827,0.0971,0.189,-0.133,0.0305,0.232,-0.0684,-0.108,0.0949,0.029,0.0865,-0.207,-0.08,0.0693,-0.111,-0.0333,0.0471,0.0303,0.0347,-0.202,-0.21,-0.515,0.0381,0.235,-0.176,0.121,-0.0494,-0.00784,0.0348,-0.0329,0.103,0.0929,0.19,0.045,0.013,0.0914,0.0403,0.183,0.0659,0.0924,-0.00367,-0.0502,0.257,0.0467,-0.28,0.0936,-0.0665,-0.00246,-0.103,0.185,-0.0393,0.0246,0.0843,-0.394,-0.145,0.392,-0.134,-0.0784,-0.011,0.335,-0.0807,0.0243,-0.0574,-0.203,-0.0226,0.051,-0.158,0.0746,-0.0833,0.039,-0.034,0.019,0.0215,-0.104,0.148,0.0435,0.186,0.145,0.205,-0.145,0.115,0.0678,0.246,-0.00629,-0.0499,0.183,0.0668,0.311,-0.158,0.195,0.0109,0.0969,-0.148,0.326,0.0127,0.244,0.109,0.222,0.0154,0.0188,0.0152,0.211,-0.0289,0.0879,-0.0463,0.136,-0.0567,0.0277,-0.137,-0.109,0.0771,-0.0873,0.0432,-0.0393,-0.0772,0.0202,0.00825,-0.126,-0.0407,-0.0833,-0.184,0.0599,-0.0624,0.118,-0.0933,0.0453,0.00256,0.239,-0.104,-0.247,0.0799,-0.021,-0.259,0.101,0.161,0.28,-0.094,0.0861,0.0929,0.223,-0.00328,0.274,-0.0199,0.072,0.142,-0.0106,-0.126,-0.246,-0.0345,0.15,-0.012,-0.103,0.0214,-0.0817,0.183,0.175,0.148,0.131,-0.0459,0.114,-0.148,0.292,0.225,0.0136,-0.0114,0.0733,0.0392,-0.282,-0.178,0.0193,-0.108,-0.12,-0.0863,-0.0548,0.228,0.0539,-0.0897,0.159,0.129,-0.0627,0.0562,-0.0188,0.0167,-0.0756,-0.0353,-0.0702,0.0871,0.244,0.0704,-0.0998,-0.0568,-0.382,0.0728,0.144,0.164,0.0596,0.00892,0.0471,0.0603,0.114,-0.21,-0.123,-0.119,-0.0586,0.134,-0.171,0.00596,-0.0291,-0.00598,-0.0321,0.133,-0.00744,0.402,0.0406,-0.00568,-0.0581,-0.0092,-0.159,-0.0619,0.145,0.0832,-0.0404,-0.107,-0.134,-0.0427,0.0506,0.124,-0.12,-0.0513,-0.332,0.00218,0.0511,-0.0884,-0.123,0.242,-0.115,-0.406,0.0409,0.00299,0.117,0.149,-0.337,-0.0695,-0.0953,0.0537,-0.0494,-0.0214,-0.0308,-0.0959,0.00931,-0.0123,-0.0428,0.0442,-0.066,0.00705,-0.0596,0.0727,-0.000971,0.158,-0.11,-0.245,-0.202,-0.0906,-0.274,-0.039,0.022,-0.134,0.015,-0.0439,-0.158,0.101,0.141,0.303,0.225,0.158,0.223,0.0474,0.197,0.26,0.00202,-0.0771,0.0845,0.16,-0.139,0.0751,0.00157,0.0362,-0.0292,0.0158,0.136,0.00826,0.0881,0.072,0.264,0.0249,0.165,-0.0114,-0.084,0.0355,0.229,0.109,-0.0851,0.00821,-0.155,0.0486,-0.0728,
-0.207,-0.0771,0.0479,-0.178,-0.0149,0.181,-0.0279,0.019,-0.063,-0.0289,-0.0872,-0.152,0.298,-0.494,-0.18,-0.142,0.0221,0.1,0.0761,-0.0414,-0.143,-0.156,-0.0865,-0.0339,0.00487,-0.272,-0.241,-0.162,-0.0652,-0.0174,-0.0549,0.026,0.0483,0.0622,-0.0289,-0.122,-0.0826,-0.0812,0.00798,0.124,-0.139,-0.0202,0.16,0.138,0.0828,-0.0538,0.252,0.00757,-0.0126,-0.0921,-0.0708,0.173,0.0558,0.0834,0.0802,0.0622,0.103,0.116,-0.104,0.0451,-0.274,0.112,0.0121,0.0571,-0.098,-0.158,-0.0595,-0.0209,-0.0258,0.0483,0.054,-0.149,0.0194,-0.0393,0.0288,-0.136,-0.0792,-0.0193,-0.028,0.028,0.0329,-0.0528,0.0851,0.0179,0.0553,0.0266,0.0261,-0.0597,-0.132,-0.0751,-0.0559,0.0789,-0.071,-0.0731,-0.00059,-0.0901,-0.0271,-0.0798,0.00483,0.159,0.0991,-0.0312,0.0774,0.113,0.114,-0.0973,0.0547,0.0905,0.044,-0.036,-0.239,0.0308,0.0454,-0.0907,0.0433,0.00122,-0.0121,0.0643,-0.106,-0.241,0.0115,-0.124,-0.101,0.0723,0.00852,0.078,-0.0864,-0.115,-0.0419,0.0132,0.101,-0.104,-0.114,-0.0932,0.0513,-0.0852,-0.0467,-0.135,-0.224,-0.0116,-0.142,-0.0697,-0.0463,-0.0812,-0.0398,-0.121,-0.0262,-0.0834,-0.156,0.0806,-0.0407,0.0111,-0.117,0.0421,0.0496,-0.125,0.043,-0.127,0.0728,0.219,-0.0387,-0.0673,-0.0198,0.00487,0.00113,-0.0349,-0.0127,0.062,0.0371,-0.0116,0.0263,-0.0387,-0.0785,-0.0713,0.00172,0.0898,-0.0441,0.0755,0.000892,-0.0946,-0.0227,0.084,-0.153,-0.149,0.0762,-0.00536,-0.0762,0.0395,0.141,-0.017,0.0684,0.0378,-0.113,-0.0287,-0.13,0.103,-0.0195,-0.0518,-0.178,0.142,-0.0884,0.0773,0.0888,0.0143,-0.165,-0.0875,0.0743,-0.0462,0.0886,0.218,-0.00121,-0.0165,0.195,0.0782,-0.0356,-0.182,-0.163,-0.183,0.0375,0.294,-0.112,-0.144,-0.031,-0.228,-0.0218,-0.113,-0.0908,-0.00906,-0.15,-0.00566,-0.0114,-0.152,-0.131,0.0873,-0.102,-0.0496,0.142,-0.157,-0.00462,-0.0754,-0.0105,0.102,0.162,0.295,0.265,-0.0377,0.066,0.00801,0.0171,0.0639,0.0575,-0.12,-0.0695,0.194,-0.0749,-0.211,-0.292,-0.257,0.0363,-0.048,-0.05,-0.0758,0.102,-0.137,0.0906,-0.0125,0.11,-0.325,-0.161,-0.171,-0.0496,-0.279,-0.0399,-0.0129,0.037,-0.179,-0.0208,0.0699,-0.0631,0.155,-0.0704,-0.1,0.115,0.0329,-0.182,0.0653,0.0127,0.0224,0.0707,0.0503,0.0532,0.105,-0.0384,0.0295,-0.0597,0.0795,-0.0194,0.0517,-0.0788,0.0853,0.0273,-0.0975,-0.0184,0.0759,-0.189,-0.295,-0.111,-0.106,0.0574,-0.0477,0.0144,0.0624,-0.0638,-0.0393,0.013,-0.171,-0.107,-0.0663,0.182,-0.134,-0.0572,-0.0409,0.0529,0.0272,0.0465,-0.124,0.0278,-0.144,0.0644,0.143,0.0387,-0.0233,-0.0397,0.0214,0.0739,0.00186,0.0859,-0.0685,-0.0103,0.0805,0.183,0.045,-0.109,-0.0789,0.0772,0.025,-0.129,0.0272,-0.157,-0.0361,-0.184,-0.00075,-0.109,-0.163,-0.0391,0.0578,0.00378,-0.00746,0.0954,0.0854,0.0729,-0.0567,-0.134,-0.0666,0.0458,0.224,-0.0207,0.0856,0.0189,0.00521,0.0957,0.0335,0.0789,0.0382,0.194,0.0102,0.0794,0.0819,-0.0212,0.111,0.0208,-0.00561,-0.0187,0.0914,0.276,0.0435,-0.227,-0.0875,-0.0131,-0.0149,0.125,-0.0236,-0.0923,-0.0725,0.0263,-0.12,0.155,-0.0643,0.121,0.191,0.178,0.00265,0.0435,-0.0804,-0.0791,0.0679,-0.0568,0.0952,-0.0445,0.0281,0.0409,-0.12,-0.124,-0.178,0.0161,0.107,-0.0807,0.0306,0.0368,-0.0723,-0.0456,0.136,-0.0329,-0.0115,-0.166,0.189,-0.0967,0.00309,-0.0625,-0.0345,-0.0594,0.121,0.00399,0.0432,-0.00173,0.0353,-0.0215,-0.024,-0.145,0.0355,0.152,-0.137,0.0601,0.13,0.078,0.0115,0.075,-0.00754,-0.231,-0.0256,-0.0973,0.00555,-0.0557,-0.145,-0.00427,-0.0292,0.00255,-0.00569,-0.126,0.129,0.182,0.0169,-0.068,0.185,0.241,0.329,0.0399,0.171,0.0856,0.186,0.131,-0.143,0.0659,-0.0537,0.209,0.061,0.0556,0.178,-0.136,0.0259,0.0431,-0.0586,0.263,-0.0897,0.0624,-0.159,0.00554,-0.0444,-0.00126,-0.0777,-0.138,0.0237,0.177,-0.034,-0.225,0.126,0.0636,0.0272,0.131,0.0459,
0.23,0.151,-0.118,-0.141,0.076,-0.138,-0.304,0.218,-0.0997,0.113,-0.407,0.225,0.118,0.129,-0.107,0.324,-0.000753,0.0327,-0.137,0.0439,0.247,0.28,-0.233,-0.0553,-0.00538,-0.381,-0.0739,0.123,0.243,0.0271,-0.0191,0.0882,0.165,0.129,0.0188,-0.0776,-0.199,0.0221,0.166,-0.076,0.0161,0.0561,-0.24,-0.174,0.185,0.106,-0.101,-0.106,0.0543,0.202,0.0165,0.000983,0.000895,0.0456,0.0845,0.21,-0.0377,-0.0276,0.0923,0.0628,0.0911,-0.288,-0.00307,0.309,0.0354,-0.162,-0.00591,0.347,-0.0438,-0.0344,-0.0976,-0.127,-0.221,-0.0271,-0.102,0.197,-0.0649,-0.244,-0.0594,0.0104,0.341,0.00278,-0.121,0.0657,-0.0869,-0.0481,0.0935,0.0126,0.0605,0.2,-0.217,0.0692,-0.162,0.211,0.0848,-0.0896,-0.075,-0.124,-0.116,0.0711,-0.052,0.117,-0.2,-0.164,-0.119,-0.249,0.0631,-0.0611,-0.00351,0.0256,0.0209,0.0288,-0.192,-0.443,0.29,-0.0501,-0.177,-0.055,0.0471,-0.0729,-0.147,-0.146,-0.0625,-0.0452,-0.111,-0.0491,-0.361,-0.0766,-0.131,-0.242,0.104,0.00421,-0.165,-0.0638,-0.0583,-0.0666,0.0205,-0.103,0.05,-0.0712,0.0955,0.0412,-0.318,0.0215,-0.191,-0.00215,0.0472,-0.229,0.0691,-0.139,-0.247,0.043,0.0218,0.13,0.213,-0.0565,0.00449,0.172,-0.0633,0.104,-0.112,0.0246,-0.0641,0.0131,0.0985,0.112,-0.0609,-0.0601,0.12,-0.073,0.123,0.128,0.0893,0.031,-0.0434,-0.125,0.0627,0.00659,-0.12,-0.0688,0.089,0.0512,-0.085,-0.0431,0.193,-0.113,-0.136,0.31,0.0603,0.346,0.0743,-0.0754,0.0464,-0.0428,-0.0434,0.0976,0.318,-0.0697,-0.259,0.193,0.106,-0.229,-0.0734,-0.124,-0.0607,0.0277,-0.1,-0.267,-0.108,-0.267,-0.223,-0.394,0.0491,0.327,-0.0196,-0.000553,-0.0998,0.147,-0.0289,0.114,-0.00934,0.121,0.173,-0.302,0.0488,0.272,0.00344,0.0776,-0.0654,-0.0757,0.0542,0.0879,-0.021,-0.194,-0.0353,-0.326,-0.273,-0.218,0.158,-0.12,-0.199,-0.142,0.248,0.0436,0.0662,-0.305,0.269,-0.74,-0.0923,-0.501,-0.0415,-0.434,0.0955,0.118,0.0618,-0.544,-0.252,-0.00221,-0.0622,-0.0494,-0.104,-0.223,0.135,-0.141,-0.277,-0.0464,0.0686,0.0507,-0.0391,-0.195,0.0798,0.268,-0.112,-0.219,-0.00437,0.0576,0.032,0.00588,-0.0373,-0.0442,-0.0546,-0.151,0.0705,0.701,-0.371,-0.477,0.0124,-0.0581,-0.138,0.0305,-0.159,0.145,-0.217,-0.111,-0.0633,-0.501,-0.228,0.258,0.126,-0.133,0.0472,0.121,0.08,-0.151,0.229,0.0448,0.132,-0.325,-0.249,0.0453,0.0253,-0.0285,0.0359,-0.0908,0.0809,-0.07,-0.0982,0.245,0.107,0.159,-0.202,-0.271,0.0255,0.105,0.0709,-0.0161,-0.21,0.0899,0.0033,-0.174,0.0166,-0.31,-0.341,-0.483,-0.0591,-0.12,0.0291,0.0789,0.0385,-0.204,0.0396,0.0297,0.308,-0.0506,0.448,0.754,-0.0727,-0.106,-0.149,-0.148,-0.0423,0.00982,0.111,-0.192,-0.158,-0.172,0.165,-0.113,0.0876,-0.0668,-0.000468,0.00419,0.0746,-0.105,0.0306,-0.171,-0.15,-0.359,-0.0314,0.399,0.0477,0.0167,-0.138,-0.0328,0.0328,-0.0153,0.177,0.015,0.0433,0.466,-0.00218,-0.0368,0.125,0.0614,-0.12,0.00139,-0.0236,0.0535,0.133,-0.127,-0.052,-0.00301,-0.00648,-0.309,0.103,0.0689,0.205,0.0406,0.0343,-0.058,0.165,0.307,0.125,-0.0747,-0.208,0.0384,-0.125,0.079,-0.0581,0.174,-0.104,-0.0244,-0.0753,0.275,0.087,0.517,-0.103,-0.165,0.139,0.0731,0.123,-0.0492,0.0801,0.17,-0.0646,0.00641,-0.115,-0.407,-0.21,-0.132,0.0546,-0.0491,-0.0951,-0.0219,0.0984,-0.0951,-0.00516,0.0434,0.269,0.235,-0.0435,0.054,0.0951,-0.128,0.0536,0.32,-0.0304,-0.201,0.25,0.138,0.179,0.0418,-0.0333,-0.0146,-0.15,0.103,0.151,0.112,0.0519,0.0273,0.0409,-0.139,0.241,-0.0286,0.207,0.11,0.0836,0.0164,-0.0486,0.0232,-0.0763,-0.0616,0.019,0.13,-0.018,0.0572,0.0393,0.0401,-0.0887,0.224,0.232,0.0612,0.183,0.161,0.0604,0.395,0.367,0.338,0.142,0.0495,0.158,0.0393,0.0448,-0.0643,-0.0025,0.0191,0.0115,0.00372,0.118,-0.0518,
0.0937,0.00886,0.0123,0.058,-0.161,0.0447,-0.13,-0.118,0.288,-0.102,0.0619,-0.258,-0.267,-0.311,-0.089,-0.0702,-0.107,-0.137,0.0288,-0.0139,0.169,-0.0464,-0.104,-0.438,-0.246,0.115,-0.0854,0.0507,0.066,-0.113,0.0175,0.109,0.00975,0.113,0.25,0.584,0.0921,0.105,0.035,0.0204,-0.0243,0.122,-0.189,-0.0156,0.0554,-0.135,-0.345,-0.0941,0.022,-0.192,-0.159,-0.0328,-0.0363,-0.000909,0.0252,0.251,-0.0389,-0.179,-0.141,-0.252,0.0978,0.186,-0.00627,-0.0484,-0.105,0.0295,-0.0731,0.105,0.131,0.0564,-0.0497,-0.0775,-0.0202,0.201,0.0566,0.118,0.0461,-0.242,0.137,0.214,-0.0973,0.223,0.14,0.000332,0.0645,-0.279,-0.163,0.0985,0.0127,-0.0907,-0.254,0.0608,0.0818,-0.109,-0.0501,-0.0544,-0.00636,0.164,0.174,0.111,-0.0524,0.0438,0.101,0.139,-0.124,0.0188,-0.00684,0.152,0.0982,-0.36,0.0639,0.131,0.0346,-0.122,0.143,0.154,-0.053,0.252,0.132,-0.272,-0.0448,0.0652,-0.0448,-0.153,0.000278,0.133,0.0206,0.111,0.0459,-0.0342,-0.0773,0.049,0.0486,0.0841,-0.0228,-0.15,0.252,-0.152,-0.0914,0.264,-0.00678,-0.145,0.179,-0.0319,0.143,-0.0236,0.123,0.126,-0.0642,-0.0934,0.0169,0.104,0.0128,-0.193,-0.0161,-0.229,0.0684,0.263,-0.218,-0.00859,0.0227,-0.0329,0.111,0.119,-0.186,0.0757,-0.372,0.0509,-0.0142,0.0202,0.0672,0.0444,-0.0194,0.0166,-0.0275,0.19,0.214,0.256,-0.121,0.251,-0.375,-0.305,-0.012,-0.159,-0.0517,0.0295,0.0343,-0.168,0.096,-0.031,-0.0331,-0.0397,-0.246,0.0122,-0.0738,0.054,0.148,-0.0956,-0.0405,0.0973,0.204,0.0331,0.031,0.217,0.24,0.0456,0.097,0.00813,-0.0901,0.25,-0.00044,-0.0922,-0.173,0.247,0.0829,-0.052,-0.195,-0.0632,-0.229,-0.0811,-0.107,0.111,0.0859,0.042,0.186,0.0479,0.011,-0.189,-0.0245,0.0619,0.299,-0.194,0.0245,-0.0957,0.16,-0.0566,0.0192,-0.0096,0.0638,0.141,0.0785,-0.0167,-0.183,0.00122,0.0416,0.204,-0.06,0.0581,0.0246,0.156,-0.0094,0.0368,-0.0873,-0.0774,-0.238,0.0585,-0.247,0.00424,-0.175,0.0878,0.0884,0.153,-0.0586,-0.146,-0.242,-0.24,-0.0768,0.125,0.161,0.0992,-0.0161,0.147,-0.0865,0.0238,0.0246,0.015,-0.0151,0.0359,0.247,-0.135,0.000237,-0.251,-0.133,0.0926,-0.0378,0.0205,-0.0554,-0.398,0.177,0.0917,-0.163,0.0139,-0.165,-0.124,-0.0631,0.197,0.0442,0.197,0.108,0.237,0.0196,-0.0651,-0.131,-0.0763,-0.0126,-0.191,-0.113,-0.0528,0.0471,0.2,-0.0126,0.01,0.0163,-0.133,0.0681,-0.0937,-0.0307,0.013,0.118,0.109,0.11,0.0497,0.141,-0.175,0.13,0.0529,0.127,0.256,0.188,0.0698,0.223,0.0717,0.0845,-0.0597,0.2,0.18,0.161,0.158,0.136,0.0699,0.205,0.0829,0.113,-0.0213,0.0425,-0.0618,-0.138,-0.0203,-0.0346,0.111,0.0487,0.0649,0.0384,0.207,0.124,-0.125,0.0809,-0.0459,0.115,0.238,0.041,-0.125,0.0181,-0.228,-0.107,0.145,-0.0482,-0.0525,-0.0188,0.0611,0.0416,-0.157,0.146,-0.0444,0.00775,-0.0198,0.0114,0.00842,0.0265,0.0856,-0.0532,-0.00387,0.125,-0.119,-0.13,-0.0908,0.0621,-0.104,-0.0459,-0.242,0.0591,-0.0302,-0.0503,0.0787,0.0434,-0.0575,0.0158,-0.00428,-0.17,0.0433,0.0961,0.139,0.181,0.172,-0.273,0.0298,0.0546,0.114,-0.125,-0.0908,0.14,0.266,-0.115,0.212,-0.0437,0.0871,-0.125,-0.179,0.0515,0.038,-0.0752,0.0711,0.0195,-0.117,0.0638,0.0452,-0.0515,0.217,0.0178,-0.0613,-0.0392,-0.0223,0.00376,-0.102,-0.0296,-0.146,0.0889,-0.0843,0.0133,0.0262,-0.0678,-0.0119,0.0312,0.104,-0.155,-0.15,0.026,-0.0881,-0.0424,0.0957,0.0196,-0.0226,-0.127,0.152,0.108,0.00517,0.0445,-0.0489,-0.119,-0.118,-0.0689,-0.00894,-0.0219,-0.103,-0.126,0.106,-0.0425,0.197,0.03,0.104,-0.0506,-0.0683,-0.0885,-0.0361,-0.154,0.106,0.106,-0.0768,0.0133,0.0734,0.00965,-0.0783,-0.0545,0.0048,-0.111,0.0353,0.0803,-0.0784,-0.215,0.156,-0.0589,-0.0412,0.0884,0.104,0.0928,-0.0339,0.099,-0.0792,0.0245,0.0869,
0.0891,-0.0295,0.0916,-0.0256,0.161,0.23,0.0227,0.0478,-0.0641,-0.18,-0.0253,-0.000318,0.0795,-0.0201,-0.0777,0.103,0.0488,-0.0252,-0.0455,-0.0473,-0.0626,0.0719,-0.018,-0.0205,-0.196,0.0658,0.0309,0.106,0.0799,0.202,0.0474,-0.103,0.00902,-0.0114,0.0321,-0.0711,0.0737,0.125,-0.0148,0.0348,0.00809,0.0501,-0.0922,-0.0725,0.0862,0.0238,0.106,0.0659,-0.237,-0.0352,0.0606,0.167,0.0461,0.189,-0.0314,-0.0554,-0.147,-0.0122,0.0148,-0.0646,0.158,-0.0818,-0.0813,-0.0506,-0.131,-0.17,0.0656,-0.0361,0.105,-0.0395,-0.0997,-0.13,-0.127,0.243,0.0563,-0.0682,-0.214,-0.0252,0.0043,-0.036,0.0395,-0.0146,0.0724,-0.0365,0.0368,0.131,0.118,-0.0698,-0.0463,-0.0484,-0.148,0.0324,0.0638,0.00547,-0.0485,-0.0139,0.0122,0.0745,0.0322,0.148,0.0875,0.0786,0.0854,-0.0122,0.0291,-0.0472,0.0219,0.0765,-0.121,0.223,0.116,0.102,-0.0141,0.0101,0.041,0.0553,-0.0801,0.031,-0.035,0.076,0.188,-0.0215,0.0373,0.00491,-0.086,0.0894,-0.0057,-0.0874,-0.0666,0.0494,-0.086,-0.0649,-0.0579,-0.043,0.0707,-0.0158,0.0647,0.0899,0.00622,-0.0851,0.0333,0.0811,0.0557,0.092,0.15,0.169,0.0384,-0.00596,-0.0234,0.00334,-0.0454,0.0735,-0.0877,-0.0295,0.0996,0.0658,-0.0054,0.0989,-0.00896,0.326,-0.167,-0.163,-0.0881,0.0384,-0.141,0.0474,-0.0845,-0.175,-0.107,-0.0669,-0.278,-0.0245,-0.172,-0.0193,-0.206,-0.026,0.093,-0.17,0.00112,0.166,-0.0134,0.000953,-0.107,0.277,0.209,-0.15,-0.0505,0.0728,0.0371,0.0283,-0.0539,0.0842,-0.127,0.295,-0.041,-0.0825,-0.259,-0.242,-0.0663,0.029,-0.112,-0.104,0.253,0.245,-0.346,0.18,0.147,-0.0555,0.176,-0.0532,0.146,-0.144,-0.196,-0.224,-0.174,-0.293,0.0239,0.1,0.149,0.0254,-0.0879,-0.0113,-0.0234,0.0364,-0.162,0.236,0.0574,-0.141,-0.0954,0.0315,-0.0354,-0.17,-0.0456,-0.0733,-0.121,0.0116,-0.157,0.105,0.032,0.0752,0.11,-0.117,-0.0839,-0.0103,-0.068,-0.168,-0.113,-0.162,0.0464,-0.285,-0.0492,0.0582,0.00189,-0.0553,-0.0225,-0.138,0.0251,0.0174,0.107,-0.112,0.0995,0.0339,0.188,-0.123,0.203,0.142,-0.0441,-0.149,0.247,0.35,-0.103,0.037,-0.207,-0.0705,0.201,-0.053,0.0301,0.282,-0.11,0.0339,0.0644,0.267,-0.103,0.102,0.0558,0.189,-0.138,-0.157,0.157,-0.044,0.13,-0.0911,-0.0221,0.0698,-0.117,0.0404,-0.101,-0.0303,0.0319,0.0695,0.128,0.156,0.184,0.12,-0.0303,0.0581,-0.0324,0.0883,-0.0704,0.244,-0.0223,-0.0759,0.304,0.305,-0.229,0.0994,0.0182,0.0254,-0.0522,0.278,0.0195,0.129,-0.123,0.0108,0.334,0.302,0.222,-0.0868,0.105,-0.0175,0.0277,-0.0612,-0.0265,0.0614,0.0108,-0.0471,0.122,0.145,-0.0717,0.122,0.0658,-0.0329,0.161,-0.0685,0.249,0.0227,0.122,0.199,0.0384,0.259,-0.00172,-0.036,0.0798,-0.0726,-0.0842,0.0107,-0.0204,0.0301,-0.0295,0.114,0.0228,-0.0707,-0.089,-0.0112,-0.156,0.379,0.0113,0.0553,-0.421,0.181,-0.0076,-0.0914,-0.012,0.00236,0.0186,-0.00596,0.111,0.223,0.029,0.00121,0.0617,-0.0665,0.11,-0.00909,0.0395,0.201,-0.115,-0.244,-0.203,-0.254,-0.0802,0.181,-0.289,-0.0908,-0.0216,0.0811,-0.349,0.0383,0.122,0.267,0.0292,0.135,-0.0158,-0.125,-0.059,0.13,0.142,0.226,0.0646,0.0153,0.334,-0.203,0.0582,0.169,-0.118,-0.156,0.245,0.0676,0.0471,-0.0686,-0.138,-0.0353,0.139,0.0823,0.0736,0.046,0.172,-0.0917,0.0996,0.0431,-0.0296,-0.231,-0.0347,0.027,-0.191,0.121,0.148,0.169,-0.115,-0.282,-0.000919,0.0458,0.0112,-0.097,0.269,-0.019,0.031,-0.0803,-0.156,0.0339,-0.11,-0.0214,0.0643,0.111,-0.0953,0.125,0.0164,-0.0777,0.0495,0.0949,-0.169,0.0717,0.149,0.0169,0.098,-0.276,-0.138,0.146,-0.0547,0.0968,0.109,0.0852,0.0148,0.139,-0.0947,0.164,0.116,-0.199,-0.0439,0.126,-0.224,-0.158,0.139,0.049,-0.208,0.0228,-0.0372,0.00998,0.0462,0.21,-0.0545,-0.00816,-0.108,-0.0723,0.0465,-0.00887,0.00509,-0.0553,0.154,-0.0792,
0.136,-0.244,0.0209,0.0506,-0.0339,0.15,0.151,-0.0769,-0.0559,-0.12,-0.00148,0.0684,0.229,-0.0899,-0.0592,0.231,0.102,-0.247,0.00726,0.0591,0.201,0.314,0.198,-0.0405,0.154,-0.159,0.0908,0.189,-0.362,0.0192,-0.107,0.104,0.0869,0.101,0.153,-0.0778,-0.0314,0.106,0.0273,-0.111,-0.0629,-0.182,-0.281,-0.182,-0.0615,-0.197,-0.146,-0.0941,0.0356,-0.272,0.0249,0.0459,-0.106,-0.177,0.351,-0.0592,-0.107,-0.159,0.09,-0.26,-0.0947,-0.151,-0.202,0.196,0.0274,0.113,-0.439,-0.148,-0.0503,-0.22,0.0268,0.182,-0.0537,-0.114,0.121,-0.0255,-0.0355,0.089,0.0938,0.187,0.0482,0.022,-0.0766,-0.0813,-0.0619,-0.0695,-0.0899,-0.0271,0.0778,0.102,0.0446,0.0882,-0.0633,0.00752,0.14,0.23,-0.0335,0.0653,-0.212,-0.255,-0.0877,0.127,-0.119,0.0526,0.166,0.117,-0.0349,0.173,0.0482,-0.139,-0.0821,0.0178,-0.00964,0.0143,0.0105,-0.0477,0.0509,-0.254,-0.0378,-0.00129,0.0107,-0.0492,0.12,0.0651,-0.000486,-0.127,0.288,0.12,0.0582,0.113,0.00596,0.0163,0.101,0.0885,-0.00638,-0.122,0.139,0.06,-0.218,0.0799,0.0888,-0.032,0.277,0.0572,-0.103,0.158,0.0605,-0.152,0.0969,0.176,0.0999,0.0289,-0.00644,0.298,0.0641,0.0903,-0.0317,0.0472,0.0402,-0.00753,-0.0939,-0.0165,0.01,-0.0284,0.156,0.0803,-0.17,0.0159,0.1,-0.13,-0.1,0.00518,0.352,-0.321,-0.188,-0.155,-0.132,0.121,0.0435,0.248,0.0028,-0.0446,-0.0342,0.135,0.221,-0.0202,0.0461,-0.289,-0.0975,-0.185,0.104,0.0838,0.169,-0.000329,0.107,0.0116,-0.233,0.00886,0.11,0.0653,-0.0182,0.122,0.00262,0.114,0.039,0.0781,-0.115,0.0572,0.299,-0.0988,-0.0601,-0.0277,-0.2,-0.288,-0.0288,0.0305,-0.123,-0.0238,-0.0362,-0.0657,-0.115,-0.0508,-0.18,-0.0444,-0.306,-0.17,-0.137,0.0655,0.0861,0.159,-0.105,0.203,0.0302,-0.174,0.141,-0.0676,-0.115,0.0595,-0.00281,-0.0707,-0.0466,-0.0432,-0.0427,-0.0703,0.0494,-0.0167,-0.0286,-0.104,-0.191,-0.254,-0.206,0.156,0.0105,-0.0848,-0.0171,0.0304,-0.221,-0.113,0.0465,-0.192,-0.09,-0.142,0.15,0.102,-0.0203,-0.184,-0.0124,0.0999,0.268,-0.0961,-0.117,-0.0713,0.0621,-0.0741,0.1,-0.00245,0.21,-0.0485,-0.0698,0.103,-0.109,-0.00952,0.0423,0.0421,0.125,0.307,-0.0568,-0.0688,0.0109,0.0728,0.0742,-0.0874,0.0421,-0.318,-0.199,0.0773,0.0577,-0.115,0.1,0.0558,-0.104,-6.3e-005,0.162,0.0737,-0.0182,-0.247,-0.139,0.0766,0.0552,0.0444,0.0349,-0.0468,0.0399,0.0332,0.128,0.00169,-0.000483,-0.0672,-0.00919,-0.139,-0.122,-0.102,-0.157,0.0655,-0.0998,0.0109,-0.0751,-0.0189,0.111,-0.142,-0.277,-0.089,-0.0572,0.0108,-0.0627,-0.0844,0.208,0.0749,-0.08,-0.037,-0.346,0.0912,0.0265,-0.0986,-0.107,-0.0632,0.0665,0.0799,0.0566,-0.0136,0.0237,-0.0737,0.147,-0.0104,-0.0642,-0.0322,-0.155,-0.0701,-0.126,0.0602,-0.0512,-0.0842,-0.0643,-0.00579,-0.349,-0.295,-0.00106,-0.0419,0.0214,0.0349,0.099,-0.0547,0.0597,0.00507,-0.108,-0.0183,0.124,-0.177,0.029,0.143,0.0964,0.112,0.106,0.368,-0.114,0.25,0.231,-0.409,-0.108,0.319,-0.115,-0.0978,-0.0839,0.302,-0.145,0.101,-0.00979,-0.0907,-0.0589,-0.0641,-0.28,-0.044,0.207,0.0515,0.0275,0.0215,0.0488,0.0613,0.132,-0.0166,0.0695,0.0539,0.0513,-0.0517,-0.14,-0.161,0.116,-0.0183,-0.138,0.133,-0.158,-0.0325,0.259,0.139,-0.241,0.328,0.271,-0.143,0.0935,0.154,0.0334,0.06,0.0603,-0.345,0.0134,0.119,-0.0463,0.25,0.155,0.182,-0.159,-0.0606,-0.168,-0.0154,0.0672,0.0572,-0.059,0.0709,0.197,-0.00753,0.0184,-0.0744,-0.114,0.0415,0.0895,0.0883,-0.0354,-0.123,-0.132,0.219,0.176,-0.087,-0.0232,0.124,0.035,-0.169,-0.163,0.0711,0.0259,-0.114,-0.0388,0.145,-0.049,-0.165,-0.00175,0.039,0.0792,-0.000198,0.175,-0.0471,-0.137,0.0475,-0.0569,0.166,0.183,0.204,-0.0912,-0.087,0.142,0.0896,0.102,0.148,0.0339,0.0862,-0.0927,0.188,0.0441,-0.0398,-0.153,0.403,
0.111,-0.11,-0.000971,0.0277,0.065,0.0264,-0.0449,-0.0892,0.167,-0.0765,-0.0117,-0.0284,0.228,0.162,0.0488,0.0321,-0.021,-0.0827,-0.0527,-0.151,0.119,0.208,-0.0554,-0.0135,0.0428,-0.0211,0.0648,0.111,0.0295,-1.62e-005,-0.2,-0.0574,0.108,-0.0808,-0.0125,-0.242,-0.0528,-0.156,0.281,-0.0234,-0.0161,0.0618,0.0599,0.138,0.173,-0.0156,0.214,-0.144,0.0736,0.143,-0.147,0.0631,0.000696,0.0657,0.0132,0.258,-0.267,0.204,0.255,0.103,-0.0249,0.139,0.0584,-0.0298,0.0291,0.0228,-0.178,0.0583,0.184,0.178,-0.19,0.00598,0.0516,-0.0178,0.00296,-0.165,-0.00158,-0.0563,-0.254,0.0256,0.0165,0.138,-0.106,0.0117,0.0195,0.327,0.0771,0.092,-0.0292,0.0687,-0.0136,0.0227,0.0701,-0.303,-0.202,0.0626,-0.0831,0.0355,0.109,0.0213,-0.0791,-0.00381,-0.0739,0.0264,0.321,0.226,-0.0906,-0.027,0.103,0.158,-0.181,0.0732,0.0192,0.0765,0.0683,0.0948,-0.00354,0.138,0.154,-0.165,-0.0509,0.0121,-0.128,-0.0671,0.0904,-0.353,-0.192,-0.0197,-0.0857,-0.0127,0.0366,0.0701,0.0888,-0.0987,0.00493,-0.138,0.0513,0.0726,-0.118,-0.0728,0.0334,-0.0382,-0.132,0.0478,-0.146,-0.113,0.0439,-0.04,0.0349,0.0958,0.172,0.099,-0.218,0.199,0.0704,0.0931,0.194,0.056,0.0231,-0.127,0.111,0.29,-0.141,-0.0536,-0.14,0.0705,0.00343,0.119,-0.0669,0.0306,-0.14,0.11,-0.113,0.0788,-0.0703,-0.138,0.126,0.109,-0.0101,-0.0053,0.0725,-0.0891,-0.00309,-0.0252,-0.00681,0.089,-0.0152,-0.0546,-0.29,0.0889,0.0424,-0.0638,0.133,0.0973,0.0142,0.00532,0.0151,0.0202,0.104,-0.0785,0.116,-0.0786,0.0405,-0.0668,0.128,0.0165,0.0831,0.0452,0.132,-0.0522,-0.00845,-0.015,0.0618,0.0908,-0.0945,-0.0138,0.0183,-0.0419,-0.022,0.0952,0.0801,0.236,-0.0724,0.0634,-0.0958,-0.0513,-0.0546,0.133,0.0243,0.0242,0.126,-0.0499,0.00456,0.0876,0.0715,-0.154,0.111,0.0651,-0.093,-0.0416,-0.101,-0.0358,-0.164,-0.0665,-0.0439,0.201,-0.00215,-0.0738,-0.0781,0.0861,0.037,0.0661,-0.0091,-0.0366,-0.0414,-0.0177,-0.056,0.2,0.0176,0.0462,-0.12,-0.0858,0.116,-0.0526,-0.0735,-0.16,0.13,-0.139,0.0703,-0.11,-0.0295,0.028,0.054,0.26,-0.131,0.016,0.123,0.156,-0.0852,0.109,-0.0225,0.0447,-0.0616,-0.184,0.0366,0.132,0.11,0.0197,0.0031,-0.0171,0.108,0.0959,-0.14,-0.125,-0.18,-0.0884,-0.06,-0.0335,-0.0565,-0.0305,0.0746,0.161,0.0376,-0.00825,-0.000228,0.0854,0.108,0.0106,-0.0439,0.011,0.0701,0.0197,-0.0805,0.0536,0.0838,-0.0318,0.0819,-0.174,0.0894,0.0686,0.106,-0.0723,-0.00595,0.0263,0.114,-0.0272,-0.134,-0.0232,-0.0552,0.146,-0.0541,0.0755,-0.0313,0.0424,-0.00669,0.00717,0.0852,0.0576,0.0215,-0.0202,0.00697,-0.0474,0.0648,-0.117,0.127,0.0444,-0.0123,0.0594,0.117,-0.0851,0.128,-0.153,0.0698,-0.0537,-0.0103,0.109,-0.0189,0.0767,0.179,0.158,0.165,0.0807,0.04,-0.0794,0.186,0.0153,0.0288,0.36,-0.118,0.117,0.228,-0.0395,0.137,0.0414,0.342,-0.0831,0.183,0.0288,0.0231,-0.146,-0.0704,0.0209,0.329,0.137,0.00612,-0.177,-0.049,-0.0717,-0.0374,0.0705,-0.0441,-0.114,0.0837,0.0594,-0.199,0.037,-0.0318,-0.00218,0.177,-0.128,0.147,-0.102,-0.0365,-0.121,-0.109,0.0927,-0.0843,0.125,0.0222,0.279,-0.339,0.0956,-0.0103,0.142,-0.32,0.243,0.0297,0.0458,0.177,0.0571,0.0291,0.114,0.151,0.159,-0.105,-0.16,0.0335,-0.0265,-0.106,-0.0894,0.00366,0.00682,0.289,0.196,0.0225,0.159,0.169,-0.0678,0.247,-0.0438,0.164,-0.101,0.0255,-0.0968,0.237,0.215,0.0438,-0.0564,-0.0977,0.00414,-0.0579,-0.0963,0.173,-0.0945,0.122,0.0874,-0.227,0.0477,0.0487,-0.00901,0.0967,-0.0248,0.152,0.141,-0.0536,0.0195,0.000169,0.374,0.0237,0.0581,0.194,-0.14,0.121,0.0949,0.114,-0.111,0.0492,-0.222,-0.0782,-0.28,0.109,0.239,-0.0372,-0.0638,0.0721,-0.0195,0.00923,0.137,-0.314,0.0626,-0.251,0.225,0.0143,0.225,0.042,-0.223,0.0282,0.054,-0.0577,0.0684,
0.127,-0.0286,-0.327,-0.131,-0.218,-0.318,-0.0901,-0.223,-0.0747,-0.195,-0.0487,-0.16,0.0173,0.311,0.128,-0.0961,-0.16,-0.18,-0.0707,-0.0288,-0.177,-0.119,-0.0302,0.203,0.153,0.246,-0.187,0.086,-0.00764,-0.199,0.0836,0.0647,-0.0861,-0.118,0.0601,-0.0509,0.0506,0.167,0.097,-0.129,0.162,0.0783,-0.0835,-0.0118,0.143,0.0374,0.197,0.125,-0.0927,0.121,0.0751,0.0958,-0.133,0.0533,0.115,-0.0103,-0.0405,-0.0369,-0.0776,-0.191,0.0712,-0.144,-0.218,-0.0394,0.128,0.223,-0.0226,0.157,-0.0367,-0.000323,-0.00153,0.186,-0.129,-0.0811,-0.209,-0.422,0.245,-0.0486,-0.138,-0.0128,0.0259,-0.207,0.0504,-0.1,0.168,-0.0488,0.109,-0.0104,-0.0558,0.15,-0.152,0.0873,0.183,-0.103,-0.0227,-0.0639,0.143,0.144,-0.115,0.065,-0.105,-0.0996,0.0851,-0.0699,-0.094,-0.0123,-0.0678,-0.0214,-0.0551,-0.141,-0.178,0.0619,-0.0834,-0.0533,0.0577,0.0622,-0.155,-0.0272,-0.0498,0.0795,0.083,0.0445,-0.0591,0.00211,0.117,0.0829,-0.0455,0.0121,-0.0492,0.0543,0.0917,6.75e-005,0.156,0.126,0.0512,0.00189,-0.0536,-0.154,-0.0234,0.0958,-0.0541,-0.0121,0.0616,0.139,0.0164,0.0941,0.00889,0.0958,0.0451,-0.0446,0.0159,-0.0439,-0.0101,-0.107,0.0251,0.03,-0.00824,0.082,-0.0469,0.0547,0.109,0.0622,0.0253,-0.0986,-0.0712,0.129,0.113,-0.105,0.0215,0.0876,-0.0249,-0.148,-0.0784,-0.125,0.0425,-0.0686,-0.109,-0.0268,-0.023,-0.00447,0.0242,-0.0272,-0.0355,0.033,0.0703,0.0114,0.00757,0.0187,0.0879,-0.057,-0.106,0.0637,-0.0454,-0.0352,-0.0591,0.0224,0.0532,0.0283,0.0587,-0.0216,-0.0814,0.0649,0.0064,-0.147,-0.0278,-0.00469,-0.0135,-0.0368,0.0764,0.15,-0.0871,-0.0116,-0.066,-0.048,-0.0316,-0.137,-0.0101,0.122,-0.095,0.0786,-0.0729,-0.133,-0.00974,-0.0279,0.0174,-0.0113,-0.0516,0.0335,0.143,-0.054,0.038,-0.0905,-0.0617,-0.0231,-0.0386,-0.0182,0.0461,-0.101,0.0222,0.0672,-0.0297,0.0761,0.237,-0.0854,0.0408,0.115,0.0774,0.0396,0.121,0.161,0.0275,-0.0332,0.0833,0.0548,-0.197,0.00643,0.0613,0.0611,0.0575,0.0947,0.13,0.172,0.0624,-0.115,-0.0423,-0.0317,0.176,0.143,0.0984,0.0978,0.000307,-0.00932,0.119,0.175,0.0705,0.0377,0.0876,0.0245,-0.0232,-0.137,-0.115,-0.104,0.0588,-0.00126,-0.0407,0.0969,-0.0391,-0.0348,0.00389,-0.0671,0.0302,-0.047,0.126,-0.0189,-0.0817,-0.0438,0.0845,-0.0303,0.112,0.16,-0.0666,0.000422,0.137,0.00772,-0.0694,-0.0388,0.0568,-0.0301,-0.0238,0.0821,0.0112,-0.0556,0.0309,0.0744,0.0934,0.00403,0.0643,0.121,-0.0118,-0.0801,-0.0603,0.037,0.105,-0.000267,-0.0376,-0.02,-0.00602,0.0382,-0.0829,-0.0752,0.0777,-0.0734,-0.0721,-0.0736,-0.0216,-0.0418,-0.105,-0.071,0.0537,0.0859,0.00742,0.0346,0.0112,-0.00127,-0.0394,0.0586,-0.021,-0.262,-0.284,-0.0521,-0.0561,0.0571,-0.0353,0.0222,-0.042,-0.0689,0.0681,-0.0904,0.0628,0.0267,-0.0537,-0.108,-0.129,0.0416,-0.0424,-0.0439,0.0212,-0.00673,0.034,0.101,0.0961,0.0898,0.0138,-0.0499,0.0446,0.0943,0.0934,0.116,-0.104,0.145,0.0562,0.108,-0.055,0.0164,-0.0226,-0.0511,0.0228,0.297,-0.0339,0.154,0.0259,0.145,0.0369,-0.105,-0.0499,0.13,0.107,-0.00852,0.061,0.0795,-0.0199,-0.0403,-0.0613,-0.103,0.0146,0.0641,-0.000385,-0.101,-0.171,-0.11,-0.00523,-0.00722,-0.0348,0.0468,0.0317,-0.0105,-0.0202,-0.0344,-0.0118,-0.00779,-0.0625,0.0643,-0.026,-0.182,0.132,0.174,-0.0608,0.133,0.109,0.0832,-0.0541,0.015,-0.0374,0.0577,0.0459,0.153,0.0664,0.081,-0.0309,0.0708,-0.0343,0.0307,0.0132,0.00224,-0.0563,-0.0421,-0.065,0.0226,0.0636,0.135,0.0409,0.0569,0.015,0.0656,-0.0323,0.172,0.0205,0.0307,-0.0668,0.0915,-0.0585,-0.0406,-0.0357,-0.0201,-0.101,0.111,0.0575,-0.0905,0.0413,-0.0262,-0.00815,0.0952,0.051,0.137,0.0734,0.0435,0.0281,0.0605,0.0108,0.0747,0.0709,-0.00678,0.0824,-0.0636,-0.0834,-0.259,-0.0337,0.121,0.0534,0.0307,0.0774,0.0277,-0.0206,0.0967,-0.17,-0.0893,-0.0289,-0.13,0.0812,0.0031,
0.0665,-0.0701,-0.0559,-0.0506,0.15,-0.00837,0.284,0.0151,-0.00588,-0.0965,-0.0237,-0.0818,-0.0479,-0.00421,0.0207,0.0543,-0.0444,-0.119,-0.0737,0.00997,0.0179,-0.0677,-0.0491,-0.0751,0.0115,0.014,0.0897,-0.0301,-0.0128,0.00523,-0.228,-0.0863,-0.0165,0.0484,-0.00502,-0.089,-0.0282,-0.143,0.0844,-0.084,0.0326,-0.0482,0.114,0.0447,0.0769,0.0609,0.102,0.0401,-0.109,0.00992,0.0538,0.0157,0.0873,-0.0464,-0.153,-0.0995,0.031,-0.0162,0.00991,0.0203,-0.0772,0.0328,-0.09,0.003,-0.118,-0.000508,0.127,0.104,0.114,0.107,0.0668,0.0884,0.0929,0.059,-0.0253,0.177,-0.0769,-0.0759,0.0605,-0.172,-0.123,-0.0862,-0.136,0.101,-0.119,-0.117,-0.186,0.0856,0.0595,-0.161,-0.194,0.0366,0.0672,-0.0352,0.036,0.0107,0.0413,-0.22,0.185,0.0196,-0.184,0.11,-0.242,-0.0574,-0.155,-0.044,0.0492,-0.00478,-0.0548,0.016,-0.0449,0.152,-0.131,0.139,-0.0151,0.101,-0.0854,-0.00622,0.119,-0.0201,-0.0897,0.1,-0.0228,0.19,-0.013,-0.0663,-0.223,0.0929,0.149,0.0297,-0.0195,-0.0527,0.00745,-0.0372,-0.135,-0.152,0.117,-0.106,-0.0933,-0.0778,0.00124,-0.147,-0.00156,0.0243,0.0564,-0.132,-0.032,-0.118,-0.026,-0.0325,-0.0311,-0.132,0.00541,0.151,-0.138,0.0294,-0.0864,0.0792,-0.000388,-0.0605,-0.0628,0.00813,0.107,-0.109,0.105,0.105,0.146,-0.204,-0.0359,-0.222,0.0907,-0.0601,0.0639,0.0747,-0.00195,-0.000143,0.0504,0.00967,0.0539,-0.00922,-0.0365,0.191,-0.0311,-0.0993,-0.112,-0.0121,0.0571,0.102,-0.0285,0.0705,0.148,0.0506,0.125,0.0106,-0.00658,-0.358,-0.0269,0.112,0.0816,-0.148,-0.16,0.0558,-0.0393,0.171,-0.0108,-0.00943,0.073,0.0433,0.0276,0.135,0.154,-0.186,0.0994,0.0418,-0.0833,-0.0354,-0.0588,0.355,-0.012,-0.0778,0.16,0.0478,0.0207,0.225,0.071,-0.0747,-0.0837,-0.00838,-0.032,0.0564,0.0977,-0.0238,0.0473,0.17,-0.239,0.108,-0.164,0.0768,-0.153,0.0505,0.0219,0.106,-0.101,0.0277,0.0237,0.0957,0.287,-0.0362,0.0171,0.0398,0.0484,-0.00589,0.0215,0.0656,-0.0381,-0.0139,0.171,0.0871,-0.249,-0.0671,-0.0557,0.0726,0.105,0.173,0.0979,0.0172,-0.0565,0.0599,0.0919,0.149,0.22,0.211,-0.0751,0.102,-0.214,0.0676,-0.0307,-0.0452,0.0988,0.0848,0.0704,-0.00501,-0.0645,0.00962,-0.133,-0.148,0.0297,-0.134,-0.0953,0.21,-0.0259,-0.124,-0.0341,-0.06,0.0552,0.104,0.104,0.163,0.0615,0.0805,-0.0441,-0.0319,-0.0111,-0.00612,0.115,0.0798,0.0433,0.0109,0.118,-0.117,0.0502,-0.00643,-0.128,-0.181,-0.188,-0.00917,-0.301,-0.109,0.0879,0.0272,0.103,-0.0356,0.11,0.0785,-0.073,0.135,0.155,-0.0862,-0.0668,0.178,0.0862,0.0524,-0.0686,0.308,-0.0229,0.164,-0.232,0.102,-0.0278,0.0726,-0.0883,-0.0251,0.264,-0.111,0.041,0.201,0.0155,0.127,0.0622,-0.017,-0.0374,-0.0603,0.257,-0.425,-0.0473,-0.222,-0.0131,0.231,-0.0785,0.0962,-0.0854,-0.14,-0.0112,0.0917,0.084,-0.0975,0.014,-0.0972,-0.171,0.04,0.0904,0.0685,0.0165,-0.194,0.0714,0.12,-0.357,-0.00967,0.318,0.0651,-0.232,0.0648,0.034,0.0767,0.12,0.0904,0.228,0.0692,0.151,-0.03,0.0521,-0.0228,-0.21,-0.0884,-0.0154,0.0499,-0.0828,0.0745,0.0176,-0.0613,-0.266,0.0636,-0.0453,0.217,-0.109,0.0723,-0.153,0.218,0.0407,0.171,-0.169,0.1,-0.0719,-0.244,-0.0318,-0.1,0.00854,0.0138,-0.125,-0.0116,0.0105,-0.146,0.101,0.0248,-0.00738,0.0559,0.00287,-0.0897,-0.101,-0.195,-0.0737,0.138,-0.106,-0.0927,-0.00271,0.154,-0.0635,-0.0713,-0.0206,0.256,0.013,-0.187,0.0299,-0.12,0.0766,-0.00973,-0.0883,-0.0836,0.237,-0.0779,-0.17,-0.0354,-0.0118,0.0183,0.189,-0.0505,0.0187,-0.136,-0.199,-0.109,-0.0158,0.0047,-0.158,-0.176,-0.108,0.0902,-0.0413,-0.122,0.0791,0.0265,0.108,0.0101,-0.0699,-0.354,-0.3,-0.125,0.224,-0.00154,-0.0492,-0.0745,-0.0896,-0.198,0.0492,-0.131,-0.325,-0.346,-0.148,-0.0376,-0.161,-0.214,-0.103,-0.0168,0.0881,-0.034,0.0587,0.053,-0.174,-0.0764,-0.018,0.00219,
-0.123,-0.0954,-0.07,-0.198,-0.0947,0.018,-0.00357,-0.127,-0.00262,-0.191,-0.231,-0.0158,0.0442,-0.189,-0.0253,-0.00783,0.0242,0.166,0.0579,-0.0279,-0.189,-0.0387,0.0942,-0.0736,0.127,-0.122,0.249,0.0555,0.0739,-0.0111,-0.035,0.0405,0.0657,0.145,0.033,0.171,-0.16,-0.0793,-0.257,-0.149,0.0364,0.0361,0.0439,0.13,-0.351,-0.149,-0.182,-0.00751,0.21,0.103,0.0335,-0.089,0.0684,0.16,-0.0196,0.0594,0.088,0.0954,0.0186,-0.0255,0.0311,0.0237,0.0804,-0.108,-0.00204,-0.325,-0.107,0.0487,-0.245,-0.304,0.0223,-0.0895,0.034,-0.0738,0.11,0.0129,0.111,0.0451,0.0079,-0.00827,0.106,0.0188,-0.203,-0.0349,-0.0506,0.0826,-0.0405,0.0913,-0.0513,0.0987,0.011,0.0257,-0.314,-0.108,-0.0406,-0.169,-0.195,-0.0721,0.0449,0.0117,-0.183,-0.132,0.109,-0.0238,-0.194,-0.114,0.108,-0.339,0.019,-0.247,-0.093,-0.255,-0.204,-0.0417,-0.0366,-0.239,-0.0979,-0.0264,0.231,-0.253,0.0679,-0.147,0.174,0.0456,-0.0873,0.284,0.00147,-0.0496,-0.236,-0.111,-0.0331,0.167,-0.0217,-0.174,0.111,-0.0872,0.0858,-0.0885,0.165,-0.0471,0.00662,-0.124,0.128,0.232,-0.0726,-0.141,0.144,0.00561,-0.128,-0.135,-0.00832,0.033,-0.105,-0.0924,-0.123,-0.304,-0.113,-0.0574,-0.0854,0.029,0.101,0.139,0.0569,-0.0486,0.0316,0.161,0.00864,0.0477,-0.27,-0.0752,0.0126,0.0474,0.197,0.023,0.157,-0.395,-0.0395,0.0828,-0.133,-0.154,-0.0293,0.0448,0.2,0.0812,0.0674,0.188,0.0232,0.174,-0.172,-0.0469,0.0497,-0.0483,-0.0495,-0.163,-0.112,-0.094,0.0686,0.0552,0.163,0.0812,0.031,-0.0933,0.0895,-0.049,0.158,0.273,-0.0844,-0.0557,-0.02,0.13,0.0137,-0.0835,0.175,0.0378,-0.0621,-0.0848,0.113,-0.0814,-0.295,0.0332,-0.079,0.191,0.067,-0.0428,0.107,-0.0364,0.0991,-0.04,0.0445,-0.00611,0.00234,0.0962,0.00952,0.0719,-0.0396,-0.0337,0.0595,-0.00306,-0.14,0.017,0.0403,-0.0861,0.00736,0.0416,0.17,0.229,0.177,0.121,-0.0957,0.014,-0.0258,0.0363,-0.006,-0.123,-0.14,0.0323,0.0565,0.00458,0.165,0.00722,0.0302,0.0489,0.0347,0.00313,-0.177,-0.0103,-0.0876,0.134,0.00775,0.0893,-0.207,0.0269,-0.0999,0.0583,0.0385,0.188,0.063,0.0762,0.057,0.00625,0.0399,-0.0797,0.0354,0.0222,-0.046,-0.0823,-0.0511,-0.232,-0.196,-0.305,-0.0721,-0.0658,-0.0962,-0.0985,0.0703,-0.0799,-0.212,0.0812,0.205};
double a4[]={-0.018,
0.00321,-0.0464,-0.0172,-0.0552,0.0957,-0.0131,0.0142,0.146,0.0159,0.00347,0.116,-0.0332,-0.00711,0.0352,-0.0286,0.0302,-0.0131,0.00718,0.544,0.357,-0.0399,0.319,0.00956,-0.0804,0.594,0.235,-0.00244,0.0369,-0.038,0.0963,0.12,0.15,0.0124,0.128,0.0317,-0.0576,0.0942,0.28,0.0226,0.508,0.0344,0.00465,0.0432,0.00865,0.563,-0.536,-0.0465,0.102,0.00949,0.0282,0.115,-0.0296,-0.00552,-0.0288,0.0433,0.00663,0.0212,-0.0436,-0.0137,-0.0736,0.42,-0.266,-0.0977,-0.11,0.795,0.121,-0.104,0.108,-0.434,0.0704,0.109,0.0758,0.0219,0.0573,0.0332,-0.0687,-0.145,-0.291,0.325,-0.0871,0.115,-0.051,0.0388,0.504,0.0804,0.0727,-0.106,0.123,0.0758,0.0676,0.0683,-0.112,-0.00487,-0.633,-0.000497,0.0173,0.0138,0.0373,0.491,-0.113,0.0904,-0.00218,0.0678,0.126,0.402,0.0683,0.411,0.126,0.148,0.135,0.118,-0.0583,-0.00729,0.282,-0.0224,-0.00948,0.0224,-0.0381,0.152,-0.0648,0.0122,0.0269,-0.028,-0.444,0.509,0.0459,-0.0909,0.111,0.121,0.118,0.116,-0.00293,-0.0205,-0.223,-0.0128,0.0186,0.00345,-0.0612,-0.414,-0.479,0.122,-0.18,-0.0356,-0.349,0.456,-0.0626,0.00135,0.139,0.0536,-0.0336,0.0325,-0.169,0.0229,0.331,0.000462,0.00376,-0.0541,0.255,-0.418,-0.244,0.148,0.113,0.0658,0.202,0.773,0.18,-0.192,0.0907,0.128,-0.443,0.134,-0.0612,-0.021,0.186,-0.0315,-0.0387,0.0337,-0.159,-0.266,-0.0225,-0.663,0.0434,-0.0318,0.0445,0.651,0.0341,-0.0128,-0.102,0.0615,0.027,-0.128,0.00782,-0.00263,-0.0736,0.00964,0.0608,-0.0284,-0.0361,-0.611};
struct NConnection{
    int nIndex;
    int wIndex;
    NConnection(int n=0, int w=0) : nIndex(n), wIndex(w){}
};

struct NLayer{
    NLayer *prev;
    size_t n;
    vector<vector<NConnection> > cons;
    vector<double> w;
    vector<double> out;

    void calculate();
    size_t size(){return n;}

    NLayer(){}
    NLayer(int size, NLayer *prev = NULL) : prev(prev), n(size)
    {
        cons.resize(n);
        out.resize(n);
    }
    void createFullConnections()
    {
        w.clear();
        if(prev != NULL)
            for(size_t i = 0; i < n; i++)
            {
                cons[i].resize(prev->size());
                for(size_t k = 0; k < prev->size(); k++)
                {
                    cons[i][k].nIndex = k;
                    cons[i][k].wIndex = w.size();
                    w.push_back(0.0);
                }
            }
    }

};

void NLayer::calculate()
{
    if(prev == NULL)
        return;
    for(size_t i = 0; i < n; i++)
    {
        double sum = 0;
        for(size_t j = 0; j < cons[i].size(); j++)
            sum += prev->out[ cons[i][j].nIndex ] * w[cons[i][j].wIndex];
        out[i] = SIGMOID(sum);
    }
}

struct NNet{
    vector<NLayer*> layers;

    void calculate(vector<double> &in, vector<double> &out);

    void addLayer(int n)
    {
        NLayer *prev = 0;
        if(layers.size() !=  0)
            prev = *(layers.end() - 1);
        layers.push_back(new NLayer(n, prev));
        cerr << "added layer " << (*(layers.end()-1))->n << " " << (*(layers.end()-1))->prev << endl;
    }

    void read()
    {
        //random_init();
        for(size_t j = 0; j < layers[1]->w.size(); j++)
            layers[1]->w[j] = a1[j];
        for(size_t j = 0; j < layers[2]->w.size(); j++)
            layers[2]->w[j] = a2[j];
        for(size_t j = 0; j < layers[3]->w.size(); j++)
            layers[3]->w[j] = a3[j];
        for(size_t j = 0; j < layers[4]->w.size(); j++)
            layers[4]->w[j] = a4[j];

        cerr << "readed\n";
    }
};

void NNet::calculate(vector<double> &in, vector<double> &out)
{
    for(size_t i = 0; i < layers[0]->size(); i++)
        layers[0]->out[i] = in[i];

    for(size_t i = 1; i < layers.size(); i++)
        layers[i]->calculate();

    out.resize(layers[layers.size()-1]->size());

    for(size_t i = 0; i < out.size(); i++)
        out[i] = layers[layers.size()-1]->out[i];
}


void createNet(NNet &net)
{
    net.addLayer(19*25);

    int lay1_mc = 4;
    int lay2_mc = 20;

    net.addLayer(9*11 * lay1_mc);


    int kernel1[] = {
        0, 1, 2, 3, 4,
        18, 19, 20, 21, 22,
        36, 37, 38, 39, 40,
        54, 55, 56, 57, 58,
        72, 73, 74, 75, 76
    };

    NLayer *lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc * 25);
    for(int map = 0; map < lay1_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 9*11; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/9)*18*2 + (ney%9) * 2;
            for(int c = 0; c < 25; c++)
                lay->cons[map * 9*11 + ney].push_back(NConnection(base + kernel1[c], map*25 + c));
        }
        //cerr << endl;
    }

    int kernel2[]={
        0, 1, 2, 3, 4, 5,
        9, 10, 11, 12, 13,
        18, 19, 20, 21, 22,
        27, 28, 29, 30, 31,
        36, 37, 38, 39, 40
    };

    net.addLayer(3*4 * lay2_mc);
    lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc*lay2_mc * 25);

    for(int map = 0; map < lay2_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 3*4; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/3)*9*2 + (ney%3) * 2;
            for(int f_map = 0; f_map < lay1_mc; f_map++)
                for(int c = 0; c < 25; c++)
                    lay->cons[map * 3*4 + ney].push_back(NConnection(f_map *9*11 + base + kernel2[c], map*25*lay1_mc + f_map*25 + c));
        }
        //cerr << endl;
    }

    net.addLayer(20);
    net.layers[net.layers.size()-1]->createFullConnections();

    net.addLayer(10);
    net.layers[net.layers.size()-1]->createFullConnections();
}

int main()
{
    char str[100];
    NNet net;
    createNet(net);
    //ifstream fin("perceptron");
    net.read();

    while(cin.getline(image[height], 1000))
        height++;
    width = strlen(image[0]);

    for(int i = 0; i < height; i++)
        for(int j = 0; j < width; j++)
            switch(image[i][j])
            {
                case '.': image[i][j] = 0; break;
                case '%': image[i][j] = 1; break;
                case '#': image[i][j] = 2; break;
                case '@': image[i][j] = 3; break;
            }

    vector<digit> digits = split_image();
    //cerr << "splited";
    for(size_t j = 0; j < digits.size(); j++)
    {
        //digits[j].print();
        digit d = scale(digits[j], 25, 19);
        //d.print();
        vector<double> x;
        for(int i = 0; i < 25; i++)
            for(int j = 0; j < 19; j++)
                x.push_back( (d.mat[i][j]>0) ? 1 : -1 );
        vector<double> y;
        net.calculate(x, y);

        int jm = 0;
        for(int j = 0; j < 10; j++)
        {
            //cerr << y[j] << " ";
            if(y[j] > y[jm])
                jm = j;
        }
        //cerr << endl;
        cout << jm;
    }
    return 0;
}
