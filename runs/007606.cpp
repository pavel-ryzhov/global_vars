#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

		double n_weight[NUM_NEURON][SIGNALS_SZ]={{24.0102,10.0788,25.097,23.0329,39.5279,69.7773,79.0541,67.3939,35.3986,38.2067,15.1337,20.3007,25.5304,29.9181,38.1964,25.2828,29.1764,27.2149,26.7165,55.9864,53.8125,55.1253,29.8501,7.955,1.00017,6.33071,24.1221,45.526,58.9499,59.4844,14.2602,7.89178,22.2643,20.1467,47.7701,48.3358,38.0624,31.0017,34.0005,20.5935,13.6678,-3.86956,44.7476,67.5481,97.3354,63.6778,18.4669,-7.28464,19.8956,53.5051,54.3444,49.384,48.4326,35.3304,14.464,8.36358,6.7074,20.7212,42.8938,64.0597,87.4386,68.3737,48.5701,6.6776,12.1471,61.3566,48.5735,24.6733,14.2164,12.5272,-3.74283,-20.466,20.7684,51.2553,47.7874,44.8914,59.0088,56.563,61.5274,30.0739,35.2887,62.83,46.5397,25.9365,-23.2783,-37.0863,-34.1354,18.1805,52.7034,56.2214,28.1827,20.0452,51.0217,55.844,62.2885,29.3492,14.3413,32.3442,32.927,-45.2186,-66.3336,-30.1495,-16.7235,14.7005,24.8879,12.9013,-24.8004,-0.231501,33.6559,60.1792,54.2654,22.3129,19.6393,44.3151,18.0196,-35.455,-54.0882,-28.1314,-12.8866,12.3669,12.8648,6.91459,-26.0437,13.7044,34.6103,38.534,43.5543,19.1927,19.9264,53.2114,2.86666,-14.4316,-9.84923,13.2392,60.8924,58.5799,55.6399,28.8089,-6.3349,-0.310083,27.5776,41.0669,52.5535,26.8979,11.1975,18.4254,-10.5472,-12.997,-8.82697,32.0599,61.4062,53.8062,29.8036,25.226,29.0086,8.13629,18.6576,23.8339,33.2036,6.43887,-28.5713,-14.1649,-5.32207,6.53401,-1.84453,41.7748,56.5783,54.9005,40.0704,48.3681,26.1325,21.9182,22.0165,23.1516,9.46597,-7.80399,-33.2297,-29.2671,-10.6705,-8.12881,-1.85122,13.9086,27.8331,13.4977,25.1163,26.0138,26.1873,33.6359,5.32392,-17.5259,-22.5622,-55.8437,-22.2253,-24.1521,-12.1681,-21.0645,-12.2026,5.48054,-2.29011,9.3463,25.0448,15.3107,6.67504,12.3714,-23.9528,-30.5698,-22.4746,-23.938,-14.0569,-21.1582,6.61769,31.7825,43.3824,64.668,43.9138,37.3728,31.0773,5.06699,15.9514,7.1281,34.0533,-9.24219,-10.9403,6.08505,10.0072,7.03436,31.3821,57.6379,83.2327,48.6662,31.4311,20.1442,25.2684,17.6921,38.5139,33.1893,25.2438,13.6904,22.0617,24.4929,12.535,17.874,24.5017,45.5387,51.1807,42.0714,34.6164,22.5968,37.0284,39.173,45.3757,36.1563,30.5263,29.4821,34.1758,25.5791,},{66.9819,94.4337,15.5487,44.1686,77.2406,183.961,65.5812,41.4327,47.2111,-52.9584,-23.5777,-22.7548,-20.9883,-33.9219,-71.3991,-25.2181,33.5349,44.6684,43.4317,36.0794,-1.73202,34.5651,71.6995,65.1322,35.8719,22.5834,-30.8863,37.4095,67.1542,18.8209,35.37,-18.5669,-4.66219,144.007,191.099,139.097,74.9064,49.3192,13.1551,-10.456,-10.5738,54.5509,19.2492,54.855,27.6922,167.025,68.1413,-7.22301,142.087,142.686,72.3599,73.552,-17.5569,-52.2906,-61.0365,-95.0748,49.5852,18.5381,12.4276,-31.7507,38.863,-28.5709,57.9435,84.5335,105.778,14.0143,36.2007,-7.69653,-103.192,-129.537,-22.2541,27.3102,-40.1241,13.5601,11.1886,53.4413,28.3503,109.975,-36.4717,40.0168,55.0593,24.1529,27.7468,-109.501,-151.965,-156.149,-33.4031,-103.495,-125.942,-64.4251,-6.60398,-31.8886,130.681,181.646,.0648152,.10442,73.271,-30.0961,-9.52835,-173.672,-125.122,-20.8268,-10.927,-97.9729,-81.3665,61.4871,59.3923,209.523,188.224,169.053,-20.4556,-74.2657,28.1545,6.75606,-68.5822,-138.338,-116.907,-22.9623,42.047,64.851,-11.9585,13.9039,117.011,58.2749,-39.0707,172.787,26.6135,-23.2114,7.12776,-73.2462,-90.3051,-117.844,-129.584,19.9671,139.295,136.329,22.6655,93.5334,183.763,79.0485,-113.608,-32.5806,-41.3892,-100.088,9.49405,-111.003,-76.3658,-70.1246,-32.7637,-63.9434,119.485,107.242,39.896,28.8995,60.6057,45.6365,-41.1355,-5.5884,33.7694,-86.3086,-22.8849,23.888,-92.5754,-68.4842,-123.149,-10.268,80.2167,30.168,-50.298,-37.6823,11.5498,-33.8212,-95.3854,-38.6028,-3.9702,-91.332,24.7973,135.799,8.72248,-53.3269,-35.6756,41.1416,149.98,57.5784,-11.0305,-61.7642,10.1997,-100.945,-44.4047,54.0688,31.3561,36.9255,-12.9275,-72.419,-33.0991,-94.6016,-51.4859,-24.7066,-19.4033,25.3145,-21.4794,3.73946,-60.0911,-173.921,-113.652,-75.0923,-138.061,116.377,-60.1748,97.3736,149.732,41.664,3.86615,10.7614,69.4068,94.255,-20.6248,-35.6885,-65.4004,-144.787,-144.377,-53.1173,34.3492,46.7768,22.9079,127.297,263.028,233.535,173.201,88.7741,67.2823,-19.4581,-143.695,-121.813,-50.9032,7.69769,-3.53591,125.481,130.227,74.6568,108.143,108.719,165.834,173.05,119.887,112.64,97.6507,63.3018,-111.31,-92.0595,2.45729,7.1675,87.5814,101.339,107.429,103.01,},{-232.283,-321.575,-185.112,-79.1572,-116.372,-121.892,219.679,166.458,2.81859,-44.9214,-228.197,-221.801,39.8252,-51.1786,-157.275,-53.2195,-297.461,-217.254,-199.852,-119.126,153.292,-23.9305,-251.737,-293.961,-269.721,-84.5755,119.835,-1.93413,-102.356,-120.077,-268.547,-276.33,17.8095,-280.813,-126.038,115.804,124.875,121.758,143.705,113.066,319.651,5.77893,-13.9146,-50.0288,279.836,-306.592,-196.863,-48.4925,21.1337,-1.76487,36.2724,125.556,320.663,253.204,206.22,262.049,211.426,92.7961,-30.3307,80.9017,-45.9528,283.788,178.142,-145.126,-280.879,187.966,145.313,125.472,155.65,251.524,178.145,44.6775,122.524,54.2333,136.201,68.0644,50.8525,87.269,377.277,-26.9459,-102.241,106.933,72.2702,171.825,-55.4004,62.9641,14.3211,61.716,17.7648,75.7295,37.1073,-63.8932,125.604,67.8266,239.557,-12.8207,-291.586,-181.612,-159.806,-140.66,-271.558,-245.893,-206.178,-128.087,-139.504,-439.447,-454.283,-460.964,-198.53,-61.3947,284.072,134.88,-43.1136,-24.5108,-212.78,-292.267,-211.008,-11.3894,-56.0296,90.8761,15.8555,-22.7935,-260.441,-194.7,-198.297,-322.126,-115.208,73.1865,6.68643,211.544,-212.984,-342.632,-394.811,-342.568,-116.157,-127.983,-96.9403,-71.12,-361.272,-374.343,-118.675,-173.546,-187.35,-73.9699,-41.9043,189.054,-29.7163,-133.565,-217.751,43.1185,-219.577,-264.362,-106.226,-44.9826,-154.525,-300.901,-119.295,-105.711,-238.878,-246.931,-84.0879,-30.4886,21.8568,25.7429,-21.6698,-25.4338,-57.925,-71.1321,174.413,64.2907,-98.38,-61.6848,-60.6867,-150.096,-132.806,-168.562,-140.119,-176.655,53.3744,161.676,9.67254,-9.58637,115.058,227.661,-6.77729,-7.67992,-89.4483,-25.2414,-115.595,-260.718,-166.96,-389.626,-64.7694,-82.1243,199.215,104.138,23.5807,124.896,119.138,-28.1186,-93.8143,-117.527,11.2169,18.2443,-244.656,-26.7971,-123.688,-202.757,-218.651,-232.644,-70.3867,96.5034,155.983,286.8,19.638,-135.008,-3.83387,61.2375,45.7888,-73.1828,190.849,-93.8567,-209.406,-3.49711,49.2847,-10.1649,-25.5914,59.9094,270.364,109.131,-31.3549,-7.84637,125.701,307.175,301.779,368.919,226.032,62.3442,135.583,30.464,141.045,91.838,-196.879,-7.22781,-13.4033,43.7236,126.81,151.621,282.137,501.337,491.302,415.914,285.341,179.707,184.052,210.176,},{-12.4753,-33.8905,-35.1706,-56.4923,-22.7987,-92.3372,120.313,-1.71785,-89.6965,-65.3218,-285.926,-186.684,-67.8961,-127.147,-61.1489,-70.538,-9.8728,-23.783,-140.823,-81.5641,66.8133,38.3877,-66.2645,-70.3799,-139.542,-144.013,52.9128,-85.4677,-141.868,-41.9823,-57.1311,-61.1011,-41.0496,-200.876,-82.9723,38.7154,47.2014,44.1432,-71.9134,-58.8592,-46.2668,-80.8811,5.7111,-24.0338,65.4659,-140.345,-85.5295,-56.4873,-112.829,41.3893,50.8255,55.5032,98.7001,-28.8031,-66.9337,-14.4608,-31.7043,-48.7131,-18.5536,16.8346,-32.276,259.901,128.93,-94.0361,-207.425,40.7596,29.1142,80.5192,-12.2484,-77.1923,6.92893,38.3397,-1.411,-48.3504,-71.0206,-68.5331,-0.479201,50.23,286.792,51.0988,-205.768,49.4676,84.2789,118.193,-45.7466,-60.223,-16.8119,40.1149,-22.1114,-81.0121,-86.9747,-121.925,1.71049,28.7791,208.712,6.15595,-129.314,101.37,103.891,71.6267,-109.472,-96.1215,-83.736,-26.7178,-166.389,-351.671,-357.132,-395.422,-200.822,6.16979,274.511,149.342,46.8391,112.161,34.2217,-122.77,-111.499,-68.3031,-73.6822,-82.0479,-166.974,-220.111,-294.503,-259.987,-181.099,-89.7002,123.031,103.554,62.428,307.162,13.6017,-96.1801,-274.788,-248.439,-106.902,-92.4347,-178.471,-236.446,-402.056,-382.618,-96.689,.529805,65.6009,23.9128,43.528,303.089,237.92,102.32,-113.981,-125.345,-141.126,-132.382,-193.38,-224.586,-177.866,-230.751,-84.7238,3.58531,34.8764,-45.2795,-12.1032,238.53,238.969,184.593,-18.4798,-54.6965,-29.9304,-24.3361,-89.8497,-138.852,-135.033,-158.377,-1.38473,11.1043,22.4718,-65.5226,-9.60763,129.826,210.708,115.549,30.0189,-38.7153,-5.05039,18.6242,-93.1276,-124.301,-134.114,-62.0159,28.1919,-25.005,71.7503,-180.164,-39.5987,-54.8661,103.33,33.6091,-2.4365,-15.2422,-63.9651,-48.5528,-107.859,-156.442,-61.4264,5.48032,-164.267,4.51263,-36.4509,-152.19,-99.4721,-234.179,-60.9903,116.269,35.0571,60.2895,-25.3703,-6.21934,-17.7612,-58.1483,8.21973,-59.6778,82.1969,-76.446,-170.099,-45.9749,-101.884,-225.823,-161.575,-94.2349,111.457,12.682,-2.08422,50.5548,7.96116,-18.6637,23.0997,-36.2573,-164.988,-146.445,-59.2872,-52.5604,-78.3991,-90.0165,-286.46,-207.277,-169.5,-78.6979,15.6331,85.8718,40.3641,21.793,.948818,-20.8293,-136.534,-65.9487,-45.0263,-45.6295,},{25.9939,15.7684,22.7081,18.8743,32.4838,63.9982,68.8613,68.9375,65.7636,65.8652,61.9338,47.1168,32.2478,22.6388,28.2823,21.8911,27.0195,22.669,22.4543,49.0754,43.4662,46.0112,29.2703,26.1035,26.5304,31.6096,42.4176,52.1007,57.7919,47.3982,14.7478,11.39,15.2866,12.7874,41.3712,41.332,30.0571,28.869,36.6998,31.4904,25.3585,12.2546,38.646,60.7849,86.2953,62.131,20.8372,3.77561,17.9281,47.9058,50.2086,35.1922,40.0503,40.4265,31.4871,22.9788,18.6978,18.8009,35.8455,51.5678,71.4471,58.8541,49.7951,11.5743,15.827,47.8615,42.4209,27.6098,27.0703,29.768,15.6638,4.2833,18.4696,36.8303,36.1988,36.732,53.5222,57.1727,56.2498,26.7689,28.7133,50.5516,43.8457,28.1359,12.0885,11.9502,2.72849,10.5513,32.5316,36.0017,26.059,19.1554,52.1352,58.1718,56.4814,24.5684,19.6278,36.8804,37.2022,13.7252,-7.32425,-7.77433,-1.81541,3.15963,24.7767,20.855,.226121,11.1932,44.326,59.7235,47.3519,18.3096,18.6107,42.5243,42.8906,19.9555,-0.0142504,6.50032,9.71154,23.9793,35.1621,31.5289,17.7213,21.6954,38.9299,47.1114,43.5812,17.5953,18.718,50.6999,50.9943,35.5646,27.4727,27.7755,45.5537,48.3751,49.5196,35.3247,25.2703,29.3911,43.9514,40.2965,41.2415,16.974,16.8147,41.7443,41.0623,27.56,10.9098,18.8048,41.9221,40.0845,28.9648,26.1037,36.728,34.1078,39.4323,39.9926,32.8072,8.24084,10.8037,37.0624,42.2358,23.9057,3.92025,26.728,37.0271,37.2936,33.232,45.0377,28.0112,24.6631,39.3674,39.5969,35.4553,2.48123,8.76471,34.0694,36.2289,13.1396,12.0252,23.1475,29.7103,19.4863,36.8928,35.4649,24.1622,22.9156,32.6067,26.6993,22.7478,-15.6289,18.0398,33.4555,40.3127,13.8553,25.743,31.3005,22.8017,31.4708,36.3136,30.8869,18.4092,25.8147,24.0222,25.1357,11.7934,-2.68441,6.32729,3.87323,15.2982,38.5289,46.7445,57.5508,38.3743,33.9713,29.6138,16.014,28.7248,25.7365,38.3559,.863397,-2.5061,5.80075,4.8173,18.2494,44.7704,54.1213,68.9923,41.3069,24.8297,15.5861,20.9786,40.8369,46.0777,35.3664,23.1563,12.8546,12.7907,13.2341,4.53652,9.25177,36.6344,59.012,66.0883,58.6314,52.0754,43.9003,54.0442,47.6282,36.9247,27.5416,24.7645,21.7589,19.6901,16.586,},{20.8902,12.7723,22.8172,19.9761,33.228,62.2722,68.5364,65.4506,53.2185,54.1389,38.4584,28.7268,26.306,24.3107,30.9231,25.8579,21.9315,23.4978,23.1336,45.9769,45.5492,46.9883,28.6292,19.9698,16.6875,19.6233,30.6163,46.2277,56.4315,48.4943,14.6096,12.3601,14.1613,13.468,41.2078,45.2279,32.1763,28.3612,35.2516,27.4393,13.2446,-0.874108,30.0737,51.3297,79.4356,57.0164,18.46,3.14447,17.2328,46.8511,51.722,44.0578,42.6633,38.8822,25.1531,12.3192,7.09869,14.9659,29.7761,45.2212,67.01,54.0353,44.7334,10.159,17.2358,53.8262,49.5158,33.6964,26.857,27.0042,2.64647,-11.0642,13.789,35.5244,31.9529,30.8071,50.2088,50.9209,51.5214,24.8143,32.3621,56.5526,50.2297,34.2522,5.84054,-6.24368,-12.8442,13.6408,36.1912,38.6031,22.129,17.6384,48.8303,52.097,52.3213,23.3894,19.6586,39.8152,41.2136,-3.14611,-21.946,-9.71851,-0.239888,11.6999,18.5883,13.1448,-10.2406,13.6883,42.8501,55.4767,43.9679,18.6169,19.3534,44.8083,37.3509,1.3165,-17.2085,.0774234,5.93176,19.71,18.8923,15.6663,1.6964,25.6897,40.8566,45.5189,41.4032,17.2673,18.9048,47.5203,28.4987,11.7002,15.693,23.6592,44.3715,42.0307,37.343,24.2906,13.962,27.1462,43.07,44.8546,45.6518,20.7577,13.4911,26.1588,17.9163,14.4117,7.37212,23.12,39.0197,33.6105,17.1087,15.4596,31.4892,27.0393,37.6919,38.3614,37.3324,7.54231,-7.54135,11.8276,22.248,19.5081,5.625,29.6404,35.6683,34.0306,27.1581,37.4908,24.4977,24.6951,34.5868,37.979,30.1907,2.46545,-11.6287,4.44816,18.3561,6.7656,6.11234,15.8409,23.7511,13.3888,23.7697,22.7451,22.969,26.5067,22.9025,14.5847,11.7594,-26.8872,-1.63187,6.67802,13.7531,-2.51798,3.79924,13.8933,8.70201,15.8005,23.4438,18.305,8.24049,15.3825,6.38737,4.30479,.88849,-6.18836,3.17691,.17792,16.2342,36.1546,41.9575,54.521,39.3858,29.3459,21.8332,8.07854,23.3953,22.5545,38.68,4.06599,-1.21038,5.34939,10.2371,18.4886,39.5205,52.3101,69.8758,45.5081,28.1515,15.7765,17.6745,28.1909,43.4994,35.4548,24.9389,12.5079,14.2772,15.4633,15.0924,17.0754,32.2861,52.0546,59.195,53.4392,46.977,35.747,43.7331,41.2026,42.9452,32.0386,27.9987,22.5675,23.6771,20.3119,},{24.9344,17.4895,24.092,21.8477,35.3434,66.0099,71.0829,69.3737,61.4622,58.5334,47.8632,37.3716,35.6131,32.4004,37.0867,30.6525,26.5211,24.6904,24.9049,49.7752,48.9291,49.9531,34.5618,29.749,27.4248,24.7302,33.249,51.6677,59.8878,54.8843,22.1726,17.9351,17.432,19.7111,44.3834,45.8558,34.8634,33.5123,42.9061,36.7245,18.3714,5.80588,38.2726,58.6794,81.3695,58.8453,22.0087,5.59294,19.495,47.6149,53.2561,46.8755,47.7581,46.14,32.78,18.6408,12.5529,20.9753,38.7443,53.2698,69.2208,53.3754,42.7806,11.0353,15.5454,51.359,48.2641,34.9154,30.7293,33.7832,6.42967,-4.94854,20.323,41.5839,38.9412,39.5363,49.9482,50.3918,48.8258,24.0431,29.9824,52.0657,47.7253,33.7558,10.1358,-0.818532,-6.04677,18.2618,41.0858,44.4086,30.5266,25.0456,48.6194,50.0262,48.3345,22.3531,16.7124,35.737,35.7269,-0.57418,-16.9192,-1.2969,8.2203,16.3258,26.2488,21.2641,-1.78004,17.8069,42.8936,51.331,42.4044,16.7441,17.4018,40.4772,36.7262,6.2761,-11.0989,10.5522,14.1178,29.1224,28.6699,25.8753,9.13635,25.239,39.1067,43.1346,40.8322,15.8343,17.6276,43.2186,29.6466,15.3975,17.8687,27.6097,47.5831,48.7684,41.6873,26.912,20.4849,28.0424,43.4811,42.0686,42.1358,17.4087,12.6261,23.9848,20.5248,18.8403,10.1388,25.1787,44.6706,39.9127,21.4905,18.5782,29.8932,31.1279,39.1737,39.3126,34.8909,7.28655,-4.54826,17.1151,27.4648,23.8056,8.55095,34.2227,40.6329,37.8677,23.9402,31.8685,24.5946,27.3523,40.0844,39.3432,31.9977,2.95523,-7.43836,13.6041,27.3731,13.7677,14.9439,26.7861,29.957,16.9153,21.4189,21.895,22.7661,29.3826,32.8522,25.3187,19.5401,-20.7738,1.76081,14.1106,19.7597,3.16386,13.008,21.2243,13.0257,15.672,23.1371,18.996,9.94843,19.2792,15.4083,14.1849,6.28698,-3.09,6.59075,5.14459,17.8367,40.0339,44.5228,55.5938,37.7661,29.7269,21.383,10.2156,29.0441,30.5162,45.012,7.90091,2.21863,7.13394,12.9934,21.5783,45.0005,54.3587,68.9047,44.8086,30.7016,21.436,20.8037,37.14,53.5119,45.2987,32.262,18.1081,18.2467,17.5977,12.3849,17.5593,36.8788,54.8065,62.4247,56.4347,50.7803,42.186,45.8543,45.1403,47.5454,35.2925,31.8461,24.5975,23.7804,19.8688,},{21.9375,12.0005,19.402,16.6287,31.9275,67.1412,72.1436,70.2781,61.3984,59.2941,52.3135,40.3736,29.6393,23.3583,28.7508,23.1062,22.7154,19.9517,21.2811,48.9982,48.0685,49.7163,31.8652,24.5193,22.9104,28.4013,39.119,51.1655,57.5211,48.5752,13.2814,9.53092,14.5329,16.2724,45.7655,47.732,35.5921,33.9165,41.2319,34.0166,24.9335,10.3859,37.9179,59.7774,85.4367,60.7053,19.6775,2.81236,20.792,51.9711,55.899,45.2758,47.3949,44.2956,31.9045,22.9148,18.8152,19.4948,35.36,50.5871,71.5606,58.4252,48.7277,10.9654,19.2032,54.751,49.1108,32.4349,28.1001,30.7099,12.0527,.348427,18.913,37.7894,34.1994,35.6487,54.6816,56.7524,54.9915,26.7491,34.1217,56.5114,49.6013,31.358,6.94935,3.55644,-1.86599,14.5942,36.3561,38.3757,24.8566,20.88,53.6318,57.1195,55.8947,25.3002,21.2458,39.006,38.9291,2.8932,-17.7817,-8.32498,-0.0770583,9.06972,23.563,19.1433,-1.87911,14.4837,46.1482,59.6758,47.1072,18.5068,19.0906,44.3115,39.1009,8.96625,-11.8814,3.29699,9.01258,22.988,28.5776,26.5058,12.3533,24.6773,40.9989,48.4223,44.1048,17.6409,18.8839,48.4743,40.5816,23.8471,20.4754,28.2201,49.2113,49.4648,48.6454,35.3144,22.4331,27.3178,43.7662,42.4017,43.9269,17.9301,15.1754,33.1243,29.3334,20.8389,9.36604,23.3986,43.2582,40.0679,27.3222,25.0145,34.8722,32.0961,39.2628,38.4273,34.5905,8.82196,1.81247,24.8367,32.8585,22.2648,4.57007,31.0768,37.5179,36.6597,31.6179,43.3209,27.9455,27.031,39.3245,38.2343,32.5757,2.41767,-0.665925,21.4779,28.5778,11.0458,9.68385,21.4621,28.2797,17.8733,31.6268,30.9648,25.5797,26.0814,30.0374,21.1704,17.5101,-20.3126,9.29529,21.0047,28.2522,7.51979,15.5248,24.7058,18.4213,26.4517,32.9366,26.3715,15.3428,22.3271,17.2493,15.8916,6.06121,-3.88044,2.99659,1.22571,15.1617,36.6138,44.705,58.7475,41.9591,35.7345,29.3691,14.8308,26.2148,24.8,40.4285,1.79209,-1.65561,6.37374,9.19342,20.2309,44.1766,54.1625,70.9868,45.4205,29.3952,18.4961,22.1623,39.3002,49.4509,41.3627,29.2686,16.4224,17.4333,17.3363,10.1662,14.8801,36.6361,56.7308,64.115,58.3996,52.1196,42.2049,51.1032,49.7026,44.6599,33.9243,30.9359,25.4392,24.7535,21.028,},{-5.60796,-22.3119,-38.3571,-55.1823,-34.3546,-96.7928,52.2547,-17.6897,-89.9185,-64.7797,-225.179,-118.505,-57.6997,-114.722,-61.3532,-70.6497,-5.0526,-26.9931,-137.57,-83.0135,12.1886,33.8104,-57.0122,-58.2745,-113.95,-130.957,24.987,-119.43,-119.087,-4.86239,-45.5952,-55.9579,-33.3662,-183.888,-96.7445,21.3146,46.3771,36.8867,-88.1212,-67.0543,-34.5778,-70.6029,13.0961,-15.6625,27.1142,-107.462,-69.7336,-46.6335,-100.784,44.7683,28.3155,40.8646,78.4765,-50.9373,-76.6679,-24.9772,-39.806,-58.9266,-28.728,21.2132,-30.4228,204.092,121.031,-82.5256,-191.015,36.4524,26.7119,71.6191,-25.605,-89.9061,5.77939,33.9314,-9.55549,-59.5371,-68.0575,-59.3499,-5.74717,56.6298,234.293,37.3752,-197.244,58.3523,79.6919,117.843,-42.8189,-54.4843,-20.9997,19.6904,-33.4366,-86.6207,-89.0814,-133.405,-9.90145,39.5948,179.825,-21.8627,-127.965,99.7525,109.068,94.3402,-92.1809,-101.268,-95.0818,-42.1408,-157.172,-288.356,-283.732,-334.189,-142.102,37.8981,241.554,98.2555,45.0398,116.098,45.2642,-88.9149,-96.9669,-84.7992,-89.6758,-84.7335,-150.749,-203.636,-274.469,-260.166,-163.69,-72.4396,159.722,65.2638,56.5338,301.737,27.3489,-79.2312,-265.251,-257.032,-114.808,-96.0918,-167.3,-225.45,-382.161,-386.271,-86.3674,3.72649,78.0148,42.8268,45.2585,305.685,238.993,106.174,-117.19,-131.739,-135.848,-124.862,-177.116,-215.537,-180.772,-235.883,-78.4092,6.33732,31.3605,-29.6479,6.75951,240.745,232.429,174.843,-22.282,-65.0975,-33.566,-25.9812,-95.8825,-152.444,-134.81,-163.049,-3.94576,10.8492,23.0844,-59.6359,11.0794,163.467,205.949,123.634,37.5119,-39.2484,-10.6803,9.51582,-100.951,-124.917,-138.175,-74.3266,25.1964,-9.84059,53.1103,-115.709,-26.2649,-43.4528,124.614,53.7373,23.5329,-17.9367,-72.3834,-61.8748,-110.63,-153.635,-61.5112,7.43285,-144.365,-4.80107,-1.66257,-117.001,-94.3238,-211.717,-41.1373,128.427,35.5286,55.0713,-50.7748,-20.7689,-18.2612,-56.5496,14.4968,-53.7096,57.0379,-64.2685,-112.083,-38.56,-102.965,-227.029,-161.311,-97.007,96.0966,-3.43106,-5.72471,52.0054,18.0841,-8.70633,26.4371,-60.7015,-152.679,-112.009,-60.4816,-54.3905,-88.1094,-102.84,-281.607,-202.218,-168.935,-79.8515,8.57222,72.2823,33.9892,3.20175,-24.5264,-32.9919,-124.114,-79.0084,-57.6833,-50.379,},{31.5879,19.1441,26.0011,23.4754,40.1107,77.3793,82.2916,78.7728,65.7641,63.4486,59.0461,51.4079,39.1772,31.851,37.8991,27.5701,33.6828,27.2343,28.1051,59.8738,52.1983,54.1714,33.6994,22.6612,20.6452,29.0887,42.853,61.0545,67.7517,60.5899,22.2824,14.0936,18.6923,17.9814,48.9633,46.7667,35.7102,33.8112,41.4466,33.1438,28.8469,14.7894,48.7736,74.5111,99.9263,74.2574,24.0214,2.63008,21.2372,53.1279,55.8639,42.9924,47.1169,42.4699,29.3899,24.7977,21.9516,23.8243,46.112,63.1307,85.5461,64.9413,51.9529,11.3179,16.6486,53.5908,47.3162,27.318,23.2914,24.8535,12.4634,1.26206,23.0565,48.6813,46.5093,48.293,58.6665,61.5604,59.942,27.9001,32.2583,54.8275,47.2235,24.9946,-1.23613,-2.19053,-4.29026,14.2192,44.3133,50.8414,35.8306,24.7621,56.1433,62.2324,59.3651,25.9038,18.5456,35.2088,35.1076,-7.9413,-29.2443,-15.1451,-6.98974,5.55065,33.7765,30.0774,-2.04642,10.6529,44.4772,63.0666,49.6868,19.3775,18.8282,42.7178,33.2281,2.08713,-19.9132,-5.7819,-0.184572,22.4598,34.4683,30.4543,7.76272,18.6787,36.5793,48.357,47.285,18.3876,19.5833,50.2508,38.6223,21.4209,16.018,27.0862,59.5496,65.1157,63.1788,39.724,16.8151,17.2401,33.913,37.6826,43.3013,16.4754,15.674,34.7572,27.3783,15.148,4.6488,24.5458,58.1678,55.4689,37.4565,31.3074,34.06,25.864,28.7841,29.8359,29.4886,5.49122,1.10766,23.0001,29.7835,19.3341,3.18263,40.6168,54.0252,53.5355,40.0159,50.0323,28.4776,23.458,30.7205,29.1542,23.9292,-5.62212,-1.45682,19.0072,24.8507,9.5506,16.5071,33.2893,40.2449,23.2072,38.8562,37.2207,25.8291,24.4494,23.3697,11.9688,6.80239,-29.4338,7.42007,18.7436,27.0807,9.6107,28.0339,37.9046,24.5173,31.5289,38.797,30.6873,16.2046,20.5787,9.56213,8.64127,1.21548,-11.1002,-6.8239,-8.19251,11.0941,42.6298,57.159,72.1852,46.2935,42.2045,33.6339,14.0116,20.8327,15.6947,36.1561,-4.46883,-5.04995,6.08925,2.87068,12.0761,45.688,62.977,81.8087,47.2825,29.6962,19.4172,22.868,34.4777,43.7219,37.7561,27.5484,15.6789,19.1068,20.0091,4.4647,9.05553,38.4964,61.7226,69.5261,57.5136,49.1193,39.0618,48.4522,47.3253,41.0432,32.0954,29.7357,25.9891,26.8158,21.6845,},{36.2089,46.4672,12.21,4.79587,23.6129,121.205,85.4994,46.496,26.339,-51.0613,-42.985,-44.7417,-13.4038,.928184,-5.55589,8.64932,21.1762,-3.66974,-13.1764,19.771,6.42261,15.0656,17.4756,3.72299,-0.253231,17.3779,-4.31951,42.5094,45.8271,39.3655,5.93088,-16.2206,3.88901,90.8744,132.54,70.6286,13.7642,16.2518,24.2047,-5.41874,5.69312,32.3908,48.6852,94.8364,82.0063,114.366,15.2805,-35.8288,72.8077,93.4371,57.1922,63.0119,60.7133,36.0206,-16.1843,-42.6859,69.2029,43.1228,46.6903,40.4128,92.9213,68.1994,71.2084,9.13464,31.1526,26.1241,24.9603,-5.86113,-36.0652,-57.9855,-35.5586,-4.52505,15.8675,41.0546,8.03733,35.2191,80.0039,115.014,53.7846,22.0739,45.4971,-5.69085,25.2603,-46.914,-121.423,-144.265,-85.7834,-58.5385,-42.5075,-23.5378,-44.3235,-23.8063,109.014,134.629,57.9276,18.9519,6.08755,-89.4103,-58.9568,-166.359,-148.315,-36.7545,-38.7973,-71.9961,-70.9062,-39.5156,-74.0425,45.4535,72.0612,104.289,37.7727,-2.15425,-16.4666,-31.5346,-85.2347,-126.552,-129.974,-8.84869,33.757,30.281,-8.25151,-4.70474,11.2844,-11.2834,-36.8972,43.6369,21.243,8.79371,-25.6572,-78.3019,-99.3841,-99.4302,-107.983,18.0282,79.7238,100.756,45.0021,62.6267,106.294,51.506,-52.8117,-34.2851,-71.3615,-45.902,-23.0591,-133.066,-100.837,-72.1518,-63.0319,-61.7272,53.3667,65.9545,52.1565,43.4867,13.9936,22.7681,-6.38643,-6.28113,-33.2091,-65.1944,-61.5077,-22.7193,-83.114,-60.3435,-118.752,-8.57147,42.7465,26.4607,8.04075,1.45954,-13.1216,-31.6636,-29.8429,-18.0879,-51.4949,-72.5477,-29.526,27.0771,-8.12149,-33.8874,-60.4132,-1.93937,57.6023,19.3918,16.13,-35.9323,-10.1371,-53.6439,-4.13236,27.6821,-47.2566,-57.4704,-48.7776,-71.6644,-46.2965,-64.5066,-58.0273,-47.5309,-44.6484,5.49682,-2.64635,-26.6763,-53.1661,-97.5283,-55.3416,-77.2053,-105.803,-16.2713,-86.4251,15.0449,54.3527,7.99395,27.2535,16.131,42.3589,56.5805,-14.9939,-48.6906,-29.1413,-60.8811,-45.3399,-81.6482,-19.7221,12.3669,-4.55345,56.5215,148.43,152.789,88.4652,53.1084,28.4085,-15.4317,-72.484,-60.0688,-0.480293,37.719,41.7747,87.7511,118.086,58.0437,40.4062,42.6269,69.1554,76.1973,51.9403,49.4576,53.9595,33.2522,-52.8138,-24.3458,14.899,22.428,100.473,84.3592,95.8429,79.2082,},{19.3259,5.47492,3.65191,1.56647,17.2022,53.9951,59.9773,56.7762,53.1494,45.9841,23.5902,6.3257,8.87913,11.4312,16.6007,12.1746,19.5482,2.71957,6.73611,43.9207,38.7944,37.4153,19.1399,15.8175,-0.0105949,-13.7078,-0.736939,34.7487,39.9745,35.9826,5.36416,-0.290501,7.51979,5.63028,36.9671,38.6411,26.8386,28.4278,43.1813,33.9779,-3.69062,-14.9151,34.6153,64.3939,79.426,56.4067,14.8447,-4.27135,16.9321,43.5345,48.8096,30.7764,43.4239,51.676,23.7875,-7.55627,-2.02364,16.001,42.8346,54.4956,63.8067,59.7584,49.0636,5.34705,19.4728,43.9441,39.7352,25.2089,27.1709,21.7881,-15.0923,-20.0638,7.38387,40.8146,35.2826,41.4577,48.8839,59.7262,60.4267,28.1223,33.63,46.0188,44.4231,21.9418,-2.71401,-30.6326,-34.8141,4.65922,26.7422,31.7584,21.8385,12.9687,50.2793,60.5065,61.6151,28.2935,22.1202,27.8764,32.1784,-34.5394,-56.7053,-29.0135,-18.3341,-5.51387,-14.3052,-16.7706,-41.9018,5.14825,36.8464,59.6511,49.8389,20.3917,18.3347,38.2422,21.3137,-19.5579,-36.2446,2.41697,8.32059,20.8002,-4.31987,-4.52928,-5.04339,8.78083,23.0313,44.8133,42.5767,19.7243,17.9153,35.3977,10.3716,-0.197417,15.6252,37.2635,66.6831,65.7893,30.5579,13.6714,17.9265,13.3773,26.1005,22.7705,30.4142,10.5644,7.36387,-3.6253,2.05027,19.4297,13.5831,25.1411,53.1647,48.1234,12.522,6.32063,20.9061,32.0443,29.7978,24.5141,18.9991,-4.43687,-29.5155,3.5151,15.0184,20.0015,-4.88737,35.8993,42.5575,36.1123,-3.16079,10.5293,13.0379,26.3147,33.1718,28.0649,24.7549,-10.1986,-27.328,4.47376,25.2633,5.69729,8.15294,19.9066,23.0105,-1.62712,-5.74867,-2.33453,10.6523,12.7922,25.6219,11.5771,10.0368,-46.8342,-13.787,.389304,3.2553,-27.1251,-6.52531,-7.74714,-20.9285,-10.7518,-3.75709,-10.2956,-21.1853,-19.2457,-22.6676,-23.9511,-27.5351,-9.32377,-6.3023,.97289,9.95237,33.6159,48.4647,62.9358,39.5703,32.7889,-4.3552,-27.0141,14.0594,10.1535,18.961,-10.7611,-3.42667,11.8363,-4.3823,6.8528,42.1551,51.3008,66.285,32.1759,18.6969,-1.56162,-24.5877,-6.15018,28.3544,27.8065,24.9141,13.8567,22.8209,17.6919,-13.7676,-3.037,34.0427,55.5549,60.788,51.87,46.5005,27.0204,9.38806,-2.55416,23.7378,20.3903,21.9224,14.9325,18.4522,15.1442,},{-12.7025,-33.5375,-43.9386,-52.8304,-21.2255,-103.37,134.555,-9.80199,-92.4394,-57.6419,-291.369,-186.504,-50.2409,-120.577,-69.7074,-79.4021,-8.44092,-29.4623,-141.858,-65.6749,90.6178,41.3685,-62.9053,-66.3907,-130.319,-144.259,67.919,-78.0607,-156.78,-60.6408,-47.3728,-60.2191,-28.239,-202.354,-73.1084,44.8965,42.1515,39.3621,-81.6843,-64.4955,-47.249,-74.2331,12.2425,-20.1986,68.7357,-161.957,-79.3914,-40.1509,-110.281,44.4447,59.8906,32.229,74.7122,-48.8451,-77.2548,-20.6041,-42.8961,-56.3875,-28.5969,19.3784,-38.8353,294.36,151.393,-82.3577,-208.903,48.8411,28.1241,71.8014,-25.7411,-89.3557,6.12475,39.9729,-8.37105,-58.4674,-63.0924,-60.7674,-0.786228,59.6905,326.693,50.9156,-221.571,39.9013,74.0845,108.609,-43.4849,-53.6942,-14.1989,29.5243,-33.9055,-78.606,-72.4447,-110.433,2.39262,34.0423,220.66,10.8367,-129.143,101.63,102.858,88.3973,-98.0436,-98.0972,-88.399,-37.2586,-153.785,-363.607,-364.851,-406.867,-230.235,-18.3868,283.131,163.977,44.683,109.873,39.2858,-112.08,-97.131,-67.5968,-83.1936,-82.4987,-158.257,-215.437,-276.723,-258.094,-188.504,-99.4251,99.3731,112.083,60.5718,306.127,26.1087,-85.1575,-266.724,-251.233,-108.285,-90.4797,-173.725,-234.821,-397.62,-396.62,-100.774,-5.66415,51.9158,13.5788,43.9259,311.908,248.833,109.274,-110.741,-121.474,-142.033,-132.087,-189.019,-221.459,-186.855,-231.319,-88.0791,-7.10031,26.647,-52.8844,.390557,251.423,245.776,184.516,-4.02986,-49.0917,-24.4174,-23.7591,-92.8425,-147.194,-136.785,-161.036,-9.16162,1.98832,16.2872,-66.5206,1.54781,129.879,215.855,130.465,49.4866,-26.3109,-5.75773,18.0533,-98.778,-118.331,-133.216,-71.0876,17.4379,-30.6391,90.9065,-175.74,-38.7478,-47.5865,121.84,55.8807,20.4395,-6.2029,-57.3423,-50.7504,-104.142,-152.256,-61.7592,4.30391,-168.808,35.1511,-28.3619,-145.951,-102.772,-232.455,-57.2117,122.274,35.6876,59.2871,-39.0523,-10.7071,-22.8564,-61.336,1.79923,-66.2731,87.2663,-67.0294,-178.949,-37.0766,-103.424,-244.528,-182.299,-109.966,103.537,8.99604,3.44198,56.2785,14.9591,-15.4203,16.8924,-35.048,-179.816,-159.29,-58.478,-50.1399,-89.1163,-101.946,-296.303,-215.702,-176.011,-88.8842,4.36639,74.2218,31.5469,8.94693,-16.2333,-44.0425,-166.758,-73.913,-55.9958,-52.1398,},{279.712,356.889,64.975,-21.809,108.825,43.7752,-41.1186,17.9089,152.097,149.328,361.758,-158.235,-292.209,-154.574,57.4833,-44.8482,275.945,7.61184,239.77,272.278,87.7452,43.1006,156.825,156.788,29.9053,113.76,-48.617,132.166,-33.9354,-239.96,254.23,164.256,-179.668,136.777,105.432,-18.7971,-33.5085,-12.4847,35.7905,-100.895,-75.6946,208.164,228.231,434.155,83.5823,373.477,1.30145,46.343,60.6581,12.6238,23.4813,30.57,-69.8686,-275.446,-358.077,-470.101,-57.776,142.637,110.202,37.7591,291.696,48.0625,36.1998,106.999,454.983,-156.488,76.1842,101.967,-15.696,-449.663,-359.912,-302.116,-334.369,180.385,-180.621,116.289,176.987,98.1864,-32.6552,-24.5482,273.781,-100.931,290.951,-16.2334,30.8895,-225.547,-272.263,-338.575,-326.984,-114.708,-154.595,-123.592,21.8112,230.448,-85.4852,-8.13513,388.001,-60.82,38.3404,-51.1335,119.329,61.6635,-28.2931,-397.488,-348.987,195.635,-56.44,138.341,100.644,37.0164,-240.729,179.584,141.98,-121.942,-64.1328,-64.4695,-104.744,147.232,150.177,-82.44,-334.203,-248.118,5.49609,-88.1124,-296.54,316.375,84.6013,248.18,59.1146,-390.202,57.3832,20.2422,504.201,491.174,402.819,396.84,62.6134,-73.8536,198.95,50.2903,-363.345,-17.1901,-142.767,-184.322,203.258,-377.085,130.869,572.461,441.948,30.3567,422.623,510.696,164.3,34.9501,-97.792,-9.00895,-62.7671,140.612,363.124,-13.2213,-17.2876,-54.2864,79.9377,44.4059,47.9603,319.858,386.094,261.112,-84.0704,163.489,66.1336,-319.949,-263.623,-38.749,161.672,-169.269,51.0818,162.097,-215.449,-223.292,-3.03743,-91.935,-134.282,-379.979,-169.762,-78.0777,110.707,-280.382,-28.5807,-6.08753,-109.637,-90.401,115.581,-16.3066,-357.312,-83.9985,108.091,-135.426,-250.74,-134.096,-27.5008,-0.0748279,.784232,-263.331,45.9195,-200.518,-501.67,248.119,-26.198,241.726,73.8647,99.2305,396.271,-73.3594,116.772,332.22,-155.007,-283.925,-146.693,-205.864,-491.238,-322.402,-66.0673,213.545,-251.76,-287.748,121.669,359.594,161.578,363.578,234.665,-8.05972,-455.047,-748.416,-648.946,-541.905,-495.652,-235.892,101.319,173.381,-224.24,-415.33,-23.6006,28.643,303.087,139.824,22.3684,-195.819,-644.76,-846.53,-861.519,-777.366,-482.493,-491.148,-285.552,-199.04,},{21.6832,10.0441,12.4187,3.31785,20.9772,59.8366,64.8494,65.1537,62.7126,58.3526,59.579,45.9875,28.4323,17.0137,28.5707,22.0603,22.5279,12.0521,5.69415,42.126,40.8299,45.1204,26.29,22.5682,24.2032,22.8265,33.683,44.5907,51.9033,43.5575,6.22677,7.34115,5.25456,5.71574,39.0808,43.8286,31.6886,31.0972,44.8282,39.4664,32.7361,12.7633,37.5663,57.4088,82.2141,53.3508,10.7951,-5.49628,14.7512,47.239,51.9315,46.8591,51.5813,53.9692,44.9234,36.2007,31.6516,24.7702,41.5206,46.3114,65.0427,52.3076,43.3793,2.12507,13.9862,48.3815,45.0066,32.289,31.3056,40.2539,24.7426,10.9495,25.8295,45.0941,33.9733,32.2449,46.6231,51.9009,52.202,27.2381,32.136,55.9201,50.6739,32.8056,12.3381,17.6047,9.2181,14.751,39.0274,35.0378,23.1231,10.7989,45.8619,55.2878,60.7199,25.3989,18.8347,39.2301,40.4257,14.0649,-10.6857,-6.50503,1.57243,6.29297,23.9281,19.6229,-6.86231,3.75667,37.7816,65.7101,50.3354,19.7017,20.2144,44.7467,44.2981,18.0804,-2.71713,9.9502,13.038,23.6433,33.3811,26.5694,11.5808,14.1575,44.0059,53.6268,49.1595,19.1122,20.6883,54.4905,54.2916,35.7858,27.2832,32.8505,48.3455,48.2152,47.4872,28.9559,17.2046,27.295,51.4828,44.9762,44.6702,15.0752,18.0447,45.8664,46.4417,28.5294,9.19855,16.7609,39.8356,37.4829,25.5483,20.3652,32.2299,35.8304,46.2032,42.8888,35.3932,7.04007,11.7913,40.5216,45.2137,23.6709,-1.48782,28.4837,37.5641,36.6693,29.7975,47.0205,27.1138,26.4097,42.2661,41.7624,38.8605,.482478,9.16661,35.9984,38.0511,8.28317,7.19677,21.0727,26.204,14.0686,39.9485,40.9688,29.2146,24.7682,34.5407,25.1639,23.2333,-23.131,17.9102,35.4039,39.0271,9.0267,18.9005,27.2955,19.7654,33.1353,43.0105,36.0542,22.4888,28.1959,25.1541,18.5604,6.38283,-9.30353,1.06546,-6.05042,6.1531,30.186,38.1317,56.3817,40.8444,38.6629,34.6949,20.7313,31.5103,26.0043,39.0925,-5.59593,-9.38003,-0.242152,-1.88742,11.7497,41.2389,50.6302,68.2591,36.293,20.4803,10.4108,18.6054,46.4998,51.7647,40.6769,29.176,15.1599,14.4882,14.4005,-2.12482,2.35886,32.8308,55.81,64.025,54.7653,46.6706,36.9241,50.0784,49.2803,39.121,31.1543,27.7096,21.267,18.3162,14.2295,},{-52.5708,25.5704,-106.589,-192.512,-199.833,146.13,-64.1916,-14.2091,134.867,58.9355,306.914,-16.0064,-104.299,-26.5223,-63.8243,34.0709,-77.301,-154.084,-114.047,-167.567,-233.532,-138.392,-48.4433,26.592,98.8894,63.8763,-201.774,-162.932,-166.692,-166.242,-7.91943,105.121,-240.513,-112.123,-155.987,8.01562,-56.7514,-38.4336,2.62667,-146.998,-258.485,-190.663,-260.241,-155.639,-452.243,131.989,-80.0082,63.8011,-22.1134,-246.716,-111.394,99.1678,-9.78053,89.8224,75.3357,-186.467,-40.5464,-36.8111,-179.594,-329.926,-86.3208,-455.118,-211.067,-111.578,276.865,-134.962,144.219,236.055,209.422,-45.4141,-220.917,-213.985,-162.433,66.7051,-208.565,-54.8981,-59.5056,-100.982,-365.387,-69.6042,223.198,-81.4665,325.586,167.084,221.33,-46.6549,-172.137,-244.952,-76.252,-21.2441,-11.9418,-42.2842,-16.7158,166.575,-217.735,-95.4157,297.155,99.6172,255.921,136.789,140.15,69.9456,63.2482,-195.638,-93.9697,269.508,125.773,418.185,269.22,206.972,-255.664,-1.74773,125.344,132.221,228.875,117.109,76.7344,151.191,55.2907,-147.103,-140.729,-125.098,146.936,63.4994,159.84,508.59,184.608,90.0769,85.5564,-136.96,200.297,177.918,538.877,527.787,164.313,52.3127,-0.799733,109.124,370.926,542.871,168.739,283.061,129.824,-53.8936,86.7609,-270.645,57.8287,300.465,416.739,62.4992,9.40177,47.347,151.588,110.867,145.836,452.181,289.348,205.277,182.18,-137.861,-47.0899,-121.86,47.9322,74.0245,38.4733,137.376,2.39882,-52.3011,-18.0352,119.492,-14.9343,103.423,40.0236,173.329,155.371,-111.07,-97.5324,72.884,61.7816,-33.3716,-121.129,-142.508,-280.826,-364.243,58.02,-0.314955,22.2361,-124.835,-34.9377,50.1787,-106.878,-53.9997,-190.382,79.785,-253.465,-153.215,-48.1564,-203.169,-235.229,-186.618,63.3899,-33.6551,-162.373,-236.388,100.466,-318.455,-143.929,113.31,-135.551,121.903,51.7478,-89.8528,94.0076,-125.614,50.9802,119.327,-66.6345,-219.355,-254.459,-38.8601,-393.308,-42.2159,256.555,71.6743,-204.084,-94.9762,87.9552,176.936,-88.6652,132.804,55.5669,-153.984,-254.065,-334.22,-364.136,-392.047,-45.4458,63.159,-0.191495,43.0436,-153.78,-189.911,86.6893,-46.5853,206.055,131.134,2.14386,-165.813,-288.44,-417.634,-443.519,-294.093,-53.0788,-248.371,-184.402,-129.444,},{26.1107,14.3866,21.8366,18.5301,34.1944,71.6491,76.2397,76.9544,76.4344,75.0365,70.1767,51.428,32.8869,20.4882,25.668,18.4128,27.0422,22.1017,24.9692,53.3964,43.8138,45.2183,27.2199,25.6755,25.5652,34.0549,46.8899,60.2701,61.9357,48.6399,14.1625,7.90441,11.7482,11.3408,42.6352,42.1495,28.8537,28.6138,41.025,36.1336,28.1019,16.3432,47.465,72.2339,98.6351,69.0966,18.021,-1.14656,14.4993,47.7204,49.773,33.8764,40.0801,44.0251,34.3373,24.5114,22.6071,24.2391,44.737,60.8424,82.2702,63.2563,49.2302,7.6745,17.5369,49.981,43.1292,26.1765,25.8684,28.4975,16.5551,7.08204,21.9613,44.2313,40.7868,44.346,59.5173,61.9428,58.0291,27.6912,29.6871,52.1141,44.622,24.5064,9.95238,10.125,1.64013,8.80148,32.4175,37.4878,27.9951,20.4059,58.3193,62.146,59.2841,26.5581,21.054,37.3518,36.1927,10.7755,-11.1875,-10.7308,-5.55214,-1.48408,21.7217,20.1165,-0.897912,9.08134,46.3759,64.147,50.4249,20.3117,20.1431,46.4352,48.1179,22.7793,-1.64166,7.20971,7.46342,24.1454,34.481,36.2687,21.6312,21.2896,35.6359,48.5849,48.0312,19.7446,20.2084,54.0023,59.6154,41.2907,29.4424,29.6697,50.2166,54.0627,53.0836,39.6047,30.4663,29.8382,43.509,38.9753,41.2995,13.5984,17.9199,44.0498,47.6654,34.5502,13.629,19.3266,46.2524,44.9618,30.2393,28.8901,37.8255,36.9665,40.4762,41.0998,31.8277,5.75684,12.0667,44.3166,50.0748,28.8197,4.67005,31.5545,39.6482,40.5575,32.0602,46.5433,27.9022,26.8266,44.1748,41.4154,36.5758,-1.80878,11.4513,43.8326,45.6267,18.12,17.4196,28.9156,37.1209,22.3378,36.7556,35.3459,23.5683,21.4941,37.241,30.8427,26.1218,-17.6383,21.941,39.353,45.9958,15.9924,32.1816,37.7035,24.7388,32.6646,35.3187,25.7757,17.1175,24.6651,26.0133,27.6546,9.27939,-2.87285,4.85245,4.84279,14.1387,39.0317,55.2761,65.402,40.7033,35.9012,25.4315,13.7482,30.6159,27.8769,39.3457,-4.01285,-6.17313,6.8048,3.34357,21.8047,54.0666,59.5303,73.5332,41.0464,21.9718,11.6232,14.9422,43.2354,50.5201,38.0344,22.1023,11.2415,13.7741,15.3655,2.77318,9.56632,44.8982,66.9281,74.4322,64.4284,57.593,49.0114,56.5807,51.6964,39.2932,28.082,25.9638,24.7205,23.4621,19.276,},{-6.90881,-22.9985,-26.5427,-39.9149,-16.4507,-99.859,98.0703,-11.0454,-85.5789,-53.312,-263.296,-162.692,-58.5782,-112.056,-56.4347,-68.9109,-5.00203,-12.3639,-128.368,-69.3387,55.5034,38.079,-55.7818,-55.0897,-117.44,-128.27,54.5288,-81.827,-116.341,-22.5898,-41.1195,-54.8171,-30.0014,-191.272,-80.9279,33.1612,39.2544,31.958,-81.5049,-59.7112,-49.5642,-73.7109,9.9461,-19.711,56.1977,-125.388,-68.8876,-47.8314,-114.51,45.5491,39.138,35.6815,80.3049,-40.2535,-73.7053,-25.5929,-51.6801,-62.9042,-28.6066,17.4109,-32.8892,249.317,137.527,-80.5686,-200.731,49.9887,28.2754,72.7592,-16.2057,-74.8503,4.84344,35.5196,-9.77903,-64.6273,-73.1093,-73.0099,-1.7977,55.7918,280.576,38.7786,-208.927,49.4254,69.5261,112.991,-38.5703,-52.4844,-16.3713,29.5906,-33.4339,-88.2986,-91.1823,-124.93,-0.624815,30.5463,200.895,-6.24384,-133.362,95.5504,100.298,92.2387,-89.3786,-88.4775,-76.3903,-23.1492,-149.153,-329.281,-329.887,-363.754,-182.239,.747444,260.254,125.508,34.3604,102.842,32.641,-102.879,-97.4367,-63.8914,-68.9408,-61.5853,-146.303,-204.208,-265.91,-242.923,-169.554,-94.2662,120.139,82.8651,43.8581,283.58,7.78401,-99.4247,-275.99,-261.604,-117.849,-99.4335,-179.567,-229.854,-378.783,-370.671,-83.5057,-2.55805,61.7887,30.9211,29.6904,283.232,216.949,92.5169,-126.913,-138.112,-150.583,-142.028,-202.987,-232.467,-180.822,-226.895,-76.648,-0.523342,27.9756,-24.8506,-7.83158,235.006,219.657,167.001,-14.7556,-60.4651,-38.5793,-35.0891,-101.522,-153.088,-138.811,-166.72,-6.28607,6.78832,22.3389,-44.0021,-2.06067,136.402,204.1,126.559,47.9381,-28.2721,-0.715081,21.8028,-107.743,-131.028,-128.642,-72.5675,21.0025,-16.1926,84.6953,-134.025,-33.6288,-59.5393,126.355,52.5436,18.115,-6.15319,-56.6778,-42.3409,-111.789,-154.074,-62.9876,.0817037,-157.826,21.7612,-8.97742,-131.97,-92.4945,-214.866,-47.8477,128.414,43.7135,65.0752,-35.3012,-17.6198,-27.179,-58.2851,19.3718,-55.5138,79.0169,-56.6834,-148.962,-46.2119,-101.205,-222.276,-166.587,-102.251,108.395,9.6528,1.82924,52.4316,9.73998,-16.3451,20.4102,-42.2953,-163.894,-137.818,-60.4262,-61.5264,-76.6403,-93.4796,-276.02,-201.671,-172.208,-76.3053,13.0272,77.0176,32.6951,7.07962,-3.82552,-28.3243,-140.346,-69.9036,-48.9115,-44.9451,},{80.4068,9.22651,176.4,134.621,181.507,-79.9915,164.538,249.058,86.4411,132.94,-8.91576,88.701,202.425,155.613,111.925,79.8027,128.826,189.717,54.6825,163.734,289.424,211.394,68.0932,-56.2656,-152.418,-163.136,.817557,35.3436,97.707,204.628,-59.0968,-55.4138,262.714,-12.8259,89.3904,66.3635,109.157,37.4459,74.2302,153.295,89.0838,-120.299,131.559,95.951,405.518,-42.0675,24.8519,-113.518,-19.9884,105.634,139.038,66.8987,225.417,143.04,64.0607,152.812,-50.3469,73.8504,289.681,309.624,154.33,425.029,153.427,-14.099,-370.127,32.8235,-13.2496,-25.1628,-8.93379,92.9688,-3.07109,-10.6855,152.165,119.527,244.161,100.023,198.466,204.386,375.154,112.991,-211.873,-3.24868,-169.483,-31.4698,-274.133,-221.547,-203.569,277.509,235.42,71.4111,22.229,100.98,194.14,41.5979,285.37,125.975,-283.622,-179.637,-303.557,-297.872,-413.932,-345.186,-156.214,127.791,-8.66356,-319.365,-279.093,-410.351,-199.13,-25.3568,303.283,21.9233,-40.6635,-33.3492,-227.306,-309.405,-347.075,-134.26,-32.731,196.229,307.988,145.499,-170.691,-158.459,-134.936,-331.529,-89.9507,-38.5637,66.5488,190.948,-249.099,-345.969,-504.084,-355.903,62.211,287.772,207.707,-37.69,-363.172,-371.055,-15.4736,-181.952,-144.85,-102.545,-52.9934,162.777,-158.383,-387.054,-415.701,-139.885,-31.4305,-28.6933,-186.001,-232.496,-238.749,-252.988,-88.1142,-101.312,-239.961,-24.5863,-132.205,5.07811,-10.1837,-38.007,-97.0752,-2.38039,27.6889,-32.5896,-81.6876,-95.2362,-115.082,-70.3231,-7.20936,-145.304,-89.8769,-49.6026,-202.078,-208.026,-55.3259,25.0453,92.0986,164.287,189.597,147.898,-85.7845,-15.5018,-75.8521,82.6828,7.79267,-191.469,-133.595,-336.258,-97.1573,-137.929,105.734,-19.71,51.4949,148.321,230.292,209.028,22.6668,-37.0079,-30.8754,72.6846,-165.687,18.2101,-115.297,-328.263,66.9404,-265.284,-197.325,81.6802,51.3234,285.031,134.851,116.901,27.486,-77.5454,75.3712,-45.8455,273.499,-152.406,-323.132,-3.59431,107.211,-8.1788,-149.351,-83.489,262.778,66.7591,125.265,203.434,169.301,83.0478,185.647,171.1,-18.5013,-62.5056,71.3156,.756769,27.7807,86.6838,-37.2439,133.758,-33.2761,102.906,200.704,207.753,231.41,220.394,262.668,85.4979,72.9687,187.618,91.3629,66.5533,},{-112.979,-157.418,-216.585,-232.978,-195.277,-194.192,57.4431,27.5087,-3.32237,177.658,-54.8897,-92.9779,76.4392,-113.343,-28.5061,58.0112,-109.821,-173.16,-230.726,-15.0017,178.541,3.41018,-326.257,-281.961,-150.537,-246.959,215.923,-7.6158,-204.361,-95.1633,-222.542,-189.389,-96.2686,-282.041,-125.797,18.4814,-75.6726,-63.4302,216.59,148.228,230.982,10.0124,23.4024,-60.5936,190.957,-401.545,-445.335,-143.234,-72.0183,28.8192,15.7494,43.9484,273.166,252.636,255.715,192.377,235.107,178.427,5.94677,136.698,-10.8531,204.552,117.78,-327.024,-254.635,213.509,62.2529,47.3471,183.993,191.278,187.905,166.75,288.094,236.003,107.912,-11.2647,-80.3564,9.06582,263.512,-151.513,-20.8256,174.661,179.506,330.202,4.30617,-1.84396,-7.27766,127.043,346.899,184.757,-67.3314,-167.549,-187.208,-135.264,225.646,-118.668,-199.883,-64.9787,85.1373,115.05,-198.992,-307.701,-148.035,41.9426,112.448,-275.881,-498.918,-607.894,-522.663,-227.279,212.983,133.145,-12.0015,108.547,172.93,-135.063,-283.762,-204.662,-144.396,-31.4638,172.963,23.7952,-367.882,-403.129,-310.585,-317.736,-150.944,41.0028,50.0489,442.55,93.337,-149.334,-214.545,-160.441,16.3245,-89.0703,90.7696,-50.6136,-316.591,-361.258,-17.7497,112.249,129.582,173.785,36.4037,444.516,204.033,-4.48705,-272.137,-44.272,-93.6888,-11.4337,122.887,-6.41661,-174.698,-288.877,-57.4116,53.633,26.255,-249.412,-52.8795,174.316,245.764,125.61,-139.232,-112.844,-38.7863,92.6295,275.677,157.137,-81.0065,-149.549,52.6454,74.5888,-96.0561,-246.032,-92.532,-92.3737,144.3,31.2179,-165.763,-207.146,-53.8208,98.918,245.517,173.923,12.9977,41.6128,-158.287,-262.028,-224.11,-598.571,-74.3729,-71.0959,46.6572,-55.1933,-183.552,-150.65,-79.9105,-122.085,204.002,85.9965,96.1392,94.433,-212.28,-140.071,-218.899,-425.141,-211.98,-399.669,-249.843,-50.1841,-50.9644,40.3492,-158.684,-147.904,206.6,163.18,122.505,69.5644,203.594,-344.288,-524.738,-295.87,-73.291,-253.922,-210.566,-98.1632,46.9994,-148.332,-145.077,-108.961,139.745,371.176,350.945,262.144,14.6379,-163.651,-75.8541,-113.232,-99.7856,-208.783,-349.846,-108.864,-37.501,-70.415,-10.2849,12.1813,377.226,442.069,334.906,259.881,40.5352,-67.1306,-51.2068,-34.7218,}},weight[]={-150.681,858.476,-1953.33,-2003.41,-182.643,-155.447,-158.009,-171.839,-1861.3,-175.304,382.061,-35.5851,-2007.85,4992.24,-180.965,2588.04,-151.86,-1886.33,-2311.89,-2662.03};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv);

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}
