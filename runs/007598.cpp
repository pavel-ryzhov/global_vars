#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{24.0977,9.89886,25.0963,22.934,39.7241,70.1779,78.8885,67.4662,35.4887,38.0753,14.5013,20.1175,25.6399,30.1631,38.6354,25.3076,29.2593,27.0643,26.8173,56.1944,53.6665,54.7709,29.7287,7.92912,1.21767,6.13949,24.296,45.6761,58.9029,59.3101,13.9921,7.59464,22.1778,20.7706,48.5476,48.3915,37.7395,31.1505,34.7708,21.7314,14.4217,-3.12976,45.4127,68.3961,97.7094,63.2694,17.8555,-7.52598,19.7858,54.2096,54.2671,49.3717,48.7092,35.5443,15.1098,8.95269,7.02599,21.3258,43.0638,64.4712,87.9045,67.9459,48.1759,6.49987,11.7474,61.5064,48.319,24.3473,14.444,13.0601,-3.31911,-19.8991,21.4704,51.4759,47.778,45.1545,59.1244,56.3119,61.5225,29.9506,35.3018,62.8024,46.3701,25.7308,-22.7046,-36.1146,-33.7237,18.4816,52.7063,56.0854,28.2725,20.5008,50.8536,55.5424,62.1794,29.2724,14.1669,32.2916,32.3878,-45.2216,-65.9802,-30.0608,-16.6846,15.0688,24.7331,13.6366,-24.1967,-0.179734,33.3708,60.1324,54.3044,22.3291,19.4855,44.1533,18.2269,-35.2691,-54.1062,-27.562,-12.4212,12.5414,12.4577,5.77468,-26.8196,13.5998,34.484,38.3956,43.887,19.2139,19.78,53.1756,3.09156,-14.1023,-9.50926,13.3504,60.4066,59.034,55.4318,28.4329,-6.46143,-0.664473,27.1281,40.5381,52.3363,26.9564,11.1866,18.7327,-10.2305,-12.6713,-8.69596,31.8806,61.4955,54.0339,29.8644,25.5201,29.4015,7.96959,18.7322,23.7389,32.8225,6.37849,-28.1941,-13.6209,-5.65601,6.97785,-1.2978,41.7097,56.7216,54.8237,39.8615,48.3753,26.9318,22.4159,22.0407,22.8268,9.03669,-8.40094,-32.84,-29.1883,-10.594,-7.57673,-1.29883,14.3094,28.295,14.0915,25.7118,26.3467,26.5141,34.0453,5.8834,-17.2895,-22.6468,-55.6406,-22.0295,-24.24,-11.9488,-20.6371,-11.9806,5.88335,-2.00167,9.9921,25.5451,15.6838,7.0638,12.9063,-23.3805,-30.272,-22.6846,-23.9926,-13.7299,-21.0005,6.22009,31.7721,43.5006,64.338,43.6736,37.4664,30.8413,5.17933,16.3326,7.43024,34.0893,-9.23227,-11.1346,6.13103,10.0064,7.15373,31.2559,57.6725,83.0896,48.3321,31.4385,20.685,25.103,17.5763,38.6894,33.4053,25.2188,13.9816,22.0693,24.549,12.4949,17.7708,24.5251,45.556,50.9282,41.8367,34.7849,22.9085,37.1346,39.388,45.6519,36.1219,30.8261,29.9213,34.3204,25.625,},{66.0953,94.1851,13.1776,44.0099,73.7546,179.023,66.5746,40.2409,49.0902,-50.0855,-15.3405,-19.6565,-17.5778,-36.8792,-75.061,-26.0808,32.8794,44.8342,40.8722,33.6722,-0.995837,35.4627,70.0121,59.2762,31.5659,25.9032,-27.803,41.4711,71.9782,19.1574,36.628,-19.1224,-6.52958,135.004,180.176,134.921,78.5599,48.2858,5.10488,-20.9814,-11.1485,53.7536,18.7875,55.4401,33.585,168.122,70.8956,-5.9313,141.813,136.865,70.6822,74.4241,-17.4885,-53.7367,-64.9196,-97.9144,53.2839,17.2729,15.932,-29.1068,43.9431,-23.0179,60.4325,84.7727,107.123,9.68043,35.1916,-4.95291,-104.274,-131.312,-22.0101,26.6448,-42.9882,15.3434,15.0298,56.2874,35.5944,114.23,-38.9523,39.3807,55.0616,21.2312,28.0694,-106.938,-153.287,-159.494,-30.5374,-106.571,-122.427,-61.8386,-0.307491,-28.7059,136.765,182.006,-0.698983,-0.424945,74.3351,-33.1242,-7.7021,-171.963,-124.702,-17.4191,-8.63676,-101.632,-77.773,59.1192,58.0937,207.978,189.565,165.347,-22.0725,-72.7402,29.5184,6.71824,-71.6773,-139.705,-114.098,-24.4688,37.9602,62.6884,-9.58184,24.2714,128.162,64.3785,-31.5733,173.499,18.367,-21.7378,7.84891,-74.7806,-92.5754,-118.099,-128.924,20.5196,146.609,134.263,22.0298,94.4777,184.265,83.0319,-104.714,-24.6197,-40.4679,-103.019,8.93477,-113.909,-77.2708,-68.1207,-33.438,-60.0635,118.335,100.575,38.6664,29.9617,60.5941,47.4123,-36.8352,-3.66526,36.4931,-88.6376,-24.8816,18.1306,-88.8718,-69.6066,-123.012,-7.83969,81.3394,30.6602,-45.9058,-34.9739,11.8126,-33.3332,-90.425,-32.216,2.63563,-86.337,24.1555,135.581,9.98889,-55.164,-36.4851,40.2747,147.097,53.7306,-10.0776,-60.7696,10.0245,-99.7666,-43.4043,54.9671,33.6693,34.477,-12.9116,-65.3518,-29.769,-91.8702,-48.5629,-23.3378,-21.4134,21.4048,-21.2038,2.06532,-60.5583,-173.967,-111.205,-73.5255,-135.896,119.459,-60.8517,99.4062,154.033,42.8469,6.2812,16.6741,71.9195,93.1655,-16.0892,-31.8455,-64.1835,-140.052,-138.556,-51.6811,36.1367,46.8214,23.3102,129.813,265.907,234.58,171.458,89.0641,64.9751,-26.4022,-143.991,-115.762,-45.0721,10.8133,-0.0409156,123.03,128.917,73.0344,107.801,109.362,169.039,176.325,124.747,113.047,94.1521,59.4856,-111.556,-86.9825,3.52617,10.0428,87.2752,99.3921,105.511,101.971,},{-231.768,-321.054,-185.657,-83.5898,-115.306,-117.983,217.712,167.05,.0706161,-49.238,-234.765,-217.931,40.2841,-51.0769,-156.9,-53.0238,-299.8,-220.674,-202.679,-120.01,147.525,-28.1985,-250.004,-289.818,-268.088,-89.0159,117.343,-0.58421,-101.365,-118.093,-271.483,-276.871,17.7896,-268.272,-109.733,124.11,124.81,122.907,148.412,118.981,317.698,7.39066,-16.7666,-51.4077,278.067,-301.646,-196.52,-50.0929,20.6597,5.38427,39.9597,129.165,320.043,251.934,207.095,265.577,209.305,93.6268,-34.1147,80.6547,-46.9843,281.938,179.301,-145.381,-281.065,196.827,150.56,127.964,158.063,252.943,176.932,48.3172,123.644,52.9789,129.151,66.3937,48.7276,87.34,380.126,-25.1606,-100.235,111.582,76.4933,174.227,-54.652,66.2856,13.0543,64.8786,14.6419,70.9184,32.3965,-60.7071,122.026,65.7519,238.776,-10.4664,-291.68,-179.755,-159.7,-139.076,-271.404,-244.378,-204.252,-118.387,-141.806,-430.119,-445.789,-457.24,-201.186,-61.278,285.245,135.073,-43.8538,-24.2864,-210.557,-292.255,-212.84,-9.18173,-52.8894,94.1496,16.4911,-27.5173,-269.611,-200.779,-203.199,-322.307,-108.286,72.8864,6.23868,211.803,-210.95,-344.227,-395.882,-340.405,-120.784,-120.51,-92.8904,-66.303,-357.836,-371.939,-123.492,-178.256,-186.858,-70.9678,-41.8433,188.439,-31.4631,-133.556,-215.93,40.9372,-220.327,-257.11,-102.577,-38.5753,-146.509,-294.792,-118.6,-105.803,-241.424,-243.414,-82.4802,-25.4319,21.8961,26.7933,-22.2425,-24.775,-58.9284,-68.6762,173.261,66.0274,-94.6608,-57.8253,-60.6373,-152.078,-135.68,-171.78,-138.454,-171.038,55.4433,161.594,9.35257,-9.41657,113.87,230.087,-5.82182,-7.05713,-89.0217,-23.7843,-113.135,-258.261,-165.278,-386.982,-64.7823,-83.4318,198.614,100.981,17.9617,123.487,118.823,-22.3074,-93.573,-115.27,10.8509,19.705,-245.262,-28.2035,-123.14,-207.104,-217.461,-231.772,-69.1448,97.0411,152.337,281.011,18.4347,-131.516,-6.22051,60.6259,43.9682,-76.1232,186.075,-93.545,-208.259,-5.54192,46.5223,-14.6275,-27.2841,60.9615,269.142,105.952,-32.3254,-1.65018,125.501,304.137,295.616,364.372,226.734,63.9415,132.282,28.7991,139.081,88.2304,-203.402,-17.244,-19.9339,42.1953,130.22,156.311,282.425,498.488,493.393,417.244,283.653,176.505,181.554,208.388,},{-12.4117,-33.9644,-35.1809,-56.6008,-22.8303,-91.7527,118.855,-0.962616,-89.4084,-65.5995,-285.007,-185.222,-69.2466,-127.492,-60.9765,-70.5257,-9.79282,-23.8459,-140.637,-81.714,65.312,38.9781,-63.7946,-66.5768,-137.187,-142.936,51.5016,-86.369,-140.127,-40.4945,-57.5237,-61.1813,-41.1041,-200.245,-82.5465,38.9326,47.8456,46.7253,-68.8405,-56.2762,-45.2816,-80.157,6.32072,-24.3086,64.5336,-137.548,-84.513,-56.6257,-112.865,41.5852,49.806,56.3007,100.316,-26.6113,-64.9571,-12.5861,-31.0889,-48.4319,-18.7705,16.1542,-32.5489,258.044,128.478,-94.0166,-207.263,40.7648,28.8413,81.1701,-10.2075,-75.0831,8.66354,40.1929,-0.800767,-48.2346,-70.9825,-68.6001,-1.51274,49.3996,286.385,51.1987,-205.245,49.4797,84.3343,118.804,-44.2181,-58.0531,-14.9502,42.0325,-21.481,-80.8832,-87.1703,-122.851,.070326,28.0849,207.997,5.99783,-130.143,101.188,103.858,72.0541,-108.461,-94.5375,-82.3265,-25.3768,-166.6,-349.322,-355.303,-393.925,-199.383,7.33983,273.882,148.426,45.8747,111.545,35.294,-121.562,-109.536,-65.6996,-70.9121,-79.2921,-166.308,-220.143,-295.26,-260.579,-181.949,-90.4637,125.592,102.72,61.7285,306.694,14.2806,-94.6439,-271.58,-245.562,-105.035,-89.8317,-177.239,-235.206,-399.984,-381.334,-97.4957,-1.39851,65.1982,25.0073,43.2168,302.29,238.004,103.632,-111.504,-122.357,-137.873,-128.802,-191.051,-222.543,-176.223,-230.287,-84.8577,2.83836,33.9626,-44.2045,-11.9885,238.217,238.614,184.718,-16.9801,-51.7822,-26.8525,-21.2983,-88.0615,-138.051,-134.668,-158.95,-2.39585,10.0903,21.4936,-65.0516,-9.63687,130.278,210.556,115.902,31.5668,-36.9004,-3.52931,20.5139,-92.0116,-124.153,-133.923,-62.5661,27.5005,-25.2477,71.046,-177.967,-39.0501,-55.2029,103.97,34.9848,-1.55235,-13.5664,-62.1302,-46.4945,-106.925,-155.462,-60.6974,5.76779,-164.248,3.1729,-34.9607,-152.041,-99.2894,-233.233,-59.5209,117.609,36.3346,61.1223,-23.7118,-4.16577,-16.9808,-57.9174,8.49023,-60.1524,80.1705,-76.3304,-167.956,-45.7637,-101.904,-225.613,-160.686,-93.2502,112.272,13.915,-0.083181,53.2461,8.99848,-18.1659,22.0561,-38.5781,-163.918,-145.216,-59.6093,-52.5409,-78.4967,-90.2401,-286.298,-206.994,-168.822,-78.2105,16.793,87.4137,40.5965,20.9881,1.04823,-19.5781,-135.112,-66.0255,-44.8875,-45.5639,},{26.0768,15.5977,22.7156,18.9518,32.6162,64.1781,68.8423,68.9224,65.6764,65.7077,61.6358,47.1404,32.3845,22.793,28.5334,21.946,27.1063,22.579,22.4005,49.0689,43.3487,45.8938,29.3066,26.1058,26.54,31.5208,42.4786,52.0392,57.634,47.3126,14.6131,11.1395,15.2411,13.0898,41.7517,41.4513,30.017,29.0399,37.0696,31.9193,25.6964,12.6109,38.9344,61.0499,86.2831,61.8574,20.4334,3.60086,17.744,48.1925,50.1831,35.1628,40.1501,40.5475,31.6978,23.2578,18.9137,19.1089,35.962,51.7676,71.5067,58.4994,49.6563,11.5239,15.4777,47.8615,42.2934,27.4129,27.0539,29.8507,15.815,4.55165,18.7403,36.9743,36.2533,36.7253,53.3961,57.0726,56.2126,26.7202,28.7521,50.4875,43.7514,27.9986,12.1165,12.1556,2.85459,10.7398,32.6359,36.1391,26.0233,19.1216,51.917,58.047,56.4359,24.5378,19.545,36.8247,37.0145,13.5757,-7.32598,-7.7886,-1.92268,3.41755,24.9091,21.2217,.287689,11.1649,44.2185,59.6409,47.3383,18.321,18.5268,42.3879,42.809,19.8968,-0.0224746,6.63844,9.95581,24.177,35.0833,31.2816,17.5958,21.7109,38.8325,46.9997,43.685,17.6074,18.6328,50.5643,50.8929,35.6136,27.4695,27.7344,45.4789,48.7106,49.4767,35.2291,25.1838,29.2553,43.7765,40.1629,41.2035,16.9735,16.7412,41.655,41.0639,27.5718,10.8619,18.7824,42.0565,40.172,29.0178,26.3522,36.8369,33.9908,39.4184,40.0095,32.7747,8.24052,10.7752,37.1504,41.9806,23.9096,3.94182,26.8235,37.2763,37.329,33.2718,45.1507,28.2226,24.7542,39.3658,39.558,35.3987,2.34759,8.78909,34.0017,36.1317,13.1988,12.1329,23.2729,29.7513,19.6293,37.2203,35.6213,24.2477,23.0124,32.7877,26.7523,22.7001,-15.6072,18.067,33.3671,40.2712,13.8804,25.7381,31.4126,22.7489,31.6401,36.5159,31.0121,18.5061,25.9565,24.1889,25.1663,11.6519,-2.81114,6.45896,3.96061,15.2197,38.5549,46.8336,57.5335,38.2868,34.1546,29.6965,16.1109,28.8571,25.8804,38.3665,.819308,-2.61202,5.77973,4.86254,18.3367,44.8062,54.2347,68.8652,41.0587,24.9127,16.1221,21.0956,40.9262,46.285,35.4834,23.0723,12.8668,12.8205,13.2727,4.51836,9.22722,36.6991,59.102,66.02,58.5037,52.2908,44.3057,54.2748,47.811,37.0962,27.6376,24.8616,21.8323,19.78,16.6147,},{20.9984,12.5977,22.8274,20.0319,33.4007,62.5156,68.5165,65.4879,53.1804,53.9822,38.0279,28.7332,26.4889,24.506,31.2319,25.9238,22.033,23.4012,23.1105,46.0308,45.4465,46.864,28.7072,20.0377,16.8154,19.5351,30.7329,46.2037,56.2496,48.3975,14.4561,12.0853,14.1226,13.9639,41.8094,45.4549,32.1645,28.5811,35.7674,28.0786,13.6961,-0.408154,30.4107,51.6784,79.4746,56.737,17.983,2.93428,17.0417,47.2767,51.7302,44.0705,42.8108,39.0117,25.4873,12.715,7.34369,15.3788,29.8741,45.4466,67.1251,53.6422,44.5427,10.0748,16.8349,53.8764,49.3949,33.4865,26.8798,27.163,2.88301,-10.6838,14.2105,35.6823,31.9357,30.8125,50.0728,50.7927,51.4933,24.7415,32.4037,56.5047,50.1458,34.1097,5.95921,-5.8767,-12.6707,13.9077,36.303,38.6844,22.0673,17.6564,48.5563,51.9306,52.2588,23.3399,19.565,39.7613,40.9517,-3.26822,-21.8745,-9.73305,-0.332932,12.0625,18.7012,13.6534,-10.0706,13.6612,42.6671,55.3808,43.9653,18.6395,19.2583,44.6591,37.3209,1.28858,-17.2699,.266663,6.2311,19.9609,18.8128,15.271,1.42595,25.6426,40.6823,45.377,41.5721,17.2966,18.8073,47.394,28.4487,11.7622,15.6635,23.6174,44.2023,42.5025,37.3131,24.1666,13.845,26.9354,42.7771,44.6324,45.5698,20.7748,13.4271,26.1367,17.9557,14.4099,7.30431,23.0337,39.1725,33.803,17.21,15.7532,31.6383,26.8819,37.6563,38.367,37.2599,7.54375,-7.48592,12.0204,21.9047,19.5905,5.71158,29.6858,35.931,34.0858,27.1805,37.6009,24.8051,24.8183,34.5499,37.8553,30.0575,2.21522,-11.5289,4.3868,18.2649,6.90559,6.27679,16.026,23.8949,13.679,24.2161,22.956,23.0917,26.6273,23.1322,14.6564,11.6788,-26.8389,-1.56083,6.57736,13.7359,-2.4353,3.82399,14.0778,8.73122,16.1439,23.7505,18.4944,8.36998,15.5762,6.59719,4.36536,.720762,-6.31138,3.34292,.266269,16.0715,36.1556,42.0343,54.4411,39.2749,29.5854,21.885,8.2007,23.5482,22.681,38.6458,4.02349,-1.34557,5.32281,10.2784,18.5725,39.5421,52.467,69.7657,45.2437,28.2798,16.4669,17.7846,28.2529,43.706,35.5712,24.8508,12.6059,14.3238,15.518,15.0818,17.0308,32.3141,52.099,59.087,53.3264,47.3034,36.2818,44.0237,41.4406,43.184,32.1392,28.1233,22.7007,23.7985,20.3511,},{25.0054,17.3383,24.0959,21.9082,35.4643,66.1548,71.0351,69.3433,61.3789,58.3811,47.5482,37.3861,35.7517,32.5425,37.3134,30.7007,26.5932,24.6081,24.861,49.7736,48.817,49.829,34.5868,29.754,27.4531,24.6581,33.3172,51.6132,59.7351,54.8024,22.0505,17.7068,17.3948,20.012,44.7484,45.9742,34.8292,33.6634,43.2467,37.1314,18.6825,6.12847,38.5221,58.9116,81.3572,58.6045,21.6512,5.4368,19.3301,47.8813,53.2161,46.8488,47.8462,46.226,32.9818,18.9047,12.7392,21.2631,38.8224,53.4315,69.2766,53.0543,42.6421,10.9887,15.2298,51.3576,48.1406,34.7365,30.7145,33.8641,6.58279,-4.69619,20.5788,41.6932,38.9513,39.5244,49.8274,50.2839,48.7976,23.9958,30.0161,52.0014,47.6329,33.6237,10.1659,-0.60366,-5.9292,18.4231,41.1457,44.4918,30.481,25.0206,48.403,49.8972,48.2901,22.3244,16.638,35.6756,35.5239,-0.714449,-16.9104,-1.32636,8.10365,16.5423,26.3215,21.5934,-1.70716,17.776,42.7667,51.248,42.3943,16.759,17.3226,40.3375,36.6506,6.21813,-11.1307,10.6727,14.3131,29.2889,28.571,25.6127,8.98133,25.2312,38.9835,43.0029,40.9287,15.8524,17.5483,43.0847,29.5556,15.4406,17.8404,27.5564,47.4761,49.0753,41.6246,26.7987,20.3891,27.8864,43.2754,41.9005,42.0591,17.4029,12.5632,23.9114,20.5315,18.8324,10.0771,25.1364,44.7856,40.0091,21.5354,18.7961,29.9784,30.9954,39.1344,39.3081,34.8372,7.28144,-4.547,17.217,27.193,23.8236,8.58177,34.2808,40.8385,37.8909,23.9535,31.9607,24.7934,27.4211,40.0522,39.2588,31.9056,2.80546,-7.3971,13.5309,27.2789,13.8382,15.0473,26.9015,30.006,17.0668,21.7159,22.0443,22.8464,29.4615,33.0052,25.3412,19.4613,-20.7456,1.80755,14.0269,19.7325,3.20601,13.0217,21.3396,12.9992,15.8585,23.329,19.1203,10.0414,19.416,15.5654,14.2025,6.15588,-3.1872,6.71165,5.21463,17.724,40.032,44.5902,55.5478,37.6708,29.8868,21.4308,10.3044,29.1584,30.6234,44.9886,7.84555,2.11549,7.11685,13.0291,21.6483,45.019,54.4403,68.7757,44.5839,30.7747,21.9333,20.8881,37.2091,53.6701,45.3618,32.1647,18.1296,18.2707,17.6307,12.3671,17.536,36.9226,54.8618,62.3306,56.2977,50.9796,42.5563,46.041,45.2975,47.6972,35.3573,31.9263,24.6743,23.8611,19.8931,},{22.0219,11.8435,19.4167,16.7065,32.0658,67.3151,72.1182,70.2661,61.3196,59.1468,51.9988,40.3869,29.7719,23.5228,29.0121,23.1642,22.8027,19.8709,21.243,49.01,47.9564,49.592,31.8899,24.5095,22.9162,28.3074,39.1814,51.1179,57.3803,48.5018,13.1522,9.29283,14.4914,16.5652,46.1375,47.8365,35.538,34.0699,41.5886,34.4355,25.2562,10.7319,38.2021,60.05,85.4401,60.4495,19.2941,2.64442,20.6109,52.2534,55.861,45.2368,47.4851,44.4029,32.1071,23.1708,19.0027,19.7905,35.4545,50.7711,71.6263,58.086,48.5831,10.9187,18.8666,54.7569,48.9839,32.2399,28.0915,30.8,12.196,.599022,19.1723,37.9071,34.2284,35.6406,54.5572,56.6492,54.9606,26.7051,34.1571,56.4526,49.5079,31.219,6.99192,3.77792,-1.7553,14.7566,36.4279,38.4793,24.8091,20.8527,53.4094,56.9945,55.8528,25.2742,21.1641,38.9514,38.7342,2.74625,-17.7668,-8.35051,-0.209571,9.3007,23.6593,19.4944,-1.81134,14.4555,46.0311,59.5983,47.0994,18.5189,19.0083,44.1804,39.0298,8.91,-11.8971,3.43004,9.23459,23.1594,28.4716,26.2262,12.2025,24.6946,40.9018,48.3143,44.2055,17.6534,18.8003,48.3468,40.4948,23.9039,20.4653,28.1689,49.1062,49.7802,48.5803,35.198,22.3334,27.1744,43.5822,42.2579,43.8783,17.9268,15.1079,33.0508,29.3395,20.8418,9.3103,23.36,43.3751,40.1474,27.3581,25.2409,34.9713,31.9692,39.2373,38.4418,34.5522,8.82078,1.80355,24.9405,32.5807,22.2786,4.60273,31.1492,37.7361,36.6736,31.6299,43.4094,28.1516,27.1173,39.3099,38.1787,32.5045,2.27005,-0.628465,21.4035,28.4785,11.1142,9.78327,21.5845,28.326,18.0098,31.9293,31.1067,25.657,26.1731,30.2172,21.2199,17.4528,-20.2806,9.33831,20.9225,28.2227,7.5531,15.5331,24.8198,18.3729,26.6168,33.1206,26.4852,15.4339,22.4739,17.4236,15.9259,5.92553,-3.99291,3.13631,1.31323,15.0736,36.6408,44.7863,58.7108,41.8529,35.8886,29.4141,14.9083,26.3345,24.9371,40.4348,1.74729,-1.7622,6.35459,9.23352,20.3217,44.211,54.2685,70.8634,45.1808,29.4712,19.0088,22.2517,39.368,49.6374,41.459,29.1766,16.4363,17.4568,17.3697,10.1492,14.8582,36.7042,56.8192,64.0468,58.2681,52.3244,42.5935,51.3172,49.873,44.8163,33.9873,31.0225,25.5171,24.8414,21.0535,},{-5.53292,-22.3896,-38.33,-55.2639,-34.3522,-96.2173,50.6346,-15.5931,-88.8243,-64.3865,-223.273,-116.452,-59.866,-115.446,-61.0828,-70.6297,-4.96159,-27.0574,-137.358,-83.5681,10.744,35.6777,-53.4982,-53.3143,-111.906,-130.085,23.252,-120.07,-116.024,-2.45671,-46.0184,-56.0198,-33.4244,-183.291,-96.8282,22.0778,47.9069,40.916,-83.1335,-62.5683,-33.0827,-69.8172,13.7519,-15.8922,26.4124,-103.164,-68.4853,-46.812,-100.817,45.0325,27.4808,42.7021,81.7847,-46.9221,-73.1373,-21.4699,-38.8522,-58.6393,-28.8216,20.5532,-30.6757,201.674,120.299,-82.5477,-190.941,36.2355,27.1054,73.5873,-21.7318,-86.2439,9.03439,37.4369,-8.57376,-59.4328,-67.9815,-59.3882,-6.83632,55.5948,233.504,37.4334,-196.734,58.9679,80.9942,119.952,-39.6193,-50.6448,-17.5359,23.3192,-32.3929,-86.5008,-89.4555,-134.582,-11.824,38.8556,178.934,-22.2054,-129.337,100.358,110.291,96.2661,-89.9266,-98.7639,-92.7252,-39.7179,-157.637,-285.106,-281.187,-331.758,-139.164,39.9416,240.805,97.0544,43.9087,116.47,47.6437,-86.4601,-93.6829,-80.3982,-85.2182,-80.1932,-149.768,-203.746,-275.761,-261.393,-165.193,-73.2281,163.738,64.2981,55.669,302.439,29.0906,-76.1174,-260.441,-252.675,-111.368,-91.7483,-165.626,-224.101,-380.158,-385.057,-87.4985,.891156,78.0011,44.4626,44.8338,305.996,240.72,109.019,-113.424,-127.366,-131.127,-119.704,-174.434,-213.516,-179.305,-235.592,-78.5991,5.18643,30.4112,-28.1919,6.50561,241.334,233.466,176.613,-19.1511,-60.7619,-29.0671,-21.3438,-93.856,-151.719,-134.418,-163.71,-5.00152,9.47487,21.9712,-58.9771,10.5741,164.72,207.223,125.665,40.7146,-35.9093,-7.63377,13.0924,-99.436,-124.784,-138.009,-74.8272,24.558,-10.356,52.178,-112.756,-25.5901,-44.0379,126.387,56.6572,26.0117,-14.7115,-69.0574,-58.1413,-109.267,-152.559,-60.6504,7.78216,-144.404,-6.52552,.463944,-117,-94.1398,-211.107,-39.6556,130.956,38.4674,57.4677,-47.6304,-17.0775,-17.1514,-56.3223,14.8992,-54.1107,54.2041,-63.6851,-109.152,-38.1335,-103,-226.773,-160.721,-95.954,98.0483,-0.946156,-2.1507,56.3623,19.4532,-8.32846,24.863,-63.7272,-150.77,-110.462,-60.9133,-54.3085,-88.2465,-103.123,-281.424,-202.029,-168.301,-78.93,10.8003,74.8452,34.3327,2.14849,-24.1183,-30.8322,-122.014,-79.1395,-57.4435,-50.2604,},{31.6338,19.0076,25.9976,23.4968,40.1988,77.4956,82.1979,78.684,65.6081,63.2304,58.6831,51.3272,39.2122,31.9799,38.1673,27.6156,33.7307,27.1469,28.0811,59.873,52.0696,54.0136,33.6759,22.5875,20.5813,28.9644,42.8834,60.9996,67.6418,60.5341,22.1701,13.9107,18.6471,18.1972,49.2351,46.7573,35.5685,33.9347,41.7862,33.5437,29.1656,15.1359,49.0852,74.8117,99.9475,73.9768,23.7048,2.50869,21.1166,53.3566,55.7818,42.9008,47.1981,42.5859,29.5574,24.9943,22.0953,24.0606,46.1939,63.2559,85.5879,64.6398,51.799,11.2661,16.4072,53.5763,47.1436,27.0919,23.3013,24.9702,12.5706,1.46627,23.2615,48.7384,46.5069,48.2756,58.5563,61.4248,59.9113,27.8616,32.2852,54.7513,47.0968,24.8196,-1.17304,-1.95028,-4.19548,14.3239,44.3256,50.8818,35.7811,24.742,55.9329,62.092,59.3276,25.882,18.4569,35.1395,34.8947,-8.11875,-29.2292,-15.1849,-7.17474,5.70953,33.8054,30.3527,-1.97315,10.6058,44.3346,62.9922,49.6798,19.3896,18.7373,42.5729,33.146,2.02306,-19.901,-5.61509,.0345429,22.5636,34.281,30.1077,7.56237,18.7152,36.5343,48.2692,47.379,18.401,19.4918,50.1084,38.5172,21.5015,16.073,27.0389,59.3834,65.2993,63.0597,39.561,16.6805,17.0715,33.7552,37.5522,43.2616,16.4665,15.5971,34.6663,27.3856,15.1799,4.61915,24.4971,58.2436,55.5231,37.464,31.4566,34.1277,25.7101,28.7564,29.8536,29.447,5.48169,1.08828,23.0755,29.4922,19.3387,3.24185,40.6452,54.1491,53.5172,39.9859,50.0881,28.6836,23.5304,30.7065,29.112,23.8652,-5.77103,-1.42923,18.9027,24.736,9.611,16.6066,33.3644,40.2741,23.3082,39.0583,37.319,25.8926,24.545,23.5714,12.0219,6.75328,-29.4177,7.46789,18.6627,27.0585,9.66113,28.0238,37.9724,24.4812,31.6504,38.9173,30.7756,16.2875,20.7431,9.76965,8.70197,1.07122,-11.2163,-6.64857,-8.07503,11.0092,42.6542,57.2294,72.108,46.2033,42.2937,33.6295,14.0471,20.9627,15.8617,36.1838,-4.51748,-5.16695,6.08229,2.91837,12.2152,45.7259,63.0361,81.658,47.0608,29.7189,19.7616,22.896,34.5128,43.9049,37.8597,27.4317,15.6585,19.1168,20.0351,4.43994,9.03377,38.5858,61.827,69.4567,57.3652,49.2342,39.3018,48.6326,47.4638,41.1519,32.0819,29.8029,26.0783,26.9029,21.7092,},{35.9884,47.2214,12.5706,7.16831,22.3149,117.913,85.9376,46.9184,28.073,-48.4089,-37.2844,-40.2801,-9.62109,1.30812,-5.93269,9.34632,21.0992,-2.41303,-13.3475,17.2456,7.30518,19.422,21.4025,5.13749,.931779,20.8248,-2.92554,43.9556,50.5734,42.6677,8.33646,-14.7887,4.49454,86.3043,125.119,69.5838,18.3764,19.6846,22.2469,-8.40202,7.03833,31.7368,49.074,93.4803,82.3678,116.97,18.1848,-34.0991,74.4666,88.5193,56.9433,64.3764,62.1047,37.3071,-16.5246,-42.7214,70.7301,42.438,48.4184,38.8719,91.8959,70.1735,73.8532,10.6735,35.0739,23.9935,26.366,-3.63875,-35.7791,-56.518,-33.3558,-4.35913,14.1612,41.6853,11.614,36.1233,80.6552,116.437,52.2397,23.0796,47.7736,-3.4392,28.0961,-43.6061,-120.136,-145.275,-83.0598,-58.5564,-40.087,-21.6433,-40.8572,-25.2455,111.383,136.703,58.6152,19.3788,8.28636,-87.2286,-52.8278,-162.791,-146.102,-34.2073,-37.8349,-74.2868,-68.3849,-44.0141,-76.0767,47.8996,77.179,106.397,37.5215,-1.73911,-14.5057,-28.6989,-84.3581,-124,-125.488,-8.97036,33.4951,30.858,-7.05058,3.08428,21.9064,-4.51582,-30.0227,45.6115,18.8554,9.62947,-24.5499,-76.4647,-98.3444,-96.2781,-105.514,20.8208,85.0773,98.6605,44.8056,62.9337,106.508,55.2732,-44.9484,-28.0621,-68.9906,-44.8719,-22.7306,-131.122,-98.937,-70.947,-59.9637,-56.441,55.9239,65.0319,51.6207,41.1477,13.1937,23.9209,-4.3895,-3.30707,-27.6087,-63.754,-61.2818,-24.7153,-81.674,-60.8331,-118.383,-7.72605,44.226,27.5202,9.97037,2.14325,-15.0284,-33.1815,-27.4772,-13.8699,-45.9203,-66.1073,-29.7145,26.0091,-7.41593,-34.7669,-61.2507,-1.97209,57.7895,19.5261,16.3956,-34.7024,-9.63319,-53.9543,-4.12599,28.914,-44.4407,-56.1112,-47.9828,-67,-43.9288,-63.4435,-56.0749,-46.8823,-45.0038,4.36035,-2.69913,-26.0378,-52.8762,-97.1025,-53.7078,-76.6719,-102.549,-12.3154,-85.4609,16.3941,58.393,9.42949,27.3219,20.012,44.7609,57.0732,-11.4251,-45.737,-27.073,-56.5334,-41.3114,-78.8762,-18.0525,12.1611,-2.13132,61.1026,152.399,153.547,89.485,56.5848,31.4056,-15.2545,-69.4927,-54.3364,4.63854,39.4116,44.2326,87.3063,117.643,57.0386,41.4899,45.0592,73.853,80.7812,55.421,50.5272,54.1076,33.178,-51.5014,-21.3577,15.4586,24.9832,101.377,83.3821,94.8765,78.4511,},{19.3657,5.41255,3.66522,1.56418,17.2762,54.1369,59.9827,56.8378,53.1993,45.9358,23.3993,6.33018,8.98523,11.5141,16.7226,12.1759,19.5731,2.65812,6.74033,43.9644,38.7737,37.3696,19.1932,15.8886,.1474,-13.7041,-0.650313,34.7668,39.8963,35.9259,5.29017,-0.395611,7.51318,5.93615,37.3216,38.7768,26.8205,28.5103,43.4581,34.3826,-3.41023,-14.6468,34.793,64.5765,79.4578,56.2751,14.6028,-4.37959,16.8551,43.7387,48.8116,30.7924,43.5001,51.7493,24.0243,-7.29243,-1.86152,16.2461,42.9098,54.6126,63.8804,59.5856,48.9448,5.28851,19.3087,43.9876,39.6906,25.1046,27.1752,21.9073,-14.9344,-19.8357,7.66868,40.949,35.295,41.5111,48.8532,59.6488,60.4119,28.0806,33.6294,46.0121,44.3957,21.8784,-2.6019,-30.4142,-34.6963,4.84554,26.8112,31.7898,21.8247,13.0307,50.199,60.4358,61.5794,28.2637,22.0638,27.8638,32.0516,-34.5242,-56.643,-28.9997,-18.2844,-5.32917,-14.2833,-16.5482,-41.7858,5.164,36.7677,59.6419,49.8421,20.4028,18.2899,38.1868,21.3688,-19.5072,-36.2932,2.54664,8.45936,20.903,-4.3507,-4.75376,-5.20637,8.70651,22.9124,44.7524,42.7027,19.7311,17.8708,35.3869,10.4446,-0.158173,15.6349,37.277,66.5632,66.0136,30.5831,13.6318,17.9081,13.2718,25.9369,22.614,30.3444,10.5765,7.35194,-3.54355,2.11615,19.4718,13.5937,25.0545,53.224,48.2529,12.5823,6.43772,21.0102,32.012,29.7874,24.4804,18.9126,-4.44803,-29.416,3.67236,14.9392,20.1107,-4.80285,35.889,42.655,36.129,-3.1673,10.5855,13.241,26.4197,33.1666,27.9446,24.6088,-10.4052,-27.2343,4.50013,25.2974,5.83557,8.28815,20.0517,23.1783,-1.37896,-5.48266,-2.17136,10.7679,12.8728,25.7567,11.6391,10.0051,-46.813,-13.7522,.323667,3.26019,-27.0592,-6.49142,-7.61832,-20.824,-10.4779,-3.53961,-10.1388,-21.0705,-19.1361,-22.5628,-23.9126,-27.6258,-9.38252,-6.26269,.949429,9.79377,33.5421,48.4645,62.8601,39.5196,32.9154,-4.35652,-26.9279,14.1815,10.2114,18.9484,-10.7958,-3.54615,11.8165,-4.39271,6.84228,42.1156,51.3224,66.2366,32.0672,18.7499,-1.25305,-24.5438,-6.12514,28.4382,27.8848,24.8716,13.9347,22.8608,17.7314,-13.7721,-3.0689,34.0126,55.5203,60.6672,51.8182,46.6529,27.2291,9.46644,-2.45691,23.8576,20.4261,22.0027,15.0253,18.5102,15.174,},{-12.6337,-33.6304,-43.9511,-52.92,-21.2235,-102.741,133.264,-9.33269,-92.4223,-58.2246,-290.955,-185.392,-51.4769,-120.903,-69.5542,-79.3897,-8.35367,-29.5221,-141.714,-65.7208,89.0776,41.5163,-60.8891,-63.0891,-128.118,-143.221,66.6384,-78.9958,-155.539,-59.4832,-47.7622,-60.3305,-28.3042,-201.812,-72.5649,44.8162,42.3822,41.5091,-79.0674,-62.4501,-46.4513,-73.5524,12.8481,-20.4773,67.8094,-159.604,-78.4409,-40.2966,-110.348,44.7043,58.6929,32.5995,75.92,-47.112,-75.7732,-19.2642,-42.4154,-56.1161,-28.8469,18.6806,-39.0919,292.794,151.13,-82.3219,-208.733,48.8176,27.4896,72.0785,-24.0688,-87.6534,7.37643,41.3083,-7.88504,-58.3622,-63.0697,-60.8643,-1.83575,58.9902,326.574,51.0747,-221.046,39.5958,73.7167,108.842,-42.3408,-51.9471,-12.8244,30.9213,-33.398,-78.4589,-72.5768,-111.24,.818757,33.4075,220.131,10.8264,-129.94,101.058,102.382,88.3836,-97.4032,-96.878,-87.3808,-36.4161,-154.09,-361.768,-363.529,-405.853,-229.36,-17.4635,282.727,163.238,43.6417,108.882,40.0068,-111.226,-95.6865,-65.421,-80.8392,-80.1866,-157.648,-215.515,-277.429,-258.608,-189.205,-100.211,101.514,111.367,59.8199,305.312,26.4665,-84.0375,-263.935,-248.762,-106.831,-88.2814,-172.556,-233.545,-395.419,-395.204,-101.484,-7.51271,51.1849,14.4556,43.5974,310.761,248.527,110.167,-108.686,-118.952,-139.309,-129.147,-186.865,-219.475,-185.189,-230.774,-88.149,-7.7449,25.5889,-52.0597,.560668,250.826,245.077,184.307,-2.95838,-46.6851,-21.8478,-21.2885,-91.1913,-146.432,-136.415,-161.595,-10.208,1.03234,15.2567,-66.1364,1.61798,130.01,215.365,130.49,50.6194,-24.9647,-4.7046,19.4319,-97.7376,-118.208,-133.042,-71.6715,16.7331,-30.7925,90.1825,-173.887,-38.1336,-47.8945,122.177,56.8898,20.9768,-4.99444,-56.0143,-49.2227,-103.327,-151.262,-60.9751,4.61826,-168.757,33.9366,-27.1217,-145.856,-102.558,-231.401,-55.9008,123.266,36.5612,59.647,-37.8953,-9.18256,-22.2047,-61.093,2.09682,-66.7546,85.424,-67.19,-177.156,-36.8932,-103.438,-244.25,-181.299,-109.104,103.992,9.84546,5.00546,58.4913,15.8644,-14.9509,15.8508,-37.2467,-179.077,-158.238,-58.7947,-50.1283,-89.194,-102.169,-296.099,-215.362,-175.406,-88.6238,5.15967,75.4206,31.6452,8.13426,-16.3359,-43.1113,-165.534,-73.9874,-55.8693,-52.0808,},{279.076,356.681,65.0362,-7.69,90.6568,-5.91886,-54.1836,4.00532,139.421,145.011,363.275,-137.904,-269.839,-153.268,58.695,-44.7852,274.654,9.09051,214.747,228.966,67.1763,67.8604,195.807,175.132,40.7316,126.736,-52.1861,111.267,-23.3027,-222.064,268.301,164.536,-172.657,103.24,55.4946,-31.7387,-15.3974,17.9978,32.8245,-97.1583,-59.6502,226.488,253.756,413.923,51.4119,368.294,-3.14187,48.7887,52.6542,-57.0791,7.61584,25.5438,-70.5896,-252.643,-366.965,-464.902,-50.9573,146.363,129.244,16.7195,245.359,28.8678,48.1206,131.133,475.267,-171.766,81.5269,82.2755,-52.5379,-446.908,-354.707,-296.135,-333.22,183.244,-160.054,90.2643,146.374,101.612,-42.5844,-3.15111,289.768,-80.6901,293.54,-29.5318,-2.91637,-280.181,-291.355,-347.068,-333.435,-111.412,-185.002,-198.803,23.7132,264.779,-70.8657,2.05484,388.732,-43.9988,102.075,-42.806,95.3118,52.52,-59.8321,-418.949,-323.842,119.327,-133.877,166.255,158.096,72.5235,-246.927,175.861,147.473,-107.971,-51.7567,-27.8836,-76.954,133.479,138.191,-90.8798,-345.394,-185.325,99.6659,-33.8452,-267.669,314.223,66.4275,246.356,61.3978,-387.299,63.2514,51.2732,501.094,514.607,413.561,379.584,58.5399,-84.205,187.556,75.4617,-326.542,12.5499,-129.263,-192.647,202.531,-357.253,136.301,551.263,474.977,74.553,456.324,519.547,145.812,-22.8488,-133.476,-7.75613,-87.1613,140.736,415.423,-3.51203,-11.4552,-56.9715,76.6102,42.0325,42.397,328.027,390.317,255.784,-90.2714,142.76,4.65246,-367.993,-269.004,-34.1668,174.296,-133.63,47.0915,141.852,-205.644,-217.88,-2.80958,-70.4973,-127.176,-370.008,-171.186,-74.6272,104.802,-314.649,-67.1534,-19.2147,-96.6607,-90.1503,115.857,-7.91046,-361.962,-87.4594,128.057,-117.739,-244.115,-129.137,-28.291,-5.21302,-8.41582,-274.38,16.5345,-224.332,-496.579,260.051,-39.9133,213.557,76.0665,84.598,396.595,-30.6843,139.086,347.455,-144.276,-271.655,-135.476,-193.262,-477.227,-331.407,-100.597,189.428,-239.441,-260.089,137.632,351.174,147.98,374.787,272.836,31.7261,-416.699,-711.31,-626.994,-550.316,-511.674,-262.648,100.101,168.573,-223.086,-408.557,4.37703,46.5123,293.026,120.099,27.856,-182.38,-642.789,-842.962,-868.845,-777.063,-497.395,-512.95,-287.75,-205.864,},{21.7933,9.82189,12.4196,3.41168,21.1307,60.0589,64.8487,65.1525,62.6333,58.1999,59.2856,45.9888,28.5543,17.1836,28.852,22.1282,22.649,11.9353,5.60586,42.0991,40.6636,44.9149,26.2349,22.4961,24.1379,22.6594,33.6792,44.4822,51.6676,43.4032,6.03966,7.01834,5.15517,5.96669,39.4489,43.9085,31.5868,31.2006,45.1566,39.8465,33.0185,13.0835,37.8128,57.6651,82.1716,53.0098,10.2799,-5.72444,14.4727,47.5616,51.8855,46.8248,51.6851,54.0841,45.1272,36.4541,31.8516,25.0692,41.6285,46.568,65.1179,51.866,43.1936,2.04916,13.5353,48.3818,44.8661,32.0916,31.2972,40.3166,24.8688,11.2059,26.0909,45.2276,34.0307,32.2343,46.459,51.7822,52.1369,27.1617,32.1805,55.848,50.5743,32.6693,12.3751,17.821,9.34646,14.9253,39.127,35.1876,23.0618,10.7414,45.5863,55.1278,60.6462,25.3483,18.7488,39.1675,40.2198,13.9158,-10.6886,-6.51658,1.46978,6.55799,24.0584,20.0297,-6.82015,3.69159,37.637,65.5905,50.3056,19.7172,20.1297,44.6127,44.2216,18.0112,-2.74525,10.0781,13.2633,23.8033,33.2478,26.2399,11.3968,14.1061,43.8601,53.5111,49.2663,19.121,20.6038,54.3666,54.1982,35.8245,27.2712,32.7852,48.2459,48.5735,47.3912,28.8155,17.1062,27.14,51.2581,44.8308,44.6322,15.0844,17.9718,45.7719,46.4477,28.5545,9.12569,16.7191,39.9327,37.4735,25.5382,20.6445,32.354,35.7161,46.1849,42.88,35.3314,7.02568,11.7579,40.614,44.9634,23.6848,-1.46143,28.5915,37.8319,36.6377,29.806,47.1315,27.3536,26.5217,42.2592,41.7047,38.778,.315422,9.19557,35.9423,37.9593,8.34043,7.30757,21.1896,26.167,14.1441,40.3123,41.1224,29.2998,24.8701,34.7204,25.2036,23.1704,-23.14,17.9368,35.2834,38.9614,9.04016,18.8973,27.3976,19.6186,33.2531,43.2225,36.1711,22.5809,28.3264,25.3084,18.5714,6.21802,-9.46342,1.18236,-5.97351,6.04425,30.191,38.2353,56.3413,40.6788,38.8231,34.758,20.8117,31.6349,26.1293,39.079,-5.66023,-9.50277,-0.279924,-1.86914,11.768,41.2215,50.7329,68.0798,35.9331,20.5075,10.9718,18.6716,46.523,51.9077,40.7585,29.054,15.1388,14.4906,14.4164,-2.16375,2.29883,32.8365,55.8643,63.9097,54.5545,46.8314,37.3296,50.2495,49.3996,39.2368,31.1882,27.7575,21.3064,18.378,14.2339,},{-48.3464,33.2223,-104.492,-177.494,-198.527,128.139,-73.8831,-34.4191,121.585,43.1919,300.34,3.62582,-77.057,-20.578,-61.1336,42.6911,-73.5374,-145.764,-122.612,-188.72,-250.997,-126.77,-18.2012,56.8688,129.541,97.4803,-188.319,-171.934,-171.407,-159.095,7.90669,115.416,-232.279,-122.535,-186.73,-6.10449,-31.3497,-5.2559,11.98,-145.309,-253.572,-181.77,-246.502,-158.822,-466.528,126.89,-67.5055,69.9143,-17.6915,-273.349,-136.092,90.5553,-1.70006,100.531,72.6501,-188.901,-36.839,-36.1871,-164.009,-331.472,-97.2676,-460.648,-213.59,-94.1148,295.51,-150.183,126.488,224.491,199.833,-35.5051,-210.764,-212.153,-162.716,70.5247,-192.466,-61.3624,-77.6464,-117.595,-374.783,-54.8315,237.649,-80.4503,305.305,147.116,193.958,-73.6663,-172.772,-243.956,-69.3985,-6.77304,-10.134,-69.8643,-32.4878,168.856,-200.694,-81,307.567,106.883,269.472,117.277,116.252,51.485,42.3399,-218.913,-81.4376,243.425,88.6889,405.476,286.005,224.487,-241.42,1.37668,132.595,141.911,236.139,131.812,74.6963,122.656,30.8426,-163.448,-157.544,-102.806,179.608,93.0608,192.959,523.443,179.751,94.6413,89.2547,-131.257,204.586,194.281,528.101,515.105,164.593,28.2459,-23.4007,89.4839,354.459,544.409,189.372,301.888,140.822,-52.6871,90.7315,-258.823,69.4171,278.414,395.729,72.3876,23.8804,49.5842,148.46,90.3419,119.43,436.59,270.125,200.155,200.006,-129.218,-39.7409,-122.73,25.7644,45.8053,29.4685,138.436,5.80984,-44.551,-9.26971,121.135,-38.6413,77.9024,22.0062,160.777,154.72,-83.38,-91.7162,52.2291,39.3739,-45.3065,-124.422,-137.709,-279.102,-358.884,62.128,8.39447,30.3536,-126.95,-51.3254,31.4478,-119.619,-47.9893,-190.189,63.3619,-273.196,-153.603,-34.9901,-200.064,-236.327,-187.17,67.4576,-22.5441,-153.162,-230.35,97.259,-339.529,-158.008,127.36,-139.099,107.76,34.481,-105.228,93.5407,-102.453,64.9823,131.863,-43.5695,-194.999,-237.308,-19.5784,-392.058,-68.29,244.258,64.9586,-190.889,-74.4135,93.0834,159.824,-84.712,159.208,87.2485,-130.855,-227.402,-296.852,-337.969,-393.001,-65.1374,53.3013,3.92904,45.9071,-142.864,-172.464,109.81,-38.5651,198.482,121.926,1.83444,-162.515,-291.426,-410.471,-448.748,-288.318,-55.5284,-252.909,-181.055,-127.73,},{26.1592,14.2466,21.8344,18.5769,34.2701,71.7516,76.2149,76.9286,76.3532,74.9153,69.9708,51.4412,32.977,20.5888,25.8399,18.4456,27.0937,22.0277,24.9175,53.3637,43.7053,45.1132,27.2229,25.6526,25.543,33.9831,46.9191,60.2077,61.8068,48.5686,14.05,7.71822,11.7057,11.5289,42.885,42.2195,28.8072,28.7173,41.2693,36.4147,28.3447,16.5966,47.6601,72.3985,98.6202,68.8869,17.7154,-1.27036,14.3492,47.9074,49.744,33.8374,40.1287,44.0978,34.4694,24.7088,22.7698,24.4538,44.8255,60.9627,82.2901,62.9992,49.1371,7.63756,17.2853,49.9783,43.0362,26.018,25.8355,28.5374,16.659,7.27745,22.1427,44.336,40.8264,44.3191,59.4124,61.8814,57.9987,27.6559,29.7134,52.0775,44.5579,24.3949,9.95671,10.2434,1.73253,8.94454,32.491,37.5968,27.9595,20.3456,58.1569,62.0722,59.2635,26.5308,20.9976,37.3207,36.073,10.6552,-11.2015,-10.7567,-5.63212,-1.30796,21.8123,20.3562,-0.874965,9.05473,46.3055,64.1037,50.4262,20.3265,20.0855,46.3475,48.0549,22.7257,-1.63682,7.30937,7.6378,24.2768,34.4002,36.1023,21.5489,21.3001,35.5779,48.5171,48.103,19.753,20.1465,53.9099,59.5385,41.3244,29.4444,29.627,50.1607,54.2777,53.0244,39.5268,30.3909,29.7349,43.3935,38.8974,41.2758,13.6002,17.8681,43.9799,47.6607,34.5592,13.5941,19.3088,46.3495,45.0063,30.2611,29.0647,37.8974,36.8723,40.4516,41.1214,31.8269,5.75511,12.0437,44.3651,49.8979,28.8091,4.67791,31.6075,39.8147,40.5731,32.0918,46.6356,28.0425,26.8702,44.1704,41.4058,36.5497,-1.89122,11.4623,43.7817,45.5559,18.1412,17.4714,28.9753,37.13,22.4241,36.9734,35.4534,23.6279,21.5456,37.3613,30.8818,26.0934,-17.6355,21.968,39.2984,45.9682,15.9991,32.1717,37.7558,24.6821,32.7711,35.4516,25.8711,17.1852,24.7527,26.131,27.6828,9.18578,-2.96175,4.9483,4.90467,14.0986,39.0482,55.3297,65.3758,40.6338,36.0209,25.4883,13.8197,30.7178,27.9733,39.3615,-4.04701,-6.25328,6.79098,3.37942,21.8756,54.1,59.605,73.4227,40.8492,22.018,11.9935,15.0288,43.3226,50.6811,38.1202,22.0425,11.2327,13.7967,15.3866,2.75978,9.55339,44.9511,66.9922,74.374,64.3166,57.7405,49.2945,56.7587,51.8468,39.4232,28.1537,26.0311,24.7639,23.5234,19.2961,},{-6.82182,-23.1078,-26.53,-39.9906,-16.3298,-99.1077,96.5907,-9.97875,-85.1949,-53.6188,-262.392,-161.247,-60.2187,-112.507,-56.1881,-68.8862,-4.89503,-12.4323,-128.156,-69.5331,53.9107,38.8355,-53.0812,-50.9543,-115.206,-127.29,53.033,-82.7221,-114.452,-20.9704,-41.5912,-54.9391,-30.0795,-190.634,-80.5553,33.3868,39.9738,34.9846,-77.7313,-56.49,-48.438,-72.8696,10.649,-19.9246,55.3506,-122.357,-67.8665,-48.0135,-114.588,45.9228,37.9867,36.6229,82.4493,-37.4327,-71.3237,-23.3258,-50.9905,-62.607,-28.7291,16.7802,-33.1499,247.262,136.961,-80.5447,-200.652,49.9562,27.9321,73.6249,-13.5783,-72.228,6.94203,37.7948,-9.06124,-64.5098,-73.0525,-73.0998,-2.94918,54.7969,280.178,38.9352,-208.393,49.4442,69.631,113.763,-36.6287,-49.7991,-14.0687,31.9298,-32.7036,-88.13,-91.4111,-125.902,-2.52953,29.716,200.216,-6.33953,-134.396,95.4765,100.355,92.7853,-88.1976,-86.7015,-74.7736,-21.544,-149.458,-326.629,-327.968,-362.263,-180.733,2.09903,259.743,124.596,33.2785,102.391,34.0924,-101.419,-95.255,-60.7297,-65.6181,-58.309,-145.673,-204.531,-267.004,-243.871,-170.629,-94.9539,123.149,82.0391,43.0733,283.409,8.73002,-97.4927,-272.331,-258.335,-115.596,-96.2183,-178.127,-228.553,-376.686,-369.47,-84.5675,-4.87735,61.4002,32.149,29.3595,282.673,217.441,94.2428,-124.24,-134.819,-146.95,-138.109,-200.565,-230.379,-179.219,-226.49,-76.8112,-1.47191,26.8456,-23.6891,-7.78345,234.934,219.61,167.568,-12.7059,-57.1181,-35.1382,-31.7081,-99.7655,-152.331,-138.367,-167.306,-7.42968,5.56444,21.1927,-43.4812,-2.17458,137.018,204.299,127.425,50.0604,-26.0135,1.12793,24.1035,-106.482,-130.881,-128.448,-73.0705,20.3221,-16.5438,83.8495,-131.672,-32.991,-60.0881,127.234,54.3862,19.5004,-3.99927,-54.4512,-39.7907,-110.659,-152.934,-62.0524,.480013,-157.813,20.3202,-7.39566,-132.045,-92.2821,-213.987,-46.5523,130.014,45.5307,66.3438,-33.2564,-15.084,-26.2534,-57.9691,19.8198,-55.9816,76.6995,-56.6292,-146.776,-45.9901,-101.245,-222.094,-165.879,-101.409,109.412,11.1693,4.25273,55.6303,10.8555,-15.9524,19.0387,-44.9258,-162.799,-136.623,-60.8787,-61.5364,-76.7784,-93.7787,-275.865,-201.453,-171.644,-75.7961,14.4082,78.8092,32.8525,6.08517,-3.75323,-27.0007,-138.827,-70.0305,-48.7807,-44.8986,},{79.1241,6.64423,174.954,129.183,187.941,-59.8539,175.064,259.039,93.8509,140.786,-8.22572,76.1939,184.389,150.429,107.621,75.6686,127.853,186.314,62.0952,182.046,302.303,203.064,50.8071,-66.9384,-164.544,-179.832,-3.20364,44.3812,96.9799,197.256,-68.5513,-59.8353,257.827,-1.07747,113.155,81.4786,97.1722,20.1834,71.1998,152.086,82.8735,-125.651,120.167,93.8238,411.037,-34.8664,24.4199,-115.271,-18.4423,125.434,154.909,75.9736,220.952,137.741,68.2624,154.611,-52.3246,73.6798,278.639,312.992,158.043,428.658,155.708,-21.0789,-378.049,48.7425,.331014,-12.1476,1.02252,89.7613,-6.70438,-11.0954,152.316,114.673,234.04,104.18,203.943,210.714,379.894,105.667,-216.724,.554542,-155.177,-16.9774,-256.863,-201.05,-197.237,274.328,223.857,62.5691,21.4734,117.098,196.916,34.8116,271.567,118.572,-290.538,-185.533,-309.66,-285.736,-393.832,-326.222,-133.897,147.461,-16.6187,-298.274,-251.975,-402.21,-215.048,-40.4787,292.567,19.2341,-45.3001,-41.5632,-232.999,-316.746,-342.717,-112.906,-10.7334,213.25,325.729,136.491,-193.042,-181.751,-164.025,-347.318,-89.5946,-42.2107,63.6103,185.705,-253.883,-358.888,-503.487,-347.725,62.3541,303.111,223.402,-19.0073,-342.611,-367.685,-38.7224,-203.956,-153.666,-102.254,-54.5678,155.459,-166.336,-376.799,-402.115,-143.717,-36.8882,-26.0199,-180.339,-209.491,-213.849,-234.834,-80.9496,-103.357,-254.984,-28.8569,-132.788,9.7482,3.26646,-19.9227,-91.0173,-2.8418,24.6866,-38.0192,-89.799,-99.0856,-97.8744,-48.0367,1.55663,-142.239,-95.3357,-65.2042,-199.203,-186.415,-37.9725,35.1481,95.0516,161.212,188.881,144.997,-91.7491,-23.0253,-80.3466,86.8787,17.3115,-179.132,-123.25,-332.976,-94.5943,-127.639,117.967,-18.326,42.2887,145.562,228.33,204.323,13.7564,-46.1331,-36.1985,65.5216,-167.718,29.6775,-103.03,-331.159,64.5602,-252.709,-181.896,93.4933,52.567,271.236,126.791,108.251,16.1131,-85.629,65.9501,-61.2255,268.314,-134.24,-306.93,-2.54103,96.8631,-28.586,-150.456,-66.1962,269.638,58.4775,110.576,194.974,157.36,64.2484,166.41,171.44,.751531,-47.9342,68.0258,-1.11162,21.9498,74.95,-58.2499,122.021,-25.588,112.092,203.195,212.954,232.483,215.668,272.538,93.0392,76.4589,189.248,89.9402,65.2562,},{-112.82,-157.245,-216.434,-233.311,-194.239,-189.853,57.6594,26.9052,-7.31272,172.046,-64.0966,-95.6502,76.4813,-111.228,-27.8546,58.3615,-109.854,-173.493,-232.377,-16.9399,177.549,.98665,-324.518,-277.321,-143.852,-249.491,207.859,-14.3114,-205.042,-94.4506,-223.239,-189.817,-95.1881,-276.762,-119.932,21.3455,-75.0132,-62.8526,217.888,149.998,230.717,3.58891,17.975,-67.3098,186.73,-400.204,-446.332,-143.083,-68.7832,31.6675,17.3943,47.5547,274.037,252.831,259.759,194.232,231.28,175.047,-2.12278,128.744,-14.7534,200.874,116.903,-328.066,-254.249,215.919,64.0659,46.2007,181.586,191.848,189.688,167.867,289.805,232.632,101.425,-13.9451,-84.2194,6.10744,263.568,-152.649,-19.7039,176.501,181.152,328.963,.351493,-0.970073,-8.71819,127.433,349.256,181.473,-72.6931,-170.327,-187.424,-133.929,223.184,-119.96,-200.447,-63.723,84.6814,113.599,-202.837,-309.957,-151.588,43.9805,114.222,-275.253,-500.181,-605.522,-519.834,-224.212,212.621,130.765,-13.3426,107.427,174.829,-137.016,-288.144,-205.891,-145.072,-30.1074,175.658,21.8555,-371.014,-402.333,-309.681,-316.861,-146.546,40.2579,49.1097,441.986,93.9607,-151.614,-216.761,-158.946,16.5544,-90.3092,89.4819,-52.7158,-316.698,-360.318,-17.7823,112.916,130.134,176.871,36.1973,444.352,199.644,-9.38821,-273.774,-39.5487,-88.1794,-6.58798,126.999,-6.00685,-173.478,-289.142,-56.9603,55.9747,27.8103,-246.055,-50.4026,176.096,237.297,119.735,-142.407,-109.309,-34.1469,93.8724,277.408,155.238,-83.3766,-152.469,52.0092,73.7995,-94.8177,-244.818,-91.4704,-92.4989,140.132,27.2936,-166.886,-204.126,-50.2021,101.061,244.403,169.38,11.0099,39.557,-158.977,-263.385,-223.398,-595.318,-73.6078,-69.7401,46.1573,-56.4699,-187.012,-148.668,-75.9259,-119.004,204.715,83.2686,93.166,95.0117,-212.647,-140.501,-218.581,-423.645,-212.407,-398.055,-245.441,-50.8308,-54.0062,39.9394,-157.097,-146.062,208.317,160.827,118.837,66.8178,204.02,-341.882,-522.385,-295.297,-71.222,-251.597,-204.987,-93.4783,47.6732,-147.867,-143.065,-104.497,142.659,373.539,350.579,261.279,18.1218,-157.248,-71.873,-110.714,-97.6198,-206.149,-348.437,-107.929,-35.9915,-70.7949,-8.77462,14.9262,380.087,442.477,336.172,259.757,45.639,-62.4615,-46.698,-32.2208,}},weight[]={-151.388,858.911,-1962.28,-1997.67,-183.514,-156.217,-158.919,-172.735,-1855.81,-176.26,380.764,-35.7206,-2001.97,4995.66,-181.917,2587.08,-152.755,-1880.64,-2310.64,-2662.47};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv);

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}