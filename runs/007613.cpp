#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{29.7,38.2429,40.5792,43.437,76.9003,137.65,35.497,13.487,15.364,8.03564,91.4726,111.694,80.8977,72.2263,83.518,65.2039,35.2071,72.8658,65.0823,81.7921,25.5879,62.1291,74.7187,46.3876,-33.021,13.8897,27.9821,55.3422,114.604,137.35,85.0113,47.8574,33.3411,60.941,74.7873,28.1729,17.6442,19.8081,16.1174,-12.8576,15.9678,12.023,71.2145,25.0888,23.9308,40.5195,44.4309,27.6838,39.937,111.373,75.684,8.61247,-32.8856,-60.5947,26.687,29.3227,34.1825,29.9885,28.7393,-30.2023,33.8922,26.7931,46.4632,-9.46515,18.2606,80.7075,27.5118,-86.2924,-55.6555,-34.2323,-5.35914,-23.1347,28.2871,4.54047,-73.617,-41.3804,25.0769,56.369,82.4481,35.1097,37.1436,71.9319,25.3226,-69.2507,-92.9704,-55.5079,35.1808,46.9802,-34.319,-45.0641,-60.8216,-39.7083,1.26019,106.096,117.11,34.6678,5.79219,42.564,25.0299,-36.3384,-122.832,-72.6378,-69.5673,-57.0267,-127.25,-82.441,-77.5126,-30.8161,120.892,106.73,108.345,56.1266,29.2095,16.7029,-15.4637,-109.185,-122.702,-48.0364,18.5682,15.4725,33.3404,-63.6533,-57.7501,-0.0466768,38.5033,108.186,167.338,61.6315,28.3526,29.9543,-16.4959,-49.3091,3.96576,45.2118,42.0302,42.3657,-27.4346,-12.4399,14.2169,-3.2566,15.9517,23.9111,35.5328,14.7818,10.0142,-33.0899,-70.1884,32.0397,42.8159,28.8409,32.4816,-4.40398,-2.36941,-16.837,30.9303,40.5642,32.9271,13.4801,-34.348,60.3426,-29.2506,-92.9951,-72.6911,-36.189,5.01499,48.074,7.22194,-25.5352,-15.0378,6.37937,6.23686,79.2536,35.8199,-10.3335,10.3331,-3.65409,-18.7355,-30.076,-45.8732,14.964,-4.05529,-2.57488,-26.4639,-54.8169,-26.1812,-50.4109,-12.234,90.9844,63.687,6.02947,10.808,-46.3019,6.00351,25.9838,-24.2944,-32.4629,31.1476,47.723,8.41741,-35.3875,-55.9296,-27.8172,-65.6782,-86.7017,3.11809,-13.9168,10.2706,-5.78,.850727,39.0127,25.101,13.1893,-18.2371,12.3806,71.1044,78.9368,12.7582,-71.6644,-94.4436,-36.1632,61.1837,9.27371,-15.3459,-14.7984,15.4015,30.7778,116.637,98.4173,45.5525,40.3394,28.481,-1.31847,-78.3869,-27.2082,41.801,24.5832,27.7927,18.0079,8.56514,15.4471,2.83498,-10.8202,22.5607,57.8545,175.86,64.5047,30.288,-1.94895,-68.4749,-3.82475,58.4592,47.7527,19.156,-11.3418,-6.60689,12.9772,},{80.0309,95.8158,5.84634,57.2079,76.3066,110.343,185.885,156.343,136.564,-82.8816,-162.82,-180.825,-70.5749,-36.4586,-70.1647,-42.8604,71.9581,56.9266,143.699,223.808,187.311,59.0411,8.27801,-124.281,-23.2336,137.656,198.365,129.344,158.851,28.7785,21.8969,-1.75476,6.97688,206.627,343.218,215.304,1.11342,-55.2315,-167.175,-82.6488,-62.159,29.2238,-23.3075,214.698,279.461,449.816,81.8083,-40.3616,137.697,210.415,169.868,55.7049,63.3633,-48.3482,-272.67,-204.507,52.0581,16.2436,51.4711,70.6882,82.2537,127.386,150.453,180.902,150.282,101.473,69.8219,232.196,-88.0361,-95.4547,-32.8067,-4.35532,-84.4081,-24.9664,21.0014,3.77973,46.6928,99.8798,-52.1397,52.7202,98.2804,63.2553,88.1233,-3.44038,-166.262,-141.031,-132.542,-229.125,-212.441,-53.145,33.1242,-70.3274,54.189,35.7152,-134.292,15.0999,115.834,-46.3551,-18.3533,-314.21,-70.2229,139.829,172.088,-93.5026,-58.6303,81.0428,153.797,227.15,-34.2562,-18.0591,-264.625,-143.308,-12.6298,13.6724,-150.906,-47.5005,69.0057,114.237,24.1125,-18.2779,-236.477,81.5041,121.707,-33.4866,-88.4311,53.1251,-284.689,-132.376,-31.068,-145.705,-183.47,-153.197,-201.749,-86.1514,93.9252,245.801,138.636,101.603,78.9131,-69.0369,-192.589,-45.3029,-102.905,-206.447,-7.97738,-170.512,-94.2201,-316.406,-225.621,-185.322,205.174,182.829,-3.33222,-67.3374,-82.2746,-181.964,-179.948,55.6238,184.821,-122.339,-45.6232,24.7227,-36.4867,-160.551,-312.249,-127.742,58.772,115.563,-57.1624,-144.353,-145.213,-322.869,-207.368,67.5835,154.256,-14.681,-4.4682,190.369,-11.1702,-228.044,-183.742,21.6165,179.843,69.0997,-127.585,-49.9414,-94.8609,-432.805,-150.18,246.235,125.178,139.671,-68.3929,-67.0743,49.9313,-96.2013,-207.843,-134.16,-17.7919,74.0165,-52.7105,-171.926,-137.982,-141.956,-107.524,68.6018,58.174,162.207,-44.5777,132.489,250.995,145.572,70.8474,40.5014,-1.98515,-113.846,-330.604,-144.776,55.6075,-177.477,-99.2218,112.698,233.688,116.04,54.3452,139.63,94.8499,213.206,302.549,112.166,35.0588,-31.4873,-88.4163,-125.707,-124.164,43.3352,143.556,307.318,186.341,90.4506,163.263,165.754,146.833,172.917,-33.449,202.133,263.547,282.41,86.6183,-95.4029,-33.213,95.0212,101.957,137.461,106.815,85.6407,},{-234.74,-327.284,-194.179,-26.2804,-120.645,-156.182,61.2857,212.713,99.353,191.058,-93.8939,-172.341,58.9957,-75.4894,-149.677,-74.8565,-289.455,-142.375,-202.106,-268.565,45.9425,-72.9561,-307.485,-374.203,-412.415,-185.302,43.5194,-29.7971,-231.787,-245.87,-303.699,-328.325,69.8742,-344.458,-308.635,-40.1324,17.7028,50.7309,240.554,27.3255,275.326,-24.9171,111.351,-11.0408,191.852,-521.064,-266.51,-13.2618,110.622,111.731,65.7221,68.6815,145.376,156.432,314.818,175.751,158.905,49.6321,-44.7239,75.1634,119.453,321.735,254.552,-153.503,-265.915,181.621,201.207,-46.8942,102.01,186.616,224.755,-23.2588,75.5576,-65.3824,51.4445,302.43,261.563,284.981,635.101,-30.4587,-141.934,189.204,164.4,155.216,-27.5299,74.0515,118.058,29.8488,-143.145,-96.0784,45.1281,105.622,321.008,336.548,543.981,-28.7887,-338.957,-148.66,-65.9286,36.6254,-357.942,-438.329,-264.842,-271.416,-346.333,-627.956,-582.417,-453.442,13.3895,182.659,614.457,251.904,17.1364,97.0891,-109.223,-416.477,-512.718,-97.789,-15.6345,12.1747,-12.9927,-128.13,-223.293,25.9529,-118.606,-148.924,177.27,179.171,61.7743,418.906,-142.818,-394.089,-429.215,-331.375,-37.6629,-256.774,-246.033,-164.326,-249.119,-313.853,-16.7112,-201.713,-204.989,14.2435,-26.8836,271.567,-66.701,-28.5526,-129.627,147.914,-239.838,-459.754,-216.778,-173.151,-166.459,-201.719,-80.1886,-139.677,-420.888,-216.332,-106.521,-24.9144,-50.0115,22.3442,179.417,68.9114,-8.92937,-292.294,26.5342,-5.19868,-4.59765,174.818,37.2164,-285.287,-305.448,-184.294,-152.917,-272.297,68.8492,351.86,184.892,-90.6243,146.467,151.217,-62.1175,-128.8,-1.79934,271.395,-15.7887,-442.4,-308.184,-514.225,-55.3587,-177.248,205.183,192.995,121.746,161.417,89.1041,-200.299,-238.301,-63.2213,58.2444,-67.553,-329.074,-189.819,-245.012,-106.717,-242.524,-273.376,-79.9011,118.395,118.339,205.259,54.1463,-99.6289,90.1316,1.38958,7.89885,-173.447,160.484,-125.347,-336.792,68.6287,90.5179,76.8086,186.657,297.343,376.298,201.107,147.431,-8.26438,30.5081,241.067,343.501,379.923,200.839,104.428,237.082,93.1324,205.229,157.986,-103.504,30.5614,168.163,91.6408,46.0002,-154.955,-71.5197,442.024,684.226,330.578,332.126,233.716,267.786,288.109,},{-12.3268,-31.1138,-34.4007,-50.8477,-14.6956,-97.2363,46.9056,-98.3624,-160.434,-32.3258,-252.87,-159.675,-96.0028,-130.714,-71.3024,-76.4684,-9.56979,-22.5389,-159.11,-121.641,-36.3251,23.8332,-104.807,-65.9495,-171.661,-153.318,63.8115,-72.6192,-264.65,-94.4351,-77.949,-68.996,-46.8816,-235.644,-132.252,-39.5243,.182527,48.7452,-41.207,-104.069,-53.6449,-36.038,157.073,70.3052,26.7609,-313.92,-125.693,-64.84,-114.412,31.8427,60.971,71.6955,65.5401,20.0565,29.7221,-22.3803,-43.1015,-7.99172,111.037,111.679,93.5141,320.011,99.9407,-157.383,-214.844,56.6451,51.2987,1.61112,21.5165,-48.9272,75.8119,14.01,-10.3039,-21.0577,-7.33469,87.422,137.149,224.828,386.241,44.0132,-223.594,61.3793,87.6855,155.753,-18.8597,-42.0082,26.4138,-26.3935,-122.793,-155.977,-55.1795,-0.816261,159.119,243.726,379.49,4.5631,-127.362,143.059,177.427,140.297,-97.1574,-140.65,-117.615,-113.065,-295.356,-457.446,-404.411,-351.057,-68.8356,174.785,479.991,220.122,89.5067,178.572,120.255,-121.104,-237.522,-98.7121,-76.2693,-186.393,-239.42,-315.163,-264.375,-206.771,-152.444,-17.5716,320.286,157.496,90.9206,399.975,118.893,-62.894,-335.005,-272.903,-76.0095,-159.41,-228.708,-237.642,-348.914,-328.173,-115.718,38.8443,47.4078,76.6338,47.7192,381.537,297.207,194.595,-49.8508,-122.45,-188.827,-225.274,-247.213,-226.218,-127.95,-135.877,-36.9033,-33.1971,-47.6773,2.12864,-8.84799,273.924,279.72,277.291,62.9798,-3.82482,-25.7668,-103.049,-148.748,-97.9701,-33.5641,49.6411,56.1436,-38.3767,-81.9441,-46.4451,-7.32598,134.687,284.574,211.824,109.775,-19.2806,42.127,-21.267,-119.634,-102.316,2.44639,102.863,60.2217,-167.991,35.5984,-247.5,-31.4599,-69.8447,131.711,55.4328,82.3839,16.1376,-62.7599,-117.607,-133.59,-43.6702,51.2349,-18.0119,-233.369,-67.9931,-82.4917,-201.343,-102.489,-249.248,-51.96,111.155,-14.366,44.5158,21.294,15.3689,48.5217,-14.6421,9.94214,-137.931,49.903,-62.5409,-277.476,-80.8183,-102.888,-212.97,-92.85,-70.9491,182.168,85.4282,57.3431,.637575,-135.168,-100.067,-29.4001,-22.9838,-183.941,-201.836,-67.8676,-72.4149,-114.359,-164.909,-351.563,-273.491,-230.738,-192.806,-129.7,-126.158,-136.92,-20.8495,-26.8114,-149.231,-208.881,-127.497,-111.269,-60.1096,},{27.8243,26.241,24.9306,20.2395,35.0265,71.406,62.349,58.2336,57.2433,57.4726,71.4534,60.7794,39.0745,22.1961,29.2828,19.4243,28.8853,34.3378,26.9809,53.9993,29.7903,49.373,30.8111,19.6491,11.7838,15.3143,32.2446,41.6314,63.0278,52.7588,18.4227,14.752,18.3507,20.7366,46.6139,33.3259,20.7759,22.091,20.6657,10.4758,13.9974,-3.12693,31.6993,48.9764,63.5744,45.0576,20.184,7.08684,27.1286,63.21,50.88,30.9128,24.3297,26.1493,22.0389,17.3812,22.9161,21.7783,30.1558,24.0274,64.2596,45.7072,47.8728,10.8121,21.6065,51.8631,37.3252,4.00398,15.1455,23.516,4.70665,3.6221,24.4982,36.8964,15.7221,30.6609,48.9704,52.426,51.4683,27.7621,28.0924,52.5839,32.9384,11.0492,3.03302,-3.18288,10.7964,18.3915,14.6165,8.52407,14.6304,10.1149,49.1806,63.1178,56.1861,22.4128,20.1779,28.8757,24.2509,4.97285,-17.6715,-15.292,-20.4942,-14.2068,-4.63273,17.2628,-0.810884,6.62552,44.965,59.5703,46.2894,15.6126,20.4657,30.8456,25.3285,-7.1957,-6.91121,3.98404,15.021,20.1147,41.7115,36.4125,17.3662,14.1313,36.2393,47.3669,58.2024,18.4074,19.2157,44.0928,53.2352,34.0912,29.586,30.6688,42.9565,39.7341,42.5454,38.9909,20.6375,25.3734,39.9426,36.9569,43.8518,11.9222,17.0283,39.137,43.3026,33.2077,18.1035,20.5656,38.6672,41.5755,35.1989,22.1792,35.9819,36.4763,50.6781,47.2047,26.1703,14.7783,12.1867,34.5497,36.0587,17.1459,1.90948,20.0917,28.1222,23.7876,25.6842,43.6909,18.5231,23.1393,37.6345,32.2667,30.5012,9.19909,14.2396,39.5495,33.6865,11.482,10.5787,4.11974,16.1179,11.2813,33.4368,26.0867,19.3176,25.5413,41.4776,26.6929,26.4155,-2.41532,24.836,43.1488,41.8829,15.9773,22.6818,15.4578,9.64599,35.101,37.5509,30.6881,13.1363,16.0323,26.353,24.6659,21.9976,7.26135,9.28235,15.9554,26.2547,36.9783,23.7573,35.5525,33.0344,52.7008,38.2202,8.72586,17.4431,16.115,40.6303,6.17601,7.63902,5.81527,4.60317,24.5947,57.5374,62.68,59.7448,37.0182,22.3207,17.0547,9.06203,36.2644,47.5072,30.4248,30.87,22.0742,14.3846,9.69684,-0.709995,-6.86957,26.0852,49.8859,68.7907,55.4045,39.3929,30.426,26.9724,30.9684,37.3221,17.0618,8.49628,6.45269,3.9566,12.9284,},{23.6568,25.6676,26.0938,22.7982,38.399,75.5738,60.7778,51.4934,42.9355,39.591,54.4632,50.5778,35.673,25.1954,34.483,25.4071,24.6773,38.8735,31.0619,54.0576,31.1917,51.3395,33.3443,17.5583,-6.72044,-1.74594,18.5408,38.1948,67.2253,58.8968,23.1389,17.5762,18.771,25.5483,49.9343,36.4072,21.8058,21.9936,14.2903,-0.942481,1.03474,-15.0782,24.0074,36.0886,52.705,38.4975,17.5124,8.16016,28.523,67.48,52.6825,35.6635,19.6682,11.9285,10.3036,3.84909,13.3149,17.4716,22.3697,9.01412,52.6466,37.1025,43.0167,8.6193,23.519,58.632,41.6803,-0.612799,5.47034,11.7516,-13.6752,-11.7212,20.6407,30.2082,-1.41989,13.7247,40.4685,45.3469,47.7148,26.134,31.7945,58.7958,34.0101,5.28194,-14.5058,-28.2093,-0.217186,24.5921,7.31752,-2.96466,-2.32482,-2.84391,41.1594,60.105,54.8063,21.5024,19.9209,28.9793,21.237,-19.1294,-42.451,-21.9272,-24.8735,-10.9185,-26.0252,-2.21638,-21.2929,1.6584,48.0015,58.8859,46.1718,16.5649,21.5102,27.6052,7.88263,-40.3585,-33.7066,-3.80683,14.737,19.5354,27.4408,11.6217,-5.45178,13.6486,38.3167,50.8395,64.2367,20.1038,19.1869,31.811,23.8182,2.36416,13.6378,25.2491,37.7929,31.0445,17.8305,19.7335,6.1327,17.2283,35.1642,36.8572,42.5581,7.48517,11.9842,13.6263,11.1638,18.9803,13.42,17.6226,26.8157,25.3201,16.3317,4.17579,28.0891,29.2377,45.6862,39.3546,18.6513,17.2695,-6.92752,-0.681213,5.19477,3.24239,-3.82809,14.3044,15.9751,7.5218,10.0931,28.9574,9.05525,21.7204,27.3489,20.3798,22.9625,8.65573,-3.73359,10.383,9.55835,1.81354,-0.382079,-10.5214,-0.751264,-3.46386,12.1285,1.48921,9.45267,27.8899,37.1543,16.6699,19.2592,-11.705,8.98682,20.9417,14.8036,-1.58884,3.92092,.974807,-5.49817,18.0853,14.0572,11.5357,-6.50238,-6.49069,11.6415,8.06563,13.1765,5.93836,7.33631,17.4782,29.632,31.6776,15.5902,28.717,34.2331,54.463,26.4646,-8.85732,-0.630108,5.00627,43.091,8.27932,6.19375,4.6616,10.3236,27.1633,61.4717,64.9389,57.2815,38.0354,24.1549,16.6787,-6.77726,15.9117,41.1525,27.6226,30.01,19.2298,14.8444,11.9183,9.95294,1.37751,24.0944,47.5776,73.5038,52.4031,35.0458,23.0025,4.55025,19.1134,42.8958,20.3823,10.8888,6.46456,6.93905,16.2883,},{26.5203,26.7064,25.8478,22.7935,37.4099,72.3972,63.7775,58.3056,53.3531,50.2909,58.4901,51.7401,41.3223,31.7614,37.9004,28.6631,28.1489,35.0811,29.8061,54.8597,36.992,53.2956,37.5883,27.3325,14.4824,11.1661,27.3674,45.6462,66.0584,60.2009,26.4572,21.2418,20.5039,27.728,49.8476,38.9353,26.5921,29.0156,30.3294,18.0696,9.41652,-4.91602,35.6013,50.0684,62.9063,45.1092,22.4317,8.53195,27.7146,61.1924,53.3387,42.0932,33.0563,32.3573,23.9265,12.1179,16.9349,25.4827,36.8449,30.184,63.7297,42.6195,41.5865,10.4273,20.5509,54.5858,43.1825,12.7266,19.1032,26.6778,-4.26707,-5.51787,26.3153,41.9236,22.3722,33.0798,46.6237,47.4566,45.0073,24.9371,29.3368,53.899,37.3668,17.3822,-0.332808,-15.458,3.31731,26.2093,24.0591,20.1033,18.5474,15.8926,46.325,55.5886,48.9859,20.3646,17.359,28.8304,23.834,-10.0488,-28.1181,-6.37504,-8.19585,.716248,-1.33809,17.0847,-3.30429,13.7382,45.0206,52.89,42.6234,14.3857,19.1215,30.0187,20.3702,-19.0192,-16.5126,9.7069,19.3963,27.0088,34.8169,31.0369,7.98485,18.2945,37.0414,45.0342,56.8254,17.2348,17.9629,35.27,31.8581,13.7378,19.8065,29.6205,44.5605,40.4764,33.4449,29.9109,15.2238,22.4991,39.061,38.2637,44.0524,11.2784,12.5289,20.8102,22.6722,25.4999,17.7474,26.1959,40.7995,40.7678,26.0285,14.1151,29.7503,34.7421,50.2175,45.2447,25.924,13.7388,-3.20326,14.1811,20.2957,16.1949,5.11005,26.4202,29.5667,22.8328,14.7373,29.9291,15.0888,25.6004,36.8289,29.547,26.4333,8.81609,-1.67103,19.525,24.6811,11.9565,12.7252,9.80946,16.4927,8.05146,16.916,10.5158,16.4213,31.3815,42.2736,25.3935,23.5761,-8.45119,9.11345,24.2219,21.8763,5.59274,11.7011,10.1815,3.78965,18.9833,22.5834,17.9198,3.60232,8.20716,18.6347,15.0576,15.8917,6.11454,9.35759,16.7305,28.7859,37.9577,25.0254,37.8122,35.1112,48.6231,30.0999,3.3666,16.3415,20.0748,47.3697,11.7725,9.79074,6.88364,12.743,27.1675,57.9429,62.9885,61.6865,42.5905,30.7158,25.9562,9.22605,31.1417,53.3513,39.448,37.7326,24.8137,19.4434,14.4144,7.51534,3.2353,27.4735,47.7891,67.4581,55.3492,40.2641,29.7638,18.1029,28.7964,46.6724,23.9615,16.5227,11.0345,9.80198,16.5703,},{23.7182,21.984,21.6367,18.1568,34.6243,74.758,66.1576,60.6051,54.4588,51.7341,63.155,54.7103,36.0909,22.9672,29.8159,20.8604,24.5338,31.2429,26.1657,54.1272,35.7769,53.0332,34.196,19.8591,8.33254,12.5581,30.6288,43.2624,63.8386,54.1472,17.2317,12.8578,17.5371,24.2266,51.0426,40.3119,26.7827,28.1117,26.3819,13.3559,13.9582,-3.15106,32.6662,48.8059,64.8873,45.8674,19.4861,6.06342,29.5307,66.5089,56.3427,40.7855,31.7569,29.8659,22.623,16.5665,22.8181,22.8036,31.0719,24.5998,64.609,46.7251,47.4674,10.22,24.681,58.4313,44.0766,9.14504,16.0321,23.882,.81104,-0.522153,24.951,37.6637,14.7665,28.6425,50.4484,52.8106,51.4241,27.6644,33.5018,58.4379,38.6266,13.9824,-2.92045,-11.3898,6.97259,22.4626,18.4327,11.5798,12.4118,10.8986,50.7793,62.3291,56.3635,23.1952,21.8597,31.4612,25.9918,-6.3724,-28.7776,-15.1443,-18.3057,-8.05571,-5.83489,14.8048,-3.67583,9.54265,47.8241,60.8718,46.8118,15.98,20.91,32.938,21.663,-17.8243,-18.225,1.60367,14.5968,20.2327,35.2756,31.4708,11.4961,17.1471,38.5708,50.0582,59.6181,18.7941,19.2963,40.8358,42.5891,22.2589,22.7952,31.03,46.4446,40.7372,40.4409,38.3275,17.9177,22.7779,40.2165,38.6562,46.3069,12.0521,15.142,29.6332,31.2338,27.0693,16.8218,24.4215,38.9816,40.6313,32.411,20.5636,34.5542,35.7738,50.4943,44.8935,26.1326,15.4868,3.15788,21.7837,25.7337,14.6395,1.54973,23.3939,26.9987,21.6206,22.9319,41.4609,18.4418,25.1026,36.6616,29.3583,27.2388,8.80486,5.17925,27.3413,25.6048,9.01237,7.64417,2.73432,14.0705,8.8985,27.7163,20.2603,19.524,28.1673,39.6775,21.5462,21.6541,-7.2329,16.797,31.2884,30.106,9.64017,13.4756,11.3448,7.01477,29.8644,32.8394,25.3465,8.93946,11.4654,20.5306,16.5078,16.0655,6.06586,6.02168,13.6069,26.2126,34.6773,23.786,38.8041,37.8388,54.6734,37.8225,7.14608,13.5011,14.7811,43.1189,6.246,7.13902,6.3815,8.91631,26.3786,58.15,63.5689,62.2886,41.6692,27.6833,20.932,9.71125,33.6016,50.2968,35.901,35.7335,24.3021,18.919,14.1981,5.32711,.41424,27.5897,49.8476,69.4972,57.1261,41.2455,30.0826,23.9943,33.9845,45.1718,23.7032,15.8455,11.775,10.6319,17.665,},{-5.39962,-19.1176,-37.0303,-49.3918,-28.4647,-109.447,-32.3459,-115.894,-139.422,-5.60871,-180.379,-92.6305,-78.4312,-108.225,-72.5896,-77.1561,-4.73172,-21.8739,-153.406,-127.096,-79.5567,11.259,-72.4328,-45.9291,-141.298,-141.082,28.2252,-117.947,-248.207,-70.3496,-60.9077,-63.0257,-38.3993,-217.555,-150.74,-42.6846,18.668,43.2268,-79.2135,-132.602,-47.3852,-15.332,174.553,69.2111,-20.193,-286.719,-114.475,-56.2216,-103.871,19.938,43.6289,54.0715,24.6004,-33.1063,20.9635,-35.4498,-56.6072,-18.5355,103.96,109.307,91.2232,269.984,101.55,-156.089,-200.976,56.1846,54.2916,-31.3541,-15.4718,-66.1664,85.4214,.58765,-24.5288,-30.4308,2.63468,101.632,133.902,232.72,360.061,31.7197,-219.222,78.3094,58.9961,134.784,-24.7422,-35.5935,23.4833,-63.4568,-152.057,-162.43,-50.8191,-1.36912,155.53,259.067,365.574,-16.8171,-106.823,155.801,158.851,148.108,-68.3814,-131.473,-117.793,-128.723,-279.36,-384.462,-307.514,-284.526,-3.18759,216.33,456.135,187.461,108.246,182.148,117.694,-92.9525,-218.192,-137.58,-116.16,-219.624,-239.524,-311.452,-235.793,-192.622,-126.751,23.1898,361.059,135.518,102.108,398.039,123.42,-69.1425,-340.597,-287.007,-88.7572,-174.209,-226.518,-219.883,-318.305,-340.32,-101.511,47.3825,76.7774,116.166,65.0476,384.798,267.614,191.486,-46.3426,-138.135,-179.613,-230.194,-238.094,-215.065,-109.071,-123.846,-40.7548,-36.9624,-38.6999,44.5371,28.3878,275.293,246.947,256.506,62.2641,-9.06201,-22.5937,-112.235,-156.127,-105.121,-14.2432,65.0779,47.6693,-54.2444,-59.4586,-19.7898,35.6569,172.95,256.742,200.104,120.158,-13.4293,39.5523,-39.8487,-131.427,-99.414,8.07178,109.384,50.9404,-161.814,32.0364,-170.12,-17.5234,-50.9904,138.444,42.3755,109.604,25.0875,-58.4102,-141.517,-147.778,-35.1111,59.2931,-23.5344,-217.524,-79.1867,-50.9656,-149.009,-93.7679,-216.75,-22.3353,97.7168,-32.748,46.0725,7.25529,-2.80671,51.0838,-2.69492,8.99,-137.499,34.3017,-43.3519,-228.858,-78.311,-104.44,-219.036,-87.0656,-65.7099,166.353,61.7086,46.2288,-12.7159,-138.389,-93.8463,-6.74949,-39.1512,-183.869,-166.915,-64.88,-71.1298,-119.97,-168.363,-340.578,-259.019,-204.315,-164.329,-139.831,-144.971,-149.521,-31.495,-41.0113,-161.536,-188.638,-128.704,-117.735,-63.3304,},{32.3279,25.8242,27.6908,25.1506,42.886,84.9478,77.0428,71.0114,62.3584,59.184,72.5702,63.9944,44.3125,32.5237,38.507,25.3129,34.5869,35.8416,32.9777,64.9914,41.7024,57.6145,38.7774,23.0686,12.5835,18.6966,37.6574,55.0825,74.559,66.5219,26.0056,16.2477,20.6934,24.7893,54.1402,41.0201,28.4808,30.9855,32.9196,17.1944,20.2764,6.26174,46.5108,66.1665,84.0939,63.3646,26.2439,4.93825,27.3847,64.4184,55.8691,38.8373,33.007,32.1183,22.547,18.8548,24.9647,27.355,44.5248,42.8236,80.948,55.6021,52.0426,10.8824,20.5635,57.4421,43.3988,7.10533,13.6499,19.6243,2.67413,-1.11993,27.62,48.3771,33.1536,40.2499,55.4558,59.0711,57.5752,28.6762,31.7728,57.3199,38.7516,10.1583,-9.4027,-14.8255,3.98803,20.9578,30.9874,31.1211,24.1105,15.5471,53.582,67.1441,60.189,23.7697,19.6639,30.5858,25.8911,-15.4833,-37.8787,-19.7853,-21.3499,-8.82175,11.349,27.0493,-2.45169,7.39026,47.3679,65.3348,49.5473,16.9391,20.8443,34.293,21.4781,-17.8978,-23.9772,-6.16875,5.03385,21.9943,39.5102,36.4248,7.825,11.812,33.1728,50.7145,61.9002,19.1039,20.1779,43.6549,40.7705,20.0926,19.0924,29.2711,57.3338,57.7156,55.8615,42.6368,14.6623,14.3727,32.2346,33.3442,45.1972,11.5957,15.7588,30.6887,28.912,21.4701,11.7923,25.266,53.3612,54.7502,39.88,26.9059,33.8684,29.876,38.9873,35.7693,20.5828,12.4969,2.83804,21.1911,23.4226,12.8101,.922705,34.5963,43.4966,39.1248,30.5389,47.6609,19.8532,21.7352,28.829,20.9632,18.215,.983914,4.64959,25.3191,22.2295,8.17864,14.8714,19.0754,28.2309,14.715,34.9025,27.2191,20.204,26.5446,33.1141,12.067,10.4763,-16.3889,15.8069,29.5394,29.5663,11.3685,27.2101,29.6827,17.2362,32.7046,37.7616,29.8176,9.66519,9.87007,13.6686,8.73021,9.60789,-1.0782,-3.44971,5.40303,22.8755,40.37,39.9286,57.0514,44.7577,57.6116,42.1314,8.3429,8.3567,7.08716,38.8996,-1.65172,2.35894,5.33468,2.80179,18.234,60.7148,73.8458,76.2658,45.9757,29.5935,22.993,13.4434,28.9933,45.4642,31.9608,32.2506,22.6482,20.2288,17.2155,-0.165724,-3.89185,30.8863,58.2661,77.8642,58.27,39.5421,27.6608,24.0917,34.3252,42.102,23.3104,16.657,14.5661,14.8073,18.9101,},{23.5718,-51.8852,-20.4572,-10.8064,10.1975,74.7854,234.327,173.673,122.084,-70.779,-164.614,-218.278,-106.977,23.148,-23.2208,-31.6296,18.8119,-181.83,-90.8977,92.9531,114.099,-21.2616,-95.13,-178.379,-98.9489,35.3228,68.721,33.0622,-55.0924,-36.6564,-93.2711,-57.0872,-16.5389,-52.0714,170.203,134.336,15.2156,-13.9145,-126.276,-85.2107,-86.5789,9.07773,15.2398,171.614,200.013,248.414,44.372,-51.3863,-24.779,-48.2093,99.6828,122.623,217.022,77.8517,-184.978,-136.089,28.3496,17.466,102.413,215.004,122.584,156.043,133.363,87.6424,73.7683,83.4964,124.521,225.246,9.72202,-14.596,-122.27,-47.3917,-21.9762,39.8724,90.9383,-89.3976,66.1134,119.375,44.1699,52.4504,97.6595,-52.8463,66.7113,58.6562,-111.202,-136.799,-211.778,-109.701,16.8937,110.099,-16.7326,-62.4784,78.0179,33.4676,-1.87642,75.8983,47.8557,-136.774,-99.7738,-321.568,-129.978,85.0704,98.2139,10.3523,13.2382,-128.15,-95.0458,-22.7371,-86.0966,16.1071,-68.9768,-29.0182,-72.5491,-119.621,-136.119,-43.6502,16.7581,106.872,-70.784,-127.797,-364.521,-24.7491,15.5226,-110.422,-103.762,-66.8335,-180.875,-46.0443,-74.9828,-202.03,-118.409,-46.3571,-183.216,-120.586,-79.5131,59.5489,122.77,83.7347,35.1763,-27.7393,-79.6331,-49.6301,-98.8537,-89.4096,-63.8744,-219.976,-87.6946,-209.312,-170.916,-114.658,24.5952,53.9935,-46.1765,-13.7792,-60.8196,-41.2961,-74.1653,-16.391,-16.3166,-89.8824,-72.8787,-3.57213,-11.2804,-49.7861,-153.627,-8.2547,-51.4515,15.4589,-31.7215,-68.9358,-84.7055,-124.915,-60.6323,33.2968,-52.1442,-15.8559,-54.9466,21.2769,34.6187,-64.8406,-41.8876,49.3655,11.8809,-18.181,-84.4644,-20.606,-21.8615,-227.083,-63.681,77.6561,-116.915,3.76496,-80.5896,-75.0874,5.08467,-31.9533,-70.6762,-49.3174,-19.8353,23.1719,-3.91781,-163.029,1.97183,81.1025,-50.7329,-52.7299,-114.193,9.05981,-96.306,-15.5935,72.7757,85.9272,229.109,136.313,24.2071,-81.6348,-163.125,-52.228,185.704,1.69988,-60.0173,-132.265,68.5471,91.6694,11.6592,5.12177,-42.9843,36.5043,128.315,75.1619,96.9639,92.8377,141.433,4.46105,-40.7655,-31.9014,19.5826,148.778,173.957,103.36,85.3603,112.706,53.1539,38.4774,-167.513,-10.2785,59.3977,99.1425,48.7251,-48.7915,-111.9,29.4313,172.765,169.382,170.871,100.113,},{21.3862,15.1538,7.09841,5.15529,24.4375,70.0223,52.1324,42.0486,42.7646,28.4884,41.6226,28.7085,20.9907,18.3685,26.4267,20.4479,21.4244,16.7519,16.6831,53.4121,31.1264,40.8786,29.3232,24.3669,-14.537,-17.6917,-2.13232,35.4931,55.5079,53.6284,21.9353,9.61498,11.514,20.1637,48.1957,34.0745,21.5999,26.2786,32.1513,17.9697,-3.46629,-13.505,36.8459,53.4611,60.7368,49.8577,21.542,3.57484,25.0507,63.4108,51.9057,20.8485,23.9565,23.416,13.3307,-8.71795,6.5177,19.519,37.9259,24.3521,45.3115,47.6251,48.4356,3.62932,21.9986,48.465,32.3226,-1.4572,5.83019,2.12091,-26.9918,-19.3229,11.7496,29.8146,.319633,16.7276,36.5628,55.811,59.4467,29.3752,33.7575,48.2709,36.3687,-3.08556,-27.9053,-47.9567,-20.8286,14.6445,3.15833,-1.19939,-5.87185,-10.2392,35.634,67.9836,67.1478,27.9568,20.7717,25.4816,24.0488,-45.2354,-78.4853,-40.0976,-31.783,-18.8396,-50.8852,-38.5381,-58.5635,-8.74258,49.3418,63.9697,55.1806,22.1302,19.6672,27.5242,.0496318,-49.1911,-57.2691,-2.08361,16.3925,25.9789,1.67164,-21.2248,-20.2044,-3.61086,21.9734,55.9098,66.2957,25.0574,18.359,18.3291,-3.45355,-17.6597,9.54269,38.8741,59.345,62.6887,8.01267,-0.329517,9.79657,1.49786,15.2271,12.5625,20.7261,-5.07157,5.18795,-24.1321,-18.1904,20.0521,16.6228,14.8509,37.3223,31.8719,2.41075,-10.2955,11.0456,28.8488,26.3589,14.7603,-3.82126,5.63272,-30.3339,-22.5845,-8.45579,.311231,-15.3702,23.7396,20.9699,11.3031,-22.7654,-6.57297,-4.8137,25.2892,24.0177,9.61259,22.8807,-7.38358,-21.8532,5.72456,12.4181,2.19853,-0.177291,5.72335,2.46297,-19.5384,-24.1939,-29.3074,-9.79288,12.7268,37.1043,17.0191,19.9418,-37.7586,-6.05463,14.5946,1.27888,-29.2802,-0.422412,-4.93246,-22.3336,-15.4449,-25.8713,-25.7598,-46.5727,-51.7368,-17.6029,-18.3236,-15.546,-1.80007,-2.20635,17.0982,18.8963,29.5565,30.4255,48.572,43.2079,49.5484,-11.1343,-49.758,-20.1733,-10.737,24.6507,-5.89284,-0.424382,8.1509,-3.17587,13.5451,62.7206,62.9527,58.2768,30.8136,18.9356,.207294,-50.882,-21.3636,21.7283,22.3638,27.1238,16.6116,19.964,14.867,-16.661,-12.3149,31.4217,56.3026,87.7572,58.4858,44.291,22.2069,-23.9034,-20.3702,25.3093,21.3688,14.5189,2.64707,6.2009,11.596,},{-12.6924,-30.6112,-43.083,-47.124,-11.4499,-91.3323,101.159,-70.5058,-141.865,-39.9994,-259.062,-169.638,-70.3589,-124.315,-79.5114,-85.0262,-8.31655,-27.7823,-157.843,-89.3773,14.5316,52.6743,-95.4565,-49.5464,-147.456,-158.611,68.4587,-69.1264,-251.269,-100.885,-65.8146,-65.2362,-33.5425,-231.32,-100.708,-11.7187,18.5604,41.9262,-59.4868,-97.7322,-51.5397,-52.0562,117.59,48.8032,42.1256,-296.938,-105.164,-46.4314,-110.781,51.983,78.3445,70.6117,50.3446,-9.25693,-9.13604,-16.5675,-49.4387,-28.087,58.0293,83.2242,57.0068,351.798,128.453,-129.616,-212.544,79.6417,67.1741,27.1177,-3.97204,-74.315,57.4716,32.0331,-12.2345,-36.822,-23.015,54.0682,105.856,191.261,401.269,41.5465,-233.913,70.7799,104.481,143.149,-29.251,-43.618,18.6159,-5.48669,-92.2791,-138.074,-58.4793,-23.7099,122.651,202.402,348.341,6.32857,-118.215,158.24,190.662,148.154,-93.4277,-132.326,-114.354,-88.7138,-239.451,-442.186,-409.548,-383.201,-133.773,115.301,446.249,208.543,86.0292,184.883,133.791,-92.8759,-204.564,-90.9935,-83.6895,-148.332,-197.126,-278.534,-258.093,-226.283,-167.717,-39.0348,261.317,144.754,90.8781,397.233,125.058,-43.1218,-305.749,-264.774,-77.3522,-139.397,-197.631,-223.585,-356.192,-358.315,-115.866,33.7634,46.3809,52.7674,54.3852,387.477,311.168,188.012,-54.9784,-113.443,-189.644,-194.738,-225.446,-223.279,-161.914,-164.757,-54.1192,-26.296,-35.7653,-9.01698,5.01991,285.979,290.507,269.523,66.5688,-11.1049,-28.9827,-82.5228,-139.328,-117.548,-65.2957,-3.19588,36.3845,-28.4033,-70.2988,-46.4811,2.86583,138.705,279.084,219.65,119.17,-12.1183,36.748,2.74893,-113.316,-106.359,-32.6943,52.084,50.9663,-144.389,68.0001,-224.823,-33.2649,-58.9554,150.278,89.6291,96.4667,21.1932,-57.2589,-90.8997,-115.203,-67.9477,14.7764,-10.1367,-219.459,-20.0511,-56.4364,-182.732,-104.805,-246.05,-48.8336,127.849,8.21005,50.7013,2.31646,18.6535,39.4913,-26.4276,5.36746,-130.136,64.3355,-48.1971,-257.777,-63.8383,-104.37,-233.795,-132.696,-95.7452,164.576,78.5001,53.0349,30.6992,-79.2163,-72.8742,-26.0142,-16.8324,-190.915,-199.1,-64.0464,-66.2719,-120.912,-164.072,-349.77,-270.51,-227.529,-179.208,-107.398,-78.7468,-93.4362,-22.3796,-26.4261,-135.516,-226.62,-123.853,-110.009,-63.7583,},{273.897,402.356,123.037,33.6386,184.16,78.4796,95.4573,16.6343,196.872,25.871,251.521,-425.574,-334.433,-226.827,3.24929,-13.146,232.491,-59.4633,256.997,513.373,91.6894,108.416,336.784,107.694,142.362,327.567,-300.325,-261.363,-167.227,-196.38,284.801,243.85,-190.52,168.796,381.386,101.466,223.57,69.6672,99.4953,-87.0521,40.3296,342.037,232.64,235.219,102.176,644.42,226.188,102.702,56.2942,86.0593,67.6696,150.026,153.816,-271.809,-473.745,-469.726,84.4795,222.9,-7.50404,-184.103,89.7365,363.601,59.5866,174.613,603.603,18.9926,87.0204,459.941,17.3156,-460.94,-241.262,-308.181,-411.645,88.8255,-271.676,24.4321,160.649,87.1743,12.4873,-18.8805,393.526,-82.5493,505.174,66.9695,-64.4924,-144.939,-444.801,-552.963,-403.332,-100.015,44.9777,-107.176,-212.667,140.671,-52.3456,-19.0194,469.37,21.4413,29.8772,-221.718,157.059,45.909,102.393,-572.317,-494.316,77.3699,-36.5294,-89.3954,-82.2416,-138.868,-273.055,200.609,107.542,-163.795,-87.3148,374.715,66.7815,382.933,182.269,-231.822,-561.359,-175.49,189.948,-225.739,-368.458,165.004,-251.213,234.502,39.6732,-620.977,-221.693,97.9446,549.515,505.993,146.509,273.548,-26.1936,-151.755,287.336,-19.5694,-678.89,-175.987,-314.393,-217.675,153.036,-643.512,-122.871,668.325,441.226,-148.81,345.961,415.555,109.248,218.263,-195.145,-493.809,-445.323,-49.3868,370.09,-42.6161,44.7397,-84.7689,49.8313,31.7848,-241.706,131.52,469.276,534.582,41.6992,254.459,292.051,-306.602,-376.783,160.137,323.784,-32.7358,120.341,227.858,-123.997,-263.966,-151.239,-22.9279,9.33041,-240.107,-317.737,125.19,325.991,-494.043,-103.799,261.857,-27.0924,2.12734,201.066,209.757,-212.194,-166.293,123.122,-123.619,-1.99995,-85.1327,-160.366,72.9175,199.26,-156.822,215.25,66.8886,-626.724,295.242,10.6611,421.747,36.0407,-11.186,247.824,-33.3285,290.977,61.4953,-497.987,-174.768,117.731,-183.176,-510.66,-602.33,-70.8101,154.118,-283.717,-464.894,-88.5229,104.268,146.999,488.014,281.415,-141.701,-341.439,-596.756,-620.882,-641.71,-731.953,-280.513,42.141,102.086,-219.48,-508.205,-174.601,-66.3879,331.754,96.5573,90.0127,-223.878,-554.204,-879.486,-1109.75,-836.028,-632.504,-618.493,-373.973,-294.838,},{23.9738,22.7356,14.8864,4.511,23.2253,67.2726,58.5536,54.7819,54.1498,49.7765,69.1568,59.4419,35.1197,16.0647,30.0206,19.8315,24.8996,25.996,11.9814,49.4101,28.3084,50.3117,29.4796,17.7346,12.1193,8.14975,23.7536,33.9529,58.3827,50.2048,11.5865,12.4113,9.39269,16.1121,46.0263,35.706,22.3803,23.8985,28.9172,19.5904,21.7211,-3.56058,30.3394,46.541,59.6647,37.3678,11.777,-1.40787,25.9572,65.0305,52.8778,42.399,35.7526,39.8815,36.3004,31.1612,35.1509,26.8828,34.5301,17.7853,59.449,40.5795,41.8557,1.86515,21.109,52.6148,39.6156,9.18384,19.9115,34.8723,14.4895,10.7568,32.0659,44.9686,12.3992,29.5567,43.5769,47.085,47.2706,28.6109,31.3348,58.4114,40.1816,16.5678,4.52013,3.75828,16.4457,22.034,21.6779,7.3486,14.4984,4.8269,43.3257,60.4636,60.1521,23.3536,19.4257,31.529,28.4693,7.49432,-19.4852,-14.5225,-17.403,-11.234,-5.09934,18.4526,-4.46444,.642849,37.9396,64.8052,48.7162,16.875,22.2019,33.9175,27.944,-8.12155,-9.67071,7.05451,18.5806,20.5511,44.0985,35.667,13.0167,7.24607,42.1472,53.4706,63.0605,19.5847,21.4159,49.6746,57.3646,35.3701,30.8093,37.1713,46.9875,40.8749,44.053,35.9187,15.0083,25.1957,49.6383,43.9028,49.0313,11.1267,18.5974,44.3382,49.2182,34.2873,16.2104,18.2055,37.0512,40.8145,34.3759,17.1423,31.7002,38.8606,58.9683,52.1879,31.0775,13.8637,13.2768,38.5507,39.8192,17.3053,-2.93555,21.9257,29.7866,25.5579,23.711,46.0318,17.685,25.6336,42.6467,37.1076,36.5328,7.86116,14.6323,42.0293,35.7861,6.74643,5.55357,1.72913,13.9075,7.06034,36.3657,32.8479,25.0871,28.0998,44.1554,26.6656,28.5022,-9.2005,24.7469,45.3453,40.9516,11.1419,15.012,10.3656,6.89439,37.669,44.9778,36.405,17.4618,19.446,28.3857,19.3095,18.4847,1.25943,4.46519,6.74102,17.6136,29.0501,13.4398,33.6162,36.0893,57.8165,43.4672,13.7658,20.9899,17.6491,43.077,1.70047,1.51377,.0136167,-2.01137,18.684,53.8963,58.9815,59.0713,32.794,17.8066,10.333,6.5946,42.7722,54.6626,37.8425,38.2283,25.4334,16.156,10.6099,-7.79494,-14.8479,21.3101,45.5744,66.8232,53.2427,34.7138,23.0607,24.0596,33.0128,39.4625,20.2591,9.95137,4.09176,.620638,9.75618,},{-57.2722,-54.0964,-168.509,-258.811,-309.622,-70.36,-146.909,-180.969,-32.9308,88.4106,177.754,-205.35,-313.672,-83.4642,-114.898,5.67599,-103.241,-313.478,-292.08,-286.005,-235.853,-378.527,-288.873,-137.392,27.6404,54.8747,32.5025,-21.6891,-358.015,-299.417,-81.1925,151.781,-268.5,-219.033,-279.845,-21.1015,-201.016,-167.466,-81.5496,-163.171,-261.522,-74.2697,-195.946,-8.76036,-429.253,339.974,-37.7227,95.0863,-52.073,-421.872,-148.922,77.4551,187.577,254.933,106.96,-299.671,-133.123,115.025,88.992,-48.111,-7.31429,-269.556,-192.773,-29.712,315.952,-184.241,124.442,455.982,383.805,54.2884,-198.838,-239.161,-217.938,140.82,40.7331,176.093,-17.2012,82.188,-438.896,-10.0783,218.784,-145.287,264.985,506.663,335.921,98.4187,-218.192,-446.628,-147.125,130.437,287.611,136.718,53.4786,224.232,-215.779,-103.052,284.565,175.702,340.191,211.971,330.888,203.071,127.302,-264.19,-189.07,179.871,194.646,657.672,241.753,307.723,-273.966,-7.57511,35.9964,101.285,314.805,351.963,494.333,297.751,-188.123,-453.831,-385.757,-112.852,125.352,102.677,135.562,448.78,111.046,93.8414,-2.69894,-223.341,330.591,446.012,553.336,449.69,-84.7391,-10.0608,48.8365,68.2214,291.782,563.465,30.4317,436.71,73.3852,-54.0297,26.5189,-148.842,307.834,291.381,362.489,37.4343,176.896,225.799,172.897,141.585,251.196,509.879,239.907,186.477,391.889,-258.083,-24.7056,101.279,214.13,181.568,-94.2434,117.87,17.4963,52.1055,23.5201,181.425,8.55555,148.064,-36.6238,232.492,298.591,-197.809,-101.107,158.399,244.31,-126.697,-202.846,-24.8862,-154.696,-365.109,41.557,138.28,90.5092,-248.634,-231.159,185.197,-112.402,-122.481,-197.914,10.5552,-267.32,-335.565,-204.166,-290.614,-161.807,-194.743,87.1203,-15.8137,18.6204,-90.4223,-10.8347,-250.068,-227.176,-68.9135,-169.894,-46.9079,.844019,-110.525,141.355,-57.6725,9.60837,-25.0225,-228.26,-132.614,-154.906,-9.34269,-480.528,-63.0041,161.291,77.8694,-260.987,-245.614,-113.005,-21.8711,-185.381,106.54,134.251,-46.4214,-220.974,-453.527,-468.549,-344.814,-132.638,-49.0285,2.01083,38.0548,-109.414,-165.728,4.89702,-161.929,-160.875,213.589,226.14,4.55403,-128.311,-317.339,-762.863,-428.559,-82.3166,-188.354,-129.712,-127.798,},{27.1466,21.7821,23.582,19.5204,35.824,76.3113,72.0005,70.4963,71.7141,70.7008,77.1172,60.5837,37.705,20.1434,25.9266,16.1405,28.1017,30.5778,28.6014,56.9742,35.4736,48.1698,29.2084,20.8537,16.4641,24.1267,42.2943,54.5535,66.7337,52.703,16.8208,10.4429,13.8986,17.1716,46.4276,37.4591,23.0972,24.7514,30.9243,21.4195,20.2049,6.79531,44.021,64.6719,84.3441,59.4187,19.0318,1.20226,21.1268,58.0098,50.3706,31.585,29.563,35.6145,27.3246,20.1217,26.0092,28.0072,42.3591,42.4263,78.6602,56.0119,48.7098,7.39498,21.9278,52.7844,39.9908,10.5174,18.2281,24.5827,8.41552,6.33333,26.74,45.8245,28.9106,41.0019,57.8855,59.0476,55.6709,28.3772,29.2104,53.7295,37.7031,13.3923,4.01784,-1.0443,7.70356,14.5398,21.2196,20.2357,21.4594,15.4868,57.3513,65.2643,59.2046,24.8293,21.6743,32.517,28.0599,4.33704,-17.9891,-14.7644,-18.1277,-13.6574,2.43245,19.7752,.417116,6.95804,46.7903,64.3953,49.3807,18.1694,21.476,38.8807,36.8648,5.26071,-4.40546,6.22785,10.8158,20.5942,38.2387,42.3676,22.2165,16.0461,33.1958,48.8303,58.2665,20.262,20.5778,49.5831,61.8399,41.1106,31.6522,31.833,48.6394,48.0362,49.9531,44.1495,26.9373,26.9859,41.0303,35.8994,44.2163,10.6802,18.2821,43.1177,50.4939,39.2543,19.7969,22.0687,45.503,48.3581,36.0829,27.2358,38.1207,39.3234,49.1441,46.9287,27.6858,10.43,13.193,43.6707,46.5756,24.8729,4.14227,28.0028,34.1565,32.3446,27.96,47.046,21.9682,25.0397,42.5026,36.1589,32.3365,3.45909,15.4016,47.8694,44.1572,17.1091,17.0485,16.577,29.3927,18.1495,35.9518,29.7762,20.5715,22.8468,42.8682,30.1313,27.7847,-7.50451,26.6714,46.1795,47.3152,17.93,29.8134,27.4502,17.4787,36.389,37.7867,26.2347,13.8668,18.2726,27.2564,26.2517,16.6069,5.04317,6.90527,13.3087,22.0427,38.2284,40.4244,51.7094,38.6258,49.4335,32.7519,10.2048,23.2473,20.9854,40.2904,-0.396251,2.11242,7.18147,3.10768,26.0896,62.7099,66.3274,68.125,39.9975,21.8139,14.2665,8.53974,40.6415,51.7321,33.6256,28.1865,18.7456,15.3784,13.1225,-0.818345,-1.3815,37.6715,60.6204,76.6273,64.1308,49.6696,39.6893,37.9426,40.9983,41.2563,21.9486,15.4322,14.9663,13.4338,17.0357,},{-7.03941,-19.6342,-25.4474,-33.5432,-6.67751,-86.1231,72.9504,-69.1294,-128.161,-43.7398,-207.196,-143.45,-68.4728,-109.915,-65.8181,-75.0583,-5.05595,-8.51171,-141.59,-85.9764,-23.787,44.0555,-88.6014,-12.0997,-115.484,-153.383,24.6288,-96.8733,-185.209,-55.365,-55.7081,-57.9194,-35.0031,-216.201,-95.8935,-22.1694,15.3503,12.9785,-83.0704,-75.2623,-47.7828,-76.3841,64.7345,13.3647,13.8268,-240.416,-85.8026,-52.6532,-114.253,62.5163,51.6839,69.9854,41.0609,-29.3886,-41.6026,-4.50065,-54.387,-58.2075,3.30319,31.6996,23.5504,280.517,126.195,-120.05,-202.036,92.7063,63.2462,23.6212,-21.6017,-89.1149,23.104,36.0616,-9.84359,-63.1214,-79.7892,-10.2105,61.2073,142.957,330.922,27.1832,-218.2,94.9639,98.5209,124.263,-50.6331,-69.4211,-12.8245,11.8105,-72.2188,-155.966,-119.944,-86.8668,70.0759,154.876,292.868,-9.41055,-106.78,153.923,181.028,132.694,-104.389,-134.078,-120.298,-56.0736,-217.754,-405.663,-393.047,-373.969,-123.791,96.9475,384.8,153.253,78.3107,171.515,123.353,-84.095,-207.777,-111.949,-94.6625,-109.306,-175.793,-270.116,-288.212,-251.681,-176.863,-51.934,250.016,98.5952,77.6079,364.77,93.4799,-77.2903,-324.853,-290.433,-113.738,-135.535,-193.182,-232.593,-379.303,-378.827,-127.528,10.7997,49.0528,59.6216,48.5239,344.323,260.859,150.208,-90.08,-145.426,-215.578,-184.571,-233.239,-254.643,-202.683,-213.66,-77.7919,-35.4576,-35.3626,14.258,6.24347,255.031,250.351,230.438,32.0185,-50.0307,-66.4154,-78.0253,-146.588,-148.657,-117.986,-62.618,4.13687,-44.812,-63.8985,-28.7466,7.25494,141.976,247.822,198.785,94.4033,-37.6674,18.3599,18.6751,-123.539,-141.193,-79.3818,4.20189,27.0701,-139.549,56.2382,-166.511,-24.9628,-60.9226,140.301,75.8725,73.2157,.285156,-80.3746,-70.7711,-120.637,-95.1788,-34.9337,-43.3425,-227.508,-47.7053,-30.7445,-153.174,-91.3232,-221.246,-27.7977,121.888,1.97826,34.7205,-16.1263,17.9163,32.7026,-40.4067,-11.8742,-141.134,36.4759,-48.1601,-215.398,-72.9958,-102.756,-211.028,-119.762,-86.8582,149.761,64.203,28.4033,48.4421,-60.0313,-78.2886,-40.8766,-48.4072,-179.694,-165.27,-62.2437,-77.2351,-107.111,-155.429,-328.427,-253.945,-204.989,-146.465,-96.5868,-47.1234,-73.275,-50.3434,-14.5532,-89.7697,-196.784,-119.319,-103.898,-56.7627,},{76.7035,30.9184,260.422,158.594,187.66,-148.184,-147.295,221.556,54.9007,303.167,33.7589,75.6376,216.349,82.2674,102.67,25.9506,156.414,353.636,140.983,65.6601,186.276,258.846,193.399,-35.9882,-91.961,-47.2444,96.3166,95.1821,-10.1593,211.721,.0236,-87.6151,304.962,82.6232,-85.0324,-92.3199,126.409,126.15,317.107,137.414,55.7275,27.427,420.488,134.499,364.223,-216.946,66.7009,-138.858,-11.5216,113.341,32.4533,20.4109,81.4426,174.007,178.71,13.2302,-177.753,131.198,476.982,461.59,369.965,544.625,189.83,-90.8951,-524.434,-79.0816,-119.218,-268.387,-31.2484,87.5235,39.955,-104.553,125.492,165.029,346.434,340.13,428.88,436.848,724.658,143.519,-369.612,-55.8029,-178.334,-130.071,-318.41,-273.396,-139.338,296.141,237.655,77.6507,23.8747,298.099,322.621,301.579,670.264,135.997,-432.619,-162.539,-186.239,-144.753,-496.601,-610.413,-169.047,51.1764,-94.2821,-365.991,-354.754,-542.002,-22.8731,233.764,680.445,179.946,-5.98746,117.851,-176.218,-434.164,-928.542,-378.287,37.6425,241.338,459.977,136.987,-254.509,-108.757,-194.205,-201.154,169.647,44.3445,121.656,344.642,-378.3,-606.524,-707.446,-478.207,136.523,286.672,161.501,-134.186,-336.468,-291.058,84.1445,-251.296,-203.666,-70.1627,-8.14202,219.84,-315.016,-333.58,-386.139,-160.525,-100.63,-245.597,-457.108,-413.09,-250.485,-182.54,-107.897,-115.144,-352.832,22.0766,-166.94,-34.3302,13.7416,33.4965,110.416,128.589,43.8445,-305.935,-356.476,-189.775,-13.8261,55.4065,83.9102,-229.38,-156.686,-145.927,-269.157,-244.383,49.0386,319.781,247.976,275.889,396.258,128.037,-172.754,-81.0702,-22.8268,313.769,87.509,-396.433,-115.642,-565.958,-76.9236,-213.373,192.149,156.745,231.258,335.979,410.382,41.7066,-103.876,18.1775,-65.5996,-90.3022,-207.872,-132.599,-211.268,-340.715,114.318,-275.08,-326.305,137.638,112.678,276.985,308.007,81.3444,-2.77263,-186.563,-21.1178,-174.191,317.4,-136.932,-485.594,-30.5476,112.707,150.942,52.3207,48.9327,343.703,125.207,127.635,-9.65487,-136.787,-153.057,172.485,213.637,-2.98546,-80.2,101.498,24.8447,-34.8528,27.0911,-43.9125,160.985,159.284,122.818,128.573,-71.8128,-36.1749,243.865,538.421,70.7546,26.859,162.404,102.889,88.1258,},{-114.153,-168.365,-226.95,-235.224,-178.004,-285.641,-185.727,-97.9131,114.448,399.562,36.7976,29.4446,80.0427,-149.035,-55.2776,39.0417,-92.5845,-105.9,-319.536,-166.705,-7.90895,220.24,-176.237,-246.494,-364.178,-525.8,218.204,19.6036,-528.321,-245.717,-315.33,-241.584,-68.0648,-348.277,-275.487,-135.659,-112.846,167.419,534.551,-20.3407,22.8921,20.2553,168.032,12.33,29.5878,-956.959,-596.412,-165.432,5.03266,-27.1698,94.9259,10.5264,300.807,480.916,565.19,-45.4013,261.408,225.991,233.577,305.941,253.516,140.805,-13.5991,-393.397,-354.376,61.3155,-126.991,-270.588,230.325,296.453,251.297,178.201,475.846,260.046,319.668,75.8913,98.1181,324.386,379.219,-135.699,-139.353,49.4119,9.067,192.442,89.5571,22.0635,185.15,203.797,304.935,16.4668,-125.774,-192.757,-56.9975,102.739,553.206,-90.3608,-353.744,-199.561,13.9521,159.652,-189.593,-283.656,-195.138,-19.5376,-49.9886,-496.41,-660.339,-638.921,-468.452,-164.554,505.779,363.844,17.4973,30.7314,200.125,-341.125,-354.971,-102.442,73.2593,-113.007,233.527,-104.327,-337.327,-438.137,-365.914,-370.574,96.2164,185.561,98.3094,429.039,309.698,-30.0057,-143.434,26.1899,154.208,-215.638,-92.0258,-216.892,-249.769,-389.856,-162.708,101.45,150.619,258.1,4.78628,555.204,434.157,179.561,-124.956,21.136,-235.165,-65.5579,201.61,76.981,-17.1336,-247.498,11.1716,-127.496,-172.23,-193.088,-94.2683,500.689,471.628,369.149,-2.40192,-112.007,-40.1672,96.0221,377.311,330.127,23.2972,123.774,40.434,-126.753,-395.114,-218.871,-22.6036,-154.779,278.924,225.222,42.0839,-234.971,-72.8515,-69.7927,381.91,232.887,179.68,266.842,-173.647,-520.733,-315.279,-648.52,34.9552,-84.8073,39.2839,50.5927,7.65371,-36.4822,-166.864,-425.778,197.599,329.284,295.82,18.9866,-332.052,-307.185,-227.775,-507.924,-224.83,-417.582,-384.222,-146.861,-146.758,-52.441,-205.14,-153.953,353.599,204.447,103.01,-27.0495,17.2772,-483.023,-798.093,-392.227,-14.2921,-160.734,65.1721,33.8668,107.876,-105.789,-42.7787,-286.299,-118.336,288.006,413.119,284.44,99.5261,-360.279,-47.7737,-104.994,-115.588,-315.932,-357.294,-69.8812,83.3279,-233.234,-283.736,-435.189,-47.3128,512.589,435.427,-1.18704,-83.6922,-150.251,-131.474,-6.96469,}},weight[]={-442.103,1649.45,-2067.23,-2206.1,-195.462,-186.364,-168.368,-183.242,-2085.35,-179.986,1125.42,-125.185,-2154.6,5107.01,-192.163,3087.92,-155.785,-2013.65,-3142.6,-3086.94};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv);

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}