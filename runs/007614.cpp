#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{29.9708,39.2509,39.8456,44.8953,79.5642,146.355,36.9129,7.16872,12.1141,2.46195,87.0303,113.398,86.0506,75.7224,86.3825,70.5611,31.7715,70.0904,69.5185,88.0212,29.7456,70.6838,72.5461,43.307,-39.0219,17.2798,31.5592,53.9553,114.679,143.217,87.9309,50.7974,38.9844,65.1622,82.4712,30.4116,16.5685,16.4797,13.2754,-16.1286,18.2752,11.8052,65.116,25.6059,19.4434,33.6082,45.4324,31.4996,37.7024,110.314,79.6066,9.31518,-37.1107,-63.8008,29.918,36.9292,40.2778,29.2582,24.0342,-33.6419,32.6909,19.9577,42.8326,-9.04183,19.4266,84.4571,25.9758,-94.9277,-61.6908,-32.0977,3.57622,-19.4218,24.026,.267181,-84.551,-48.352,20.5842,48.8104,80.5687,37.4508,38.0932,74.3782,18.9438,-81.4947,-98.0401,-59.4818,46.2309,56.8021,-42.5971,-49.1501,-60.6478,-40.4046,-3.65959,105.192,118.99,36.1594,5.58683,44.886,23.5758,-46.243,-129.275,-76.2358,-68.216,-59.0266,-135.31,-87.3425,-80.8885,-29.2549,121.348,105.662,113.102,59.3858,30.6654,14.0803,-19.936,-116.369,-121.501,-45.6345,24.3884,14.9256,28.1786,-74.2541,-56.5353,6.23481,46.7361,116.33,179.225,67.5409,30.2324,30.1122,-11.597,-48.4222,2.27902,40.7648,37.1433,34.2317,-45.4236,-26.1509,8.22699,-4.82817,13.926,27.5089,35.381,17.4712,10.9185,-31.7447,-65.4196,29.4317,41.7211,30.687,40.6076,-6.42329,-7.51106,-19.4719,26.416,35.4203,27.5513,14.1865,-28.6272,68.1878,-27.6905,-93.2185,-76.682,-38.6927,8.76169,54.6173,15.0016,-23.2954,-14.4493,3.36019,3.0216,82.7198,41.786,-7.15323,14.1271,1.92005,-17.5321,-32.8877,-49.924,18.4992,.64857,2.29232,-26.0879,-56.5983,-29.1195,-54.951,-10.8633,97.5468,65.2225,10.5899,12.4616,-40.1409,5.19511,26.0921,-26.8098,-26.7538,37.2453,50.0436,9.40359,-33.4761,-60.2765,-32.8289,-63.3953,-86.7103,10.7467,-11.7694,14.6383,-5.257,2.81257,37.5067,20.1558,13.3121,-19.4772,11.342,73.0329,84.4545,11.4261,-71.1204,-92.8225,-31.2916,64.4975,13.4491,-6.70271,-15.3603,17.4826,37.3339,117.426,97.6429,45.1622,41.1941,31.2715,2.46749,-77.5412,-19.4047,46.8925,27.5283,32.6038,21.2065,6.55751,14.8459,1.63379,-9.08199,27.116,58.487,180.41,62.4433,30.8044,6.05815,-62.9858,-1.36584,67.2966,49.8855,15.0405,-17.7832,-11.1429,11.4214,},{80.4737,93.9176,8.55389,56.5909,74.2831,102.055,177.993,153.819,127.3,-88.8962,-158.593,-187.077,-75.5771,-37.6345,-66.04,-45.2647,87.4497,74.7723,148.651,223.309,182.386,48.9104,6.49945,-125.126,-26.8468,133.329,215.191,140.812,172.977,33.0086,25.6478,-0.862407,-14.2998,188.201,330.282,208.385,8.68066,-40.718,-169.655,-82.2257,-67.7617,23.5553,-10.4358,218.226,291.235,456.726,80.1418,-41.2108,139.328,219.168,170.559,50.1934,60.0237,-52.1296,-280.567,-216.463,41.7989,6.65072,61.9613,72.731,86.9817,127.632,153.36,182.437,151.092,104.093,63.5479,229.448,-90.9859,-89.414,-41.5347,-16.0399,-91.8768,-25.8751,34.3164,5.47684,49.2126,104.21,-50.3622,51.9093,98.15,70.1957,85.4938,-4.37251,-165.666,-132.464,-144.206,-242.67,-214.783,-51.7104,47.7056,-65.8679,58.6103,38.7906,-133.21,12.839,116.059,-46.7852,-26.5512,-314.938,-64.3854,146.523,160.998,-105.18,-70.2634,79.1501,170.876,232.757,-22.2776,-14.622,-263.336,-147.627,-15.0652,9.13309,-159.765,-47.1325,79.4012,123.134,20.9207,-25.7876,-250.707,82.8943,135.711,-30.6463,-80.7364,63.1182,-286.952,-138.991,-35.4878,-151.4,-196.751,-165.643,-208.064,-93.3774,85.3534,247.932,138.138,96.6534,82.5452,-78.0394,-192.059,-46.3261,-103.639,-209.81,-7.92227,-175.015,-103.23,-313.415,-223.086,-179.616,203.128,177.062,-15.2609,-77.4732,-74.9952,-186.839,-174.439,63.0272,189.083,-125.18,-44.2448,25.7354,-36.6807,-168.654,-311.847,-126.256,47.4113,100.849,-78.2024,-164.332,-145.536,-336.969,-214.492,60.8306,157.763,-17.3672,-2.36,193.807,-14.2599,-235.79,-191.026,18.5721,178.523,62.0909,-139.759,-62.4044,-87.9975,-442.115,-152.411,239.723,130.41,138.818,-67.3241,-69.7753,44.8598,-100.589,-206.459,-131.648,-18.7134,70.1949,-61.1156,-179.283,-127.809,-143.975,-117.125,68.6946,64.5692,161.155,-42.4429,128.62,253.888,149.185,76.8496,44.6652,-5.05467,-120.434,-340.9,-153.833,63.4494,-184.685,-97.4743,116.796,227.894,116.198,55.8771,150.072,99.1546,212.714,299.338,106.22,23.3008,-47.7315,-102.813,-138.21,-111.549,48.0932,149.423,303.484,187.332,90.6926,163.683,164.686,153.026,187.757,-30.6799,194.674,268.683,279.122,77.3645,-108.052,-57.8296,98.474,109.363,144.641,107.666,86.0658,},{-234.594,-326.3,-193.872,-24.0757,-118.547,-157.362,61.7001,212.572,97.4296,186.235,-98.5869,-168.389,66.866,-71.8961,-149.843,-72.5266,-291.574,-141.647,-199.656,-270.957,45.2194,-77.822,-309.059,-375.55,-411.936,-180.726,43.9154,-31.1576,-235.496,-244.875,-302.647,-330,76.4979,-337.786,-308.672,-40.8117,20.2396,53.3931,241.09,26.3419,280.184,-20.9811,114.094,-6.90828,189.111,-524.986,-263.435,-12.045,112.825,112.734,66.3085,72.8421,143.514,157.168,317.031,173.167,153.224,49.4036,-41.7274,78.4774,119.371,320.092,257.442,-153.869,-262.505,182.972,207.491,-45.3499,99.2437,191.719,225.577,-31.7994,69.7543,-69.3233,54.528,308.336,260.904,281.93,641.07,-32.5458,-140.007,191.731,159.72,149.455,-33.8414,71.0003,120.072,26.1775,-152.383,-94.9645,50.3408,110.068,323.462,335.485,549.387,-24.2221,-338.419,-148.147,-68.8549,29.7237,-364.972,-448.257,-273.754,-278.803,-351.502,-628.696,-578.96,-448.332,11.2215,181.705,619.909,257.326,19.0018,100.155,-107.811,-421.391,-524.871,-109.814,-24.4916,4.43929,-17.2002,-135.432,-226.08,28.8083,-116.442,-149.233,184.956,185.86,63.6883,423.237,-135.253,-399.422,-439.199,-344.754,-44.8586,-268.595,-255.618,-170.959,-249.176,-320.23,-17.4464,-196.392,-194.364,20.9316,-26.9599,271.515,-67.2527,-37.3855,-133.994,150.491,-236.14,-466.85,-221.72,-175.512,-163.49,-207.499,-84.227,-140.187,-414.793,-207.476,-107.958,-29.3752,-55.8677,17.6824,182.46,80.291,3.42236,-289.571,32.264,2.11027,.475613,173.067,38.5975,-283.248,-305.037,-178.232,-156.987,-277.947,56.6917,354.097,193.567,-84.4529,143.472,146.203,-67.6014,-127.877,4.59992,278.721,-12.1486,-441.716,-306.443,-510.979,-54.1531,-181.675,204.573,200.071,125.788,164.412,88.216,-208.101,-246.157,-63.1398,62.9708,-61.195,-325.123,-191.039,-251.458,-110.803,-242.3,-271.866,-81.4494,120.235,125.323,208.922,51.4131,-104.248,86.6565,2.26103,12.4941,-165.59,160.9,-124.968,-344.948,68.5172,92.0285,73.1714,185.731,291.447,380.448,203.552,150.058,-5.02241,33.3942,249.727,346.776,383.79,201.569,102.04,234.762,95.0047,207.456,157.244,-108.134,29.0384,164.016,80.8607,36.0205,-157.881,-69.6448,443.135,682.339,322.599,326.819,231.095,266.226,288.161,},{-12.3014,-30.8399,-34.2713,-50.3999,-13.8473,-96.4906,41.4284,-104.17,-165.566,-31.1967,-254.963,-156.505,-95.3444,-131.621,-71.7168,-76.4921,-9.55196,-22.2748,-158.747,-124.477,-38.0168,23.4268,-106.146,-71.0004,-173.63,-150.854,69.0961,-72.7684,-272.426,-98.4231,-77.8687,-70.1479,-46.7948,-237.119,-135.1,-43.7269,-0.641276,49.3554,-40.9449,-109.495,-53.5061,-32.2427,165.407,75.7563,20.6828,-322.658,-132.223,-65.588,-114.96,29.3914,60.8791,69.8379,63.5389,19.6602,32.7544,-26.1926,-43.7276,-7.09435,118.254,118.73,99.7269,319.131,97.8486,-161.68,-215.58,55.0483,49.9459,-3.11081,21.0279,-48.1871,79.1739,12.6551,-10.3918,-21.5391,-3.35798,94.885,143.423,230.41,390.847,42.5245,-224.293,58.741,85.5567,156.976,-17.9736,-43.2433,29.9565,-27.9388,-129.623,-158.369,-52.4208,4.22547,165.205,250.244,385.944,6.88601,-127.469,142.544,178.744,141.101,-100.077,-146.13,-120.227,-119.706,-301.716,-464.538,-406.804,-349.494,-67.1409,178.494,487.478,227.254,90.8604,180.406,121.015,-128.243,-246.614,-105.364,-79.6919,-196.767,-247.123,-324.083,-262.609,-200.592,-149.163,-17.2854,328.865,164.85,91.9275,402.405,125.667,-63.0683,-338.982,-276.813,-77.8352,-167.966,-237.17,-241.745,-346.286,-325.847,-115.193,41.5206,49.0404,82.6708,46.1349,382.605,299.398,193.386,-49.4078,-123.633,-187.292,-230.626,-246.908,-224.139,-120.163,-131.553,-36.6649,-36.1644,-51.2168,6.65762,-11.0647,272.921,278.238,277.346,64.1502,-0.985252,-21.7386,-104.414,-144.614,-92.3444,-24.5074,59.723,62.8497,-36.8418,-84.4572,-44.7086,-9.38704,130.588,284.825,213.815,111.907,-18.5299,40.7327,-26.2962,-120.724,-99.9575,10.0525,111.096,63.7051,-169.387,35.8258,-250.839,-33.8268,-72.9982,132.854,55.5167,82.0728,14.1397,-65.5074,-122.498,-134.887,-41.5776,57.0882,-16.8261,-230.288,-70.2187,-83.6988,-205.236,-102.604,-250.94,-53.7358,108.847,-17.6378,41.3659,21.1298,15.0596,49.0372,-13.9647,14.2216,-135.177,52.163,-62.0739,-280.975,-81.273,-102.406,-212.506,-91.1561,-70.6335,183.568,85.685,58.5443,-2.73926,-139.846,-99.3658,-24.4996,-19.633,-183.52,-204.444,-67.9062,-72.191,-115.404,-168.098,-354.399,-275.665,-236.217,-201.263,-140.067,-135.901,-142.736,-21.5891,-27.9982,-158.539,-211.927,-129.082,-113.16,-59.8317,},{27.8846,26.5539,24.7945,20.2093,35.2981,72.6591,61.7655,56.5215,55.5622,55.9966,71.0457,61.0595,39.3249,21.9791,28.9382,19.6208,28.5654,34.1414,27.4095,54.5796,29.0379,49.4743,29.1519,17.7549,9.18513,13.8572,30.7756,39.4808,61.9696,52.3107,18.3397,14.458,19.1947,21.3867,47.5627,32.8497,19.5624,20.3013,18.3842,8.94228,13.9597,-4.27822,30.2451,48.1782,61.2512,42.4238,18.8354,7.09699,27.0381,63.0938,50.9919,30.1719,22.5503,24.0204,21.0669,18.1415,23.6481,21.0752,29.1955,22.4173,62.9588,43.503,47.0282,10.6233,21.7232,52.1227,36.5248,1.7717,13.2811,22.9375,5.91538,4.32168,23.9439,36.4581,14.3196,29.3028,47.1472,51.1538,50.2834,27.9027,28.1306,52.6601,31.3445,8.82694,1.9358,-3.95644,12.1877,19.8437,12.3561,6.71526,13.9464,8.33129,47.8555,62.4353,55.8643,22.6507,20.1998,27.8678,22.5038,3.05725,-18.6847,-16.579,-21.1499,-14.7806,-6.17663,16.0324,-2.13637,5.35397,43.9142,58.5369,46.0896,15.6774,20.6225,29.5554,23.1307,-9.67291,-7.36179,4.03756,16.3078,20.7874,40.5915,34.0576,17.1462,13.7102,36.2169,47.1876,59.0541,18.7083,19.3052,43.697,53.722,34.1614,28.7893,29.7609,42.0699,38.4951,39.7119,37.0727,19.8755,24.1303,38.3621,36.335,42.5641,11.4931,17.0531,39.3145,43.9715,32.4308,17.9056,20.0493,39.1534,41.1685,34.4116,21.4205,34.9969,34.803,49.4447,46.547,26.3083,15.307,12.4564,34.8434,35.8948,17.311,2.08772,20.25,28.9467,24.1237,25.7391,43.3427,18.2061,23.3206,38.2787,32.8832,30.7433,9.76728,14.3508,39.4202,33.34,11.7473,10.767,3.55651,15.0172,10.8014,32.2986,25.3891,19.3808,25.3544,41.2561,27.2237,26.7128,-1.88201,24.7156,43.1288,41.8039,16.1145,22.6741,13.8571,8.04004,35.1683,36.8202,30.279,13.5788,15.31,26.9814,24.8214,21.8058,7.23237,9.25547,15.8558,25.7533,36.6848,22.0874,33.6436,31.8445,53.3953,37.344,8.06854,17.8558,15.8233,40.4727,6.20448,8.37049,5.83474,4.66071,24.9024,57.4765,62.1247,59.6677,36.0744,21.7076,17.056,8.50689,36.7119,47.7225,30.4857,30.8869,21.8299,14.2614,9.47189,-1.16593,-7.62732,25.7153,49.1848,67.9203,53.4513,37.3757,30.3072,26.2364,29.4668,37.1641,15.7234,7.40631,5.31065,2.66475,12.6378,},{23.7566,26.0314,25.7812,22.8743,39.0317,77.7593,59.9529,48.6023,40.4191,36.8144,53.7322,51.1743,36.3962,25.2531,34.3565,26.171,23.888,38.1776,31.7846,55.0939,30.6796,51.5731,30.4539,14.1129,-11.6065,-3.53584,16.8326,35.6306,66.1742,58.8927,23.289,17.4549,20.4691,26.8078,51.5943,36.0297,19.8079,18.8891,9.98738,-3.66094,1.27021,-16.3127,21.7123,34.9642,49.515,34.855,15.7084,8.5932,28.291,67.2335,53.1247,34.397,16.3425,7.7523,8.60438,5.65447,14.75,16.4136,20.7504,6.14312,50.0846,33.6748,41.8313,8.40026,23.7111,59.1449,40.4191,-4.75032,1.65481,10.7184,-11.3823,-11.1427,19.3007,28.8766,-4.43163,10.8878,37.2996,43.0832,46.3891,26.4396,31.9174,58.934,31.0012,.378411,-17.0656,-29.5207,2.61634,26.8879,2.5711,-6.16357,-3.51946,-5.87983,38.7885,59.0641,54.6428,21.8588,19.9107,27.5035,17.6848,-23.5471,-44.5598,-23.5182,-25.5862,-12.2569,-29.8613,-4.89497,-23.8239,-0.539862,46.6127,57.5932,46.2202,16.754,21.6734,24.8407,3.13061,-44.8639,-34.4088,-3.63334,16.8654,19.9191,24.5743,6.97363,-6.10292,13.268,38.8157,51.2978,66.2594,20.856,19.2378,29.9784,23.8634,1.84007,11.3656,22.6329,35.074,27.908,11.2287,15.1952,3.88936,14.3857,31.9117,34.919,39.4043,6.20698,11.7766,13.1216,11.8628,17.2326,12.7613,16.4667,27.3259,23.5177,13.6318,2.37222,25.893,26.0962,42.7627,37.9382,18.8387,18.418,-6.41128,-0.689266,4.43844,3.06098,-3.64645,14.6268,17.1391,7.3146,9.38988,27.8367,8.21931,21.9372,28.2744,20.9378,23.8991,9.65599,-3.47935,9.9887,8.73811,2.28654,.00743055,-11.0547,-2.42911,-4.55664,9.46154,-0.285458,9.32046,27.7197,37.0134,17.9245,19.9598,-10.4642,8.81224,20.9588,14.3479,-1.11589,4.30829,-0.935603,-7.64925,17.9435,11.7325,10.4269,-5.98275,-8.03994,12.9463,8.67618,13.3451,6.15104,7.42981,17.1939,28.482,31.2121,13.517,26.1085,32.6403,55.3578,24.0843,-10.1095,-0.24975,4.37511,43.0519,8.47417,7.83568,4.74143,10.5184,27.8897,61.6101,64.2024,56.9397,36.5176,23.2804,16.612,-8.13517,16.8596,41.7296,28.2528,30.2444,19.1016,14.54,11.7072,9.40871,.962202,24.2527,46.9201,72.9934,49.914,32.7358,23.9181,3.69419,17.5805,44.0246,19.4235,9.85287,5.04991,5.34009,15.8727,},{26.5757,26.9737,25.7261,22.7657,37.6574,73.4309,63.0822,56.5729,51.6688,48.8517,58.1906,52.0123,41.5529,31.5726,37.6161,28.8545,27.8503,34.848,30.1558,55.3274,36.3236,53.3223,36.1321,25.7299,12.2129,10.133,26.4124,43.9178,65.1119,59.7849,26.3855,21.0307,21.2756,28.3173,50.6345,38.4789,25.4376,27.4065,28.3013,16.635,9.61249,-5.52244,34.6317,49.5472,60.9986,42.9085,21.4158,8.55303,27.6163,61.0587,53.3656,41.388,31.4529,30.3846,22.9227,12.8552,17.7319,25.1059,36.2487,28.8557,62.6651,40.8193,40.8384,10.2786,20.645,54.7904,42.4171,10.7223,17.2526,26.0469,-3.03465,-4.91821,25.758,41.6174,21.3802,31.9491,45.1478,46.332,43.9957,25.0564,29.3681,53.9849,35.934,15.2487,-1.56601,-16.1941,4.7087,27.5565,21.9998,18.6189,18.1375,14.4076,45.1288,54.949,48.7098,20.5668,17.4021,28.0308,22.245,-12.0917,-29.1277,-7.32802,-8.55687,.331282,-2.88597,16.0098,-4.27326,12.6043,44.031,52.0092,42.4638,14.4577,19.2461,28.8533,18.3104,-21.1268,-16.8498,9.75086,20.5412,27.507,33.5283,29.0086,7.7912,17.8321,36.9539,44.8311,57.6575,17.5467,18.009,34.6651,32.1711,13.6671,18.7822,28.4979,43.4923,39.1444,30.7758,28.171,14.3319,21.0486,37.3666,37.4074,42.5282,10.7437,12.4974,20.881,23.2426,24.6735,17.5184,25.6435,41.1839,40.3971,25.0851,13.3338,28.8529,33.1017,48.862,44.5285,25.9941,14.248,-2.9392,14.4534,20.1102,16.3279,5.26515,26.5864,30.3811,23.2473,14.6724,29.5505,14.8775,25.7911,37.4114,30.0605,26.7093,9.32818,-1.5575,19.3727,24.2769,12.1492,12.8517,9.41676,15.74,7.74775,15.6752,9.75823,16.5103,31.1412,42.0437,25.8585,23.8359,-7.93766,9.00246,24.1128,21.719,5.71761,11.6801,8.87671,2.59958,19.079,21.715,17.4905,4.09151,7.46629,19.1967,15.189,15.6835,6.08487,9.37717,16.6094,28.2638,37.6028,23.5789,36.2538,34.2948,49.2459,29.1595,2.90955,16.7813,19.7039,47.1519,11.7276,10.4785,6.91303,12.8139,27.4721,57.8757,62.4454,61.6382,41.9618,30.391,26.2023,8.83414,31.5741,53.5901,39.5137,37.6851,24.5689,19.3254,14.2274,7.13314,2.61633,27.18,47.2036,66.7436,53.7983,38.5992,29.784,17.4164,27.4229,46.6685,22.847,15.6467,10.1148,8.71372,16.3192,},{23.7825,22.2849,21.5277,18.1566,34.9095,75.9658,65.5966,58.9634,52.852,50.2935,62.8277,55.0001,36.3686,22.7745,29.5059,21.0649,24.2338,31.064,26.5831,54.6561,35.1064,53.0565,32.5871,18.0536,5.85021,11.3084,29.4524,41.38,62.8829,53.7241,17.1578,12.6069,18.3405,24.8463,51.9247,39.8914,25.6556,26.4314,24.1807,11.8481,14.0254,-4.04137,31.4663,48.1247,62.8058,43.487,18.2512,6.08983,29.4433,66.3671,56.4342,40.0767,30.0221,27.7708,21.6423,17.3649,23.5831,22.2271,30.29,23.098,63.389,44.7041,46.6753,10.0298,24.7904,58.6314,43.2601,6.9412,14.1071,23.2687,2.05603,.12322,24.4407,37.2822,13.5441,27.339,48.7443,51.581,50.3707,27.7821,33.5362,58.4755,37.0219,11.6807,-4.12446,-12.1335,8.40152,23.8978,16.2401,9.93619,11.8612,9.19882,49.5025,61.6378,56.078,23.4016,21.8906,30.5361,24.2289,-8.42998,-29.8285,-16.2981,-18.8663,-8.58569,-7.41534,13.6528,-4.86494,8.29681,46.8081,59.9489,46.6343,16.0514,21.0525,31.6666,19.4799,-20.1596,-18.6048,1.6548,15.8143,20.8014,34.0343,29.2406,11.3021,16.7172,38.5565,49.9302,60.4836,19.1042,19.3668,40.3107,43.0076,22.2908,21.8826,30.0298,45.4336,39.4028,37.5575,36.4234,17.106,21.4219,38.584,37.896,44.9169,11.5618,15.1331,29.7511,31.8773,26.2354,16.6075,23.8742,39.3826,40.1759,31.5109,19.7918,33.6268,34.1505,49.1903,44.173,26.2056,16.0081,3.43553,22.0653,25.5372,14.8104,1.73123,23.5693,27.8161,21.975,22.9755,41.1763,18.2713,25.3289,37.3127,29.9416,27.5155,9.35,5.29133,27.1829,25.2201,9.26821,7.83902,2.26308,13.0802,8.47661,26.5573,19.5661,19.6372,27.9544,39.4523,22.076,21.9445,-6.70088,16.6732,31.224,29.9753,9.78245,13.474,9.9059,5.56484,29.9304,32.0178,24.9542,9.43278,10.7177,21.1669,16.6756,15.8648,6.03439,6.01469,13.4976,25.6663,34.3337,22.2769,37.0825,36.7695,55.3109,36.9049,6.59557,13.96,14.4473,42.9356,6.20285,7.82177,6.39044,8.9867,26.685,58.1513,63.0796,62.2334,40.8429,27.1649,21.0228,9.20194,34.0634,50.5569,35.98,35.7066,24.0379,18.7911,14.0073,4.91593,-0.195287,27.377,49.2979,68.7909,55.374,39.4226,30.1009,23.3301,32.6405,45.1731,22.5814,14.969,10.8394,9.52069,17.4094,},{-5.36403,-18.7378,-36.8321,-48.841,-27.581,-109.114,-37.0565,-120.722,-142.222,-3.88756,-181.554,-89.6721,-76.6838,-108.369,-72.957,-77.0288,-4.70638,-21.5437,-153.122,-129.693,-80.4952,11.5981,-73.2789,-50.3412,-143.636,-139.65,32.5869,-118.767,-255.429,-74.1855,-60.451,-64.1233,-38.2915,-219.006,-153.006,-44.9002,19.4561,43.8606,-79.853,-137.12,-47.3416,-12.1583,181.362,73.1332,-25.6766,-294.706,-120.439,-56.9915,-104.433,17.9537,45.5944,53.7382,22.777,-34.2459,23.8548,-37.1396,-56.6233,-17.8555,110.028,114.905,95.8469,269.106,99.3925,-160.344,-201.603,55.9941,55.0097,-34.9542,-16.98,-65.3297,89.172,.421351,-24.1965,-30.7562,5.72699,106.914,138.908,236.401,364.513,29.9535,-219.786,77.8103,58.3725,135.059,-24.6733,-36.0546,27.5281,-64.0302,-158.688,-164.601,-48.8629,1.84346,160.03,263.551,370.791,-14.3254,-105.457,157.697,160.524,147.933,-70.4299,-135.246,-118.967,-133.223,-284.859,-389.588,-308.999,-284.216,-2.43614,218.323,462.245,194.55,110.555,184.939,118.434,-98.4063,-225.585,-143.512,-119.089,-229.217,-247.781,-320.332,-234.898,-188.253,-124.448,23.5813,368.504,142.96,104.017,400.809,129.543,-69.3211,-344.231,-290.167,-89.721,-181.105,-234.975,-224.796,-317.569,-341.221,-103.396,48.4973,80.1381,122.934,64.3713,386.378,269.849,190.226,-44.8387,-137.93,-176.584,-233.684,-237.667,-213.023,-102.906,-122.039,-42.5061,-40.3371,-41.1031,50.3327,26.7595,275.034,245.597,256.953,64.5202,-4.88995,-17.5542,-111.694,-152.001,-99.9049,-6.31787,73.0013,52.7934,-53.1156,-61.063,-16.9803,34.1311,169.488,256.296,202.019,123.301,-11.4966,39.1994,-43.6312,-132.917,-97.2998,14.1879,115.708,53.2658,-163.698,33.8513,-172.219,-20.3643,-53.7207,139.668,42.7918,110.332,24.4154,-59.9466,-145.195,-149.507,-34.4353,63.1348,-23.0787,-215.019,-80.9114,-50.8698,-152.172,-93.8161,-218.649,-23.7086,95.928,-35.0646,44.3972,8.15364,-2.94828,50.6997,-2.53326,12.1547,-136.009,36.0522,-41.2677,-232.084,-78.7006,-104.011,-219.07,-86.6772,-65.6616,168.362,62.754,47.736,-15,-142.576,-93.1262,-2.33542,-35.3372,-181.746,-168.714,-64.4634,-70.4289,-120.917,-171.209,-343.024,-261.051,-208.599,-171.386,-148.639,-152.437,-154.217,-31.5591,-40.2969,-168.317,-190.641,-129.462,-119.105,-62.667,},{32.3459,26.0329,27.6449,25.2327,43.2032,86.0636,76.6321,69.6823,60.9621,57.9433,72.4355,64.2441,44.6214,32.3505,38.1449,25.4121,34.3935,35.8015,33.3351,65.3743,41.174,57.6411,37.7071,21.962,11.0596,18.174,37.3279,53.8067,73.7785,66.1274,25.8576,16.1046,21.1544,25.1107,54.7256,40.6669,27.6964,29.943,31.5045,15.9515,20.3923,5.85253,45.8339,65.7668,82.6722,61.6815,25.6647,4.96734,27.295,64.2768,55.8958,38.2838,31.8544,30.7834,21.8102,19.4974,25.6606,27.1,44.1193,41.8658,80.3195,54.3722,51.3594,10.7288,20.6398,57.5551,42.6578,5.50216,12.2288,19.1025,3.66888,-0.599537,27.2347,48.0545,32.5057,39.4272,54.4742,58.1179,56.6689,28.7626,31.7888,57.3641,37.5425,8.38117,-10.435,-15.4843,5.18671,22.1707,29.4578,30.064,24.0081,14.5453,52.5788,66.4842,59.9321,23.9416,19.7346,30.0878,24.766,-17.2554,-38.7634,-20.5931,-21.5439,-8.99036,10.2622,26.4108,-2.8936,6.49146,46.4699,64.5931,49.4003,17.0211,20.9877,33.56,20.0957,-19.392,-24.1882,-6.0821,5.92962,22.3846,38.3924,34.888,7.8035,11.4009,33.1619,50.653,62.6202,19.3762,20.2734,43.3054,41.21,20.1183,18.3165,28.4318,56.454,56.5472,53.6904,41.3173,14.0498,13.2404,30.9149,32.7239,44.1629,11.2437,15.7817,30.8265,29.4941,20.6825,11.5271,24.8339,53.5877,54.4945,39.1909,26.3456,33.185,28.5432,37.8863,35.0752,20.5307,12.9524,3.08468,21.4342,23.1817,12.9244,1.11335,34.8086,44.1872,39.6282,30.6973,47.4925,19.8731,21.9666,29.4196,21.4358,18.3124,1.46449,4.76851,25.1872,21.8428,8.41578,15.1005,18.9234,27.7139,14.6226,33.9925,26.6276,20.402,26.387,32.9088,12.4534,10.6327,-15.9491,15.6818,29.4233,29.4499,11.6449,27.2494,28.7281,16.4129,32.8368,37.1045,29.4664,10.1375,9.24158,14.2693,8.81833,9.32009,-1.11545,-3.4711,5.28894,22.42,40.0255,38.7803,55.9296,44.2576,58.1659,41.5138,8.17174,8.83809,6.81537,38.6873,-1.82221,2.88741,5.29145,2.86768,18.5212,60.6804,73.4147,76.3739,45.8817,29.5705,23.4758,13.3597,29.4677,45.8128,31.9857,32.1784,22.4054,20.1222,17.0567,-0.489079,-4.39202,30.6224,57.7996,77.3647,57.0336,38.1814,27.6588,23.4887,33.1771,42.0259,22.4323,16.0178,13.9151,13.9619,18.7436,},{19.7014,-55.5081,-12.605,-10.643,12.9947,55.5638,224.796,178.786,129.279,-57.5367,-151.551,-203.443,-112.912,25.0159,-19.6338,-44.067,24.952,-184.431,-117.757,87.2949,121.007,-22.7376,-68.4005,-156.223,-71.2335,42.4935,52.0535,42.719,-50.44,-41.6994,-82.398,-56.7214,-29.7339,-56.717,144.236,152.465,23.7269,-16.5018,-134.321,-83.1599,-85.4951,15.7556,27.3216,137.055,178.202,254.055,40.5322,-58.6651,-26.0868,-47.9018,80.1891,133.803,227.771,70.5014,-198.353,-143.123,29.8001,22.7061,107.252,195.632,102.552,154.25,123.356,80.7713,70.03,85.2317,155.493,240.201,11.6838,-24.237,-142.467,-50.9234,-18.7493,50.0326,103.597,-101.909,64.9859,132.609,38.4769,45.7493,94.2777,-51.7392,104.913,91.276,-104.244,-118.348,-217.372,-113.515,34.0696,112.426,-39.9237,-73.6417,82.6834,47.12,-7.88659,71.5051,45.685,-138.457,-97.6153,-285.304,-98.2788,111.263,100.139,17.2462,.416853,-149.38,-104.822,-42.201,-78.6134,32.7161,-73.0766,-33.0172,-77.5271,-130.11,-137.37,-36.7467,6.0892,92.2176,-75.6151,-131.624,-379.584,-24.0734,15.6395,-120.232,-142.531,-121.351,-210.537,-52.972,-80.6153,-219.735,-136.289,-43.9049,-173.429,-92.9521,-66.407,85.0484,179.242,143.047,45.8898,-28.5361,-82.5261,-76.6844,-146.144,-114.415,-66.7081,-224.955,-102.883,-194.756,-151.609,-97.3521,13.2433,58.6484,-43.8048,-8.65948,-41.2829,-5.05963,-61.9248,-22.8427,-48.3746,-106.032,-73.5955,-0.124824,14.2784,-19.8413,-131.963,-2.28706,-73.8385,-15.3575,-57.5147,-80.9192,-59.0437,-91.7256,-53.3634,41.9101,-67.0219,-24.8966,-55.5905,39.8123,71.1921,-42.1656,-35.0695,45.5539,10.6379,-21.0189,-98.4539,-33.9693,-16.0108,-219.639,-48.5549,72.4214,-116.16,-3.63987,-82.6385,-45.3952,26.3539,-36.1297,-74.4395,-49.4223,-12.5731,23.9223,-8.11052,-179.915,8.39833,92.203,-76.1897,-58.659,-108.717,21.2522,-104.266,6.84152,108.121,92.7605,231.249,133.018,27.6621,-81.2216,-162.925,-55.3326,184.972,-5.51265,-59.8036,-125.761,78.1921,95.6584,3.44732,-26.8943,-45.6056,49.0288,135.45,79.9816,100.483,90.1003,140.779,-2.75613,-40.7018,-36.2972,29.3541,165.406,181.512,109.096,91.1522,92.5643,15.9738,.0085089,-176.933,.204389,59.0471,86.147,28.0573,-62.0742,-104.504,50.1554,192.449,181.313,181.098,103.263,},{21.3933,15.4039,6.4325,5.3015,25.2996,73.0655,52.5219,39.955,41.5908,26.7608,41.3111,29.5426,22.2928,18.9818,26.8178,22.1445,20.2552,15.8426,17.5133,54.839,31.8854,42.0955,27.2718,22.0758,-17.9914,-17.5321,-1.83358,34.8219,55.8896,54.8849,22.4663,10.3674,13.1532,21.2271,50.4526,34.8091,20.5879,24.3744,29.82,16.4106,-3.06792,-14.0473,34.7179,53.3057,59.154,48.5174,21.8607,4.94052,24.6623,63.2108,53.6661,20.3567,21.7879,21.3232,13.3593,-6.20013,8.2726,19.0515,36.5326,22.6309,43.7873,45.905,47.8618,3.67025,22.1728,49.2664,31.9305,-4.03276,3.63558,2.44112,-24.6001,-18.9275,10.0333,28.089,-3.0716,14.4768,34.6648,54.1248,58.6676,29.8665,33.9606,48.6648,34.555,-7.07712,-29.6387,-48.5922,-17.2877,16.8582,-1.0105,-3.38102,-5.86447,-11.1885,33.9529,67.3312,67.3723,28.3435,20.7314,25.5434,22.3952,-48.7842,-79.9268,-40.4036,-30.7602,-19.3886,-53.8281,-40.1558,-60.0077,-9.1401,49.1097,62.9394,55.7902,22.543,19.9424,25.785,-2.9208,-51.8307,-56.2141,.0265774,19.2246,26.5968,-0.256304,-24.967,-20.4953,-2.46161,24.0028,58.2902,69.3731,26.1817,18.7429,16.9504,-2.92832,-17.8475,8.39774,37.4983,57.1451,59.7091,1.45961,-5.27631,7.67692,.0948592,13.2176,11.8471,19.2593,-5.70364,5.27352,-24.6391,-17.2091,19.3465,16.8933,15.01,38.5314,30.3428,-0.262141,-11.8285,8.56144,26.6365,24.4619,14.4827,-2.41895,7.33137,-29.6718,-22.8267,-8.92251,.366981,-14.4956,25.0592,22.32,11.2433,-23.7528,-8.31554,-6.31608,25.8645,25.5724,10.6727,24.7232,-5.95364,-21.4319,5.67091,12.1188,3.45362,1.05835,6.77605,1.76401,-20.6578,-26.7811,-31.538,-10.3745,13.7546,37.7685,19.3367,21.5054,-35.8209,-6.21281,15.6444,1.23258,-27.6379,1.24475,-4.88469,-22.6471,-15.8046,-28.5658,-27.4233,-46.7871,-52.8828,-15.2219,-16.6982,-13.6841,-1.32393,-2.1414,16.7738,18.1311,30.0246,29.647,47.8397,43.2941,50.1968,-13.2064,-50.4761,-20.7207,-10.3725,25.7894,-4.22153,2.41495,8.03162,-2.93004,14.7978,63.2698,63.0335,58.4032,31.1175,19.3357,1.01449,-51.5555,-19.7617,22.8987,24.008,29.0443,17.4897,19.4862,14.6042,-17.1971,-12.1036,32.1479,56.131,89.2443,58.2014,44.3126,24.5223,-23.2527,-20.0433,27.9655,22.18,14.0021,.909257,4.6176,11.133,},{-12.6665,-30.3662,-43.0105,-46.8836,-10.7639,-89.7362,90.9763,-83.4686,-154.508,-40.6847,-263.776,-164.303,-69.6341,-125.196,-79.9409,-84.9672,-8.30406,-27.594,-157.742,-95.0206,7.83919,46.3519,-97.9119,-54.3765,-146.216,-150.457,79.3503,-67.8533,-264.536,-108.046,-65.8454,-66.3647,-33.4576,-234.306,-106.925,-22.5807,13.8714,43.7712,-56.2332,-104.965,-48.182,-42.2561,134.822,62.2806,33.898,-312.075,-115.802,-47.5492,-112.103,46.3922,73.5766,63.3999,48.1868,-5.83772,-3.69674,-25.4347,-50.3814,-24.0702,73.0478,98.9331,71.266,349.159,123.253,-136.776,-213.938,73.9907,61.3157,18.1571,-1.90552,-73.8192,60.094,27.5689,-12.999,-36.1345,-14.4392,69.7638,119.767,201.742,404.214,37.892,-234.737,63.1683,97.5241,144.46,-27.3318,-47.508,21.161,-10.2333,-100.017,-139.969,-51.6701,-11.5581,136.472,214.104,356.849,8.14413,-119.226,155.37,191.225,150.211,-100.463,-142.068,-119.947,-99.9673,-247.938,-453.092,-411.568,-377.395,-128.744,123.086,458.227,217.14,86.7823,186.688,136.328,-103.223,-219.716,-103.965,-92.0631,-166.392,-209.058,-291.474,-254.69,-214.245,-158.925,-35.0947,275.182,153.654,91.3393,400.023,134.498,-47.3459,-314.77,-272.961,-80.3573,-152.452,-207.519,-227.225,-349.939,-350.899,-110.046,40.4544,46.0127,59.2416,51.3543,386.861,309.586,182.438,-57.1255,-116.952,-189.556,-203.715,-224.235,-218.998,-147.844,-152.64,-49.5387,-30.7181,-44.8138,-5.30295,1.9766,281.631,283.906,264.861,65.1123,-9.46761,-25.7714,-86.9044,-133.824,-109.708,-50.9196,16.6385,50.3087,-28.2759,-77.811,-48.7365,-0.0288678,130.031,277.382,218.067,119.101,-13.4542,33.3377,-6.28097,-114.23,-103.009,-18.4395,69.1917,57.9725,-148.666,61.387,-232.993,-36.5001,-65.2155,148.117,84.643,93.485,16.8067,-62.7433,-100.128,-116.654,-60.792,28.2189,-6.88516,-215.396,-27.0122,-64.0201,-190.007,-105.069,-250.26,-52.6374,120.279,1.22803,44.3271,.164982,18.1475,44.3094,-22.1064,12.4103,-125.324,65.3052,-53.886,-264.77,-64.7017,-103.699,-232.871,-128.508,-95.066,165.343,78.3149,56.3315,26.2993,-85.8664,-71.6135,-18.9138,-14.3983,-197.051,-205.628,-64.568,-66.0695,-122.089,-167.531,-352.918,-272.89,-235.842,-193.17,-124.323,-98.9892,-106.025,-26.4838,-34.0411,-152.787,-230.712,-125.889,-112.294,-63.5184,},{272.62,394.759,124.302,39.3587,212.766,123.886,81.8065,22.7527,208.469,44.1066,233.036,-414.8,-327.831,-218.974,6.89653,-17.9035,231.097,-44.0239,270.477,518.537,93.0759,70.0311,347.585,133.65,175.868,366.714,-332.989,-243.542,-167.591,-198.585,300.7,244.453,-185.393,181.589,372.971,94.3838,212.787,71.0665,96.456,-81.4545,52.0713,351.697,248.386,242.682,97.5672,661.616,185.46,98.7071,84.2699,82.2989,59.7916,116.459,167.033,-269.303,-483.053,-471.171,94.7589,233.412,-7.76882,-163.53,64.2849,379.853,14.2403,156.712,586.207,-30.6774,84.7206,428.641,33.5229,-449.14,-254.683,-313.341,-411.41,95.3938,-269.545,65.7144,141.131,108.469,-45.2845,-34.4581,391.976,-121.612,509.153,55.2441,-97.2729,-93.9032,-427.436,-561.939,-403.605,-90.4774,79.7906,-65.9172,-255.984,117.921,-33.6219,-4.66382,475.001,27.3318,-24.6447,-231.902,149.021,8.58919,89.3534,-559.478,-447.493,118.471,-64.0311,-163.795,-97.7061,-86.3447,-242.482,206.117,107.31,-156.148,-61.7685,374.791,43.5594,380.298,185.997,-233.565,-585.799,-211.198,174.707,-135.382,-328.392,172.504,-246.037,235.027,37.8196,-628.793,-215.443,176.201,616.458,514.911,89,220.006,-71.7171,-155.143,283.443,-29.2098,-677.776,-167.835,-318.403,-218.042,156.802,-628.197,-146.405,645.072,402.071,-125.456,359.26,452.3,135.29,228.761,-260.936,-523.626,-441.229,-78.66,344.176,-36.7154,46.2555,-96.8599,32.8743,36.3911,-229.637,123.491,445.197,520.33,39.5376,269.887,364.18,-297.656,-419.497,182.378,307.217,-28.5228,104.724,212.812,-104.998,-243.233,-134.54,-30.1402,-2.47549,-246.388,-314.842,118.738,321.609,-474.584,-82.4358,273.776,-13.2878,-32.1964,158.6,228.55,-194.714,-173.552,133.602,-130.278,-11.9446,-91.3251,-159.165,80.0914,200.264,-146.509,218.664,76.2748,-622.084,279.202,-60.2278,420.216,65.8987,-21.1737,252.564,-45.0194,280.563,54.7788,-504.904,-170.757,116.296,-172.02,-469.645,-606.293,-115.673,126.547,-314.478,-541.83,-93.9766,142.361,116.706,494.459,287.058,-134.17,-337.335,-592.036,-593.968,-593.299,-738.521,-304.82,38.0063,103.761,-219.837,-509.489,-221.827,-149.307,326.116,110.538,88.3997,-233.358,-571.654,-904.229,-1115.07,-854.816,-605.57,-608.392,-377.426,-296.766,},{24.0462,23.0804,14.685,4.40082,23.3747,68.4762,58.0219,53.1488,52.5484,48.232,68.678,59.6664,35.3129,15.7869,29.6698,20.0428,24.6127,25.8409,12.3717,49.9612,27.3221,50.312,27.7544,15.787,9.55427,6.52515,22.037,31.6204,57.2273,49.692,11.494,12.0906,10.2351,16.735,47.0858,35.1117,21.1617,22.2378,26.78,18.2128,21.5874,-4.93392,28.8281,45.8673,57.3091,34.6388,10.3496,-1.40471,25.9028,64.9957,53.0567,41.6056,34.0233,37.9047,35.4985,31.8644,35.731,26.1067,33.5841,16.2374,58.1743,38.3156,41.0681,1.73555,21.2409,52.8898,38.7661,7.02948,18.2733,34.4801,15.566,11.4593,31.7502,44.6032,10.972,28.2977,41.6808,45.8587,46.0317,28.793,31.358,58.5239,38.6242,14.5209,3.66068,3.1042,17.6585,23.4221,19.6532,5.68508,13.8552,3.07581,42.0521,59.8053,59.8161,23.6165,19.4385,30.5009,26.8549,5.86996,-20.3766,-15.8799,-18.1623,-11.854,-6.32834,17.4354,-5.81968,-0.54719,36.8943,63.6738,48.4927,16.9218,22.3699,32.744,25.9168,-10.5452,-10.0883,7.23102,19.8536,21.3227,43.364,33.5908,12.823,6.87645,42.2757,53.4476,63.8462,19.8458,21.5293,49.472,57.9399,35.5168,30.1925,36.4374,46.2501,39.7717,41.381,33.9496,14.4297,24.1738,48.2822,43.605,48.3063,10.9049,18.649,44.5764,49.9239,33.6089,16.0074,17.658,37.4798,40.3603,33.755,16.4782,30.7244,37.219,58.0227,51.6961,31.3425,14.4056,13.5248,38.8326,39.6286,17.4083,-2.8236,22.0149,30.4658,25.8514,23.8433,45.8007,17.2756,25.7077,43.2571,37.7449,36.8419,8.45045,14.7273,41.8863,35.3741,6.96671,5.69204,1.07561,12.6579,6.37787,35.2999,32.3943,25.1483,27.892,43.9002,27.2163,28.8627,-8.64652,24.6372,45.2907,40.824,11.166,14.9294,8.64658,5.02787,37.5363,44.4093,36.1683,17.8168,18.7416,29.0244,19.5036,18.3571,1.22813,4.45792,6.61673,17.0559,28.75,11.6041,31.6067,34.6607,58.3306,42.7653,13.1181,21.3317,17.4195,42.9987,1.77656,2.05612,.00750398,-1.91666,19.1068,53.8646,58.3727,58.9408,31.6868,16.9987,10.1416,5.98572,43.1743,54.8676,37.977,38.3097,25.1828,16.046,10.3882,-8.30318,-15.6698,20.9904,44.9139,65.8431,51.0944,32.5318,22.688,23.2767,31.5756,38.9751,18.7025,8.66141,2.7689,-0.836529,9.42685,},{-57.9277,-62.3446,-171.342,-265.438,-302.778,-69.079,-149.655,-175.203,-31.4202,102.499,187.526,-201.52,-325.463,-85.3148,-112.98,.24835,-103.807,-323.974,-303.198,-277.4,-235.613,-392.56,-282.851,-126.846,37.1218,42.5292,13.6499,1.05067,-344,-290.869,-74.2533,149.83,-265.887,-197.748,-282.204,-17.9696,-213.848,-181.441,-91.4656,-168.319,-271.011,-82.5681,-197.819,-20.843,-422.554,341.7,-44.9363,100.667,-38.41,-398.25,-162.132,68.6867,186.861,230.13,92.8403,-315.796,-148.228,106.165,82.0086,-58.9331,-23.5902,-278.86,-196.402,-24.2447,315.893,-183.55,139.967,464.939,391.136,46.9923,-197.446,-236.886,-216.424,139.457,36.7212,175.481,-27.8022,91.6872,-435.401,-9.52008,214.555,-146.246,293.197,536.402,348.61,136.009,-197.984,-445.205,-129.091,131.427,288.575,153.791,51.1285,232.553,-212.468,-110.929,278.878,173.966,325.693,233.113,351.949,212.361,127.172,-262.827,-198.331,184.304,192.713,651.184,252.364,330.046,-272.539,-13.082,26.1508,85.9218,306.612,350.106,491.851,291.227,-203.29,-464.832,-392.348,-129.365,108.25,107.583,118.097,416.405,102.015,90.0525,-14.4437,-243.636,312.14,473.481,593.961,473.582,-83.847,1.41578,64.7635,83.2868,283.117,558.857,19.0818,422.031,44.3052,-69.9109,17.5386,-148.988,306.757,319.101,364.423,45.1135,175.731,237.198,186.608,156.639,262.072,519.655,244.841,182.038,371.876,-272.412,-26.25,110.322,226.862,190.832,-90.7313,107.848,.767876,31.0813,2.30449,169.794,32.8824,171.482,-45.7253,239.942,291.988,-203.167,-96.3148,176.806,263.227,-123.647,-214.213,-38.7364,-157.745,-373.103,38.5679,119.006,85.6001,-236.351,-213.81,195.97,-110.087,-130.455,-190.236,38.6423,-256.95,-342.489,-220.523,-295.048,-157.777,-197.728,79.7975,-28.7441,12.1196,-86.1315,-20.5094,-234.479,-217.668,-61.7927,-175.27,-28.4433,16.0732,-106.808,140.075,-71.285,-3.56299,-39.2157,-248.044,-151.217,-172.199,-8.99278,-471.793,-52.8767,163.928,81.112,-268.206,-274.061,-108.039,-4.67134,-192.523,86.2538,111.614,-77.3738,-243.568,-470.85,-467.877,-338.361,-137.367,-42.5,-1.10846,34.841,-106.536,-179.213,-19.6013,-190.674,-156.124,225.865,239.589,5.79513,-128.758,-316.376,-758.208,-421.316,-80.7788,-183.968,-130.728,-132.274,},{27.1705,21.9859,23.5432,19.5198,36.0016,77.0477,71.6814,69.5599,70.7445,69.9121,76.9276,60.7443,37.8384,19.9838,25.6714,16.2197,27.9399,30.5083,28.8333,57.2663,35.0609,48.2602,28.3814,19.9174,15.1642,23.4269,41.6269,53.4089,66.0811,52.3599,16.752,10.2875,14.3558,17.513,46.9075,37.2011,22.4709,23.8325,29.7872,20.5211,20.2354,6.29444,43.3628,64.2991,83.1134,58.0381,18.3861,1.1927,21.087,57.9159,50.3883,31.227,28.7019,34.5716,26.7258,20.4975,26.5053,27.7545,41.9584,41.6274,78.0516,54.924,48.2243,7.28643,21.9849,52.8994,39.5716,9.41455,17.2518,24.1965,9.09019,6.8415,26.4678,45.663,28.3129,40.336,57.0179,58.379,54.9913,28.4435,29.2133,53.7587,36.9288,12.2866,3.37782,-1.57228,8.53809,15.4776,20.1157,19.2992,21.1642,14.5686,56.655,64.8539,59.0021,24.964,21.7034,32.0425,27.2545,3.27914,-18.5891,-15.4625,-18.3735,-13.8228,1.68709,19.17,-0.195263,6.26637,46.1695,63.8142,49.2428,18.2052,21.5778,38.3047,35.8267,4.03275,-4.62051,6.27793,11.5826,21.0533,37.5829,41.1507,22.1,15.715,33.034,48.6118,58.7142,20.4344,20.6451,49.4336,62.1855,41.2072,31.2694,31.4342,48.2519,47.4393,48.6235,43.2874,26.5622,26.3007,40.1202,35.4995,43.4201,10.4199,18.3183,43.2815,50.9044,38.8167,19.7293,21.8122,45.8232,48.3617,35.7794,26.8375,37.6525,38.4372,48.433,46.4942,27.6616,10.6895,13.3471,43.8583,46.5085,25.0199,4.25791,28.1052,34.6916,32.7416,28.0871,46.8953,21.8913,25.1744,42.877,36.536,32.3611,3.77206,15.4662,47.8297,43.9999,17.2947,17.1839,16.3422,28.9443,18.0834,35.3879,29.3706,20.6125,22.7082,42.7371,30.4004,27.9032,-7.23544,26.5907,46.1817,47.3139,18.0257,29.7925,26.6104,16.7488,36.5543,37.429,25.9617,14.1384,17.8638,27.6046,26.2773,16.4075,5.00008,6.87953,13.2756,21.7951,38.0453,39.5079,50.7501,38.1362,49.9013,32.329,9.90682,23.4999,20.7963,40.1391,-0.4292,2.54557,7.20022,3.13128,26.2283,62.6729,66.0305,68.1904,39.6912,21.6539,14.4974,8.39209,40.8709,51.8127,33.5382,28.165,18.5864,15.3178,12.9922,-1.07916,-1.84502,37.4297,60.2138,76.1675,63.1479,48.5564,39.5952,37.5031,40.0599,41.143,21.1729,14.838,14.3801,12.7429,16.8889,},{-7.02229,-19.4275,-25.36,-33.2319,-5.98907,-83.2566,70.4221,-72.6553,-132.796,-37.9761,-203.883,-136.904,-68.0298,-110.412,-66.2595,-75.055,-5.04962,-8.32883,-141.354,-88.7933,-25.5438,44.1558,-85.0262,-4.89231,-106.998,-142.156,37.217,-89.4018,-190.228,-60.7454,-55.7497,-58.4152,-34.9258,-217.856,-98.6926,-25.8561,16.8043,21.1981,-72.1995,-72.1868,-40.0891,-66.379,80.2631,28.5948,14.2029,-247.108,-91.8588,-53.3607,-114.998,59.6517,50.322,69.7638,47.207,-16.87,-32.0746,-6.94338,-54.6747,-54.279,16.5689,46.2295,38.8887,281.653,125.028,-124.89,-202.707,90.4604,63.9266,23.1602,-9.79782,-82.8331,27.1789,35.7287,-9.87122,-62.0254,-71.8529,5.75307,75.4222,155.391,334.572,25.4295,-218.458,92.9286,98.0341,134.242,-41.5452,-68.9371,-9.57443,11.5019,-74.2897,-156.311,-112.904,-74.0308,85.2534,168.178,301.285,-7.03728,-106.359,155.333,189.173,141.932,-103.231,-135.768,-120.718,-59.0716,-219.392,-409.818,-390.833,-363.978,-115.594,107.935,397.231,159.75,79.9814,178.278,135.775,-83.9989,-212.126,-116.729,-97.2055,-116.481,-180.761,-276.123,-283.429,-239.124,-164.905,-41.7996,263.632,104.911,79.2412,373.138,109.892,-75.4159,-327.575,-292.151,-111.757,-139.458,-195.238,-231.256,-372.201,-367.324,-116.908,22.6528,51.1487,64.3037,48.36,350.604,267.263,150.19,-89.601,-146.187,-214.651,-187.971,-231.826,-251.539,-192.655,-199.968,-67.2787,-34.247,-37.5275,17.9103,7.0794,258.883,252.94,231.78,33.0696,-47.8847,-63.3419,-79.0098,-143.702,-143.805,-107.824,-44.0403,18.3369,-42.374,-65.2943,-27.8646,7.28535,142.962,255.832,202.015,96.5585,-36.3103,18.7733,16.1351,-123.266,-138.993,-66.6891,20.7426,34.6867,-140.614,56.1684,-170.779,-25.4673,-59.3229,144.659,77.6748,74.1166,-0.515312,-81.2653,-72.7456,-119.084,-83.9355,-19.5396,-39.3603,-223.488,-49.3256,-33.4726,-157.926,-91.3962,-222.918,-22.4935,121.453,.107025,33.4768,-14.8774,24.2179,43.2521,-32.2598,-5.47678,-137.094,38.7957,-48.7525,-218.996,-73.6572,-102.469,-209.589,-113.063,-80.165,158.359,73.253,39.0248,54.9811,-60.8993,-76.301,-36.2146,-44.9847,-181.38,-169.275,-62.5708,-77.4827,-108.027,-158.523,-330.865,-255.326,-207.792,-149.673,-102.687,-56.0725,-78.322,-51.9514,-17.5241,-100.193,-200.042,-121.455,-106.25,-56.8908,},{76.3962,31.2811,256.798,154.814,191.688,-113.382,-122.075,242.387,80.1419,333.812,35.9443,58.377,197.61,67.5116,85.5659,16.9022,156.175,373.692,180.719,90.0636,218.905,263.774,150.738,-76.8057,-130.477,-58.7758,106.576,98.7553,-3.7127,203.962,-28.9867,-87.6291,308.392,72.5556,-62.1649,-103.613,79.6307,87.0664,298.633,119.897,32.3279,-1.18689,400.487,148.657,371.864,-204.078,68.3401,-144.333,-20.5451,99.9445,56.2709,-4.34368,59.5495,175.28,188.086,15.9235,-179.667,130.948,478.085,501.354,403.872,578.613,195.749,-91.7951,-529.481,-88.0305,-160.396,-303.737,-54.2618,84.341,38.2645,-112.173,118.74,159.755,343.2,377.529,462.784,446.926,717.666,144.779,-374.176,-71.2897,-223.383,-168.407,-340.86,-294.957,-150.787,285.203,211.316,78.3303,56.4225,332.173,327.223,289.64,669.48,139.79,-438.445,-172.852,-203.547,-176.05,-518.438,-637.28,-161.423,59.8178,-64.564,-344.877,-344.435,-530.823,-39.9568,209.813,678.593,180.262,-7.4708,115.783,-192.937,-461.441,-919.586,-333.241,80.0671,270.946,483.095,148.302,-242.89,-91.9971,-164.43,-156.427,177.842,41.1032,123.776,346.664,-378.068,-625.735,-728.706,-502.054,121.777,261.805,137.583,-164.655,-333.781,-280.971,96.7271,-239.334,-171.678,-56.3271,-7.87479,219.014,-315.432,-349.434,-396.625,-168.17,-100.153,-254.398,-472.489,-441.221,-270.176,-190.241,-102.99,-118.719,-337.187,27.6356,-168.08,-38.7568,.864696,17.9407,105.705,132.264,59.1644,-301.713,-352.638,-189.802,-28.6369,30.5026,89.1343,-230.16,-157.66,-143.413,-274.436,-262.032,28.2761,313.96,250.858,285.804,412.269,132.554,-171.284,-76.5252,-25.3003,297.272,68.5143,-394.932,-109.579,-562.908,-86.3243,-241.913,170.729,147.054,233.284,337.674,419.887,42.8715,-103.042,15.8262,-73.4961,-106.65,-200.935,-131.08,-208.253,-344.762,106.083,-310.099,-356.191,115.007,103.548,280.957,318.286,83.9931,-10.8412,-196.972,-33.0175,-185.474,326.915,-129.949,-510.019,-32.3452,121.946,187.775,67.0322,52.6197,334.074,124.334,121.825,-21.6923,-152.634,-172.63,165.91,222.916,1.45223,-106.38,104.901,29.1973,-34.9908,73.9586,-4.65339,196.008,180.658,139.8,141.102,-56.3812,-14.2139,270.442,532.007,43.004,22.5419,165.237,107.03,91.4773,},{-113.938,-167.482,-226.623,-233.952,-178.418,-291.146,-190.868,-97.7479,126.183,412.448,40.3049,37.729,84.4321,-152.799,-59.9383,41.1512,-96.323,-110.391,-316.15,-161.349,-3.8735,239.903,-168.88,-244.728,-361.514,-516.789,228.833,26.8921,-526.166,-243.105,-319.968,-242.407,-56.819,-343.797,-277.861,-142.189,-126.552,154.934,534.129,-23.6025,22.3609,29.9157,167.634,19.6656,26.9619,-967.33,-597.807,-168.301,-1.23656,-33.8085,93.6689,7.40766,296.589,472.369,562.213,-52.0333,263.471,228.662,231.13,308.566,259.816,134.984,-14.4353,-394.368,-358.223,65.7942,-124.811,-271.519,226.595,291.704,257.513,193.716,479.775,259.311,319.34,77.6834,104.727,325.61,381.356,-134.249,-140.848,50.6668,11.0398,192.605,93.8204,14.8781,194.939,212.387,304.023,20.9633,-124.922,-195.58,-64.6183,96.4074,556.646,-86.8989,-358.149,-202.972,19.8476,161.874,-190.909,-291.279,-193.978,-16.6673,-46.7826,-494.391,-666.006,-648.311,-482.454,-176.099,503.582,373.113,19.7041,32.2876,205.451,-348.363,-360.395,-111.854,71.7835,-112.85,242.329,-100.829,-338.699,-448.646,-378.536,-389.003,90.3838,189.672,103.46,429.304,323.694,-17.8737,-138.367,29.0777,156.715,-216.443,-94.5733,-209.486,-244.816,-393.63,-170.079,97.1907,147.409,259.373,4.9839,562.458,450.328,177.926,-126.957,7.28329,-240.542,-59.7392,206.111,84.7817,-18.3794,-259.428,-3.26667,-144.839,-179.077,-195.286,-92.8275,510.09,484.79,378.71,-3.39787,-125.152,-37.9715,107.123,384.042,337.982,19.4807,118.448,31.7989,-132.907,-402.014,-220.844,-17.5466,-150.761,290.053,238.065,49.1529,-234.254,-65.4531,-59.7005,389.984,241.459,175.814,259.823,-181.86,-515.585,-314.537,-644.021,35.1144,-84.6957,47.681,63.434,13.2843,-37.2473,-166.024,-422.613,200.855,334.31,292.819,11.989,-330.759,-308.245,-224.241,-506.948,-224.302,-419.99,-388.973,-146.386,-145.661,-62.565,-208.383,-148.482,351.154,207.604,101.864,-27.1952,14.5455,-483.691,-800.692,-392.016,-16.5774,-162.935,59.801,26.7718,103.841,-108.16,-40.1961,-285.146,-119.501,290.333,411.241,280.144,94.39,-366.693,-54.7694,-110.074,-118.868,-319.551,-359.931,-75.0152,81.1821,-230.587,-288.261,-430.302,-38.7439,522.614,451.307,-8.67833,-91.1133,-153.245,-136.917,-11.054,}},weight[]={-465.35,1681.88,-2061.49,-2227.06,-196.472,-191.236,-169.225,-184.135,-2106.29,-179.786,1145.85,-132.372,-2171.83,5102.63,-193.328,3104.51,-155.299,-2024.28,-3149.3,-3096.59};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv);

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}
