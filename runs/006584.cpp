#include <iostream>
#include <fstream>
#include <cmath>
#include <vector>
#include <map>
#include <algorithm>
#include <string>
#include <iterator>

using namespace std;
const double PI = 4 * atan(1.0);

class ANN {
public:
  ANN(size_t nInput, size_t nHidden, size_t nOutput) 
    : wInputHidden(nInput + 1, vector<double>(nHidden)),
      wHiddenOutput(nHidden + 1, vector<double>(nOutput)) {
    int pos = 0;
		for (size_t i=0; i <= nInput; ++i) {
			for (size_t j=0; j < nHidden; ++j) {
				wInputHidden[i][j] = weights[pos++];					
			}
		}		
		for (size_t i=0; i <= nHidden; ++i) {		
			for (size_t j=0; j < nOutput; ++j) {
				wHiddenOutput[i][j] = weights[pos++];						
			}
		}	
  }

  size_t Classify(vector<double> inputNeurons) {
    size_t nInput = inputNeurons.size();
    inputNeurons.push_back(-1);
    size_t nHidden = wInputHidden[0].size();
    size_t nOutput = wHiddenOutput[0].size();
    vector<double> hiddenNeurons(nHidden + 1);
    hiddenNeurons[nHidden] = -1;

    for (size_t j=0; j < nHidden; ++j) {			
	  	for (size_t i=0; i <= nInput; ++i) { 
        hiddenNeurons[j] += inputNeurons[i] * wInputHidden[i][j];
      }
      hiddenNeurons[j] = ActivationFunction(hiddenNeurons[j]);			
	  }
	  
    vector<double> outputNeurons(nOutput);
	  for (size_t k=0; k < nOutput; ++k) {
	  	for (size_t j=0; j <= nHidden; ++j) {
        outputNeurons[k] += hiddenNeurons[j] * wHiddenOutput[j][k];
      }
	  	outputNeurons[k] = ActivationFunction(outputNeurons[k]);
	  }

    return max_element(outputNeurons.begin(), outputNeurons.end()) - outputNeurons.begin();
  }

private:
  vector<vector<double> > wInputHidden, wHiddenOutput;
  static double weights[];

  static double ActivationFunction(double x) {
    return 1. / (1. + exp(-x));
  }
};

//double ANN::weights[] = {1.15178,0.173062,0.244166,0.241802,-0.353628,-0.41287,0.797639,0.78024,-0.260342,0.00937316,0.394927,-0.748987,0.139591,-0.163676,0.339995,1.10864,0.873511,-0.588535,-0.766248,0.349683,-0.836907,0.208446,-0.0246241,0.727901,-0.800451,1.31133,-0.549886,-0.990615,0.344798,-0.356796,-0.460587,1.32316,-0.703145,-0.456896,0.231053,0.176391,0.135858,-0.0943348,-0.456655,-0.727001,0.0118731,-0.175746,1.05752,0.361101,-0.383967,-0.877246,0.0914385,0.291425,0.0996173,-0.806235,0.02612,-0.875381,0.563014,-0.105464,-0.274562,-0.385686,1.02146,0.186261,-0.269109,-0.305578,-0.728951,0.192896,-0.561339,0.721141,-0.0929842,-0.296531,0.836201,0.318804,0.0211725,-0.968362,0.123362,-0.5145,-1.00395,1.02964,0.980351,0.181831,-0.201834,0.337105,-1.07925,0.293969,0.0905776,0.791489,0.198796,0.259434,-0.137337,-0.184284,-0.62059,-0.18131,-0.757303,-0.436993,-0.214753,0.273964,0.613905,0.0814833,-0.0412591,-1.18083,0.172857,0.437858,0.607938,-0.31649,0.0690929,0.42021,-0.0993287,-0.0695094,0.67469,-0.152714,1.12199,0.368923,-0.677343,-1.15246,0.589003,-1.22393,0.133707,0.412417,0.885691,0.940479,0.262355,0.568272,-0.281246,-0.0914657,0.0663108,-0.156396,-0.323309,0.528683,0.0709266,-0.135937,0.387262,-0.221183,-0.0894744,0.0742437,-0.0454652,0.276362,-0.465769,-0.213122,0.227436,1.00637,0.0889724,0.445499,0.294734,0.813249,0.0256449,0.159642,0.0355157,0.699507,-0.490549,0.509357,-0.633468,-0.120161,0.642732,0.00246425,-0.0987628,0.556097,0.0115884,-0.129743,-0.908959,-0.296981,0.0101356,-0.113642,0.938489,-0.0216904,0.0604553,-0.0706318,-0.157554,-0.190258,0.0744138,-0.584545,1.0971,0.810539,0.830908,0.262939,0.45852,-0.754964,-0.291474,-0.136093,0.187744,2.61123,0.714664,-0.645555,-0.466456,1.17252,-0.694719,0.786201,-0.863754,0.341965,-1.43601,0.474301,-0.555234,-0.915394,0.235619,0.225624,-0.107244,1.54826,-0.478699,-1.23915,0.00411934,-0.492643,-0.538596,-0.00372764,-0.429133,0.147667,0.4856,0.565992,0.415615,0.65999,-0.651011,-0.418673,0.140793,0.0661581,-0.857214,-0.361196,0.076758,-0.0645297,0.13852,-0.545917,0.0420131,0.272568,0.485082,0.174966,-0.54399,0.213628,-0.411361,0.0710671,-0.261466,0.891998,-0.104625,0.546231,-0.0579834,-0.300813,0.66962,-0.849732,0.131488,0.482535,-0.271868,0.800669,0.327071,0.923751,0.654242,-0.3911,-0.190065,-0.323846,-0.286792,-0.213708,0.839586,0.444869,-0.598534,-0.48187,0.142381,-0.12209,0.046092,-0.250432,0.0143093,-0.579371,0.39847,-0.316124,-0.640433,-0.135802,0.453202,-0.00557039,-0.869125,-0.0585342,-0.233225,0.266339,-1.37284,0.664735,-0.178255,-0.516075,0.389489,-0.160176,0.151882,-1.07232,0.12672,0.0413586,-0.178963,1.06045,0.285916,0.532679,-0.0974095,-0.279274,-0.999268,0.647367,0.494791,-0.258977,0.785855,0.00611059,0.202994,-0.303523,1.01271,0.625036,0.224391,0.806021,0.276504,-0.336583,0.268042,0.242268,0.18332,0.0055908,0.503385,0.158072,-0.187215,-0.10629,-0.185304,0.38716,-0.076844,-0.0163815,0.0798307,0.466633,0.338554,-0.2587,-0.170033,-0.26841,-0.455419,0.393684,-0.71317,-0.175943,0.255958,-0.601464,0.0240089,0.767224,-0.0168307,-0.316487,1.21104,0.770562,0.838631,0.306929,-0.105609,-0.637575,0.1888,0.899921,-0.744867,-0.333726,0.0120406,0.0738029,0.159493,-0.212859,0.35414,-0.22289,0.789737,0.031264,-0.112207,0.140887,-0.385438,0.356177,0.2019,0.0103697,0.383077,1.10149,0.348535,-0.323992,-0.177851,-0.788233,0.405768,0.0490083,-0.300643,0.215113,0.021456,0.78765,0.387743,0.131812,0.0753205,-0.647702,0.783463,0.96804,-0.671413,-0.0818592,-0.0939273,-0.300029,-0.314595,-0.0900807,-0.589713,-0.112892,0.354462,-0.675778,0.0849248,0.0238738,-0.0293043,1.06119,-0.144855,-0.428092,-0.0226005,0.373404,-0.249678,0.392898,-0.914628,-0.222612,-0.482698,0.614022,-0.0553082,-0.616124,-0.68412,-0.368173,-0.161868,0.573862,0.270344,-0.978536,0.29264,0.408787,-0.0623346,-0.44607,-0.0322923,-0.265005,-0.57352,0.326989,0.0911663,0.643994,-0.105041,-0.526155,-0.475535,-0.207131,0.135527,-0.442768,-0.0706988,-0.281489,-0.494697,-0.0598251,-0.497508,-0.189877,-0.103376,0.23546,0.348408,-0.469007,0.348637,0.176535,-0.454687,0.147097,0.0964595,-0.901702,0.537205,0.775189,-0.116504,0.111407,0.194737,-0.481422,0.0924447,1.11947,0.325291,0.539115,0.0421137,-0.353739,-0.636629,0.80329,-0.216961,-0.857746,0.59076,0.0370222,0.610017,-0.336664,0.813392,0.152495,1.25872,0.490779,-0.615934,0.0799203,-0.875801,-0.193894,-0.639569,0.215146,-0.00785922,0.230231,0.277111,-0.026332,0.27052,0.396615,-0.498432,0.127253,-0.321733,-1.01928,0.0625754,0.107768,-0.551234,0.0626575,-0.0266846,-0.688043,-0.403712,0.323017,-0.383645,-0.643812,-0.65426,0.161326,-0.330545,1.33701,1.28914,-0.638772,0.604576,-0.111399,0.213067,-0.495098,1.13507,0.145561,0.0381131,0.674684,-0.282046,0.75526,-0.0989499,0.23841,0.284061,0.223161,0.43283,0.497256,-0.0264246,0.0877109,0.160003,0.150336,1.02178,0.0367116,-0.173338,0.499304,-0.0738543,-0.544312,-0.713639,-0.539596,-0.134001,-0.363118,-1.32937,-0.229023,-0.240622,-0.678375,-0.644186,0.540307,0.785191,-0.680806,0.846544,0.549608,-0.550341,-0.51996,-0.678393,0.648765,-0.762452,0.334609,-1.39345,0.0892022,0.547199,0.134554,1.07061,0.534549,-0.00968071,-0.855311,-0.197551,-0.591743,-0.133433,-0.693409,0.00824279,-0.669037,-0.219038,-0.355111,0.817756,0.632977,0.673654,-0.022972,-1.12553,-1.08743,-0.232078,-0.169267,0.669269,-0.854368,1.26771,1.1545,0.283042,0.0525994,-0.140884,-1.1736,1.34973,1.14642,0.0742697,0.0971576,-0.562125,-0.00694172,-0.779777,-0.0620192,-1.66192,-0.184649,0.181247,-0.363012,0.791661,0.620363,0.113757,-1.86712,-0.28534,-0.200897,0.377678,-1.01972,0.131754,-0.405166,0.376305,-0.454512,1.25339,0.713135,1.42545,-0.347013,-1.21616,-1.32361,0.0220278,-0.777132,0.582021,-0.106206,1.40615,1.14792,0.331646,-0.00427056,-0.126326,-0.998804,-1.46773,-0.326385,0.00607441,-0.0629509,0.828233,0.223944,-0.0550056,-0.393339,1.50682,0.339866,-0.217484,-0.430136,-1.05555,0.382296,-0.426355,0.293952,-0.390735,0.205504,0.869892,-0.46328,0.507224,0.381849,-1.1237,-0.653914,0.373926,-1.76175,0.319808,1.09428,-0.292273,1.35453,-0.263789,-0.0491573,0.583074,0.0977096,0.101134,-1.01794,-0.390985,0.575879,-0.94706,1.51303,-1.07765,-0.00162389,0.0967514,-0.058572,0.392924,0.149133,-0.182534,-1.17274,0.640055,-0.0919396,-0.367847,0.685374,-0.342373,-0.31996,-0.840667,0.392016,-0.530455,0.501807,0.297315,0.87224,0.209284,0.759682,-0.555235,0.41465,-0.343442,-0.874803,-0.5004,0.393099,0.14532,0.376851,0.643821,-0.38133,0.492432,0.0320366,-1.12874,-0.610467,-0.349185,0.163889,0.347412,1.4845,-0.0910905,0.335346,0.704924,0.0398434,0.157334,-0.361015,0.580418,-0.289186,-0.789525,-0.646939,-1.26499,0.817551,-1.46677,-1.44491,0.124538,0.0999583,0.159316,0.571455,-0.104675,0.640578,-0.51439,0.237063,0.705613,-0.143335,-0.546343,-0.440395,-0.786597,-0.245361,0.923576,0.0158689,0.733217,-0.459296,-0.223908,0.307853,-1.40543,0.710937,0.236587,-0.393744,0.450548,-0.332295,0.14631,-0.155539,-0.574432,0.1066,-0.524604,0.596749,-0.892627,0.286373,-1.0784,-0.587274,0.218201,-0.202893,0.277689,0.0807347,-0.0949798,-1.08203,-0.42594,-0.209458,-0.279194,-0.365558,-0.133604,-0.652539,0.240391,0.0390948,0.419522,-0.0101852,0.112156,0.036,0.310986,-0.432197,0.404642,-0.00553683,0.572335,0.279557,-0.272984,0.818212,0.129366,-0.534146,0.236411,-1.02975,0.804024,1.43495,0.88651,0.0353469,-0.182418,-0.603429,-1.06005,-0.209882,-1.02934,-0.397688,-0.0848885,-0.212826,1.27417,0.61453,-0.0356483,-2.45319,0.0510094,0.167995,0.602665,-0.934858,-0.385104,0.597343,0.514819,-0.592565,1.30238,0.0296868,2.05291,-0.194448,-1.37652,-1.70686,0.984739,-1.72241,0.411736,0.0807506,1.7091,1.40488,0.0189288,0.796855,-0.540461,-0.732506,-1.6428,-0.670723,-0.437383,-0.0120859,0.879831,0.998892,0.368506,0.800923,1.33976,1.14632,-0.203711,0.0909773,-0.760003,0.56695,0.419113,0.389569,-0.513674,-0.228349,0.282041,-0.827625,0.235396,0.0576865,-0.916914,-0.561578,0.895396,-1.46427,0.0454013,0.997291,-0.101255,1.90426,-0.446353,0.549443,0.556135,0.0684316,0.870365,-0.885581,0.634233,1.23472,-1.28461,1.20531,-1.10832,1.27657,-0.101777,0.428329,0.206252,-0.145944,-0.804436,-0.620438,-0.379718,-1.04221,-0.759591,0.639589,-0.598935,-1.0548,-0.351455,-0.658113,-0.181701,0.260082,0.0970007,0.270487,-0.334917,0.31352,-0.37206,0.255689,-0.00121197,-0.663786,0.145623,0.419097,0.859597,0.600248,0.866593,-0.434501,0.712019,0.78972,-0.838218,0.978785,0.72346,-0.0998052,0.258627,1.11491,0.174461,1.05798,0.17619,0.225998,0.266707,-0.276921,0.361176,-0.345158,-0.73037,-0.944556,-0.962924,1.43665,-1.01632,-1.65374,0.413048,0.674082,0.101984,0.451616,-0.0904731,0.892175,-0.192994,0.166353,0.222707,0.111384,-0.734494,-0.0502606,-1.21871,-0.650475,1.13065,0.151744,0.647017,0.176249,0.160051,0.0997757,-1.87113,0.831037,0.489427,-0.912342,1.19021,-0.143655,-0.028594,-0.596923,-0.280364,-0.169309,0.178935,-0.0247773,-0.062421,0.256442,0.619103,-0.254832,0.46377,-0.501069,0.0209334,0.839347,0.321457,0.345009,0.2515,-0.124522,0.415522,-0.165536,-0.124719,-0.181534,0.0397006,-0.0564629,-0.0498228,-0.161548,0.0024086,0.526613,0.0333572,0.69276,-0.24972,0.10617,-0.462201,-0.444117,-0.0943005,-1.42453,-0.261189,0.0223562,0.286702,-0.429089,-0.324012,0.148277,0.927099,-0.303449,0.65506,-0.370479,-0.080556,0.420268,0.838285,0.322189,-0.250003,-0.264031,-0.449253,0.642054,0.267003,-0.72502,0.207419,-0.0544897,0.811681,-0.510619,-0.296566,0.661815,0.22096,-0.851343,0.20401,-0.815434,0.675331,0.182652,-0.566877,0.679875,0.235935,-0.809454,0.30391,-0.271973,0.650587,-0.257805,-0.278919,1.02543,-0.805063,0.584903,-2.16658,-1.12199,-2.30802,-0.236039,-0.203212,1.95991,-0.332354,-0.282409,0.63496,1.3787,1.00921,0.715008,0.810637,0.778079,0.403087,0.446204,-1.43544,-0.337556,-0.618717,-0.624253,1.13405,-0.766163,-1.22906,-0.0542796,0.468978,-1.12368,-0.515351,1.21904,0.17215,0.934778,-0.816442,0.996008,1.60477,-0.180827,0.867696,-0.664497,0.751969,0.453944,-0.302618,0.843173,-0.844108,0.675193,-1.95073,-0.196749,-0.0756787,1.18903,-1.08432,-0.925576,-0.3407,-0.224389,0.520353,0.264493,0.20336,0.447017,0.289247,0.224884,-1.40507,-0.604943,0.00862999,0.418482,0.646102,-0.036531,-0.922574,-0.226745,0.041883,-0.384991,-0.415903,0.611697,-0.428242,0.595688,-0.120176,0.472,1.45705,-0.837408,0.383983,0.576894,0.368597,-0.245684,-0.00430638,0.85926,0.00292476,1.35869,-0.374229,0.0290225,0.195826,-0.221347,-1.14361,-0.98753,-0.798089,-1.32529,-0.113487,0.630562,0.076817,0.222485,0.385737,0.236789,-0.378663,0.586089,0.85377,0.69958,0.216629,0.525119,0.0252145,-0.0841964,0.0836664,-0.183674,-0.0274854,0.586603,-0.202435,-0.150544,1.26039,-0.520481,0.597285,-0.588537,-0.119137,0.709075,0.321351,-0.292309,0.428154,-0.268656,-0.300154,0.157457,0.233282,0.0347976,-0.121884,-0.374302,-0.464358,0.154035,-0.0505764,-0.823944,0.123738,0.46607,0.243587,-0.0369096,0.59261,0.200182,0.483837,0.12227,-0.46303,0.65202,-0.841855,0.0956306,0.323429,0.381622,0.0502663,0.380536,-0.375633,0.143116,0.934639,0.728063,0.707257,0.50615,-0.366729,0.115015,-0.658825,-0.236326,0.205686,0.0695349,0.396069,-0.58215,-0.852443,-0.106697,0.900072,0.0181066,0.44189,0.00757969,0.44039,0.905763,0.944706,0.464057,-0.639928,0.718592,-0.665931,-0.562988,0.807089,0.657532,0.35119,-0.183929,-0.764045,0.327266,-0.762129,0.118096,-0.412909,-0.206606,-0.190898,-0.38016,-0.436849,-0.153322,0.949691,1.10244,0.138798,0.831895,0.198641,0.101309,-0.190678,-0.00786798,0.513686,0.461941,-0.652819,0.502255,-2.01827,-0.780678,-2.57063,0.0457823,-0.778495,1.99897,-0.896189,-0.922019,0.0711474,1.14304,1.31594,0.821001,1.8936,0.583392,-0.183695,0.353189,-1.79216,0.280593,-0.70078,0.0761539,1.26374,-0.785486,-1.21101,0.875042,0.397562,-0.659384,-0.414889,0.971636,0.371156,-0.177901,-0.422071,0.541706,1.53514,0.385041,0.334854,0.330433,0.760518,-0.353969,0.597079,0.974522,-0.751481,0.00744418,-1.65361,-0.265549,-0.0872603,0.742667,-0.395073,-0.671126,0.129987,0.729907,0.572425,0.0895778,0.271888,0.776889,0.0184279,0.453783,-1.02074,-0.279927,0.227638,0.00653027,0.952955,0.0714311,-0.496481,-0.132912,0.152634,-0.546294,-0.0398455,0.54591,-0.9252,0.129561,-0.711342,-0.0159604,1.05387,-1.13076,1.16597,-0.233773,-0.279679,0.123691,0.0275124,0.563698,-0.211242,0.811529,-1.00005,0.0559569,0.418293,-0.1473,-1.02389,-1.04405,-0.172077,-0.983113,0.192544,0.104756,0.467812,0.977285,0.903312,1.5572,-0.181615,0.497586,0.697592,1.18769,0.240441,0.90172,0.187617,0.136314,0.0812557,0.314128,-0.624911,0.66577,-0.208079,0.585761,1.29556,0.22315,0.159722,-1.17484,0.448337,-0.538965,0.0802578,0.206484,0.565545,-0.946008,-1.04979,0.213458,0.372879,-0.0420884,0.174139,-0.267029,0.0356938,0.180077,0.409861,-0.312381,-0.78515,0.891446,-0.95038,-0.802076,0.127133,0.631888,0.120253,-0.107999,-0.406115,0.563553,-0.997735,0.466084,-0.0530835,-0.270259,-0.322348,-0.27504,-1.10108,-0.195307,0.621197,1.47538,0.488905,0.536692,0.327357,-0.333364,-0.743626,-0.0780395,0.263776,-0.26148,0.332485,0.0690544,-0.692519,-0.0609863,0.825722,0.0693895,0.242252,0.0268142,0.845608,1.01434,0.413617,0.370267,-1.13917,1.39947,-0.933811,-1.55847,0.838002,0.82806,0.349088,0.271289,-0.685425,0.675037,-1.35841,0.249814,0.119662,0.051828,-0.270258,-0.00633371,-1.03316,-0.361104,1.3179,0.794921,0.694412,0.908864,0.196397,0.511991,-1.02718,0.316517,0.756313,0.0545788,0.378279,0.418754,-0.477108,-0.258126,-0.698965,0.407346,-0.622226,0.764382,-0.31132,-0.188803,-0.711789,0.0446015,0.567814,0.202967,0.829977,-0.0281694,0.108936,-0.448485,-0.599474,0.14884,-0.603581,0.190811,0.261899,-0.444332,0.0390728,0.931507,0.130792,0.228794,0.0843911,0.0429715,0.502212,-0.62057,0.0998788,-0.0293336,0.525079,0.60146,-0.358955,0.991596,0.98895,-0.282506,0.45006,-0.019108,0.330708,-1.20305,-1.30687,0.239906,-0.817576,0.705449,0.205568,-0.214721,-0.54592,0.95879,1.07906,-0.869257,0.867475,1.21273,-0.453956,-0.963075,-0.58896,-0.210954,-0.468413,-1.06978,0.982412,-1.13721,0.495859,0.942182,0.351724,0.566722,0.479708,0.360527,-0.486364,-1.04245,-1.34213,0.131934,0.0207085,0.134808,0.65949,-0.269055,-0.382826,-0.151476,0.277702,-0.100848,0.549146,0.183343,-0.588558,-0.206904,0.113419,0.214199,-0.421091,-0.134755,-0.45509,-0.297461,0.543046,-0.207675,0.79984,0.838131,0.927743,0.670909,-0.0960578,-0.0797603,0.285104,0.473327,0.29816,0.353877,0.812331,-0.191289,0.276438,0.999403,-0.155118,0.00678253,-0.649068,0.14793,0.482214,0.309848,-0.389494,-1.35611,0.681839,-0.616299,-0.184077,0.586474,-0.200413,-1.57321,-0.609149,0.138488,1.00907,-0.312796,0.340542,-0.386032,-0.0538714,0.23114,0.386256,-0.292842,-0.554078,0.100294,-0.651328,0.0210725,0.0268839,0.289832,0.42189,-0.296715,0.197493,0.0204112,-1.05128,0.442226,-0.00567319,-0.619274,-0.193924,-0.329834,-0.166174,-0.0923075,-0.260476,0.819906,0.40836,-0.287289,-0.0789609,-0.789935,-0.000255266,-0.161706,-0.270975,0.319144,-0.518047,0.089716,-0.131518,-0.733738,-0.230275,0.336871,-0.169924,0.102395,0.273656,0.352817,-0.0574206,0.156261,0.0750619,0.520995,-0.366725,-0.346781,0.140913,0.234072,-0.0530027,0.321159,-0.408691,0.0331367,-0.195129,-0.816288,0.698832,0.7346,-0.326719,0.452761,-0.630791,0.210437,1.29987,0.60933,-0.228152,0.578599,-0.132531,1.39666,-1.35588,-0.0375542,0.27251,-1.04753,1.20631,0.279083,0.501452,-0.240194,0.455997,0.965608,-0.0919714,-0.620023,0.115137,0.143922,0.237945,-0.673601,-0.0752725,-0.776779,-0.344225,-0.133828,0.132351,-0.0965308,0.469486,0.188513,0.299787,-0.367976,0.160577,-0.226738,0.707548,0.916251,-0.0411254,0.235338,0.391239,0.737709,0.439362,0.0574515,-0.0802188,-0.0736913,-0.662132,1.18939,-0.374617,-0.00777685,0.00989535,-0.560381,0.132497,0.0569386,0.411168,-0.494827,-0.0713151,0.876338,-0.282874,-0.157501,1.18349,0.190371,0.326069,0.119177,0.469237,-0.575841,-0.0455462,-0.53497,-0.660067,-0.13976,0.292242,-0.00468822,-0.593401,-0.835804,0.650269,-0.168717,-0.663534,0.86926,-0.473796,-0.248026,0.711618,0.183735,0.0899738,-1.03677,-0.852149,0.186237,-0.193403,1.17913,0.210869,0.414726,-0.205899,-0.201818,0.0918828,1.11388,1.09801,-0.383064,0.329878,-0.0322833,0.361769,-0.54575,0.945428,-0.129645,0.276464,0.106447,0.332563,-0.124436,-0.139258,0.416529,0.2064,0.0543856,0.415701,0.0841173,0.0296593,-0.107042,0.525702,-0.165302,0.334465,0.166291,-0.546478,0.413321,-0.0285192,-0.121394,-0.349139,-0.347341,-0.424008,0.114439,-0.698606,-0.160565,-0.194778,-0.606846,-0.587801,0.0300015,0.15386,-0.555342,0.19765,-0.373892,1.00694,0.0359509,0.273515,-0.331759,0.728916,0.517561,0.519677,0.292716,-0.0732868,0.347248,-0.0645526,0.405811,0.244006,0.147791,0.439298,-0.0565752,0.551323,-0.28107,-0.21961,0.0127416,0.71099,-0.0864511,0.202266,0.0232809,0.162674,-0.0277453,-0.545786,0.0655775,-0.185177,-0.487017,-0.631963,0.167455,0.282201,-0.545581,-0.146795,0.641351,-0.0614224,-0.28713,0.437312,-0.25481,-0.135288,0.699091,0.107915,-0.553997,0.0674245,-0.383173,0.00681086,-0.487569,-0.128822,-0.102805,-0.714609,0.177327,-0.388162,-0.108225,0.105431,0.728676,0.999856,-0.450023,0.619617,-0.76428,0.578401,0.440485,-0.217486,0.103015,-0.230443,0.927045,0.476796,0.228851,-0.172623,-0.60729,-0.420137,1.17778,-1.27435,-0.394993,-0.115698,-1.14223,1.04209,0.0821948,1.17481,-0.188616,0.707049,0.495843,0.274906,-0.838727,0.165653,0.301865,0.0134948,-0.281696,-0.0472672,-0.722609,-0.239206,0.299804,0.389905,-0.231192,0.46501,0.213279,1.04056,-0.387613,0.497897,-0.185514,1.42328,0.372326,0.0799865,0.58095,0.154499,0.601305,-0.416122,-0.114771,-0.339331,-0.593099,-1.08231,0.332048,0.218861,-0.485311,-0.267653,0.184635,0.231737,-0.341937,0.847119,0.302805,0.977727,0.981324,0.114495,-1.15708,0.879211,0.330272,0.402616,-0.968143,-0.721948,-0.360295,-1.08308,-1.39864,-0.109944,-0.123709,0.910715,0.00214802,-0.320112,-0.47357,-0.0332149,-0.174979,0.183007,0.74631,-0.68066,-0.31369,0.0624138,-0.16421,0.466657,-0.433566,0.0357519,-0.255619,-0.625346,0.972328,-0.263414,0.45402,-0.138371,-0.471533,-0.0987984,0.4371,-0.479532,-0.358142,-0.49984,0.362294,-0.566057,0.0788484,0.0163363,-0.233647,-0.0158843,0.086505,0.385212,0.258748,0.528498,-0.559751,-0.132036,-0.0849801,-0.180189,0.0415017,-1.11384,-0.279002,0.667878,-0.994632,-0.26433,0.825871,0.00690458,-0.394487,0.246749,0.17188,0.545857,-0.179705,-0.505225,0.438443,0.0498609,1.0556,0.134422,0.312713,0.147537,-0.210525,0.490561,0.325583,0.25243,-0.304438,-0.428838,-0.0801109,0.142287,0.281301,0.0535821,-0.769521,-0.128524,0.483187,0.581906,0.327171,0.899522,0.809656,0.108109,-0.0563877,-0.47343,0.81677,1.00141,0.399546,0.777708,-0.368987,1.34099,0.606703,0.17305,0.774838,-0.594077,0.632029,-0.523279,0.00731158,0.109371,-0.64894,-0.770173,-0.477637,-0.60998,-1.39097,-0.594516,0.187133,1.35113,-0.861466,0.801126,-0.00400067,-0.303032,-0.601932,0.665739,0.143786,0.220993,-0.802508,-0.294717,0.56812,0.202876,0.394072,-0.158453,1.22945,0.178531,0.212117,-0.544991,0.878668,1.88163,0.293201,1.67692,-0.403097,1.72749,-0.207812,0.350043,0.643839,-0.659104,0.884494,-1.18207,0.00518833,-0.366565,-1.03091,-0.343309,-1.17874,-0.750002,-1.63087,-0.82387,0.464544,1.36072,-0.710599,-0.101544,0.526809,0.470669,1.01586,0.188497,-0.319625,0.216846,-0.372737,0.462787,-0.334704,0.184407,0.600813,0.19018,0.0823876,0.271666,0.64557,0.456261,0.971697,0.275637,0.403066,0.44383,0.1908,-0.0429729,1.02353,0.0702859,-0.0419006,0.392319,0.719117,0.476575,0.44086,0.511318,0.0404622,0.0815285,0.738578,0.230619,0.759814,0.61678,-0.228656,0.649068,0.882225,-1.38323,2.1795,1.78068,1.61521,-2.09025,-2.17664,-0.951908,1.3673,-2.76869,-1.6329,-2.25045,0.591002,-0.941742,-0.105109,-0.25108,-2.34973,-2.21009,0.469237,1.87867,1.49002,-1.01093,1.41389,-0.838897,1.87129,-2.34339,2.33452,-3.21734,-1.11838,-1.50476,2.47618,-1.13694,-1.91225,0.195659,0.330066,-2.03251,0.143584,-0.315176,-0.592466,0.489089,-0.581165,-1.45437,1.47608,-0.598093,-0.91723,-0.397591,0.555781,-0.249395,-0.870478,-1.34186,0.509603,1.95464,-1.37459,-0.771088,-0.65422,1.50505,-2.90672,1.23961,-0.0459633,-0.5068,-0.738364,-0.0893134,1.09701,-1.44006,0.701017,-2.47356,1.51181,1.26582,-0.142093,-1.90636,-1.99773,0.750761,-1.23799,-0.963337,0.899725,-1.13713,0.327248,-0.164898,1.34599,-2.71357,0.695114,-0.255201,-0.120962,-0.961339,-2.66493,-1.14274,2.64058,0.797791,-0.121668,-2.08386,-0.186242,2.05758,0.447218,-0.487847,-0.52001,-0.0713839,-1.3813,1.23407,-0.00108257,-2.41497,-2.14041,0.682826,-1.39853,1.2665,-1.61391,0.291266,-0.925172,0.0695308,1.40201,0.359503,-2.09794,-0.633403,1.29843,-2.34251,0.487361,0.694695,-1.87209,-0.168331,-2.27531,0.654825,-0.642501,1.79901,-1.60192,0.726305,-1.30912,1.27797,-1.40739,-2.43438,1.06006,0.766777,-2.10953,0.442134,-0.382674,2.73829,-2.86708,0.856519,-1.19119,-0.830318,-0.137395,-1.73102,-1.11196,-1.51451,0.0483605,-1.06163,-0.201597,1.13222,-1.15961,-0.94425,0.554148,-1.45797,-0.825336,-2.24351,0.530468,-3.01537,-3.24011,0.242821,1.39418,1.38879,1.6815,-0.412152,-2.44488,-0.896111,0.244131,-0.299744,0.737631,-1.88856,2.31908,-1.65845,0.646652,-1.3113,0.316376,-1.13095,-0.435315,-0.0021785,-0.268307,-0.531908,0.0429644,-0.79774,-2.65908,0.759302,-0.836674,-1.62237,1.98113,1.51324,-2.39844,-0.262898,-0.664728,-0.978181,-1.82056,-0.258683,1.14495,-2.09066,1.6002,-2.07082,-0.622389,1.43603,0.500517,-1.4142,0.0137143,1.01624,-1.52016,0.411439,0.0482835,1.47208,-2.15841,-0.482344,-1.78668,1.36978,-1.2273,-0.062877,-2.27063,-1.40594,1.47619,-1.10243,-1.16608,-0.55909,0.3584,-2.19505,0.892113,0.260108,0.660076,-1.18837,1.99085,1.64227,1.41188,0.705013,-0.513066,-1.35172,-1.4564,-2.5403,-0.647934,-0.209687,-2.77086,0.309514,0.170086,-1.42609,0.438129,0.0255519,-0.56399,0.75276,-2.59784,1.45703,-1.11159,0.467886,-0.466173,0.545661,-1.69097,-1.01672,-1.21619,-1.19215,1.1317,-1.21135,0.343938,0.360392,0.630317,0.581475,-2.39975,-1.09958,1.51861,-1.97283,-2.03055,2.07286,-1.39835,1.29699,-0.428914,-1.8962,-0.450805,-1.91783,0.314265,-0.467259,1.628,-0.208169,-1.77562,1.01978,-2.24539,0.507203,-0.0122079,0.684508,-2.37983,0.315885,0.563266,-1.03163,-2.6958,-1.63515,1.97169,0.142048,1.17348,1.21419,-0.612374,0.416219,-0.443465,-2.18034,-0.831662,-1.48131,-2.31831,1.55005,1.3613,2.18713,-0.929895,-2.34105,1.02697,-1.70687,0.168949,-1.30052,0.0169765,0.718496,0.174033,-2.83069,-0.520456,1.38037,1.49279,-0.795549,-2.04925,-1.88001,-0.286869,0.722326,0.092034,1.81324,2.00214,-0.732317,-1.93813,-0.163032,-1.43248,-1.32752,-0.988257,0.514939,-3.13543,0.874247,-0.191164,1.81307,1.11762,0.272274,-3.17742,0.785467,2.17728,-2.87779,0.282377,0.469819,-1.97353,0.77882,-0.583605,2.7509,-1.78614,-0.0351623,-2.2301,-0.0727582,-0.806911,-1.91837,2.10418,-1.41948,0.392307,0.491889,-1.72493,-1.3504,1.5371,-1.32373,-2.72018,-1.6757,0.543138,2.30659,1.1408,-0.404695,-2.00222,-1.66596,0.520212,0.116692,-1.59849,-0.840289,-0.397466,-0.257191,0.594854,1.02258,0.836675,-0.577537,-1.21699,0.452766,0.287164,-1.67115,-0.173809,-2.36031,0.371947,-2.08901,0.694399,0.256127,0.528438,0.151413,-1.37791,0.496758,-2.43609,1.19152,-2.28512,0.568588,-1.04365,-1.2594,-3.29771,-1.72025,1.23689,1.45411,-1.67842,1.61568,0.84428,0.196495,0.29261,0.473104,0.546047,0.33542,0.552195,0.770783,0.0136073,0.440265,0.408182};
double ANN::weights[] = {0.893053,0.815048,-0.336562,0.0608664,-0.14258,-0.208182,0.214945,0.332382,0.101715,0.620971,-0.894808,0.110948,0.774183,-1.35165,-0.293216,-0.122686,0.0877734,0.431991,-0.860016,-0.921726,-0.1293,2.22233,0.425029,0.0354549,0.744179,-1.33531,1.67997,0.624885,0.26907,0.151715,-0.494965,-0.273309,0.930186,-0.705512,-0.0873703,-1.00156,0.617304,-0.0648102,1.30436,0.497408,0.178097,-0.836943,-1.93768,0.0923422,-0.0995988,-0.971483,0.642847,-0.000648019,0.764656,1.62585,0.0994169,0.760978,0.53937,-0.19292,0.19549,0.325388,0.410183,-0.0476728,-0.491672,-0.453663,-0.88515,0.88384,-0.659913,-0.124692,-1.19388,-0.408635,-0.398287,-0.0579067,0.270618,0.137968,-0.506628,0.565614,-0.00343216,0.476544,0.731452,-1.21123,0.0676234,-0.0546693,-0.199267,0.38024,0.582442,-0.65798,-0.624973,0.0667294,0.39335,-1.09469,1.27193,-1.20006,0.890491,1.21119,-0.150502,0.242067,-0.549762,0.173397,0.263918,-0.288623,0.743872,-0.316113,0.478794,0.156061,-1.80312,-1.52222,0.0375947,-0.0456066,-0.0297457,0.309526,-0.353448,1.00171,-0.074819,0.00144265,0.271657,0.787451,-0.114226,1.04641,-0.437772,-0.278596,-0.161159,0.219375,-0.791776,-0.234419,-0.142519,0.105574,0.753605,0.285077,0.50623,0.431508,-0.504353,0.206256,-0.676042,-0.821085,0.860027,0.415775,0.138067,-0.113711,0.531343,0.496201,-0.814757,0.556202,0.875637,0.189139,0.769879,0.0108144,-0.0406969,-0.421371,0.511736,0.0279605,0.371693,-0.544685,0.526224,-0.0809619,-0.436586,-0.425817,-0.0231366,0.0185704,-0.509088,-0.494222,-0.360082,0.55319,0.57001,0.208906,-0.166985,0.901664,0.544993,0.205814,0.0255518,0.438957,-0.839346,1.44067,-0.00555736,-1.04849,-0.341625,0.383375,1.3381,-0.370845,-0.331659,-0.0550772,-0.445356,1.51849,0.0337857,0.0881696,1.45849,2.56347,0.265919,-0.319215,-0.00301674,-0.680005,0.397371,-0.0694324,0.209565,0.588346,-1.47056,-1.42969,0.463693,-1.21781,0.374446,-1.35739,0.446082,0.160113,1.27532,0.191501,0.723315,-0.275835,-0.88606,0.0989012,0.0465779,-0.256928,-0.33388,-0.360316,-0.274138,0.954963,0.0535334,0.639229,-0.102229,-0.570251,0.542146,-0.0153979,-0.402536,0.421222,-0.270108,-0.525634,-0.831143,0.30312,0.114633,-0.287862,0.859748,-0.382532,0.863102,0.723902,0.470427,-0.533348,0.0466878,0.324674,0.144983,-0.065742,-0.058679,-0.456777,-0.130467,0.771794,0.813567,-0.0548379,0.044603,-1.23529,-1.5734,0.146722,0.391921,-0.873706,0.100813,-0.281494,0.267326,1.12584,-0.747117,0.254581,0.0291293,0.242045,0.0439151,-0.403992,-0.431086,0.443879,0.0653107,-0.3516,-1.2768,0.382721,-0.221042,-0.366445,-0.448217,-0.302623,0.0489852,0.296285,-0.273632,-0.457321,-0.65583,0.124453,-0.0318954,0.0828392,0.634341,-0.828406,-0.419245,0.130682,0.860684,-0.126365,0.264287,0.140008,0.208289,0.230393,0.120716,-0.629506,0.479061,0.661576,0.664495,-0.417116,-0.58456,-0.0496806,0.847577,0.0188413,-0.27607,0.318019,0.490354,-0.272559,0.0156443,0.219472,-0.311742,0.633408,-0.698804,-0.230118,-1.16757,0.0251496,0.432897,0.0117534,0.0484441,0.385735,-0.1814,-0.55917,0.27013,0.431752,0.42744,-1.00826,0.270255,-0.261173,0.171611,1.02463,2.32582,-0.211537,-0.420933,-0.0161274,-0.00678118,-0.664433,0.524228,-0.450273,0.420761,0.213343,0.626457,0.788496,-0.211475,-0.549896,0.349055,0.129067,0.528078,0.3402,-0.0586615,-0.0922963,-0.867698,0.184326,-0.433967,-0.155734,-0.36912,0.109668,0.561422,0.481095,0.710769,-0.40232,0.131283,0.205386,0.498079,0.209236,-0.225023,-0.491443,0.140684,0.585883,0.301536,0.896999,1.15463,0.757531,0.1418,0.20542,-0.189054,-0.122208,0.056859,-0.117019,0.683261,0.892068,-0.864248,0.0328632,-0.118012,-1.07751,-0.139999,-0.568473,0.341475,0.825483,-0.342037,-0.902403,-0.0312586,0.533408,1.11945,0.10962,0.150976,-0.864984,1.3175,0.730667,0.272193,-0.238387,-0.291864,-0.00731159,0.372653,-0.97989,-0.383717,-0.421007,0.389017,0.223441,1.31902,-0.749371,-0.41872,-0.720196,-0.511776,0.852532,0.372281,-0.124513,-0.112561,-0.165543,0.104526,-0.525782,0.843789,0.502775,-0.27404,1.09654,0.63317,-0.36104,0.0365708,0.442275,-0.11475,0.574748,-0.138102,-0.940778,-0.0427946,-0.185332,-0.115587,0.730147,-1.23473,0.690047,0.197325,-0.371905,0.689052,0.466417,-0.869812,-0.0816061,0.408385,0.338208,-0.100245,0.434505,-0.208276,-0.981515,-0.860776,-0.322603,-0.250351,0.735317,1.18563,-0.441827,0.189356,0.43259,-0.00660481,-0.944899,0.0909056,0.305727,0.861206,0.0660343,0.152285,0.323179,-0.565504,-0.116122,0.694892,0.273401,0.415164,0.331749,-0.728582,-0.392738,-0.67033,-0.201235,-0.169097,-1.21588,-0.356869,0.0934423,-1.14723,-0.590698,-0.925401,0.341866,0.578447,-0.57784,-0.273558,-0.256461,0.410791,-0.341077,0.939934,0.40971,0.326481,0.0657345,0.542277,-0.644039,0.814958,-0.500658,-0.345586,-0.351875,0.316909,0.37647,0.580616,-1.11245,0.228751,0.628252,-0.121547,-1.22971,0.722801,-0.051681,0.291487,0.0301923,-0.77662,-0.462292,-0.0440795,-0.320453,1.38194,-0.962769,0.0745054,0.00975287,-0.255186,-0.0516507,-0.444749,1.17904,-0.380864,-0.28497,0.0143257,-0.0709273,-0.618195,0.776095,2.3468,0.769881,0.780369,-0.2881,-0.407332,-0.363847,0.931402,-0.607986,0.973937,1.26503,-0.296374,-0.648596,-0.58942,-1.0052,-0.161326,-0.545468,1.98384,-0.868766,-0.321972,-0.0965784,-0.184456,-0.854285,0.283179,0.202482,0.258875,-0.414054,0.442234,0.227559,-0.0270971,0.491296,0.181065,0.0844513,0.0225348,0.0848672,-0.704471,0.384627,0.184099,-0.727106,-1.10514,-0.0394912,2.22455,0.546097,-0.129996,0.244506,0.127797,-0.978978,1.61833,-0.885595,1.28563,1.38742,-0.480551,0.266728,-0.648004,-1.35483,-0.0991433,-0.298866,2.10624,-1.00123,-0.787113,-0.73722,-0.851691,-1.2743,0.452159,0.398473,-0.666939,-0.972525,1.02576,0.053154,0.290385,-0.387915,0.63986,0.907281,-0.506808,0.459026,-0.378615,0.539329,0.582663,-0.546991,-0.893018,-0.335824,-1.77643,-0.432196,0.0785629,0.79233,0.0751556,0.641684,-0.412761,0.903046,0.89091,-2.18449,0.999943,0.0243889,0.405183,2.33821,-0.330702,-0.836239,0.106721,0.46449,-0.502492,1.40207,0.525552,-0.652188,-0.592769,-0.321319,-1.22963,1.38696,-2.77216,0.552091,-0.52278,0.376734,0.429607,-0.535969,-0.262097,-0.312074,0.811222,0.484783,0.369713,-0.0301123,-0.733439,-0.991284,-1.90333,0.147736,0.900167,0.0956571,0.385487,0.446438,-0.376273,-0.309764,-0.255185,-0.821359,0.558884,0.328516,-0.840821,1.23578,0.062582,-0.525687,-0.899987,0.196741,0.55532,1.06481,-0.148279,-0.604256,0.800081,0.0259041,0.0115947,0.768602,-1.21502,-0.0816984,-0.419936,-0.0593813,-0.209443,-0.487629,-0.672759,-0.00350582,-0.366301,-0.306405,-0.209307,0.310177,-0.529925,-0.773445,0.303077,-0.00599271,0.0857762,-0.19539,0.147286,-0.156647,-0.0665523,-0.843151,-0.857116,-0.699807,0.837826,0.665767,-0.182052,0.0224759,0.673913,0.344534,-1.31332,-0.332729,0.870339,0.313041,-0.315373,-0.276648,-0.178571,-0.237054,1.18758,0.680401,0.849557,-0.351016,0.609956,-0.149894,0.11372,0.30643,0.159447,0.435746,-0.890826,-0.24992,-0.485992,1.27958,0.266327,0.133588,0.549,-0.405247,0.153818,-0.25443,-0.273456,-0.0794176,-0.549569,-0.189433,-0.780625,0.959905,0.170112,-0.443116,-0.864003,-0.163272,0.571254,0.508856,-0.0728583,-0.472436,-0.0602321,-0.406837,0.223413,-0.944955,0.142149,0.422417,0.318805,-0.230622,0.0274897,-0.36339,0.468345,-0.322229,0.601644,0.726476,-0.0927129,0.0699297,-0.157526,0.736435,-0.372645,0.035849,0.398145,0.18149,1.66116,0.0546465,-0.934243,0.246241,-0.0983712,-1.62566,2.17732,-1.07949,1.67037,1.88378,-0.191412,0.480194,-0.992982,-0.574831,0.236834,0.0942922,2.58943,-1.24666,-0.410075,-0.448006,-1.69686,-1.21228,0.104201,0.635563,-1.80703,-0.367453,0.105094,0.0617791,0.661793,-0.444187,0.885466,1.47538,-0.601279,1.52257,0.0427937,0.280583,0.519816,-0.845366,-1.79427,0.124852,-0.909421,-0.596288,-0.129466,0.0214908,-0.136238,1.65434,-0.297121,1.1262,1.42076,-1.92199,0.500675,-1.28458,1.30257,2.12104,-1.82083,-0.737983,0.756253,0.406517,-0.297572,1.10251,0.392185,-0.256279,-1.60586,-0.434421,-0.734069,1.49757,-2.32151,1.29992,-1.58559,0.809218,0.858581,-0.462668,1.20984,-0.280217,1.09134,0.242168,0.0427086,-0.406753,-0.596596,0.065576,-0.966488,-0.467106,-0.285343,-0.250126,-0.0603875,-0.355594,-0.385663,-1.16241,-0.465864,-0.417935,0.878576,0.882368,-0.844595,1.3951,0.835708,-0.392568,-1.52697,0.153376,0.0380956,0.563252,-1.37688,-0.461116,0.213738,0.0125625,-0.346874,1.16012,-1.12314,0.376709,0.764963,-0.780602,0.46589,0.849575,-0.260594,0.341831,-0.763292,-0.431144,-0.217467,1.22682,-0.29674,-0.316453,-0.458546,0.363964,0.679632,0.0623618,0.772586,0.0192564,-0.601047,-0.970122,-1.97869,-0.15175,0.0314562,0.902738,-0.521002,-0.461967,0.894929,-0.0335287,-2.36305,0.559346,1.37014,0.0125545,-0.260013,0.105075,1.26915,-0.344947,2.04861,0.384705,1.39344,0.10677,0.542956,-0.619515,-0.367046,-0.307262,-0.123687,0.00572544,-1.117,-0.316844,-0.555812,1.31367,1.39346,-0.533096,0.0374842,-0.287758,0.392338,0.369027,-0.583112,0.215805,-0.642212,1.23349,-0.500899,-0.592033,0.449205,0.0719071,-0.0700968,0.718949,0.485893,0.298389,-0.312079,0.223021,-0.704405,0.684731,1.45034,0.502041,-0.261874,0.51638,-0.751276,-0.062577,-1.21016,-0.176335,0.695253,0.353621,0.411866,0.0391597,-0.0948108,-0.4739,0.297659,0.625101,0.210279,-0.0179885,0.205808,0.044214,0.600554,-0.400699,-0.421046,-0.108083,-0.129471,-0.917674,0.944945,0.148973,0.776719,-0.19991,0.307051,0.191053,0.0221736,0.58222,-0.263298,0.138115,0.900832,-0.555291,-0.163797,0.354433,0.0738529,-0.639216,-0.930222,-0.155152,-1.80476,0.146261,-0.98838,-0.47377,0.0316647,-0.068825,-0.0103626,0.430906,-0.226781,0.77335,0.571382,-0.291095,0.379364,-0.407011,-1.13272,0.712717,-1.82963,-0.484706,0.522509,-0.754226,-0.473382,2.2209,-1.02653,1.00621,0.739613,-0.141241,-1.3583,-2.88415,0.210725,1.73968,-2.14686,-0.855688,1.15531,0.847532,0.468617,0.251037,1.07723,-0.417243,0.431007,0.282195,0.887856,1.19169,-1.47393,1.18743,-2.40478,1.23734,0.719594,-1.03312,1.21574,-0.763473,0.453368,1.48952,-0.740467,-1.31062,0.0847809,-0.689521,-0.132637,1.41054,1.34128,-0.687793,-0.560024,1.16589,-0.612705,-0.241235,0.487563,-1.43604,-0.218003,-0.830343,-1.11254,0.54028,-0.396855,-1.26986,0.560085,0.476979,-0.336258,0.104473,0.174099,-0.929782,1.22674,0.223678,0.360405,0.361963,-0.581972,0.92782,-0.0543893,0.147899,0.988187,-0.386672,0.666141,-0.839642,-0.902542,0.398851,0.342439,0.25817,-0.112371,-1.71508,-0.127207,0.689329,0.301379,-0.0588513,-0.830241,-0.184845,-0.599787,-0.894812,0.0393908,-0.681451,0.773135,0.330679,-1.30318,0.286647,0.999501,-0.295567,0.845926,0.318382,-0.174906,0.449653,-0.610595,-0.41643,1.56295,0.763741,0.0772116,0.308161,-0.286842,0.804032,1.20643,-0.256418,1.12423,0.467223,0.0980491,-0.0882253,-0.557062,0.334457,0.270001,0.979366,-0.644102,-1.15666,0.466473,-0.269096,-0.433395,-0.428532,-0.731093,0.438821,-1.08956,0.0726204,-0.830525,-0.858909,1.16709,0.58768,-0.00230374,0.176059,0.294125,0.54131,-0.852194,0.267939,-0.142785,0.336802,0.292956,0.865343,-0.265351,-0.103024,0.192516,-0.0301767,-0.127953,0.135183,1.04053,-0.784674,0.524895,0.139424,0.348888,-0.269207,-0.0117297,-0.101012,-0.190746,0.742044,0.566472,0.820866,0.168888,-0.102077,-0.332722,-0.44623,0.22351,0.0261126,-0.387989,-0.0342616,0.492793,-1.02816,0.681309,0.50582,0.443132,0.476995,-0.467135,0.0168646,-0.485331,0.525705,1.24278,0.39627,-0.216733,0.622205,-0.609311,-0.686448,-0.0315345,0.61693,-0.0360193,-0.0760564,-0.287243,-0.0420606,-0.56592,-0.280638,0.955221,0.76185,0.128707,-1.00597,-0.282077,0.728246,0.402559,1.1549,-1.78062,-0.93626,0.746857,-0.377318,0.0982705,1.55408,-0.695886,-0.105113,0.306455,1.46106,-2.09658,-2.74828,-0.612238,1.54125,-1.26315,-0.600325,0.624956,0.540256,0.941246,0.119418,-0.0800827,-1.46536,1.7835,1.0594,1.66845,1.28237,-0.733444,1.36124,-1.98934,0.79886,1.38715,-0.118721,0.717842,0.065704,-0.16412,2.40756,-0.881591,-1.36643,0.68638,-0.976314,-1.19371,1.16123,1.08602,0.215549,0.313059,0.353333,0.728866,-0.0310186,0.984069,0.0967752,-1.29558,-0.908712,-0.285134,0.191881,-0.785865,-1.12132,1.28565,0.171245,-0.515726,-0.334968,0.12718,-0.738532,0.892694,0.283702,-0.00310287,-0.21286,-0.754597,0.460435,-0.869384,0.463205,-0.298456,-0.690726,-0.433403,-0.0506404,-0.315028,0.467127,0.587631,-0.846947,-0.772545,-1.7587,-0.69367,1.2241,0.377794,-0.0820629,-0.963472,0.321898,-0.440765,0.500734,0.191849,-1.34187,0.91327,0.250692,-0.79171,0.197933,0.414049,-0.160082,1.40779,0.380717,-0.809553,0.787072,0.917843,0.601388,1.13497,1.01024,-0.192717,0.00206124,-0.519972,0.315524,1.31775,0.356014,0.693556,-0.089256,0.460818,-0.457612,-0.152549,0.475155,0.737167,0.179816,-0.502507,-0.766654,-0.743472,0.555571,0.0333279,-0.277916,0.0347649,0.930283,-0.594298,-0.0154706,-0.243349,-1.35772,0.303152,0.170326,0.148098,0.400834,-0.754922,-0.0401837,-0.894163,0.309381,1.04412,0.363345,-0.108934,0.499133,-0.249102,-0.628693,0.504783,0.491924,0.0155368,-0.128405,-0.120942,-0.326645,-0.879816,-1.30685,0.620281,-0.10311,-0.198768,-0.611595,-0.436098,0.2466,0.407206,1.24937,-0.167829,-0.276886,-0.543099,0.022786,0.495234,-0.113791,-0.635082,-0.738727,-0.285997,-0.904067,0.702823,0.798391,0.281802,0.626148,-0.0109805,0.106422,-1.71527,0.903341,1.40701,0.571121,-0.998254,1.01177,-0.377803,-0.727199,0.87014,0.890881,0.476835,0.0675278,-0.0186828,-0.556642,-0.929731,-0.620987,0.954423,0.709975,-0.205986,-1.23207,-0.547637,1.38943,0.959644,1.28124,-0.563624,-0.621816,0.177982,-0.0265042,-0.032147,0.128043,-0.59524,-0.68699,-0.222194,0.612102,-0.322902,-0.615324,-0.440499,0.23043,0.244768,0.558266,-0.375866,0.198254,0.170596,-0.0884722,-0.6032,-0.611641,1.07264,0.615709,0.726061,0.366753,0.321633,0.277372,0.0219304,-0.105953,0.606321,0.57083,0.32161,0.380859,-0.298584,0.380328,-0.670811,0.0719165,0.395232,-0.0843663,-0.269674,-0.442632,-0.376585,0.0388038,0.207578,0.110682,0.531943,0.0760726,0.180383,1.89835,-1.96996,-1.50181,0.0778578,-0.483063,-0.426894,0.108655,1.16276,0.00477991,-1.02069,-0.879649,0.32267,-0.705071,0.289369,0.526723,0.222498,-0.812273,-0.127522,0.0645883,-1.08983,0.628518,0.345471,0.492763,-0.0316113,-0.0794305,0.233773,1.07514,-0.301131,-1.70481,-0.183664,-1.05628,0.457039,1.33332,0.29605,-0.496669,-1.07668,-0.148486,0.580293,0.398827,0.82519,-0.233411,-0.113676,-0.353164,-0.294952,-0.905875,-0.0900985,0.146937,2.12605,-0.334706,-0.604722,0.348622,0.702187,1.52036,1.70839,0.799385,-0.719965,-0.60879,0.720789,-0.305817,0.686367,0.575701,0.320162,-0.20507,0.887892,0.248926,0.00741295,-0.316029,0.75534,-0.579256,-0.903828,0.355976,-0.121163,0.858696,-0.232337,-0.0101016,-0.342866,-0.0362717,0.329549,-0.340971,0.638488,-0.957936,0.398845,0.402141,-0.470616,0.428578,-0.234887,-0.253944,0.451257,0.0678069,0.0162687,0.498844,-0.862858,0.439297,0.0744564,-0.229169,-0.402536,0.546445,-0.344269,0.316515,0.486952,-0.332495,-0.268555,-0.547055,0.245298,0.557255,-0.229787,-0.8647,0.257281,0.149215,-0.333738,1.11285,-0.0811655,-1.42756,-0.523012,-0.477489,0.0424026,0.696078,-1.37789,0.0336408,-1.31006,0.712679,0.156842,-0.288163,-0.335002,0.466544,0.257681,0.915648,-1.0013,0.423366,0.651126,0.00459649,-0.303055,-0.0637141,-0.118767,0.344627,1.39296,0.707795,0.224184,-0.136073,0.0912706,-0.0793561,0.427345,0.657034,0.672091,0.0810265,0.0268271,1.08746,-0.87167,0.197615,1.11984,0.657204,0.274754,-0.654689,-0.566913,0.893537,0.11315,-0.83546,0.0100817,0.460929,-0.861007,0.587916,0.259224,0.682061,0.385185,-0.165432,1.43779,0.532987,-1.07219,-0.0232132,-0.58941,-0.0747577,0.317753,0.187645,-0.792275,0.0041042,-0.354715,-0.0837063,-0.248363,-0.104443,0.660028,-0.0914162,0.211792,1.03204,-0.51613,0.180631,0.58402,-0.00568806,0.065573,0.377441,0.0210407,-0.193879,-0.471763,-1.35964,-0.801601,1.2116,1.18951,-0.829492,0.750457,0.241502,-1.24148,1.54692,-1.14161,-0.0958243,1.30102,-0.378344,0.537083,0.258955,-1.30303,0.667892,-0.118002,-0.503843,0.368042,-0.5091,-0.944231,-0.144167,0.28773,-0.837903,-0.212047,0.0443793,-0.943631,0.252977,-0.161115,0.853826,-0.482891,-0.00158687,0.822032,0.809644,-0.304714,-0.57038,1.10522,-1.21415,0.216559,0.103023,0.674133,0.487123,0.550172,-0.187824,0.684434,0.815198,-1.43097,-0.369463,-0.47601,0.0894946,0.604584,-1.23368,0.381898,0.302239,-0.588036,-0.427462,0.320374,-0.0618453,1.87316,0.180408,-1.23728,-0.385292,0.0652619,-1.02854,0.714563,-0.984941,-0.181393,0.56852,-0.610584,-0.245305,-0.358978,-0.415725,0.275697,-0.132296,0.251187,-0.79831,-0.0662982,-0.121778,0.592526,-0.108053,0.05412,0.519279,-0.0093947,-0.0541376,0.600658,0.495857,0.240968,0.0304252,0.087484,0.373836,0.354268,-0.197715,-0.135425,0.351757,0.0318477,-0.79459,-0.223416,0.138186,0.343531,0.110319,-1.17968,-0.413085,-0.388313,-0.0122391,-0.331515,-0.267817,0.235518,0.250056,-0.149567,-0.134867,-0.166793,0.549945,0.301921,-0.237225,0.28528,-0.275286,-0.598489,1.13539,-0.384673,-1.02216,0.345973,0.348578,0.140602,-0.0391876,-0.687472,0.360019,-1.50167,-0.0453391,0.139731,-0.0855447,-0.300661,0.171208,0.809945,0.410985,-1.09724,-0.600922,-0.362737,0.171614,0.625147,-0.923217,-0.533004,0.259872,0.653414,0.00873011,-0.226528,-0.417434,0.520351,0.0958219,0.839595,0.76646,-0.920506,0.0316446,0.150655,1.50648,-0.288772,-0.212855,-0.247658,-0.704988,1.00841,0.498766,-0.133605,0.611673,0.366296,-0.574748,1.09776,0.370548,-0.41547,0.481593,0.901852,0.904192,0.677959,-1.089,0.985999,0.539014,0.147225,-1.19316,-0.294692,0.0078939,0.493514,0.188336,-0.410463,-0.118314,0.111355,-0.842691,0.595396,-0.0917474,0.827919,0.300882,0.35686,0.508832,-0.526758,0.385134,0.215141,-0.0938223,0.666717,0.201849,-0.732648,0.610344,-0.226638,-0.61922,-1.59436,0.907809,0.557541,-1.4603,0.429777,0.174983,-0.96063,0.254872,0.27085,1.53674,1.40564,-0.53902,1.00683,0.17317,-1.75243,0.467079,0.0896383,-0.334171,-0.407786,0.799807,-0.922827,-0.400059,-0.44263,-0.312701,0.177943,-0.137304,0.508874,-0.412951,-0.588375,0.600002,-0.0768584,-0.100832,0.878718,-0.521581,-0.0193329,0.971001,1.0125,0.0262091,-0.777218,-1.48709,-1.11262,-0.123819,0.243946,-0.0328845,-0.0220454,-0.30507,-0.682926,0.913723,-0.996425,-0.204716,0.814186,0.164206,-0.0161028,0.386974,-0.230376,0.403652,1.22224,-0.415804,-0.629496,-0.0397936,-0.519623,-0.196357,0.298146,0.3823,-0.0252034,0.267516,-0.641158,0.08948,0.0126448,0.153922,0.648517,0.212569,0.43719,0.679333,-0.953383,-0.360935,0.647908,0.311264,-1.42055,0.55688,1.86739,0.0221982,0.205822,0.852521,-0.260654,1.3155,-1.08139,-0.828908,-0.208411,-1.09813,0.167518,-0.344678,-0.272626,0.749571,0.43799,-1.43135,0.282446,0.342324,2.20794,-0.194059,0.458732,0.617217,0.207205,-0.0370918,-0.150655,-1.37203,-0.0247476,0.902462,0.269901,-0.974318,-0.798459,0.282886,-0.07617,1.40839,0.0227667,-1.07356,-1.21039,0.760013,-0.976976,1.19643,2.54138,0.432102,0.352843,0.738586,0.398298,1.4719,-1.27249,-1.80124,0.802186,-0.677947,-0.18982,-0.484982,0.192419,0.335407,0.448359,-1.56806,-0.211297,0.77394,2.60845,-0.979442,0.377737,0.471501,0.552696,-0.53882,-0.575022,-1.33646,0.24013,1.30589,0.437375,-0.94385,-1.64482,-0.199719,-0.267599,1.3485,0.691184,-1.0219,-1.99714,-0.383353,0.728886,-0.712842,-0.692107,0.319716,0.477206,0.555177,-0.273662,-0.423495,-0.0141914,0.00529834,1.17909,0.840724,-0.145858,0.68143,0.994824,0.778991,-0.450118,0.695157,0.88572,0.943735,-0.666034,-0.0903383,0.148124,0.549951,0.923014,1.09501,0.213463,0.687246,-0.20377,0.17881,1.1418,1.11974,0.360447,1.0889,0.276625,0.634278,-0.20803,0.2209,0.478056,0.209179,-0.843331,-1.57419,1.05191,2.58378,-1.66726,-3.91485,-1.02203,1.90933,-3.80745,1.39458,-1.64849,3.23161,-1.36265,-1.83487,1.53327,-1.38318,-1.207,1.68081,-0.810936,-0.411604,-0.938758,3.94288,0.27038,-2.55063,1.54112,-1.92076,0.871268,-0.900202,-0.316736,-1.08261,-0.305154,0.49986,0.870967,-1.35568,-3.20405,-0.445675,-0.0514674,-1.04637,-0.1111,-0.515042,0.779363,1.03182,-0.585871,0.325314,-2.69621,-0.891506,0.705984,-1.66939,-0.228286,-1.50561,-0.776428,-2.40235,-0.547889,-1.73018,1.64687,-1.57028,2.59854,-0.499392,-1.3334,-2.24516,2.47517,2.27613,0.68571,-0.167374,-1.83156,-2.2683,-1.78514,0.3257,-0.749438,0.492605,-0.94843,0.0157214,1.08223,-3.11443,-0.0248557,1.48792,1.16066,-0.109905,-2.60592,-2.10443,2.86687,-0.461735,-1.74163,-2.04827,0.649753,-1.04786,-2.2434,1.90296,-1.48982,2.14843,2.78567,-4.65338,1.91287,1.7246,-0.794295,-2.34778,-1.77779,1.31033,1.33951,-1.82269,-3.36402,1.03845,-0.689409,-0.0633016,0.183133,0.843323,-1.30242,-3.00667,-1.30686,1.65096,-2.97906,1.79105,-1.24919,0.260737,-2.30564,2.23433,-2.18031,-0.937989,0.31772,1.25126,0.148705,-0.307159,-0.796294,-0.869913,-2.49447,1.19305,1.26047,0.514537,-3.58356,-1.30347,1.16565,-2.79808,-0.572515,-3.19397,0.367677,2.16114,0.716045,-1.88051,1.10496,1.38078,-2.16486,-0.0156039,1.35439,0.593813,-1.54856,0.985359,-1.52685,-2.26831,1.80148,0.193504,-0.609577,-0.551961,0.42445,1.39909,-0.568599,0.515124,-1.31489,-1.4577,-1.53595,-1.51863,3.30988,-1.42037,1.12747,-3.13954,2.29695,-2.74388,-3.64722,1.45068,-2.38925,0.289171,-1.20443,-2.6166,-2.13724,-1.29684,-1.2795,0.75698,1.21974,0.510814,1.75179,-1.02355,0.778234,0.0407282,-3.07185,1.60602,-0.632114,-1.30725,0.38127,-2.5958,0.373743,-1.77761,-0.979224,0.473903,-1.26656,-1.94541,0.161763,0.520942,-0.0856836,-2.66025,-0.211156,0.590539,-1.96703,2.44812,2.16867,-2.764,1.12993,0.963997,1.76681,-0.849855,-2.79177,-3.02307,-1.15025,0.762583,-2.36901,-1.25965,-0.722114,3.25511,-1.10592,3.37168,-1.54425,-2.38202,-0.420863,-0.149646,-1.45927,-2.22354,2.45332,-1.95386,-2.52997,1.40548,2.87326,-1.21226,-0.194254,-1.22892,1.17503,-1.08881,0.768333,-0.737133,-1.84039,0.0323379,0.66479,-0.962341,-2.21436,-1.57405,-1.47031,1.10305,1.09302,-3.38813,2.23032,-1.24731,0.741365,-2.53897,0.411569,-2.82162,-1.77626,-1.60254,0.0858252,0.541201,0.0292456,-2.06508,0.356727,1.46605,-1.17645,0.191716,-1.31474,3.47957,-0.825185,-3.65917,-0.760322,1.84071,-1.27925,-2.52282,0.372404,-3.08025,-0.761036,-1.46618,-0.681163,-2.2065,0.0830515,0.601518,1.23816,0.92504,-3.2336,0.54931,0.552891,0.0416986,0.53197,1.17514,-2.92557,-0.161345,0.980761,1.2031,0.863924,-0.256295,0.439386,-2.37888,0.533241,-0.553006,0.489688,-0.732387,-1.63603,-1.47209,-1.08743,-2.89134,1.22977,-0.74964,0.900117,-2.23887,-1.14995,-1.12829,0.270132,0.690062,-0.502873,-2.5921,1.79685,0.967843,-1.32456,-1.40258,-2.04934,-0.647694,0.38411,0.991035,-0.41846,-2.19336,-2.91735,-0.312506,1.30604,-0.814587,0.225084,0.992479,-1.47169,-0.469899,1.03084,0.0816944,-0.559822,1.28807,-1.64789,-1.11446,-2.39994,-2.2243,-0.345167,0.452903,-0.070514,-1.51855,0.127967,-1.33311,-1.91273,1.48188,0.084432,0.0236136,-1.75078,-0.536596,0.0471971,-3.33747,1.7447,-0.753776,0.338303,-2.68973,1.09193,-2.09922,0.682804,-1.86929,-1.34385,1.26039,0.498536,-1.83187,-0.287655,-0.405884,-1.09074,0.91725,-0.860364,0.259128,-2.64874,0.687009,-2.89909,0.788814,-0.62135,0.924169,-0.251914,-0.633775,1.23266,1.75677,-2.23416,-2.42828,-1.77742,1.21506,-1.9225,0.555567,1.56042,1.92086,0.98199,-3.11844,-0.0492809,-0.45721,-1.87067,2.72525,0.0457095,0.867893,-2.19447,-1.06406,-3.58295,-0.00800057,0.30873,0.227162,0.515397,0.687993,0.621761,0.807019,0.240688,0.501011,0.597207,1.09435};

class Image {
public:
  Image(const vector<string>& text) : image(text) {}

  void Initialize() {
    int slope = FindSlope();
    if (slope) {
      Tilt(slope);
    }
    Cut();
  }

  static void Show(ostream& oss, const vector<string>& image) {
    copy(image.begin(), image.end(), ostream_iterator<string>(oss, "\n"));
  }

  string Classify() const {
    ANN ann(w_cells * h_cells, 40, 10);
    string result;
    for (size_t num = 0; num < numbers.size(); ++num) {
      vector<double> stat;
      CollectStatistics(numbers[num], &stat);
      result += '0' + ann.Classify(stat);
    }
    return result;
  }

private:
  static const int MAX_ANGLE = 45;            // degrees
  static const size_t w_cells = 5;
  static const size_t h_cells = 10;
  static const size_t MAX_BORDER_WIDTH = 10;  // percent 
  enum Color {W = '.', LG = '%', DG = '#', B = '@'};

  vector<string> image;
  vector<vector<string> > numbers;
  
  void MakeBlackAndWhite() {
    size_t h = image.size();
    size_t w = image[0].size();
    for (size_t y = 0; y < h; ++y) {
      for (size_t x = 0; x < w; ++x) {
        if (image[y][x] == DG) {
          image[y][x] = B;
        } else if (image[y][x] == LG) {
          image[y][x] = W;
        }
      }
    }
  }
  
  int FindSlope() {
    size_t h = image.size();
    size_t w = image[0].size();
    double max_variance = 0;
    int slope = 0;
    for (int angle = 0; angle <= MAX_ANGLE; angle += 5) {
      double k = -tan(static_cast<double>(angle) / 180 * PI);
      double current_variance = 0;
      for (int b = 0; b < int(w - k * h); ++b) {
        int dogs_in_column = 0;
        for (size_t y = 0; y < h; ++y) {
          size_t x = static_cast<size_t>(k * y + b);
          if (0 <= x && x < w) {
            dogs_in_column += image[y][x] == B;
          }
        }
        current_variance += pow(double(dogs_in_column), 5./4) * pow(double(MAX_ANGLE - angle), 1./20);
      }
      if (current_variance > max_variance) {
        max_variance = current_variance;
        slope = angle;
      }
    }
    return slope;
  }

  static void FindBestCuttingPoints(const vector<string>& image, bool vertical, vector<size_t>* points) {
    size_t h = image.size();
    size_t w = image[0].size();
    if (vertical) {
      swap(h, w);
    }
    size_t dogs_in_column, prev = 0;
    bool in_gorge = true;
    for (size_t x = 0; x < w; ++x) {
      dogs_in_column = 0;
      for (size_t y = 0; y < h; ++y) {
        dogs_in_column += vertical ? image[x][y] == B : image[y][x] == B;
      }
      if (prev > 0 && dogs_in_column == 0) {
        in_gorge = true;
        points->push_back(x);
      }
      if (in_gorge && dogs_in_column > 0) {
        in_gorge = false;
        points->push_back(x);
      }
      prev = dogs_in_column;
    }
    if (dogs_in_column > 0) {
      points->push_back(w);
    }
  }

  // Tilts on angle slope
  void Tilt(int slope) {
    size_t h = image.size();
    size_t w = image[0].size();
    double k = -tan(static_cast<double>(slope) / 180 * PI);
    for (int y = h - 1; y >= 0; --y) {
      size_t x = static_cast<int>(k * y + w);
      image[y] = string(w - x, W) + image[y];
      image[y].resize(image[h - 1].size(), W);
    }
  }

  // Cuts out numbers
  void Cut() {
    size_t h = image.size();
    size_t w = image[0].size();
    vector<size_t> points;
    FindBestCuttingPoints(image, false, &points);
    numbers.resize(points.size() / 2);
    for (size_t i = 1, j = 0; i < points.size(); i += 2, ++j) {
      size_t start = points[i - 1] - 1;
      size_t width = points[i] - points[i - 1] + 2;
      for (size_t y = 0; y < h; ++y) {
        numbers[j].push_back(image[y].substr(start, width));
      }
    }
    for (size_t i = 0; i < numbers.size(); ++i) {
      points.clear();
      FindBestCuttingPoints(numbers[i], true, &points);
      //numbers[i].swap(vector<string>(numbers[i].begin() + points[0], numbers[i].begin() + points.back()));
      Prune(0, numbers[i][0].size(), points[0], points.back(), &numbers[i]);
      DeleteBorder(&numbers[i]);
    }
  }

  static void Prune(size_t start_x, size_t end_x, size_t start_y, size_t end_y, vector<string>* image) {
    // image->swap(vector<string>(image->begin() + start_y, image->begin() + end_y));
    vector<string>(image->begin() + start_y, image->begin() + end_y).swap(*image);
    for (size_t y = 0; y < image->size(); ++y) {
      //(*image)[y].swap(string((*image)[y].begin() + start_x, (*image)[y].begin() + end_x));
      string((*image)[y].begin() + start_x, (*image)[y].begin() + end_x).swap((*image)[y]);
    }
  }

  // Cuts off border if any
  static void DeleteBorder(vector<string>* image) {
    size_t h = image->size();
    size_t w = (*image)[0].size();
    double max_x = static_cast<double>(w) * MAX_BORDER_WIDTH / 100;
    bool has_border = true;
    for (size_t start_x = 0, start_y = 0, end_x = w, end_y = h; 
      start_x < max_x; ++start_x, --end_x, ++start_y, --end_y) {
        has_border = true;
        for (size_t y = start_y; y < end_y; ++y) {
          if ((*image)[y][start_x] != W || (*image)[y][end_x - 1] != W) {
            has_border = false;
            break;
          }
        }
        for (size_t x = start_x; x < end_x; ++x) {
          if ((*image)[start_y][x] != W || (*image)[end_y - 1][x] != W) {
            has_border = false;
            break;
          }
        }
        if (has_border) {
          Prune(start_x, end_x, start_y, end_y, image);
          vector<size_t> x_points, y_points;
          FindBestCuttingPoints(*image, false, &x_points);
          FindBestCuttingPoints(*image, true, &y_points);
          Prune(x_points[0], x_points.back(), y_points[0], y_points.back(), image);
          return;
        }
    }
  }

  static void CollectStatistics(const vector<string>& image, vector<double>* result) {
    size_t h = image.size(), w = image[0].size();
    vector<size_t> width(w % w_cells, w / w_cells + 1);
    width.resize(w_cells, w / w_cells);
    random_shuffle(width.begin(), width.end());
    vector<size_t> height(h % h_cells, h / h_cells + 1);
    height.resize(h_cells, h / h_cells);
    random_shuffle(height.begin(), height.end());
    for (size_t y_start = 0, i = 0; y_start < h; y_start += height[i++]) {
      for (size_t x_start = 0, j = 0; x_start < w; x_start += width[j++]) {
        double dogs_in_cell = 0;
        for (size_t y = y_start; y < y_start + height[i]; ++y) {
          for (size_t x = x_start; x < x_start + width[j]; ++x) {
            switch (image[y][x]) {
            case B:
              dogs_in_cell += 1;
              break;
            case DG:
              dogs_in_cell += 200./255;
              break;
            case LG:
              dogs_in_cell += 85./255;
            }
          }
        }
        result->push_back(static_cast<double>(dogs_in_cell) / (height[i] * width[j]));
      }
    }
  }

};

void Test() {
  const char* files[] = {"001.txt", "002.txt", "003.txt", "004.txt", "005.txt", "006.txt", "007.txt", "008.txt", "009.txt", "010.txt", "011.txt", "012.txt", "013.txt", "014.txt", "015.txt", "016.txt", "017.txt", "018.txt"};
  const char* ans[] = {"979","484","552","723", "576", "294", "551", "853", "117", "650", "864", "448", "966", "247", "959", "858", "892", "852"};
  for (size_t i = 0; i < sizeof(files) / sizeof(char*); ++i) {
    ifstream file(files[i]);
    vector<string> text;
    string line;
    while (file >> line) {
      text.push_back(line);
    }
    Image image(text);
    image.Initialize();
    string res = image.Classify();
    if (res != string(ans[i])) {
      cout << "Failed " << files[i] << " " << ans[i] << " != " << res << endl;
    }
  }

}


int main() {  
//  ifstream file("image.txt");
  vector<string> text;
  string line;
  while (cin >> line) {
    text.push_back(line);
  }
  Image image(text);
  image.Initialize();
  cout << image.Classify() << endl;
//  Test();
  return 0;
}
