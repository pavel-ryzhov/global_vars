#include <iostream>
#include <fstream>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <set>

using namespace std;

char image[200][1000];
bool c[200][1000];
int width = 0;
int height;

struct pixel_set{
    set<pair<int, int> > s;
    double xc, yc;
    int left, top, right, bottom;
    pixel_set()
    {
        xc = yc = right = bottom = 0;
        left = top = 1e9;
    }
    void add_pixel(int x, int y)
    {
        s.insert( make_pair(x, y) );
    }
    void merge(pixel_set &b)
    {
        for(set<pair<int, int> >::iterator it = b.s.begin(); it != b.s.end(); it++)
            s.insert(*it);
        calculate_info();
    }
    void calculate_info()
    {
        xc = yc = 0;
        for(set<pair<int, int> >::iterator i = s.begin(); i != s.end(); i++)
        {
            xc += i->first;
            yc += i->second;
            left = min(left, i->first);
            right = max(right, i->first);
            top = min(top, i->second);
            bottom = max(bottom, i->second);
        }
        xc /= s.size();
        yc /= s.size();
    }
};

struct digit{
    char mat[100][100];
    int width, height;

    digit(){memset(mat, 0, 100*100);}
    digit(pixel_set s)
    {
        memset(mat, 0, 100*100);
        width = s.right - s.left + 1;
        height = s.bottom - s.top + 1;
        for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
        {
            mat[it->first - s.left][it->second - s.top] = image[it->first][it->second];
        }
    }
    void print()
    {
        for(int i = 0; i < width; i++)
        {
            for(int j = 0; j < height; j++)
            {
                switch(mat[i][j])
                {
                    case 0: cout << '.'; break;
                    case 1: cout << '%'; break;
                    case 2: cout << '#'; break;
                    case 3: cout << '@'; break;
                }
            }
            cout << "\n";
        }
        cout << endl;
    }
};

int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dy[] = {1, -1, 0, 0, 1, 1, -1, -1};

bool check(int i, int j)
{
    return i >= 0 && i <= height && j >= 0 && j <= width;
}

void dfs(int i, int j, int min_color, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1 ;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(check(ni, nj) && image[ni][nj] >= min_color)
                dfs(ni, nj, min_color, cur_set);
        }
    }
}

bool inside(pixel_set s, double x, double y)
{
    return y >= s.top && y <= s.bottom;
}

bool can_merge(const pixel_set &a, const pixel_set &b)
{
    return inside(b, a.xc, a.yc) || inside(a, b.xc, b.yc);
}

void bfs_add(pixel_set &s, int len)
{
    queue<pair<int, int> > q;
    int dist[200][1000];
    memset(dist, 0x0f, 200*1000*4);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        dist[it->first][it->second] = 0;
        q.push(*it);
    }

    while(!q.empty())
    {
        pair<int, int> p = q.front();
        q.pop();
        if(dist[p.first][p.second] < len)
        {
            if(image[p.first][p.second] == 1)
            {
                bool bad = 0;
                for(int k = 0; k < 8; k++)
                {
                    int ni = p.first + dx[k];
                    int nj = p.second + dy[k];
                    if(check(ni, nj) && image[ni][nj] > 2)
                        if(s.s.find(make_pair(ni, nj)) == s.s.end())
                        {
                            bad = 1;
                            break;
                        }
                }

                if(!bad)
                    s.add_pixel(p.first, p.second);
            }
            for(int k = 0; k < 8; k++)
            {
                int ni = p.first + dx[k];
                int nj = p.second + dy[k];
                if(check(ni, nj) && image[ni][nj] == 1 && dist[ni][nj] > 100)
                {
                    q.push(make_pair(ni, nj));
                    dist[ni][nj] = dist[p.first][p.second] + 1;
                }
            }
        }
    }
    s.calculate_info();
}

void dfs_set(int i, int j, pixel_set &s, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(s.s.find( make_pair(ni, nj)) != s.s.end() )
                dfs_set(ni, nj, s, cur_set);
        }
    }
}

pixel_set make_one_component(pixel_set &s, bool bad)
{
    if(bad)
        return s;
    vector<pixel_set> sets;
    pixel_set cur;
    memset(c, 0, 200*1000);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        int x = it->first;
        int y = it->second;
        if(!c[x][y])
        {
            dfs_set(x, y, s, cur);
            cur.calculate_info();
            if(cur.s.size() > 10)
                sets.push_back(cur);
            cur = pixel_set();
        }
    }
    if(sets.size() == 1)
        return sets[0];
    return sets[1];
}

int between(int xl, int xr, int xm)
{
    return xm >= xl && xm <= xr;
}

int dist(pixel_set a, pixel_set b)
{
    if( between(a.left, a.right, b.left) || between(a.left, a.right, b.right))
        return 0;

    if( between(b.left, b.right, a.left) || between(b.left, b.right, a.right))
        return 0;

    return 1000;
}

vector<digit> split_image()
{
    vector<pixel_set> sets;
    vector<digit> res;

    pixel_set cur;

    for(int j = 0; j < width; j++)
        for(int i = 0; i < height; i++)
            if(image[i][j] >= 2 && !c[i][j])
            {
                dfs(i, j, 2, cur);
                cur.calculate_info();

                sets.push_back(cur);
                cur = pixel_set();
            }

    bool *merged = new bool[sets.size()];
    memset(merged, 0, sets.size());

    vector<pixel_set> blacks;
    int cnt = 0;
    for(size_t i = 0; i < sets.size(); i++)
        if(!merged[i])
        {
            cnt++;
            cur = sets[i];
            for(size_t j = i+1; j < sets.size(); j++)
            {
                if(can_merge(cur, sets[j]))
                {
                    cur.merge(sets[j]);
                    merged[j] = 1;
                }
            }

            if(cur.s.size() > 10)
                blacks.push_back(cur);
            merged[i] = 1;
        }

    bool bad = 0;
    while(blacks.size() > 3)
    {
        bad = 1;
        int mi=0, mj=1;
        int mdist = 1000;
        for(size_t i = 0; i < blacks.size(); i++)
            for(size_t j = i+1; j < blacks.size(); j++)
            {
                if(dist(blacks[i], blacks[j]) < mdist)
                {
                    mi = i;
                    mj = j;
                }
            }
        pixel_set a = blacks[mi], b = blacks[mj];

        blacks.erase(blacks.begin() + mj);
        blacks.erase(blacks.begin() + mi);

        a.merge(b);
        blacks.push_back(a);

        cnt--;
    }

    delete[] merged;

    for(size_t i = 0; i < blacks.size(); i++)
    {
        memset(c, 0, 200*1000);
        pixel_set s = blacks[i];
        bfs_add(s, 5);
        res.push_back(digit( make_one_component(s, bad)));
    }

    return res;
}
digit scale(digit d, int w, int h)
{
    digit res;
    res.width = w;
    res.height = h;

    for(int i = 0; i < w; i++)
        for(int j = 0; j < h; j++)
        {
            res.mat[i][j] = (d.mat[i*d.width/w][j*d.height/h] > 0 ? 3 : 0);
        }

  	for(int i = 0; i < d.width; i++)
        for(int j = 0; j < d.height; j++)
        {
            int ii = (double)i * w / d.width;
            int jj = (double)j * h / d.height;
            if(d.mat[i][j] == 3)
	            res.mat[ii][jj] = 3;
        }
    return res;
}

#define SIGMOID(x) (1.7159*tanh(0.66666667*x))

double a1[]={-0.0545,
0.0544,-0.158,-0.181,-0.186,0.757,0.479,0.196,-0.0238,-0.0305,0.325,0.433,-0.113,0.0732,-0.0884,0.0556,0.318,0.326,0.438,0.235,-0.028,0.102,-0.0902,-0.132,-0.153,0.236,0.648,0.305,0.48,0.0232,0.0627,0.189,0.347,0.107,0.169,-0.07,-0.161,0.128,0.0258,-0.0268,-0.297,-0.305,-0.226,-0.172,0.165,-0.379,-0.603,-0.369,-0.613,-0.461,0.767,0.505,-0.0658,-0.147,-0.327,0.323,0.84,0.569,0.176,-0.0649,0.335,0.212,0.34,0.0342,0.0406,-0.0664,-0.183,-0.109,-0.0764,-0.4,0.214,-0.18,-0.22,-0.359,-0.311,-0.199,0.327,0.373,0.455,0.421,-0.484,0.177,0.631,0.571,0.321,-0.423,-0.316,0.15,0.378,0.298,-0.385,-0.265,-0.116,-0.00621,0.337,-0.234,0.0474,0.128,-0.0174,0.121};
double a2[]={0.432,
0.224,0.278,-0.135,0.0696,-0.305,0.333,0.196,0.0776,0.0762,-0.251,0.0171,-0.0886,-0.134,-0.079,-0.198,0.104,-0.217,-0.149,-0.266,-0.322,-0.136,-0.038,0.0117,-0.0193,-0.154,0.0665,-0.0492,-0.0447,0.0424,0.0141,0.198,0.0436,0.0485,-0.106,-0.0284,0.037,0.214,0.175,0.0811,-0.0535,0.0435,-0.105,-0.159,-0.172,-0.0333,-0.195,0.0952,-0.209,-0.217,0.273,0.244,0.117,0.0137,-0.0387,-0.159,0.533,0.181,0.248,-0.0727,0.013,0.178,0.228,0.106,0.00822,-0.319,0.0649,-0.208,-0.171,-0.313,-0.342,-0.0163,0.0414,-0.106,0.0017,0.12,0.223,0.0725,0.0273,-0.0614,-0.0288,0.299,0.264,0.0388,-0.0486,-0.0549,0.0845,0.122,0.0552,-0.0916,0.0615,-0.0572,-0.268,-0.259,-0.237,0.0247,-0.192,-0.0389,-0.156,-0.214,-0.145,-0.112,-0.0876,-0.149,-0.0334,-0.205,0.127,0.00877,0.145,0.192,-0.115,0.169,0.0976,-0.00548,0.16,0.132,0.196,0.0246,0.0175,-0.0166,-0.0538,0.234,-0.182,-0.123,-0.103,-0.26,-0.078,-0.106,-0.0327,0.118,0.166,-0.192,-0.077,-0.0822,-0.272,-0.21,-0.161,-0.0149,0.119,0.0458,-0.0633,-0.0762,-0.0463,0.0223,0.162,0.219,-0.128,0.051,0.175,0.291,-0.296,-0.265,-0.236,-0.0659,0.1,0.015,0.0235,0.0862,0.131,-0.1,-0.139,0.183,-0.00283,0.09,0.227,0.0429,0.277,0.0752,-0.0308,0.102,0.0747,0.0961,0.0348,0.0465,-0.0862,-0.303,-0.124,-0.0723,0.0969,0.177,0.041,-0.055,0.0269,-0.0915,-0.268,-0.126,-0.0507,0.224,0.202,0.0776,-0.0577,0.147,0.0487,0.0843,0.0952,0.147,-0.0236,0.091,-0.0559,-0.0915,-0.0616,-0.175,-0.115,0.0349,0.0845,0.0134,-0.00382,-0.0747,-0.0624,-0.0376,0.226,-0.108,-0.0893,-0.0399,0.158,0.179,-0.206,-0.0508,0.0713,0.0779,0.193,0.254,-0.0404,0.189,0.14,-0.123,-0.077,-0.0982,-0.0812,-0.0135,-0.0713,-0.0161,-0.0182,-0.0225,-0.0448,-0.0899,-0.0456,0.0133,-0.0244,-0.113,0.0679,-0.0504,-0.00481,-0.0212,-0.0688,0.0149,-0.203,-0.164,-0.217,-0.0296,-0.182,-0.0603,-0.179,-0.0573,0.0324,0.149,-0.0266,-0.184,-0.0127,0.0823,0.223,-0.13,-0.0701,0.0254,0.0633,0.184,-0.164,-0.0655,-0.00429,0.155,0.271,-0.135,-0.128,0.255,0.142,-0.246,-0.132,-0.0322,0.0382,0.246,0.43,-0.285,-0.0463,0.0711,0.263,0.0468,-0.111,-0.089,0.0895,0.0808,0.363,-0.0541,-0.0113,0.066,0.182,0.171,-0.0355,0.0157,0.0513,0.101,-0.176,-0.000631,0.163,0.171,-0.0619,0.148,-0.0707,0.0103,0.155,0.0775,0.0927,-0.0621,-0.0517,0.0409,0.195,0.167,0.0328,-0.252,-0.174,0.0336,0.159,0.185,-0.0635,-0.253,-0.301,-0.0491,-0.0592,0.0244,-0.111,-0.0445,-0.0565,-0.0393,0.0617,0.164,-0.0264,-0.176,-0.117,0.111,0.0991,-0.033,-0.0851,-0.32,-0.0233,0.1,0.171,-0.0541,0.118,-0.304,-0.149,0.123,-0.123,0.0377,-0.0413,0.184,-0.0363,0.0426,-0.147,-0.0191,0.133,0.096,0.0166,-0.0414,-0.0636,0.0152,0.0333,0.027,-0.143,-0.195,-0.0797,0.196,0.16,0.164,-0.192,-0.132,-0.0382,0.12,0.137,0.201,-0.0667,0.00195,0.0713,-0.032,0.134,0.212,-0.0855,-0.0153,-0.127,0.152,0.174,0.0655,0.0792,-0.191,0.00972,0.235,0.256,-0.0359,0.0939,-0.162,-0.0628,0.172,-0.396,-0.256,0.193,0.23,0.131,0.0509,-0.000945,-0.217,-0.0603,0.127,0.146,0.135,0.0456,-0.0603,-0.292,0.0501,0.00656,-0.0527,0.0918,-0.0913,-0.344,-0.0197,0.0242,0.196,0.0687,-0.294,0.15,0.0411,-0.0559,-0.0628,-0.0622,-0.24,0.0537,0.101,0.0857,0.0331,0.0402,-0.172,-0.232,-0.108,0.263,0.0697,0.0223,-0.0565,-0.0873,-0.000277,-0.0928,-0.128,-0.16,-0.188,-0.628,0.000966,0.167,0.127,0.0423,0.201,0.0457,-0.221,0.208,0.329,0.0586,0.137,-0.128,-0.222,-0.186,0.189,0.034,0.0331,0.0293,-0.146,-0.166,-0.0834,-0.0125,0.0789,-0.0161,0.00737,0.191,0.0896,0.208,0.135,0.155,-0.227,0.166,0.271,0.124,0.128,-0.0337,-0.24,-0.11,0.0784,0.204,0.179,0.123,-0.175,-0.169,-0.155,0.0383,0.152,0.00853,-0.313,0.164,
0.0501,0.0619,-0.032,-0.043,0.132,0.0706,0.0475,0.0863,0.276,0.126,-0.0299,-0.133,0.0087,-0.00559,0.113,-0.0113,-0.204,-0.0652,-0.0785,-0.162,0.216,-0.125,-0.164,-0.0481,-0.141,-0.101,-0.193,-0.32,-0.211,-0.0649,0.000831,0.0672,0.0507,-0.0345,-0.069,-0.0733,0.207,0.0902,0.35,0.148,-0.209,0.00579,-0.0475,-0.0726,0.13,0.047,-0.136,-0.151,-0.0229,0.0551,0.116,-0.0913,-0.118,-0.0985,-0.0238,0.0866,0.016,0.0892,-0.00213,-0.026,0.034,0.0418,0.00542,0.28,0.295,0.069,-0.0711,-0.0741,-0.083,-0.114,0.0633,-0.159,-0.038,-0.0214,-0.0669,-0.117,-0.189,-0.178,-0.0711,0.00384,-0.0446,0.00888,0.0235,-0.0724,0.0368,-0.0411,0.0403,0.154,0.259,0.126,-0.0531,-0.123,-0.0568,-0.139,0.186,-0.154,-0.117,-0.0677,-0.0639,-0.0129,0.187,0.121,-0.0329,-0.00131,0.203,0.14,-0.134,-0.196,-0.0163,0.0289,0.264,0.0528,-0.0535,-0.0723,-0.0606,0.164,0.0253,-0.105,-0.102,-0.0599,-0.254,0.145,-0.0805,-0.156,0.319,0.287,0.0655,-0.0934,0.122,0.0707,-0.058,0.0599,0.0284,-0.00772,0.0652,0.0525,-0.0423,-0.0112,0.0398,0.0232,0.027,-0.0643,0.00696,0.0338,0.0244,0.205,0.221,0.0617,-0.147,0.332,0.447,0.0923,-0.0128,0.0853,0.236,0.0317,-0.0379,-0.0436,-0.0674,-0.0458,0.173,0.112,-0.141,-0.0618,0.0132,0.176,-0.0944,-0.0207,-0.115,0.0287,0.119,0.0713,-0.106,-0.044,0.381,0.136,-0.114,0.151,0.128,0.224,-0.0604,-0.113,-0.0379,-0.0688,0.199,0.0687,-0.0973,-0.012,0.073,-0.0236,0.0432,-0.0449,-0.119,-0.104,0.0166,0.0944,-0.00617,0.0302,-0.216,0.296,0.146,0.109,-0.0453,0.0488,-0.00355,0.0122,0.0846,-0.0325,-0.0121,-0.0454,-0.191,0.00771,-0.0719,-0.0306,-0.0727,-0.198,-0.12,0.0537,-0.0918,-0.00118,-0.32,-0.0945,-0.0623,0.135,0.198,0.116,0.113,-0.112,-0.191,-0.205,0.213,-0.0366,0.0565,0.102,0.154,-0.00128,0.076,0.0732,0.0984,-0.0256,-0.0533,-0.042,-0.0992,-0.139,-0.104,0.187,0.0743,-0.0125,0.0473,0.537,0.37,0.0158,-0.0386,-0.167,-0.118,0.245,0.0828,0.0231,-0.153,-0.0988,0.00711,0.0298,-0.0135,0.031,-0.0308,-0.214,0.024,-0.128,-0.0557,-0.00278,-0.164,-0.173,-0.0562,-0.0105,0.239,0.164,0.151,-0.128,-0.436,-0.547,0.253,0.0259,0.0644,0.0692,-0.0428,0.149,0.116,0.106,-0.13,-0.219,0.0227,0.0261,-0.0684,-0.0398,-0.372,0.121,-0.0777,0.036,0.0257,-0.162,-0.226,-0.0213,0.0376,0.157,0.242,0.0968,-0.0559,0.0174,-0.00148,-0.0715,0.112,0.12,-0.0354,-0.0158,-0.128,0.0783,0.135,0.0506,-0.0208,-0.0993,0.427,0.0397,0.00534,0.0985,-0.184,0.0166,-0.00951,0.155,0.261,0.173,-0.18,0.0114,0.0385,-0.0636,0.128,0.0243,-0.119,0.0484,0.106,-0.0925,-0.111,0.105,-0.00363,0.0872,0.0528,0.0271,-0.0633,0.0733,-0.0781,-0.569,-0.29,0.0798,0.106,0.219,0.201,0.0295,-0.0975,0.0689,0.0761,-0.00736,0.0797,-0.0391,-0.0674,0.0883,-0.0141,0.156,0.159,0.0918,-0.0459,0.00511,0.195,0.0915,0.0786,-0.0669,-0.0516,0.156,0.142,0.147,0.457,0.399,-0.21,-0.0136,0.0232,0.0147,0.144,-0.0959,-0.0287,0.11,0.0376,0.00943,0.0693,0.0405,-0.0381,-0.0212,0.0902,-0.0573,-0.0444,-0.0385,-0.115,-0.248,-0.0466,-0.0774,0.0396,0.115,0.188,-0.293,-0.194,-0.0258,0.00355,-0.109,-0.156,-0.129,0.0405,0.04,0.0209,-0.00979,-0.0162,0.167,0.281,0.00906,-0.0687,0.168,0.135,0.11,0.264,0.0778,-0.0881,0.00188,0.124,0.0976,0.0352,0.13,-0.0884,-0.177,0.121,-0.054,-0.164,-0.152,-0.188,-0.0687,-0.11,0.0884,-0.00736,-0.169,-0.276,0.401,-0.00507,0.244,0.0598,-0.165,-0.00198,0.049,0.145,0.275,0.269,-0.304,-0.0424,-0.0339,-0.0199,-0.0363,-0.236,-0.327,-0.117,-0.0662,-0.043,-0.136,-0.112,0.164,-0.0323,-0.0167,0.0275,0.0208,0.0271,0.38,0.173,0.0137,0.0322,0.13,0.275,0.122,-0.163,-0.0102,0.0315,0.0104,0.131,-0.258,-0.121,0.00267,-0.0491,-0.27,-0.00997,0.126,-0.0777,0.109,-0.0352,0.186,0.00864,0.345,0.0666,0.301,
0.103,0.0866,0.0647,0.144,-0.0522,0.219,0.226,0.0496,-0.0508,0.218,0.0827,0.00892,0.0307,-0.04,-0.054,-0.0229,-0.0659,-0.141,-0.206,-0.033,0.155,-0.278,-0.228,-0.303,-0.118,-0.112,-0.0066,0.0187,-0.0907,-0.0289,0.092,-0.0261,-0.0177,0.0697,0.133,0.174,0.125,0.201,0.169,-0.0782,-0.0127,0.0195,-0.121,0.101,0.0348,-0.062,-0.0781,-0.192,-0.0916,0.277,0.304,0.00776,0.0487,0.0289,0.0423,0.342,0.113,0.147,0.0315,0.164,0.249,0.127,0.127,0.0737,-0.125,-0.00935,0.00984,-0.0717,-0.118,-0.0365,0.124,-0.136,-0.137,-0.252,0.0176,0.0269,-0.0251,0.0333,0.00763,0.0601,0.195,0.0323,-0.139,0.235,0.31,0.129,-0.0448,0.108,0.0636,-0.0127,-0.00432,-0.274,-0.156,0.046,-0.123,-0.107,-0.17,-0.282,-0.0651,-0.247,-0.0364,0.0588,0.113,0.0853,0.196,-0.101,-0.11,0.104,0.0634,0.193,-0.00289,0.0351,-0.0304,0.0846,-0.0916,-0.133,0.12,-0.0317,-0.122,0.0667,0.0303,0.0329,0.00291,-0.0407,-0.0644,0.0667,0.0298,0.151,-0.0476,-0.0826,0.00583,-0.00994,0.129,0.0517,0.235,0.0702,-0.0575,-0.00304,0.106,0.0365,0.127,0.0205,0.0109,-0.0677,-0.0909,0.113,-0.0211,-0.153,-0.157,-0.317,0.0451,0.165,0.182,0.272,0.191,-0.106,-0.0521,0.0791,0.112,0.188,-0.0385,-0.0675,0.00487,0.0642,0.0154,-0.011,0.122,-0.0629,0.0719,-0.0766,-0.072,0.0272,0.0285,-0.0436,0.14,0.131,0.0974,0.292,0.241,0.0757,-0.147,0.121,0.16,0.15,0.253,0.0285,-0.0166,0.0548,0.00853,-0.0393,0.134,0.0456,0.0326,-0.0704,-0.236,0.169,0.0828,0.0554,-0.112,-0.0729,0.0324,-0.00299,-0.0504,-0.243,-0.318,-0.232,-0.00851,0.0246,0.142,-0.0712,-0.0389,-0.0511,0.000418,0.0108,-0.0288,0.122,0.0849,0.0329,0.179,-0.141,0.672,0.305,0.148,-0.00316,-0.0622,0.0582,-0.057,-0.0877,0.161,0.319,0.0567,0.291,0.091,-0.0204,-0.322,-0.0519,0.0649,0.111,0.04,-0.0655,-0.15,0.0422,0.127,0.0568,0.083,0.00592,-0.19,-0.0794,0.0991,-0.115,-0.34,-0.246,-0.141,-0.0193,0.0374,-0.048,0.0636,0.0925,-0.033,-0.177,-0.22,-0.0552,-0.0533,0.000882,0.0211,0.0673,0.0608,0.0582,0.0301,-0.118,0.256,-0.0245,0.0714,0.0302,-0.221,-0.0644,-0.145,-0.0637,0.101,0.103,0.00258,0.126,0.0866,-0.163,-0.337,-0.189,-0.0976,-0.00658,-0.0344,0.0474,-0.0429,-0.0118,-0.166,-0.0207,0.2,0.0575,-0.0886,-0.11,-0.177,-0.0705,-0.0774,-0.0365,0.0813,-0.174,0.0467,-0.0529,-0.0218,0.0544,0.0476,0.143,-0.107,0.0358,-0.0604,0.0193,0.0485,-0.0886,0.000666,-0.0152,0.113,0.0567,0.365,0.103,0.267,0.327,0.09,0.108,-0.0645,-0.0937,-0.0717,-0.0672,0.136,0.031,0.0673,0.147,-0.00498,0.145,0.135,-0.00921,0.0052,0.257,-0.0447,0.00572,0.0414,0.018,-0.189,-0.223,-0.293,-0.276,-0.401,-0.12,-0.094,-0.0888,-0.192,-0.147,-0.0435,-0.0781,-0.209,0.0368,0.258,0.124,0.0104,0.00544,9.89e-006,-0.0721,0.179,-0.0136,0.0537,0.0684,-0.101,-0.132,0.0128,-0.0273,0.0136,0.00196,-0.101,-0.0826,-0.106,-0.188,-0.208,-0.102,-0.173,-0.28,0.0229,0.158,0.0534,-0.035,-0.166,-0.138,-0.0261,0.183,-0.147,0.0167,0.0351,-0.0618,0.0242,-0.021,-0.00285,0.121,0.328,-0.111,-0.253,-0.148,0.0143,-0.0907,0.0391,-0.146,-0.0536,-0.135,0.137,0.00759,-0.202,-0.00881,-0.0617,-0.0181,0.0323,0.00625,0.0998,0.277,0.115,-0.00991,0.389,0.314,0.114,0.106,-0.0488,-0.00688,0.0614,0.0201,0.0477,0.147,0.0319,0.0525,0.111,-0.0153,-0.0923,0.00338,8.13e-005,0.0659,-0.069,-0.0991,-0.282,-0.0549,0.0322,0.00793,-0.00646,0.0848,-0.121,0.0394,0.0519,-0.285,-0.355,-0.117,-0.0567,0.0479,-0.0748,-0.242,-0.181,-0.188,-0.00365,0.0283,-0.352,-0.0293,-0.0825,0.036,0.00607,-0.123,0.0261,0.171,0.00763,0.0259,0.146,0.0418,0.147,0.24,-0.277,-0.0868,-0.0182,-0.111,0.179,0.416,-0.103,-0.022,0.16,-0.202,0.00154,0.00451,-0.0823,0.176,-0.0894,-0.0131,-0.123,0.0662,0.00171,0.0672,-0.0492,0.117,0.106,0.102,0.0482,0.336,
0.252,0.127,0.139,0.137,-0.0164,0.087,0.101,-0.0936,-0.0308,-0.0612,0.168,0.0676,-0.045,-0.012,-0.0795,-0.0739,-0.0288,-0.0483,-0.0898,0.0133,0.155,0.13,0.077,0.00296,0.372,0.203,0.0901,0.179,0.122,-0.0124,0.123,-0.0683,0.107,-0.0246,-0.0458,0.152,0.00143,-0.0729,-0.0177,-0.103,-0.109,-0.0623,0.0143,0.0223,0.158,-0.00853,-0.0997,-0.227,-0.207,0.549,0.516,0.207,0.312,0.215,0.0236,0.203,-0.0109,0.0193,-0.158,-0.183,0.0174,-0.0392,-0.192,0.0409,-0.122,0.00408,0.0145,-0.12,-0.0828,0.171,-0.0208,-0.104,-0.0567,-0.0618,0.325,0.127,0.178,0.101,0.0797,-0.0747,0.0522,-0.0681,-0.133,-0.081,-0.179,0.122,-0.212,-0.136,0.00397,0.026,-0.14,-0.101,-0.134,0.000531,0.0484,-0.0728,-0.0869,-0.108,-0.0922,-0.086,0.0588,0.165,0.166,-0.00813,-0.0782,-0.0772,-0.109,0.11,0.0384,0.0836,-0.00793,-0.0196,0.0959,0.109,0.0313,-0.0733,0.178,0.0956,0.201,0.157,-0.16,0.0324,-0.0139,0.0557,0.0488,-0.0236,0.0621,-0.007,-0.195,-0.263,-0.034,0.0547,-0.0261,0.0639,0.101,-0.0475,-0.0772,-0.0765,0.0184,0.138,0.0886,-0.141,0.0718,0.0167,0.0815,0.0783,0.126,0.0462,0.0119,-0.134,0.0781,0.0598,0.121,-0.0538,-0.127,-0.0506,0.0707,0.215,0.104,0.149,-0.0181,0.0412,0.00641,0.0285,0.114,0.00178,0.0781,0.143,0.176,0.0756,-0.0609,0.182,0.176,0.0494,0.0624,0.0869,0.131,0.0224,-0.254,-0.239,-0.101,0.0961,0.016,0.0315,0.0384,0.0275,-0.0132,-0.0183,0.0588,0.0613,0.145,0.12,0.151,0.0541,-0.0667,0.216,0.25,0.125,-0.0575,-0.00864,-0.0883,-0.0057,0.142,0.211,0.162,0.0478,-0.0376,0.0496,-0.0268,0.0329,-0.0437,0.177,0.113,-0.0108,-0.0297,0.00281,0.0523,0.0129,-0.00251,-0.149,0.142,-0.034,-0.117,-0.276,-0.0295,-0.09,-0.131,0.0708,0.0314,-0.0611,0.14,-0.0773,-0.0693,-0.109,0.146,0.109,0.141,0.0867,0.038,-0.125,-0.122,0.0766,0.126,0.0892,-0.0798,0.139,0.0988,0.187,0.212,-0.103,0.0294,-0.0728,0.0731,0.353,0.194,-0.0612,0.044,0.0754,0.169,0.052,-0.00902,0.101,0.0891,0.0469,0.0287,-0.0393,0.0789,0.0232,0.00259,-0.146,0.248,0.163,-0.0776,-0.0197,0.0344,-0.0626,0.0897,0.243,0.284,0.141,0.173,-0.0323,0.11,0.0123,0.212,0.171,0.21,0.0373,-0.0903,-0.204,0.0341,-0.0162,0.0146,-0.088,-0.151,0.0967,-0.0441,-0.0743,-0.157,0.251,0.141,0.184,-0.0912,-0.0518,-0.253,-0.0568,0.0431,0.101,0.063,-0.00927,-0.0679,0.00498,0.175,0.0609,0.0384,-0.107,-0.0518,0.06,0.282,0.0831,0.0672,0.232,0.239,0.302,0.291,0.201,-0.00858,-0.067,-0.0929,-0.161,0.247,0.0909,-0.0431,0.0344,0.00313,0.0222,0.055,0.11,-0.0932,-0.017,-0.0683,-0.0423,-0.0394,-0.101,-0.135,0.0448,0.0777,-0.0757,-0.121,0.434,0.219,0.0735,-0.124,-0.193,-0.354,-0.049,-0.0124,-0.00231,-0.0745,-0.142,-0.162,-0.0414,0.0835,-0.000251,-0.0879,-0.0487,-0.0196,0.127,0.127,0.108,0.0791,-0.0648,-0.0289,0.305,0.209,0.113,-0.0803,-0.184,-0.0995,-0.219,0.0976,-0.111,0.0586,-0.11,0.0911,-0.111,-0.0301,-0.0563,-0.0195,0.00663,-0.0479,0.06,-0.0423,0.0293,-0.0537,0.143,0.0543,0.178,0.136,-0.295,-0.0545,0.0603,0.128,0.0122,0.0971,-0.023,-0.246,-0.00203,-0.0049,0.19,-0.0628,-0.154,-0.11,-0.0614,0.000706,0.0871,-0.0555,-0.0914,0.078,-0.0135,0.208,0.129,-0.185,-0.097,-0.0561,0.151,-0.0896,-0.124,0.0794,0.0992,-0.11,0.0936,0.157,0.139,0.0702,-0.13,0.00619,0.0289,-0.0332,0.115,-0.144,-0.0201,0.056,0.0863,-0.106,0.115,-0.0284,-0.0328,0.122,-0.167,0.0208,0.197,0.0798,0.129,0.213,-0.189,-0.106,-0.0189,0.217,0.154,-0.00795,-0.173,0.0259,-0.0466,0.223,-0.118,-0.00166,-0.121,0.0352,-0.0176,0.13,-0.047,0.00626,0.0343,0.0628,0.109,0.127,0.13,0.212,0.0416,-0.179,0.0773,0.183,0.184,0.116,-0.242,-0.122,0.128,0.174,0.165,0.0326,-0.106,-0.114,0.0873,0.0629,-0.0504,-0.0606,0.0749,-0.0133};
double a3[]={-0.00948,
-0.13,-0.0356,-0.111,-0.0746,0.129,0.0839,-0.146,-0.015,0.203,0.134,-0.179,-0.0692,0.00697,-0.132,0.0658,0.0579,0.236,-0.0546,0.178,-0.144,0.154,-0.166,-0.0951,-0.0497,0.203,0.0682,-0.127,-0.0213,-0.0906,0.192,-0.0146,-0.0297,-0.114,0.246,0.201,0.0519,-0.128,0.118,-0.0331,0.232,0.145,0.215,-0.0244,0.183,0.145,0.159,0.0879,0.351,0.182,0.115,-0.0139,0.0851,-0.0245,0.175,0.0157,0.113,0.302,0.0902,0.0395,0.0335,0.115,-0.0271,-0.206,0.0466,-0.0403,0.0443,-0.221,0.0803,-0.0325,-0.112,-0.128,-0.266,-0.131,-0.191,-0.122,0.0678,-0.0434,-0.166,0.0227,-0.105,0.097,-0.044,-0.118,-0.423,-0.2,0.313,-0.0598,-0.066,0.0715,-0.00431,0.144,-0.0721,0.0153,0.064,0.129,0.58,0.168,-0.0191,-0.0241,0.0542,-0.0515,-0.0499,-0.13,0.0601,0.0345,-0.217,-0.169,0.193,0.0239,-0.183,-0.149,0.0956,-0.0653,-0.157,0.0881,0.15,-0.0973,-0.157,-0.0677,-0.416,-0.0688,0.124,-0.102,0.0622,-0.00728,-0.0333,0.0631,0.192,0.00818,0.11,0.0632,-0.236,0.0959,0.103,-0.0919,0.114,-0.00857,0.0798,0.000576,0.164,0.00228,0.0181,-0.0629,0.176,-0.0126,-0.359,-0.00609,0.147,-0.012,-0.0428,-0.0891,-0.0232,-0.0155,0.234,-0.033,-0.076,-0.145,0.0227,0.108,0.0469,-0.00595,0.123,-0.00677,0.0324,0.178,0.339,0.183,0.0879,0.153,-0.427,0.195,0.0321,0.0655,0.189,0.0103,0.0789,-0.0316,0.202,-0.0674,-0.457,-0.0729,-0.0865,-0.202,-0.0575,0.0716,-0.0998,-0.0786,0.122,0.142,0.0748,0.175,0.00263,0.0455,0.0371,0.0111,0.101,0.196,-0.138,0.0321,0.228,-0.0658,-0.115,0.0903,0.0381,0.0861,-0.209,-0.0856,0.0603,-0.112,-0.0301,0.0607,0.0399,0.0432,-0.201,-0.221,-0.501,0.0499,0.233,-0.179,0.129,-0.047,-0.0107,0.0274,-0.0286,0.1,0.0933,0.204,0.0557,0.00771,0.0747,0.0423,0.175,0.0676,0.0976,-0.00745,-0.0574,0.257,0.0467,-0.286,0.115,-0.0389,-0.0123,-0.103,0.205,-0.0395,0.0439,0.0956,-0.39,-0.158,0.365,-0.14,-0.0852,-0.0159,0.329,-0.0702,-0.0173,-0.0543,-0.203,-0.028,0.0556,-0.159,0.0964,-0.103,0.0286,-0.0499,0.0311,0.00528,-0.12,0.155,0.0327,0.17,0.154,0.21,-0.124,0.11,0.0604,0.24,-0.000312,-0.044,0.15,0.0758,0.305,-0.155,0.183,-0.011,0.094,-0.155,0.301,0.0157,0.241,0.103,0.218,0.00978,0.00583,0.00796,0.192,-0.0423,0.0858,-0.0436,0.153,-0.065,0.0257,-0.136,-0.104,0.0949,-0.0783,0.0305,-0.0378,-0.0711,0.0225,-0.000642,-0.121,-0.0324,-0.0798,-0.165,0.0811,-0.0565,0.0973,-0.0871,0.0361,-0.0132,0.218,-0.11,-0.222,0.0857,-0.0292,-0.258,0.122,0.16,0.29,-0.0989,0.0795,0.104,0.2,-0.00746,0.247,-0.0191,0.0951,0.144,-0.0271,-0.123,-0.25,-0.0298,0.152,-0.0416,-0.0846,0.0119,-0.0791,0.147,0.174,0.146,0.107,-0.0492,0.092,-0.126,0.282,0.225,0.00658,-0.0116,0.0751,0.0615,-0.276,-0.158,0.0437,-0.103,-0.117,-0.0992,-0.0442,0.208,0.0351,-0.109,0.143,0.123,-0.059,0.0684,-0.022,0.0126,-0.0937,-0.0329,-0.0692,0.0716,0.231,0.0673,-0.106,-0.0586,-0.368,0.0693,0.119,0.166,0.071,0.0224,0.0463,0.071,0.136,-0.206,-0.126,-0.135,-0.0756,0.103,-0.175,0.00746,-0.0106,-0.000401,-0.0482,0.156,0.00557,0.412,0.0333,-0.0218,-0.0492,-0.0198,-0.165,-0.0657,0.155,0.101,-0.0164,-0.0939,-0.102,-0.0476,0.0675,0.125,-0.112,-0.049,-0.293,0.0108,0.0605,-0.0869,-0.112,0.219,-0.113,-0.414,0.0393,0.000281,0.103,0.147,-0.335,-0.0857,-0.102,0.0475,-0.0723,-0.0148,-0.0372,-0.0897,0.0301,0.0173,-0.0331,0.0469,-0.0622,-0.00851,-0.093,0.0545,-0.00368,0.126,-0.121,-0.24,-0.176,-0.1,-0.285,-0.04,0.027,-0.134,0.0179,-0.0327,-0.175,0.101,0.138,0.304,0.218,0.147,0.221,0.0588,0.191,0.27,-0.0102,-0.0712,0.078,0.152,-0.151,0.0772,0.0161,0.0382,-0.0375,0.000117,0.126,0.0338,0.104,0.0697,0.278,0.0143,0.136,-0.02,-0.0692,0.038,0.206,0.118,-0.0948,0.0262,-0.152,0.0244,-0.0585,
-0.19,-0.0788,0.031,-0.186,-0.0299,0.161,-0.047,0.0144,-0.0711,-0.0268,-0.0722,-0.172,0.301,-0.469,-0.202,-0.135,0.0176,0.0885,0.078,-0.0298,-0.128,-0.138,-0.0792,-0.0401,0.00477,-0.222,-0.252,-0.155,-0.0717,-0.00843,-0.0483,0.0222,0.0513,0.0519,-0.0364,-0.109,-0.0643,-0.0671,-0.0017,0.122,-0.14,-0.0403,0.158,0.134,0.0857,-0.0199,0.234,-0.016,0.00336,-0.101,-0.0953,0.164,0.0489,0.0785,0.0764,0.0618,0.102,0.127,-0.124,0.0727,-0.244,0.0686,0.0223,0.0552,-0.0811,-0.16,-0.0544,-0.000724,-0.0262,0.0474,0.0732,-0.158,0.0168,-0.03,0.0595,-0.125,-0.0761,-0.0128,-0.0369,0.0272,0.0377,-0.0592,0.0565,0.0236,0.0659,0.00664,0.00165,-0.0569,-0.121,-0.0746,-0.0803,0.0771,-0.101,-0.0804,0.0179,-0.0976,-0.026,-0.038,0.00409,0.155,0.0942,-0.0456,0.0743,0.0886,0.13,-0.0603,0.0248,0.0943,0.0665,-0.0481,-0.251,0.0184,0.0336,-0.0901,0.0432,0.00219,-0.017,0.0256,-0.0989,-0.223,-0.000308,-0.11,-0.0999,0.0979,0.0259,0.0773,-0.0783,-0.114,-0.0317,0.0119,0.0815,-0.0887,-0.129,-0.0987,0.044,-0.0714,-0.05,-0.133,-0.216,-0.000676,-0.123,-0.0653,-0.0334,-0.0995,-0.0309,-0.126,-0.039,-0.0677,-0.15,0.102,-0.0515,0.00232,-0.125,0.0343,0.0591,-0.114,0.0275,-0.112,0.0458,0.212,-0.0281,-0.0704,-0.0334,-0.00953,0.00446,-0.0307,-0.0233,0.0858,0.0274,-0.0389,0.0221,-0.0424,-0.083,-0.0763,-0.00879,0.0996,-0.0538,0.0342,-0.00837,-0.108,-0.0537,0.0909,-0.145,-0.152,0.064,-0.0242,-0.0708,-0.0034,0.136,-0.0228,0.0691,0.0552,-0.12,-0.0338,-0.127,0.099,-0.0176,-0.0607,-0.208,0.149,-0.0905,0.0644,0.116,0.00221,-0.191,-0.0718,0.0701,-0.0347,0.0737,0.214,-0.000898,-0.0318,0.2,0.0999,-0.0376,-0.181,-0.132,-0.175,0.0175,0.299,-0.131,-0.145,-0.044,-0.246,-0.0207,-0.106,-0.0961,-0.0189,-0.148,-0.0112,-0.0148,-0.167,-0.119,0.0822,-0.0882,-0.0487,0.14,-0.148,-0.0113,-0.0705,-0.00894,0.104,0.154,0.295,0.281,-0.0399,0.077,0.0254,0.0167,0.0606,0.0709,-0.112,-0.081,0.195,-0.0638,-0.231,-0.28,-0.254,0.0291,-0.0449,-0.0386,-0.0669,0.0956,-0.125,0.0783,-0.00977,0.103,-0.326,-0.154,-0.168,-0.0539,-0.269,-0.043,-0.0173,0.0321,-0.176,-0.0129,0.0672,-0.0645,0.158,-0.0667,-0.119,0.115,0.0279,-0.178,0.0764,0.00926,0.0133,0.0528,0.0572,0.0515,0.0978,-0.0568,0.0138,-0.058,0.066,-0.0282,0.0549,-0.0837,0.085,0.033,-0.0912,-0.0232,0.0712,-0.208,-0.289,-0.126,-0.122,0.068,-0.0524,0.00891,0.0551,-0.0649,-0.0412,0.0186,-0.171,-0.0898,-0.0575,0.187,-0.115,-0.064,-0.0383,0.0517,0.0235,0.0507,-0.127,0.0217,-0.15,0.0788,0.159,0.0396,-0.0198,-0.033,0.0159,0.0813,0.00714,0.0846,-0.0568,-0.0108,0.0784,0.165,0.0347,-0.111,-0.0894,0.0668,0.0373,-0.127,0.0242,-0.156,-0.0371,-0.187,-0.0243,-0.101,-0.154,-0.053,0.0705,-2.61e-005,-0.0114,0.096,0.0966,0.0805,-0.062,-0.124,-0.0496,0.0578,0.224,-0.0164,0.0827,0.0227,0.00921,0.0923,0.0267,0.068,0.0422,0.182,0.0183,0.0885,0.0697,-0.0149,0.121,0.0301,-0.00218,-0.0133,0.0805,0.266,0.0391,-0.22,-0.075,0.00715,-0.00365,0.136,-0.0063,-0.0947,-0.0719,0.0313,-0.12,0.143,-0.062,0.12,0.19,0.16,-0.00627,0.0243,-0.0985,-0.0778,0.0705,-0.0595,0.096,-0.0468,0.033,0.0372,-0.126,-0.133,-0.167,-0.00421,0.108,-0.0686,0.0242,0.0353,-0.0571,-0.0406,0.131,-0.0204,-0.0279,-0.17,0.195,-0.0965,0.00047,-0.0679,-0.0355,-0.0492,0.113,0.000977,0.041,0.00432,0.0378,-0.0325,-0.0283,-0.143,0.0145,0.155,-0.133,0.0571,0.128,0.075,0.00881,0.0617,-0.0156,-0.209,-0.0304,-0.105,0.0124,-0.0446,-0.145,-0.00684,-0.0181,0.00465,0.000426,-0.116,0.156,0.17,-0.00959,-0.0916,0.174,0.224,0.306,0.0185,0.165,0.0708,0.161,0.108,-0.142,0.0594,-0.0478,0.195,0.0481,0.0594,0.156,-0.139,0.00636,0.0673,-0.0623,0.294,-0.0986,0.0782,-0.138,0.0324,-0.0194,0.0163,-0.0563,-0.118,0.0316,0.194,0.00833,-0.199,0.153,0.0646,0.0533,0.143,0.0563,
0.26,0.14,-0.0953,-0.125,0.0931,-0.141,-0.254,0.198,-0.103,0.109,-0.355,0.217,0.133,0.114,-0.0822,0.323,-0.00185,0.043,-0.147,0.0554,0.222,0.275,-0.207,-0.0338,0.0104,-0.383,-0.0819,0.108,0.242,0.0445,0.00358,0.0779,0.165,0.123,0.0247,-0.0634,-0.202,0.0173,0.175,-0.0776,0.003,0.055,-0.254,-0.15,0.18,0.0914,-0.139,-0.104,0.0583,0.198,-0.00443,-0.0021,-0.027,0.0183,0.0608,0.184,-0.0127,-0.00902,0.118,0.0623,0.109,-0.264,0.0254,0.305,0.0644,-0.124,-0.00803,0.338,-0.0441,-0.00096,-0.108,-0.122,-0.233,-0.0225,-0.0841,0.219,-0.0436,-0.248,-0.0598,0.0421,0.348,-0.0292,-0.107,0.0914,-0.0845,-0.0472,0.0903,-0.0163,0.0659,0.209,-0.212,0.0517,-0.147,0.21,0.0894,-0.0703,-0.0553,-0.114,-0.0948,0.0875,-0.0466,0.129,-0.204,-0.145,-0.145,-0.241,0.061,-0.0686,-0.0195,0.0135,0.0178,0.011,-0.17,-0.437,0.297,-0.0587,-0.176,-0.0619,0.0825,-0.0669,-0.114,-0.131,-0.0396,-0.0418,-0.0886,-0.0292,-0.341,-0.0781,-0.145,-0.209,0.104,-0.0124,-0.16,-0.042,-0.0351,-0.0644,0.0377,-0.103,0.0672,-0.0425,0.104,0.0361,-0.317,0.0387,-0.177,0.00726,0.0573,-0.201,0.0531,-0.127,-0.229,0.0376,0.0122,0.138,0.205,-0.0559,0.0481,0.158,-0.0524,0.105,-0.0909,0.028,-0.0623,0.0329,0.119,0.116,-0.0711,-0.0304,0.114,-0.0761,0.136,0.116,0.085,0.0309,-0.0451,-0.0873,0.0684,0.0239,-0.119,-0.0576,0.0857,0.0405,-0.0876,-0.016,0.198,-0.116,-0.128,0.316,0.0616,0.36,0.107,-0.0674,0.0517,-0.0498,-0.0176,0.0989,0.318,-0.0677,-0.24,0.194,0.106,-0.232,-0.0729,-0.119,-0.0619,0.0267,-0.0969,-0.267,-0.104,-0.264,-0.219,-0.397,0.0471,0.326,-0.017,-0.0029,-0.101,0.144,-0.029,0.11,-0.00998,0.123,0.169,-0.305,0.0427,0.273,0.000946,0.0718,-0.063,-0.0802,0.0475,0.0886,-0.0193,-0.194,-0.0345,-0.33,-0.276,-0.222,0.157,-0.128,-0.199,-0.146,0.242,0.0344,0.0646,-0.307,0.26,-0.74,-0.0882,-0.502,-0.0417,-0.431,0.0972,0.118,0.0593,-0.541,-0.253,-0.00219,-0.0617,-0.0511,-0.097,-0.222,0.137,-0.138,-0.27,-0.0478,0.0681,0.0517,-0.0298,-0.193,0.0832,0.262,-0.114,-0.228,-0.0124,0.0532,0.0267,-0.000962,-0.0389,-0.049,-0.0572,-0.155,0.0677,0.703,-0.374,-0.479,0.0135,-0.0589,-0.141,0.0349,-0.156,0.142,-0.215,-0.109,-0.0652,-0.507,-0.23,0.252,0.123,-0.134,0.0443,0.113,0.0778,-0.149,0.222,0.0401,0.131,-0.326,-0.251,0.044,0.0239,-0.036,0.0331,-0.0909,0.0845,-0.0704,-0.107,0.238,0.107,0.151,-0.209,-0.276,0.0217,0.104,0.0654,-0.0214,-0.219,0.0869,0.00191,-0.175,0.0101,-0.315,-0.347,-0.49,-0.0638,-0.127,0.0243,0.0728,0.0359,-0.202,0.0345,0.0237,0.304,-0.0469,0.457,0.756,-0.0658,-0.101,-0.144,-0.146,-0.0371,0.0152,0.111,-0.19,-0.156,-0.169,0.166,-0.109,0.0907,-0.0637,0.00496,0.00422,0.074,-0.0996,0.0309,-0.168,-0.144,-0.355,-0.0261,0.403,0.0514,0.0209,-0.139,-0.031,0.0397,-0.00983,0.176,0.0165,0.0461,0.461,-0.00879,-0.0465,0.116,0.0568,-0.124,-0.00529,-0.0286,0.0488,0.129,-0.134,-0.0552,-0.00914,-0.011,-0.314,0.0992,0.0627,0.201,0.0409,0.0316,-0.0618,0.163,0.304,0.12,-0.0831,-0.211,0.0328,-0.131,0.0743,-0.0654,0.17,-0.106,-0.0239,-0.0766,0.271,0.0851,0.515,-0.107,-0.171,0.137,0.0692,0.116,-0.0479,0.0827,0.16,-0.0633,0.00965,-0.111,-0.411,-0.214,-0.134,0.0537,-0.0546,-0.0945,-0.0276,0.0937,-0.0921,-0.0105,0.0361,0.264,0.239,-0.0428,0.071,0.0838,-0.146,0.0386,0.322,-0.0214,-0.215,0.259,0.129,0.15,0.00636,-0.0286,-0.0254,-0.11,0.105,0.144,0.0988,0.0584,0.00847,0.0498,-0.134,0.219,-0.0383,0.209,0.101,0.0826,0.0232,-0.0294,0.0227,-0.0751,-0.0294,0.000206,0.137,-0.0112,0.0433,0.0506,0.0485,-0.0819,0.224,0.249,0.0495,0.174,0.155,0.0338,0.389,0.365,0.33,0.146,0.0145,0.164,0.049,0.0466,-0.0627,-0.00864,0.0248,0.00309,0.0135,0.128,-0.0372,
0.106,-0.000266,0.004,0.0466,-0.147,0.0536,-0.101,-0.106,0.267,-0.0951,0.0803,-0.238,-0.252,-0.309,-0.0735,-0.0659,-0.0966,-0.124,0.0346,-0.0225,0.17,-0.0338,-0.105,-0.412,-0.234,0.133,-0.109,0.055,0.0676,-0.1,-0.0106,0.103,0.00285,0.0969,0.234,0.569,0.0794,0.0921,0.0476,0.0309,-0.0395,0.108,-0.156,-0.002,0.0553,-0.115,-0.341,-0.0961,0.0137,-0.201,-0.16,-0.0158,-0.0252,-0.0278,0.0285,0.254,-0.0358,-0.18,-0.116,-0.232,0.104,0.189,0.00309,-0.0711,-0.106,0.0491,-0.0596,0.121,0.112,0.0601,-0.0534,-0.0529,-0.0176,0.199,0.0444,0.121,0.06,-0.246,0.128,0.242,-0.115,0.221,0.136,-0.017,0.0628,-0.272,-0.134,0.0827,-0.00645,-0.0949,-0.235,0.0259,0.0849,-0.0905,-0.057,-0.0435,-0.00344,0.157,0.156,0.0975,-0.0486,0.0534,0.097,0.127,-0.15,0.0325,-0.00125,0.127,0.086,-0.353,0.0843,0.133,0.0238,-0.114,0.152,0.138,-0.0584,0.264,0.119,-0.246,-0.0426,0.0642,-0.0393,-0.162,0.0244,0.143,0.015,0.0978,0.0453,-0.029,-0.0798,0.0409,0.0479,0.0686,-0.0535,-0.147,0.261,-0.159,-0.0945,0.263,-0.0134,-0.16,0.195,-0.013,0.134,-0.00938,0.127,0.128,-0.0865,-0.0957,0.0135,0.131,0.00502,-0.191,-0.0211,-0.219,0.0784,0.247,-0.22,-0.0187,0.0293,-0.0342,0.0914,0.117,-0.182,0.0646,-0.371,0.0684,0.00507,0.00672,0.0759,0.0568,-0.0164,0.021,-0.0316,0.203,0.181,0.249,-0.103,0.259,-0.35,-0.297,-0.0122,-0.15,-0.0531,0.0283,0.0453,-0.156,0.0979,-0.0284,-0.037,-0.0525,-0.234,-0.00379,-0.0619,0.053,0.135,-0.0862,-0.0427,0.0891,0.197,0.038,0.0291,0.205,0.213,0.0326,0.0938,-0.00617,-0.0945,0.231,-0.0179,-0.0994,-0.187,0.221,0.0892,-0.0452,-0.202,-0.0757,-0.225,-0.0813,-0.117,0.103,0.0726,0.0377,0.176,0.0544,0.00576,-0.186,-0.0172,0.07,0.308,-0.198,0.0112,-0.102,0.157,-0.057,0.0341,-0.0204,0.0471,0.153,0.076,-0.0321,-0.171,0.00938,0.0422,0.199,-0.0647,0.0654,0.0267,0.165,-0.0136,0.04,-0.0976,-0.0803,-0.233,0.0449,-0.262,0.00393,-0.183,0.0837,0.08,0.135,-0.0722,-0.137,-0.231,-0.218,-0.0743,0.13,0.168,0.0853,-0.0139,0.151,-0.0811,0.0203,0.0285,0.00563,-0.0079,0.0393,0.243,-0.138,-0.0164,-0.245,-0.129,0.0775,-0.0427,0.013,-0.0672,-0.379,0.167,0.104,-0.151,-0.00856,-0.171,-0.127,-0.0548,0.189,0.0354,0.182,0.0965,0.228,0.0131,-0.0714,-0.13,-0.0935,0.00716,-0.193,-0.119,-0.0703,0.0406,0.195,-0.0288,-0.00489,0.0125,-0.131,0.0595,-0.109,-0.0462,0.0111,0.109,0.0963,0.102,0.0312,0.135,-0.167,0.124,0.0622,0.122,0.26,0.183,0.08,0.216,0.0748,0.0916,-0.0501,0.197,0.181,0.159,0.141,0.134,0.0729,0.191,0.0641,0.109,-0.0146,0.0377,-0.0592,-0.121,-0.013,-0.032,0.108,0.0412,0.0668,0.0216,0.192,0.106,-0.119,0.0817,-0.0522,0.112,0.23,0.0231,-0.134,0.00655,-0.232,-0.115,0.129,-0.0522,-0.0438,-0.0393,0.0542,0.0206,-0.176,0.138,-0.0577,-0.012,-0.0213,-0.00315,-0.00514,0.015,0.0797,-0.0665,-0.0276,0.112,-0.116,-0.135,-0.0906,0.0464,-0.113,-0.0518,-0.234,0.0522,-0.0502,-0.0576,0.0601,0.0295,-0.0565,-0.00551,-0.00645,-0.173,0.0361,0.0914,0.143,0.17,0.167,-0.276,0.0156,0.0312,0.108,-0.131,-0.0817,0.133,0.246,-0.126,0.209,-0.0456,0.0822,-0.116,-0.182,0.0479,0.0278,-0.0132,0.125,0.0455,-0.129,0.00948,0.116,-0.0327,0.244,0.0247,-0.0739,-0.0343,0.0126,-0.065,-0.0508,-0.0239,-0.0936,0.132,-0.0885,-0.053,-0.0189,-0.0736,-0.0322,0.0508,0.119,-0.119,-0.166,-0.0144,-0.105,-0.0265,0.0411,0.0118,-0.0539,-0.0766,0.08,0.0803,0.0274,0.0233,-0.037,-0.106,-0.0641,-0.0601,-0.0559,0.0476,-0.0761,-0.122,0.0683,-8.42e-005,0.161,0.00582,0.133,-0.0337,-0.0827,-0.109,-0.00476,-0.119,0.151,0.0247,-0.0328,0.0866,0.0745,-0.0543,-0.0229,-0.0147,0.0112,-0.118,0.0662,0.126,-0.0448,-0.199,0.0799,-0.106,-0.0477,0.0367,0.101,0.0703,-0.0546,0.092,-0.0152,0.021,0.0582,
0.00611,-0.0264,0.0482,-0.0669,0.162,0.252,-0.01,0.062,-0.063,-0.172,-0.0135,0.0747,0.067,-0.0869,-0.0645,0.113,0.0306,-0.0683,-0.0312,-0.0756,-0.069,0.0847,-0.0261,-0.0418,-0.203,0.105,0.0403,0.112,0.0526,0.145,-0.0462,-0.0624,0.00475,-0.0415,0.0309,-0.0624,0.0322,0.158,0.0326,0.0423,0.0144,0.0407,-0.0306,-0.123,0.0667,0.039,0.164,0.0932,-0.214,-0.0842,0.0093,0.206,0.0737,0.157,-0.0307,-0.0878,-0.159,-0.033,0.0358,-0.021,0.0918,-0.0965,-0.114,-0.0315,-0.128,-0.144,-0.000181,-0.0823,0.0825,-0.0567,-0.081,-0.208,-0.0904,0.189,0.0679,-0.0678,-0.187,-0.0238,0.00883,-0.0919,-0.00875,-0.0369,0.104,-0.0347,0.0328,0.073,0.0522,-0.00866,-0.053,-0.0549,-0.166,0.0176,0.074,-0.0461,-0.0323,-0.0869,0.0267,0.0935,0.0366,0.102,0.0909,0.0798,0.047,-0.0452,-0.0295,2.38e-005,0.0261,0.0938,-0.0909,0.201,0.0754,0.0915,-0.0131,0.0438,0.00785,0.0732,-0.0599,0.00336,-0.0574,0.0851,0.0847,-0.0727,0.0283,0.0277,-0.0632,0.0233,0.0349,-0.137,-0.0357,0.0432,-0.0839,-0.0555,-0.0737,-0.08,0.0769,-0.0403,0.0932,0.11,-0.0682,-0.0934,0.000822,0.0649,0.0377,0.107,0.0762,0.101,0.0434,0.0366,-0.018,0.0432,0.00198,0.057,-0.0979,0.00226,0.186,0.0949,0.00815,0.102,0.0523,0.305,-0.168,-0.169,-0.0948,0.0323,-0.129,0.0639,-0.0674,-0.162,-0.0649,-0.0555,-0.251,-0.0256,-0.173,-0.0234,-0.171,-0.00575,0.0909,-0.148,0.0214,0.183,-0.0248,-0.0425,-0.132,0.27,0.22,-0.139,-0.0468,0.0494,0.0306,-0.00704,-0.0426,0.0931,-0.147,0.262,-0.0524,-0.0966,-0.26,-0.233,-0.066,0.0316,-0.116,-0.108,0.267,0.234,-0.34,0.163,0.155,-0.0557,0.196,-0.0473,0.118,-0.157,-0.178,-0.214,-0.19,-0.293,0.0137,0.131,0.14,0.0124,-0.0995,-0.0167,-0.0243,0.0143,-0.163,0.254,0.097,-0.123,-0.121,0.0188,-0.0237,-0.18,-0.0407,-0.0709,-0.0983,-0.0136,-0.137,0.12,0.029,0.0616,0.136,-0.0776,-0.0439,-0.0128,-0.105,-0.169,-0.127,-0.161,0.0185,-0.271,-0.054,0.0532,0.0183,-0.0575,-0.017,-0.133,0.0591,0.0345,0.109,-0.108,0.12,0.0365,0.177,-0.108,0.202,0.161,-0.0306,-0.143,0.256,0.346,-0.114,0.0282,-0.189,-0.0987,0.148,-0.0735,0.0409,0.301,-0.0909,0.0266,0.0325,0.273,-0.1,0.081,0.0317,0.223,-0.0865,-0.129,0.172,-0.0322,0.163,-0.11,-0.0179,0.0861,-0.124,0.0186,-0.0884,-0.0285,0.0171,0.0584,0.128,0.17,0.19,0.123,-0.0169,0.0607,-0.0111,0.0826,-0.0719,0.212,0.00196,-0.122,0.279,0.276,-0.22,0.104,0.0338,0.0199,-0.0423,0.257,0.0104,0.123,-0.127,-0.0123,0.296,0.277,0.176,-0.0692,0.13,-0.00723,0.0336,-0.0485,-0.000298,0.0166,-0.0202,-0.0802,0.106,0.124,-0.093,0.099,0.057,-0.0221,0.157,-0.103,0.225,0.0156,0.12,0.177,0.0598,0.28,0.0239,-0.051,0.0714,-0.077,-0.0575,0.0101,-0.0111,0.0369,-0.0407,0.107,0.00657,-0.0796,-0.0964,-0.0111,-0.155,0.37,0.00246,0.0603,-0.426,0.196,-0.0133,-0.08,0.0212,0.0328,0.0173,-0.00405,0.0898,0.196,0.0571,-0.00524,0.0443,-0.06,0.0998,-0.0427,0.0549,0.188,-0.105,-0.276,-0.188,-0.206,-0.0836,0.165,-0.278,-0.0829,-0.0131,0.0767,-0.331,0.0557,0.155,0.265,0.0385,0.122,0.0041,-0.109,-0.0667,0.114,0.138,0.201,0.0756,0.0335,0.333,-0.182,0.0594,0.153,-0.12,-0.162,0.241,0.0553,0.0837,-0.0739,-0.141,-0.0597,0.139,0.0655,0.06,0.0623,0.162,-0.0983,0.0943,0.0427,-0.036,-0.226,-0.0552,0.00867,-0.199,0.103,0.138,0.174,-0.0997,-0.305,-0.0199,0.0367,0.0326,-0.109,0.269,-0.0279,0.0569,-0.078,-0.13,0.0469,-0.126,-0.0307,0.0703,0.124,-0.114,0.123,0.0132,-0.0415,0.0317,0.0838,-0.154,0.0767,0.136,0.0142,0.0848,-0.268,-0.118,0.138,-0.0522,0.0956,0.11,0.0844,0.0284,0.134,-0.0877,0.148,0.122,-0.209,-0.0393,0.111,-0.226,-0.147,0.147,0.0517,-0.213,0.0163,-0.0134,0.0167,0.025,0.216,-0.0594,-0.00413,-0.0942,-0.0643,0.0525,-0.0153,0.0297,-0.0525,0.136,-0.0849,
0.151,-0.247,0.0187,0.0415,-0.0305,0.156,0.142,-0.0939,-0.0475,-0.101,0.0106,0.0603,0.238,-0.106,-0.0673,0.216,0.0979,-0.249,0.0165,0.059,0.198,0.313,0.186,-0.0455,0.129,-0.159,0.0789,0.169,-0.34,0.0312,-0.102,0.0858,0.0847,0.113,0.128,-0.097,-0.0338,0.108,0.00684,-0.126,-0.0601,-0.16,-0.287,-0.192,-0.0534,-0.191,-0.111,-0.0861,0.0617,-0.27,0.0461,0.0425,-0.0964,-0.194,0.362,-0.0649,-0.11,-0.15,0.0665,-0.248,-0.0936,-0.15,-0.204,0.199,0.0148,0.112,-0.423,-0.154,-0.0438,-0.202,0.0243,0.178,-0.0346,-0.12,0.103,-0.0255,-0.0278,0.0692,0.0948,0.164,0.041,0.0212,-0.0628,-0.0845,-0.0788,-0.0992,-0.0942,-0.0489,0.0666,0.101,0.0561,0.0731,-0.0717,-0.0108,0.133,0.217,-0.0374,0.0679,-0.215,-0.258,-0.117,0.121,-0.14,0.0513,0.147,0.129,-0.0532,0.164,0.0497,-0.142,-0.0874,0.0133,0.00906,0.0153,0.011,-0.0404,0.0107,-0.258,-0.0214,0.0171,-0.00263,-0.0548,0.112,0.0751,0.00375,-0.138,0.289,0.0856,0.0593,0.13,0.00717,-0.00357,0.0994,0.0847,-0.00494,-0.143,0.127,0.0717,-0.205,0.0726,0.13,0.0243,0.278,0.0603,-0.114,0.197,0.0927,-0.135,0.104,0.183,0.108,0.00646,-0.0531,0.275,0.101,0.122,-0.00822,0.0145,0.0317,-0.0354,-0.112,-0.0155,0.0017,-0.00843,0.136,0.0431,-0.179,-0.0186,0.109,-0.153,-0.118,-0.00871,0.364,-0.339,-0.192,-0.169,-0.123,0.118,0.0422,0.245,-0.0044,-0.0438,-0.0165,0.104,0.202,-0.0336,0.0684,-0.267,-0.0953,-0.185,0.0852,0.0972,0.161,0.0132,0.0834,0.0437,-0.233,0.035,0.117,0.0494,-0.0515,0.119,0.00101,0.123,0.0372,0.0978,-0.0879,0.0612,0.285,-0.112,-0.0542,-0.0123,-0.195,-0.269,-0.0577,0.00683,-0.118,0.00482,-0.0342,-0.0679,-0.139,-0.0552,-0.203,-0.0661,-0.293,-0.122,-0.156,0.0585,0.0899,0.174,-0.0908,0.218,0.0362,-0.193,0.159,-0.0372,-0.113,0.0341,0.000758,-0.0739,-0.0744,-0.0478,-0.0561,-0.0645,0.0451,-0.00364,-0.0431,-0.0602,-0.178,-0.265,-0.239,0.145,0.0171,-0.105,-0.0357,0.0174,-0.211,-0.111,0.0751,-0.211,-0.0842,-0.126,0.155,0.0646,-0.00826,-0.154,0.0232,0.119,0.251,-0.106,-0.121,-0.0317,0.0895,-0.0857,0.0765,-0.0482,0.197,-0.0443,-0.084,0.104,-0.132,-0.0274,0.00929,0.0384,0.144,0.298,-0.0842,-0.0864,0.0287,0.0475,0.0758,-0.128,0.051,-0.316,-0.181,0.0811,0.0417,-0.136,0.068,0.0489,-0.125,0.000792,0.143,0.0681,-0.0139,-0.246,-0.149,0.108,0.0569,0.0144,0.034,-0.0374,0.0417,-0.00428,0.115,-0.0104,0.00837,-0.0691,-0.00298,-0.14,-0.0865,-0.0592,-0.19,0.0225,-0.118,0.0349,-0.0737,-0.0176,0.114,-0.131,-0.28,-0.0885,-0.079,-0.00176,-0.0773,-0.0708,0.201,0.078,-0.1,-0.0476,-0.37,0.0479,-0.000619,-0.0788,-0.0748,-0.0962,0.0707,0.0367,0.0567,-0.0278,0.0138,-0.0704,0.125,-0.0479,-0.0723,-0.0509,-0.147,-0.0664,-0.159,0.0479,-0.0555,-0.0796,-0.0671,-0.0116,-0.37,-0.32,0.0167,-0.0125,0.0481,0.0244,0.0908,-0.0712,0.0664,0.0352,-0.0891,-0.00565,0.124,-0.169,0.0513,0.141,0.107,0.0991,0.111,0.38,-0.0993,0.212,0.223,-0.407,-0.115,0.3,-0.116,-0.0939,-0.0782,0.298,-0.185,0.112,-0.0221,-0.0841,-0.0772,-0.0381,-0.258,-0.0353,0.198,0.0367,0.00842,0.00984,0.0604,0.0625,0.114,-0.00512,0.0656,0.0487,0.0694,-0.0354,-0.147,-0.148,0.0971,-0.0462,-0.128,0.148,-0.179,-0.0318,0.249,0.16,-0.213,0.322,0.255,-0.159,0.0664,0.163,0.0543,0.0496,0.0283,-0.339,0.0335,0.0948,-0.0431,0.235,0.169,0.183,-0.174,-0.074,-0.163,0.014,0.0468,0.0474,-0.0824,0.087,0.235,-0.00305,0.0186,-0.0794,-0.102,0.0737,0.0801,0.0854,-0.0474,-0.126,-0.128,0.223,0.149,-0.0997,-0.0152,0.13,0.0372,-0.182,-0.128,0.0837,0.0589,-0.126,-0.0333,0.148,-0.0525,-0.155,-0.00934,0.0207,0.0684,0.0377,0.16,-0.0572,-0.159,0.0605,-0.0699,0.14,0.184,0.187,-0.0709,-0.0985,0.156,0.0838,0.105,0.124,0.0261,0.127,-0.0752,0.18,0.0193,-0.047,-0.167,0.398,
0.114,-0.109,0.00268,0.0293,0.0781,-0.0124,-0.066,-0.0991,0.183,-0.0685,-0.00674,-0.0279,0.208,0.164,0.0745,0.0283,-0.0367,-0.0818,-0.0338,-0.159,0.111,0.201,-0.0416,-0.0191,0.0323,-0.0153,0.0394,0.136,0.0112,0.00829,-0.199,-0.0209,0.106,-0.0999,-0.0301,-0.254,-0.0718,-0.179,0.307,-0.00876,-0.0136,0.0523,0.0746,0.144,0.18,-0.0168,0.227,-0.145,0.0693,0.143,-0.17,0.0583,-0.0103,0.0967,0.0232,0.247,-0.268,0.199,0.249,0.128,-0.0282,0.148,0.0682,-0.0155,0.0213,0.00754,-0.187,0.0641,0.167,0.165,-0.18,0.00474,0.0679,-0.0294,0.0154,-0.162,-0.0225,-0.0558,-0.228,0.03,0.00754,0.141,-0.0904,0.0048,0.0179,0.327,0.0786,0.0699,-0.0194,0.0623,-0.0183,0.0133,0.0462,-0.285,-0.193,0.0617,-0.051,0.0133,0.1,0.033,-0.0629,-0.0182,-0.0733,0.0628,0.294,0.221,-0.107,-0.0179,0.0857,0.141,-0.162,0.0734,-0.0204,0.0833,0.0656,0.105,0.00764,0.121,0.142,-0.174,-0.00983,0.0532,-0.137,-0.0631,0.097,-0.32,-0.151,-0.0127,-0.0901,-0.00986,0.00733,0.0495,0.0398,-0.0605,0.0118,-0.0894,0.0322,0.0357,-0.135,-0.12,0.0704,-0.035,-0.092,0.0378,-0.198,-0.132,0.0558,-0.0732,0.0201,0.0682,0.142,0.104,-0.224,0.154,0.073,0.101,0.22,0.0347,0.0197,-0.0885,0.0889,0.252,-0.144,-0.041,-0.106,0.0331,0.0203,0.11,-0.113,0.0526,-0.133,0.126,-0.123,0.0818,-0.0939,-0.136,0.0846,0.0896,-0.00779,-0.00433,0.0453,-0.0438,-0.0079,0.0169,-0.0098,0.0654,0.0159,-0.0577,-0.27,0.0941,0.0464,-0.0297,0.13,0.121,0.00244,0.00408,0.0387,0.0401,0.125,-0.109,0.0731,-0.0485,-0.0151,-0.0389,0.185,0.0164,0.0721,0.0476,0.156,-0.00541,-0.00203,-0.00589,0.0432,0.0807,-0.0972,-0.0156,-0.028,-0.0473,-0.0122,0.107,0.0741,0.218,-0.0534,0.0775,-0.0875,-0.0448,-0.0708,0.178,-0.0134,-0.032,0.0913,-0.0478,-0.00768,0.108,0.0611,-0.116,0.11,0.0078,-0.0771,-0.0434,-0.0885,-0.0433,-0.141,-0.0484,-0.0259,0.196,0.0402,-0.115,-0.0686,0.139,-0.0161,0.103,-0.0109,-0.0652,-0.0123,-0.0486,-0.0676,0.194,0.0112,0.0374,-0.17,-0.108,0.0984,-0.0716,-0.0901,-0.155,0.0932,-0.119,0.0306,-0.12,-0.0279,0.0117,0.0991,0.204,-0.158,0.00347,0.098,0.14,-0.119,0.0867,-0.0682,0.0238,-0.07,-0.187,0.00922,0.0737,0.0943,0.000598,-0.0442,-0.0323,0.0811,0.0803,-0.176,-0.141,-0.196,-0.0792,-0.0618,-0.107,-0.0562,0.0153,0.104,0.168,0.0156,-0.0183,-0.0104,0.111,0.155,-0.0127,-0.05,-0.0054,-0.0196,0.0463,-0.0516,0.0343,0.0992,-0.0425,0.087,-0.159,0.0995,0.0657,0.0983,-0.112,0.0164,0.0308,0.133,-0.0694,-0.102,-0.0244,-0.0472,0.167,-0.0717,0.0461,-0.0273,0.0471,-0.0433,0.0133,0.125,0.0478,-0.0193,-0.0311,-0.00714,-0.0214,0.0455,-0.0998,0.107,0.00677,-0.022,0.117,0.14,-0.0901,0.124,-0.155,0.0744,-0.0526,-0.00172,0.104,-0.0343,0.0748,0.219,0.164,0.168,0.0845,0.0262,-0.104,0.162,0.0345,0.0467,0.354,-0.112,0.115,0.232,-0.0639,0.11,0.0445,0.372,-0.0564,0.173,0.029,0.0379,-0.125,-0.0809,0.00336,0.295,0.117,-0.00305,-0.163,-0.061,-0.0688,-0.0438,0.0614,-0.0423,-0.103,0.0574,0.0327,-0.204,0.0286,-0.0402,0.00131,0.166,-0.14,0.126,-0.0838,-0.0304,-0.115,-0.111,0.0925,-0.0816,0.127,0.0368,0.269,-0.344,0.0815,-0.0213,0.143,-0.333,0.236,0.0191,0.0433,0.17,0.04,0.0332,0.112,0.133,0.122,-0.127,-0.151,0.0759,-0.0108,-0.12,-0.112,-0.00772,0.0187,0.293,0.181,0.00401,0.137,0.176,-0.0636,0.251,-0.0694,0.177,-0.0803,0.0289,-0.0905,0.222,0.211,0.0416,-0.0637,-0.104,0.0427,-0.0499,-0.084,0.169,-0.0824,0.121,0.0798,-0.217,0.0538,0.0425,-0.00711,0.093,-0.0563,0.123,0.13,-0.0575,0.0147,-0.0122,0.387,0.0183,0.0479,0.189,-0.129,0.134,0.0557,0.0672,-0.14,0.0756,-0.189,-0.0651,-0.292,0.0973,0.235,-0.0691,-0.0882,0.0317,0.0103,0.0434,0.163,-0.32,0.0748,-0.251,0.227,0.017,0.206,0.0355,-0.239,0.0266,0.0598,-0.0713,0.067,
0.116,-0.0109,-0.329,-0.109,-0.192,-0.301,-0.058,-0.214,-0.087,-0.226,-0.0374,-0.155,0.024,0.299,0.139,-0.083,-0.147,-0.159,-0.104,-0.043,-0.185,-0.103,-0.022,0.206,0.116,0.213,-0.18,0.0988,0.00102,-0.177,0.103,0.0835,-0.0917,-0.158,0.0197,-0.0682,0.0383,0.162,0.0875,-0.13,0.183,0.0924,-0.109,-0.0326,0.12,0.05,0.191,0.0896,-0.0702,0.133,0.0995,0.0861,-0.137,0.0342,0.105,-0.0104,-0.0334,-0.03,-0.0857,-0.192,0.051,-0.143,-0.208,-0.0462,0.113,0.184,-0.0148,0.152,-0.0301,-0.00204,0.00103,0.201,-0.113,-0.0809,-0.219,-0.395,0.25,-0.0471,-0.149,-0.0199,0.0306,-0.192,0.0576,-0.131,0.152,-0.0473,0.122,0.0109,-0.0548,0.153,-0.155,0.0759,0.178,-0.102,-0.0254,-0.0652,0.16,0.128,-0.0913,0.0821,-0.119,-0.0895,0.0921,-0.0686,-0.0989,-0.00131,-0.0665,-0.0405,-0.047,-0.134,-0.184,0.0311,-0.0816,-0.0708,0.0597,0.0375,-0.16,-0.016,-0.0538,0.0831,0.0636,0.0629,-0.0472,0.00896,0.131,0.0706,-0.0777,0.00858,-0.0453,0.0447,0.0686,0.00367,0.144,0.141,0.0498,-0.0311,-0.0503,-0.146,-0.0378,0.0555,-0.0445,-0.00412,0.0265,0.119,-0.000285,0.106,-0.0351,0.1,0.0533,-0.0489,-0.00665,-0.0234,-0.0129,-0.118,0.012,0.0416,0.00178,0.0538,-0.0424,0.0504,0.141,0.038,0.00739,-0.103,-0.0461,0.123,0.0837,-0.102,0.0323,0.106,-0.0499,-0.139,-0.0672,-0.129,0.0644,-0.0604,-0.132,-0.065,-0.0145,0.00392,0.0282,-0.0591,-0.0452,0.0324,0.0495,0.0192,0.00688,-0.003,0.0979,-0.0566,-0.104,0.0426,-0.0216,-0.0218,-0.0655,0.0241,0.0611,0.0296,0.051,-0.00326,-0.102,0.0453,0.00332,-0.13,-0.058,-0.0401,-0.00701,-0.0451,0.0873,0.179,-0.0691,-0.0288,-0.0732,-0.0628,-0.014,-0.12,-0.0201,0.108,-0.122,0.0792,-0.0655,-0.112,-0.0239,-0.0209,0.00759,-0.017,-0.0784,0.0209,0.131,-0.0655,0.0205,-0.0914,-0.0567,-0.000233,-0.0596,-0.0103,0.0264,-0.124,-0.000657,0.0688,-0.0258,0.0433,0.223,-0.0872,0.0669,0.105,0.0985,0.0469,0.155,0.179,0.0256,-0.00568,0.077,0.0809,-0.185,0.0166,0.0549,0.0355,0.0415,0.121,0.15,0.169,0.0485,-0.0963,-0.0227,-0.00708,0.186,0.144,0.118,0.0869,0.0117,0.00232,0.123,0.177,0.0732,0.0758,0.0765,0.0509,-0.0117,-0.127,-0.117,-0.097,0.0559,0.0124,-0.0375,0.0865,-0.0474,-0.0412,0.0125,-0.0792,0.00681,-0.0678,0.106,-0.0223,-0.0928,-0.0617,0.0625,-0.0241,0.0896,0.159,-0.0599,-0.00805,0.131,0.014,-0.0624,0.00741,0.0483,-0.0324,-0.0561,0.0619,0.00176,-0.0608,-0.00575,0.0444,0.0947,-0.00612,0.0371,0.116,0.00775,-0.11,-0.0588,0.0479,0.115,-0.0412,-0.0191,-0.0105,-0.0228,0.0159,-0.0605,-0.0807,0.0451,-0.0662,-0.0531,-0.0905,-0.057,-0.0285,-0.103,-0.0805,0.00978,0.0864,-0.00275,0.0317,0.00828,-0.00833,-0.0209,0.0506,-0.023,-0.258,-0.29,-0.0536,-0.0503,0.0686,-0.0299,0.0241,-0.0523,-0.0624,0.0648,-0.0995,0.0721,0.0305,-0.0449,-0.115,-0.138,0.0453,-0.0364,-0.0394,0.0323,0.00264,0.0295,0.105,0.109,0.0809,0.0207,-0.0533,0.0295,0.102,0.0972,0.107,-0.106,0.158,0.0492,0.102,-0.0498,0.0225,-0.0163,-0.0596,0.0238,0.292,-0.0394,0.157,0.0362,0.142,0.0461,-0.104,-0.0401,0.121,0.113,-0.0182,0.0628,0.0819,-0.0234,-0.0418,-0.0652,-0.093,0.00334,0.0605,0.0089,-0.101,-0.175,-0.125,-0.00589,0.000195,-0.0465,0.0527,0.0338,-0.00894,-0.0195,-0.0294,-0.00879,-0.0171,-0.0689,0.0707,-0.0226,-0.18,0.134,0.166,-0.0601,0.13,0.115,0.0819,-0.0612,0.0125,-0.0475,0.0573,0.0482,0.146,0.0641,0.0837,-0.0305,0.0713,-0.0305,0.0298,0.0225,0.00863,-0.0405,-0.0358,-0.0628,0.0175,0.056,0.134,0.0383,0.0602,0.017,0.0813,-0.0446,0.166,0.0264,0.0334,-0.0675,0.0923,-0.0609,-0.042,-0.031,-0.0171,-0.0953,0.103,0.064,-0.0912,0.036,-0.0129,-0.00281,0.0948,0.0451,0.138,0.0801,0.0505,0.0331,0.0695,0.0161,0.0637,0.0706,-0.000752,0.0899,-0.061,-0.0872,-0.261,-0.0544,0.122,0.04,0.0273,0.0796,0.0279,-0.0162,0.0759,-0.175,-0.088,-0.0243,-0.128,0.0856,0.00196,
0.0582,-0.0677,-0.0512,-0.0554,0.145,-0.0202,0.281,0.0137,-0.00198,-0.0929,-0.0259,-0.0874,-0.0469,-0.00219,0.0166,0.0529,-0.034,-0.136,-0.0779,0.0105,0.0112,-0.0667,-0.0467,-0.0705,0.0115,0.00935,0.1,-0.0211,-0.0151,0.0118,-0.216,-0.0828,-0.0151,0.0566,0.000449,-0.0762,-0.0184,-0.143,0.0859,-0.0878,0.0323,-0.0463,0.125,0.0377,0.0702,0.0588,0.1,0.046,-0.0987,0.0215,0.0567,0.0195,0.0962,-0.0305,-0.159,-0.0961,0.0403,-0.0179,0.0163,0.0314,-0.0749,0.0419,-0.0991,0.00509,-0.121,-0.0021,0.132,0.102,0.108,0.1,0.0666,0.097,0.0809,0.0621,-0.0212,0.169,-0.0767,-0.073,0.0735,-0.152,-0.114,-0.103,-0.124,0.102,-0.125,-0.0967,-0.186,0.0834,0.0588,-0.181,-0.196,0.0591,0.0625,-0.0474,0.0457,0.00408,0.0623,-0.218,0.21,0.0119,-0.195,0.092,-0.214,-0.0934,-0.153,-0.0384,0.0354,-0.00501,-0.038,-0.00188,-0.0234,0.15,-0.145,0.142,-0.0229,0.0909,-0.11,-0.00488,0.122,-0.0397,-0.0881,0.0875,-0.00755,0.157,-0.0141,-0.0585,-0.229,0.0867,0.143,0.0305,-0.0425,-0.0632,0.0247,-0.0484,-0.165,-0.152,0.121,-0.0798,-0.122,-0.0856,-0.0102,-0.162,0.00162,0.00653,0.071,-0.0935,-0.0337,-0.151,-0.0474,-0.0455,-0.0174,-0.123,0.0213,0.152,-0.146,0.0412,-0.0852,0.0959,-0.0212,-0.0303,-0.0474,0.0194,0.12,-0.113,0.109,0.0855,0.157,-0.191,-0.074,-0.215,0.101,-0.0727,0.0835,0.083,0.0294,-0.00083,0.0567,0.0176,0.0259,-0.0269,-0.00767,0.173,-0.0465,-0.0965,-0.108,-0.0259,0.0326,0.0971,-0.0311,0.09,0.125,0.0443,0.117,-0.0192,-0.00683,-0.356,-0.0174,0.114,0.0831,-0.146,-0.136,0.0581,-0.0369,0.149,-0.00609,0.00938,0.0778,0.0559,0.0213,0.111,0.163,-0.188,0.0797,0.0511,-0.106,-0.0569,-0.0456,0.321,-0.0255,-0.0644,0.177,0.0588,0.0127,0.256,0.0743,-0.0699,-0.0775,-0.00654,-0.0169,0.0601,0.113,-0.0399,0.0215,0.178,-0.218,0.095,-0.172,0.0931,-0.144,0.0613,0.0464,0.117,-0.094,0.0384,0.0185,0.083,0.242,-0.0399,0.00829,0.0619,0.0368,0.00624,0.0384,0.0397,-0.0215,-0.0049,0.164,0.0763,-0.265,-0.0607,-0.042,0.0766,0.107,0.162,0.0952,0.0327,-0.0686,0.0635,0.101,0.158,0.231,0.212,-0.0952,0.0944,-0.22,0.0717,-0.0569,-0.057,0.0673,0.0872,0.0573,0.0224,-0.0735,0.00924,-0.145,-0.157,0.0218,-0.159,-0.0914,0.182,-0.0204,-0.105,-0.0136,-0.0751,0.0562,0.11,0.11,0.158,0.0728,0.105,-0.0662,-0.0283,-0.00771,-0.0235,0.128,0.0963,0.0538,-0.0153,0.0992,-0.0878,0.0385,-0.0361,-0.118,-0.178,-0.197,-0.0162,-0.301,-0.0933,0.0691,0.019,0.0832,-0.0377,0.095,0.0968,-0.0199,0.124,0.138,-0.0913,-0.0543,0.178,0.103,0.0672,-0.0562,0.285,-0.0496,0.133,-0.244,0.107,-0.0269,0.0747,-0.0863,-0.0336,0.248,-0.089,0.0454,0.17,0.0265,0.117,0.0447,-0.0139,-0.0444,-0.0741,0.242,-0.412,-0.0636,-0.227,-0.0106,0.211,-0.0896,0.0771,-0.0819,-0.152,-0.0211,0.0683,0.0901,-0.0777,-0.0115,-0.107,-0.177,0.0449,0.101,0.0628,0.00482,-0.211,0.0448,0.114,-0.356,-0.0101,0.286,0.0831,-0.211,0.033,0.025,0.0901,0.125,0.0922,0.188,0.0417,0.159,-0.0166,0.0615,-0.0186,-0.236,-0.0708,-0.0114,0.0531,-0.107,0.0564,-0.0047,-0.0591,-0.264,0.0518,-0.0486,0.209,-0.108,0.0799,-0.147,0.235,0.0664,0.146,-0.163,0.103,-0.0607,-0.22,-0.00295,-0.116,0.0158,0.00644,-0.126,-0.0226,-0.000191,-0.138,0.0888,0.0232,-0.0147,0.0326,-0.0282,-0.0909,-0.106,-0.196,-0.0534,0.128,-0.124,-0.082,0.0139,0.154,-0.0834,-0.101,-0.0449,0.262,0.00705,-0.183,0.0381,-0.135,0.0933,-0.0392,-0.119,-0.103,0.248,-0.0722,-0.162,-0.0358,-0.0173,0.0188,0.19,-0.04,0.00169,-0.164,-0.199,-0.109,-0.0109,-0.00319,-0.168,-0.162,-0.108,0.0805,-0.0495,-0.113,0.108,0.0551,0.109,0.0199,-0.0704,-0.355,-0.288,-0.129,0.207,-0.035,-0.035,-0.0527,-0.081,-0.203,0.0362,-0.141,-0.308,-0.321,-0.16,-0.0468,-0.154,-0.209,-0.0965,-0.027,0.0779,-0.00651,0.0803,0.0623,-0.17,-0.0816,-0.0459,0.0029,
-0.141,-0.09,-0.0767,-0.178,-0.0924,-0.00391,-0.0184,-0.118,-0.00982,-0.194,-0.224,-0.0243,0.0482,-0.178,-0.057,0.00471,0.0146,0.146,0.0481,-0.035,-0.202,-0.0407,0.0783,-0.0702,0.122,-0.122,0.246,0.0336,0.0689,-0.0254,-0.0168,0.0243,0.0747,0.143,0.0308,0.158,-0.176,-0.0705,-0.252,-0.135,0.0434,0.0138,0.0456,0.127,-0.362,-0.147,-0.195,-0.00101,0.197,0.0898,0.0524,-0.0843,0.0616,0.146,-0.0241,0.0611,0.094,0.0993,-0.00915,-0.0285,0.0415,0.0362,0.063,-0.11,0.00877,-0.322,-0.109,0.0613,-0.245,-0.295,0.0342,-0.0896,0.0178,-0.068,0.0927,0.0269,0.128,0.0421,-0.00987,-0.00711,0.115,-0.0101,-0.194,-0.0388,-0.067,0.0632,-0.0247,0.0899,-0.0725,0.113,0.0232,0.00775,-0.31,-0.103,-0.0437,-0.164,-0.194,-0.0921,0.0473,0.0188,-0.194,-0.118,0.124,-0.0179,-0.197,-0.108,0.12,-0.325,-0.00123,-0.234,-0.0894,-0.248,-0.203,-0.0322,-0.0315,-0.251,-0.0786,-0.00765,0.211,-0.245,0.0532,-0.144,0.175,0.0474,-0.0866,0.303,0.00116,-0.0567,-0.229,-0.0964,-0.0237,0.162,-0.0317,-0.16,0.0724,-0.1,0.0758,-0.0833,0.145,-0.0558,0.00237,-0.115,0.108,0.223,-0.0497,-0.144,0.141,0.0184,-0.115,-0.137,-0.00123,0.057,-0.129,-0.0794,-0.1,-0.292,-0.121,-0.0697,-0.0894,0.0177,0.0897,0.14,0.0429,-0.0677,0.0611,0.153,-0.0125,0.0464,-0.261,-0.0822,0.00433,0.0536,0.188,0.0353,0.139,-0.392,-0.0224,0.0879,-0.14,-0.159,-0.0297,0.0265,0.175,0.0644,0.0713,0.185,0.034,0.157,-0.171,-0.0453,0.053,-0.03,-0.0558,-0.177,-0.107,-0.0914,0.0538,0.0627,0.169,0.0757,0.0377,-0.079,0.084,-0.0457,0.153,0.265,-0.0967,-0.0647,-0.0189,0.132,-0.0137,-0.0894,0.18,0.0219,-0.0547,-0.09,0.0956,-0.0673,-0.275,0.0357,-0.0861,0.188,0.0596,-0.0552,0.115,-0.0349,0.0999,-0.0341,0.0333,0.00298,-0.000251,0.0954,0.0233,0.0612,-0.0501,-0.0454,0.0706,-0.0121,-0.145,0.0161,0.0601,-0.0831,-0.00324,0.0229,0.154,0.233,0.164,0.118,-0.0943,0.0149,-0.0144,0.0426,-0.00552,-0.117,-0.123,0.0471,0.0631,-0.00491,0.163,0.0195,0.0162,0.0592,0.0359,-0.0167,-0.185,-0.0405,-0.0874,0.114,0.0168,0.0953,-0.207,0.014,-0.0997,0.0659,0.024,0.185,0.0774,0.0824,0.0407,0.0155,0.0493,-0.0979,0.025,0.045,-0.0757,-0.0859,-0.0345,-0.205,-0.206,-0.299,-0.0643,-0.0634,-0.112,-0.0728,0.0767,-0.0988,-0.192,0.0944,0.201};
double a4[]={0.068,
0.0126,0.0428,-0.0583,-0.0509,0.155,0.0335,-0.0725,0.258,0.0852,-0.0388,0.148,-0.098,0.18,-0.081,-0.0765,-0.0273,-0.167,0.176,0.507,0.221,-0.00217,0.358,0.0243,-0.124,0.652,0.32,-0.018,0.0355,-0.000962,0.0754,0.0848,0.0491,0.0419,0.18,0.0426,-0.0191,0.0981,0.273,-0.0742,0.493,0.0521,0.112,-0.00403,-0.0151,0.65,-0.44,-0.0476,0.211,0.0364,-0.0273,0.158,-0.107,0.185,-0.0609,-0.0199,0.000162,-0.0889,0.0879,-0.0531,-0.0789,0.526,-0.238,-0.0592,-0.211,0.834,0.194,-0.141,0.183,-0.504,-0.0216,0.102,0.0423,0.324,0.076,0.000598,-0.127,-0.249,-0.0746,0.35,-0.187,0.149,-0.0699,0.0442,0.465,0.119,0.189,-0.164,0.195,0.164,0.188,0.167,-0.242,0.0344,-0.741,-0.111,0.131,0.0656,0.143,0.459,-0.0856,0.0924,0.0994,0.0515,0.112,0.401,0.116,0.442,0.298,0.0896,0.0609,0.251,-0.057,0.178,0.309,-0.00699,-0.0678,-0.0591,0.0784,0.158,-0.0927,-0.00918,0.0215,-0.162,-0.483,0.512,0.041,-0.0483,0.231,0.195,0.138,0.296,-0.0543,0.194,-0.295,-0.128,0.0359,-0.0713,0.0661,-0.456,-0.404,0.209,-0.173,0.0807,-0.277,0.51,0.016,-0.121,0.314,0.0631,0.0629,0.091,-0.176,0.0564,0.307,0.191,-0.0228,0.00618,0.438,-0.382,-0.301,0.105,0.287,0.121,0.198,0.827,0.357,-0.175,0.224,0.0464,-0.571,0.18,-0.0998,0.167,0.164,-0.0414,-0.0164,-0.0476,-0.102,-0.336,-0.0443,-0.701,-0.00681,-0.0992,0.062,0.625,-0.0566,-0.0461,-0.261,0.105,0.079,-0.166,-0.00371,0.126,-0.048,0.0375,0.0743,-0.0677,0.00853,-0.669};

struct NConnection{
    int nIndex;
    int wIndex;
    NConnection(int n=0, int w=0) : nIndex(n), wIndex(w){}
};

struct NLayer{
    NLayer *prev;
    size_t n;
    vector<vector<NConnection> > cons;
    vector<double> w;
    vector<double> out;

    void calculate();
    size_t size(){return n;}

    NLayer(){}
    NLayer(int size, NLayer *prev = NULL) : prev(prev), n(size)
    {
        cons.resize(n);
        out.resize(n);
    }
    void createFullConnections()
    {
        w.clear();
        if(prev != NULL)
            for(size_t i = 0; i < n; i++)
            {
                cons[i].resize(prev->size());
                for(size_t k = 0; k < prev->size(); k++)
                {
                    cons[i][k].nIndex = k;
                    cons[i][k].wIndex = w.size();
                    w.push_back(0.0);
                }
            }
    }

};

void NLayer::calculate()
{
    if(prev == NULL)
        return;
    for(size_t i = 0; i < n; i++)
    {
        double sum = 0;
        for(size_t j = 0; j < cons[i].size(); j++)
            sum += prev->out[ cons[i][j].nIndex ] * w[cons[i][j].wIndex];
        out[i] = SIGMOID(sum);
    }
}

struct NNet{
    vector<NLayer*> layers;

    void calculate(vector<double> &in, vector<double> &out);

    void addLayer(int n)
    {
        NLayer *prev = 0;
        if(layers.size() !=  0)
            prev = *(layers.end() - 1);
        layers.push_back(new NLayer(n, prev));
        cerr << "added layer " << (*(layers.end()-1))->n << " " << (*(layers.end()-1))->prev << endl;
    }

    void read()
    {
        //random_init();
        for(size_t j = 0; j < layers[1]->w.size(); j++)
            layers[1]->w[j] = a1[j];
        for(size_t j = 0; j < layers[2]->w.size(); j++)
            layers[2]->w[j] = a2[j];
        for(size_t j = 0; j < layers[3]->w.size(); j++)
            layers[3]->w[j] = a3[j];
        for(size_t j = 0; j < layers[4]->w.size(); j++)
            layers[4]->w[j] = a4[j];

        cerr << "readed\n";
    }
};

void NNet::calculate(vector<double> &in, vector<double> &out)
{
    for(size_t i = 0; i < layers[0]->size(); i++)
        layers[0]->out[i] = in[i];

    for(size_t i = 1; i < layers.size(); i++)
        layers[i]->calculate();

    out.resize(layers[layers.size()-1]->size());

    for(size_t i = 0; i < out.size(); i++)
        out[i] = layers[layers.size()-1]->out[i];
}


void createNet(NNet &net)
{
    net.addLayer(19*25);

    int lay1_mc = 4;
    int lay2_mc = 20;

    net.addLayer(9*11 * lay1_mc);


    int kernel1[] = {
        0, 1, 2, 3, 4,
        18, 19, 20, 21, 22,
        36, 37, 38, 39, 40,
        54, 55, 56, 57, 58,
        72, 73, 74, 75, 76
    };

    NLayer *lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc * 25);
    for(int map = 0; map < lay1_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 9*11; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/9)*18*2 + (ney%9) * 2;
            for(int c = 0; c < 25; c++)
                lay->cons[map * 9*11 + ney].push_back(NConnection(base + kernel1[c], map*25 + c));
        }
        //cerr << endl;
    }

    int kernel2[]={
        0, 1, 2, 3, 4, 5,
        9, 10, 11, 12, 13,
        18, 19, 20, 21, 22,
        27, 28, 29, 30, 31,
        36, 37, 38, 39, 40
    };

    net.addLayer(3*4 * lay2_mc);
    lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc*lay2_mc * 25);

    for(int map = 0; map < lay2_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 3*4; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/3)*9*2 + (ney%3) * 2;
            for(int f_map = 0; f_map < lay1_mc; f_map++)
                for(int c = 0; c < 25; c++)
                    lay->cons[map * 3*4 + ney].push_back(NConnection(f_map *9*11 + base + kernel2[c], map*25*lay1_mc + f_map*25 + c));
        }
        //cerr << endl;
    }

    net.addLayer(20);
    net.layers[net.layers.size()-1]->createFullConnections();

    net.addLayer(10);
    net.layers[net.layers.size()-1]->createFullConnections();
}

int main()
{
    char str[100];
    NNet net;
    createNet(net);
    //ifstream fin("perceptron");
    net.read();

    while(cin.getline(image[height], 1000))
        height++;
    width = strlen(image[0]);

    for(int i = 0; i < height; i++)
        for(int j = 0; j < width; j++)
            switch(image[i][j])
            {
                case '.': image[i][j] = 0; break;
                case '%': image[i][j] = 1; break;
                case '#': image[i][j] = 2; break;
                case '@': image[i][j] = 3; break;
            }

    vector<digit> digits = split_image();
    //cerr << "splited";
    for(size_t j = 0; j < digits.size(); j++)
    {
        //digits[j].print();
        digit d = scale(digits[j], 25, 19);
        //d.print();
        vector<double> x;
        for(int i = 0; i < 25; i++)
            for(int j = 0; j < 19; j++)
                x.push_back( (d.mat[i][j]>0) ? 1 : -1 );
        vector<double> y;
        net.calculate(x, y);

        int jm = 0;
        for(int j = 0; j < 10; j++)
        {
            //cerr << y[j] << " ";
            if(y[j] > y[jm])
                jm = j;
        }
        //cerr << endl;
        cout << jm;
    }
    return 0;
}
