#include <iostream>
#include <fstream>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <set>

using namespace std;

char image[200][1000];
bool c[200][1000];
int width = 0;
int height;

struct pixel_set{
    set<pair<int, int> > s;
    double xc, yc;
    int left, top, right, bottom;
    pixel_set()
    {
        xc = yc = right = bottom = 0;
        left = top = 1e9;
    }
    void add_pixel(int x, int y)
    {
        s.insert( make_pair(x, y) );
    }
    void merge(pixel_set &b)
    {
        for(set<pair<int, int> >::iterator it = b.s.begin(); it != b.s.end(); it++)
            s.insert(*it);
        calculate_info();
    }
    void calculate_info()
    {
        xc = yc = 0;
        for(set<pair<int, int> >::iterator i = s.begin(); i != s.end(); i++)
        {
            xc += i->first;
            yc += i->second;
            left = min(left, i->first);
            right = max(right, i->first);
            top = min(top, i->second);
            bottom = max(bottom, i->second);
        }
        xc /= s.size();
        yc /= s.size();
    }
};

struct digit{
    char mat[100][100];
    int width, height;

    digit(){memset(mat, 0, 100*100);}
    digit(pixel_set s)
    {
        memset(mat, 0, 100*100);
        width = s.right - s.left + 1;
        height = s.bottom - s.top + 1;
        for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
        {
            mat[it->first - s.left][it->second - s.top] = image[it->first][it->second];
        }
    }
    void print()
    {
        for(int i = 0; i < width; i++)
        {
            for(int j = 0; j < height; j++)
            {
                switch(mat[i][j])
                {
                    case 0: cout << '.'; break;
                    case 1: cout << '%'; break;
                    case 2: cout << '#'; break;
                    case 3: cout << '@'; break;
                }
            }
            cout << "\n";
        }
        cout << endl;
    }
};

int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dy[] = {1, -1, 0, 0, 1, 1, -1, -1};

bool check(int i, int j)
{
    return i >= 0 && i <= height && j >= 0 && j <= width;
}

void dfs(int i, int j, int min_color, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1 ;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(check(ni, nj) && image[ni][nj] >= min_color)
                dfs(ni, nj, min_color, cur_set);
        }
    }
}

bool inside(pixel_set s, double x, double y)
{
    return y >= s.top && y <= s.bottom;
}

bool can_merge(const pixel_set &a, const pixel_set &b)
{
    return inside(b, a.xc, a.yc) || inside(a, b.xc, b.yc);
}

void bfs_add(pixel_set &s, int len)
{
    queue<pair<int, int> > q;
    int dist[200][1000];
    memset(dist, 0x0f, 200*1000*4);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        dist[it->first][it->second] = 0;
        q.push(*it);
    }

    while(!q.empty())
    {
        pair<int, int> p = q.front();
        q.pop();
        if(dist[p.first][p.second] < len)
        {
            if(image[p.first][p.second] == 1)
            {
                bool bad = 0;
                for(int k = 0; k < 8; k++)
                {
                    int ni = p.first + dx[k];
                    int nj = p.second + dy[k];
                    if(check(ni, nj) && image[ni][nj] > 2)
                        if(s.s.find(make_pair(ni, nj)) == s.s.end())
                        {
                            bad = 1;
                            break;
                        }
                }

                if(!bad)
                    s.add_pixel(p.first, p.second);
            }
            for(int k = 0; k < 8; k++)
            {
                int ni = p.first + dx[k];
                int nj = p.second + dy[k];
                if(check(ni, nj) && image[ni][nj] == 1 && dist[ni][nj] > 100)
                {
                    q.push(make_pair(ni, nj));
                    dist[ni][nj] = dist[p.first][p.second] + 1;
                }
            }
        }
    }
    s.calculate_info();
}

void dfs_set(int i, int j, pixel_set &s, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(s.s.find( make_pair(ni, nj)) != s.s.end() )
                dfs_set(ni, nj, s, cur_set);
        }
    }
}

pixel_set make_one_component(pixel_set &s)
{
    vector<pixel_set> sets;
    pixel_set cur;
    memset(c, 0, 200*1000);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        int x = it->first;
        int y = it->second;
        if(!c[x][y])
        {
            dfs_set(x, y, s, cur);
            cur.calculate_info();
            if(cur.s.size() > 10)
                sets.push_back(cur);
            cur = pixel_set();
        }
    }
    if(sets.size() == 1)
        return sets[0];
    return sets[1];
}

vector<digit> split_image()
{
    vector<pixel_set> sets;
    vector<digit> res;

    pixel_set cur;

    for(int j = 0; j < width; j++)
        for(int i = 0; i < height; i++)
            if(image[i][j] >= 2 && !c[i][j])
            {
                dfs(i, j, 2, cur);
                cur.calculate_info();

                sets.push_back(cur);
                cur = pixel_set();
            }

    bool *merged = new bool[sets.size()];
    memset(merged, 0, sets.size());

    vector<pixel_set> blacks;
    for(size_t i = 0; i < sets.size(); i++)
        if(!merged[i])
        {
            cur = sets[i];
            for(size_t j = i+1; j < sets.size(); j++)
            {
                if(can_merge(cur, sets[j]))
                {
                    cur.merge(sets[j]);
                    merged[j] = 1;
                }
            }

            if(cur.s.size() > 10)
                blacks.push_back(cur);
            merged[i] = 1;
        }

    delete[] merged;

    for(size_t i = 0; i < blacks.size(); i++)
    {
        memset(c, 0, 200*1000);
        pixel_set s = blacks[i];
        bfs_add(s, 5);
        res.push_back(digit( make_one_component(s) ));
    }

    return res;
}

digit scale(digit d, int w, int h)
{
    digit res;
    res.width = w;
    res.height = h;

    for(int i = 0; i < w; i++)
        for(int j = 0; j < h; j++)
        {
            res.mat[i][j] = (d.mat[i*d.width/w][j*d.height/h] > 0 ? 3 : 0);
        }

  	for(int i = 0; i < d.width; i++)
        for(int j = 0; j < d.height; j++)
        {
            int ii = (double)i * w / d.width;
            int jj = (double)j * h / d.height;
            if(d.mat[i][j] == 3)
	            res.mat[ii][jj] = 3;
        }
    return res;
}

#define SIGMOID(x) (1.7159*tanh(0.66666667*x))

double a1[]={-0.069,
0.046,-0.19,-0.2,-0.2,0.71,0.43,0.15,-0.08,-0.083,0.33,0.43,-0.1,0.059,-0.11,0.079,0.34,0.38,0.45,0.25,-0.014,0.15,-0.059,-0.055,-0.14,0.21,0.64,0.33,0.48,-0.013,0.033,0.18,0.35,0.11,0.17,-0.07,-0.17,0.14,0.011,-0.039,-0.28,-0.31,-0.22,-0.15,0.15,-0.37,-0.6,-0.37,-0.6,-0.49,0.75,0.53,-0.047,-0.15,-0.33,0.33,0.82,0.57,0.16,-0.085,0.34,0.19,0.35,0.039,0.052,-0.091,-0.2,-0.096,-0.058,-0.39,0.15,-0.17,-0.21,-0.32,-0.3,-0.24,0.3,0.36,0.45,0.4,-0.51,0.14,0.6,0.51,0.31,-0.42,-0.3,0.19,0.38,0.28,-0.38,-0.27,-0.12,-0.011,0.34,-0.25,0.038,0.1,-0.0073,0.12};
double a2[]={0.41,
0.23,0.26,-0.12,0.088,-0.3,0.3,0.21,0.054,0.061,-0.26,0.056,-0.076,-0.13,-0.085,-0.22,0.093,-0.19,-0.15,-0.26,-0.34,-0.2,-0.054,-0.0011,-0.059,-0.15,0.091,-0.012,-0.026,0.042,0.014,0.17,0.048,0.05,-0.05,-0.016,0.036,0.18,0.18,0.078,-0.018,0.096,-0.072,-0.15,-0.13,-0.03,-0.22,0.11,-0.19,-0.23,0.25,0.21,0.11,0.061,-0.032,-0.15,0.49,0.17,0.23,-0.037,0.05,0.17,0.21,0.096,-0.0088,-0.33,0.068,-0.18,-0.19,-0.3,-0.38,-0.042,0.017,-0.099,-0.066,0.095,0.2,0.11,0.036,-0.053,0.00069,0.3,0.25,0.018,-0.024,-0.047,0.071,0.11,0.025,-0.14,0.075,-0.04,-0.28,-0.27,-0.26,0.0088,-0.2,-0.059,-0.17,-0.21,-0.14,-0.14,-0.091,-0.13,-0.022,-0.19,0.16,0.043,0.13,0.15,-0.13,0.16,0.11,0.023,0.16,0.1,0.2,0.006,0.015,-0.028,-0.053,0.21,-0.15,-0.14,-0.11,-0.3,-0.1,-0.093,-0.018,0.12,0.18,-0.18,-0.12,-0.11,-0.27,-0.17,-0.13,0.032,0.12,0.034,-0.079,-0.066,-0.034,0.059,0.16,0.18,-0.063,0.054,0.14,0.27,-0.31,-0.27,-0.22,-0.057,0.097,0.036,0.083,0.059,0.088,-0.11,-0.11,0.18,0.047,0.093,0.19,0.015,0.28,0.086,-0.025,0.083,0.061,0.088,0.022,0.014,-0.1,-0.35,-0.094,-0.059,0.1,0.2,0.034,-0.062,0.0022,-0.091,-0.25,-0.12,-0.039,0.24,0.19,0.066,-0.082,0.14,0.035,0.095,0.11,0.12,-0.0086,0.061,-0.087,-0.085,-0.065,-0.19,-0.12,-0.00095,0.054,-0.026,0.024,-0.071,-0.1,-0.082,0.17,-0.097,-0.043,-0.03,0.15,0.17,-0.24,-0.063,0.09,0.086,0.2,0.3,-0.07,0.18,0.16,-0.13,-0.074,-0.059,-0.028,0.047,-0.048,-0.035,-0.061,-0.04,-0.065,-0.079,-0.025,0.0042,-0.05,-0.14,0.034,-0.064,0.022,-0.025,-0.083,-0.026,-0.21,-0.16,-0.19,-0.035,-0.19,-0.057,-0.17,-0.07,0.014,0.11,-0.033,-0.2,-0.059,0.037,0.16,-0.098,-0.052,-0.0018,0.03,0.13,-0.18,-0.034,-0.0012,0.14,0.27,-0.13,-0.17,0.24,0.14,-0.26,-0.14,-0.063,-0.0035,0.24,0.42,-0.31,-0.087,0.055,0.2,0.015,-0.098,-0.12,0.052,0.047,0.28,-0.029,0.0019,0.076,0.2,0.17,-0.082,0.00048,0.077,0.12,-0.16,0.024,0.2,0.2,-0.042,0.15,-0.073,-0.0058,0.14,0.069,0.082,-0.031,-0.047,0.034,0.19,0.16,0.048,-0.24,-0.17,0.025,0.15,0.17,-0.069,-0.27,-0.29,-0.032,-0.042,0.039,-0.076,-0.024,0.0024,-0.041,0.078,0.2,0.0033,-0.14,-0.13,0.09,0.099,-0.0092,-0.098,-0.28,-0.023,0.092,0.16,-0.057,0.12,-0.28,-0.12,0.12,-0.085,0.068,-0.037,0.2,-0.019,0.063,-0.14,-0.0068,0.16,0.12,0.036,-0.03,-0.066,-0.00084,0.029,0.019,-0.12,-0.17,-0.089,0.17,0.17,0.17,-0.18,-0.14,-0.028,0.13,0.16,0.21,-0.067,0.0084,0.089,-0.033,0.16,0.24,-0.072,-0.036,-0.15,0.12,0.16,0.046,0.018,-0.18,-0.00078,0.22,0.25,-0.085,0.086,-0.17,-0.039,0.17,-0.41,-0.32,0.14,0.22,0.13,0.048,0.014,-0.2,-0.096,0.08,0.16,0.08,0.037,-0.069,-0.28,0.045,-0.019,-0.082,0.06,-0.12,-0.34,-0.072,0.0072,0.17,0.046,-0.33,0.11,0.067,-0.043,-0.086,-0.044,-0.21,0.034,0.084,0.083,0.035,0.074,-0.14,-0.22,-0.091,0.25,0.11,0.041,-0.035,-0.081,0.0025,-0.054,-0.1,-0.12,-0.17,-0.69,-0.06,0.14,0.12,0.027,0.18,0.047,-0.25,0.14,0.33,0.078,0.11,-0.12,-0.21,-0.2,0.19,-0.019,0.014,-0.0074,-0.15,-0.15,-0.097,-0.038,0.058,-0.06,-0.053,0.16,0.1,0.19,0.11,0.13,-0.26,0.11,0.25,0.14,0.12,-0.017,-0.22,-0.11,0.084,0.2,0.15,0.091,-0.17,-0.15,-0.14,0.026,0.13,-0.012,-0.3,0.12,
0.028,0.034,-0.034,-0.009,0.12,0.042,0.0072,0.072,0.27,0.14,-0.027,-0.14,-0.03,-0.0054,0.12,-0.037,-0.2,-0.08,-0.089,-0.12,0.21,-0.15,-0.17,-0.044,-0.13,-0.077,-0.18,-0.33,-0.24,-0.077,-0.017,0.077,0.064,-0.03,-0.057,-0.077,0.19,0.099,0.34,0.13,-0.21,0.0031,-0.057,-0.082,0.11,0.018,-0.13,-0.13,-0.012,0.037,0.096,-0.077,-0.1,-0.095,-0.059,0.039,-0.012,0.076,-0.002,-0.0052,0.013,0.008,0.0006,0.28,0.29,0.075,-0.081,-0.095,-0.098,-0.089,0.032,-0.17,-0.061,-0.027,-0.059,-0.094,-0.17,-0.17,-0.11,-0.028,-0.059,0.0036,0.029,-0.043,0.019,-0.062,0.02,0.17,0.26,0.091,-0.083,-0.13,-0.057,-0.11,0.17,-0.18,-0.13,-0.062,-0.036,-0.0014,0.22,0.12,-0.029,0.043,0.23,0.14,-0.12,-0.17,0.00079,0.013,0.27,0.067,-0.019,-0.046,-0.051,0.16,0.02,-0.097,-0.055,-0.014,-0.24,0.15,-0.079,-0.16,0.32,0.26,0.05,-0.09,0.13,0.052,-0.035,0.057,0.0055,0.0055,0.06,0.063,-0.017,-0.03,-0.0026,0.0088,0.0074,-0.056,0.045,0.032,-0.0024,0.24,0.24,0.063,-0.1,0.35,0.44,0.095,0.016,0.098,0.21,0.016,-0.018,-0.017,-0.053,-0.023,0.19,0.12,-0.14,-0.072,0.007,0.17,-0.092,0.004,-0.071,0.041,0.14,0.084,-0.097,-0.025,0.39,0.14,-0.098,0.14,0.09,0.18,-0.031,-0.097,-0.035,-0.044,0.22,0.073,-0.083,-0.018,0.049,-0.011,0.011,-0.023,-0.073,-0.088,-0.012,0.11,-0.018,0.04,-0.18,0.3,0.13,0.094,-0.027,0.059,0.028,0.018,0.084,-0.035,-0.0057,-0.059,-0.21,-0.0016,-0.089,-0.027,-0.079,-0.21,-0.14,0.049,-0.1,-0.0091,-0.28,-0.088,-0.07,0.11,0.18,0.11,0.1,-0.08,-0.19,-0.24,0.23,-0.025,0.058,0.11,0.17,0.0053,0.08,0.078,0.095,-0.022,-0.092,-0.05,-0.095,-0.11,-0.088,0.19,0.05,-0.017,0.034,0.51,0.36,-0.016,-0.052,-0.15,-0.098,0.26,0.082,0.031,-0.15,-0.1,-0.015,0.023,-0.0087,0.046,-0.032,-0.24,0.01,-0.14,-0.052,0.021,-0.14,-0.2,-0.06,-0.022,0.21,0.15,0.15,-0.12,-0.42,-0.56,0.25,0.038,0.068,0.061,-0.0082,0.15,0.12,0.12,-0.14,-0.23,0.0041,0.019,-0.069,-0.044,-0.39,0.11,-0.1,0.019,0.024,-0.14,-0.23,-0.036,0.029,0.14,0.21,0.09,-0.046,-0.0069,-0.028,-0.089,0.094,0.1,-0.047,-0.058,-0.17,0.1,0.15,0.047,-0.019,-0.09,0.43,0.044,-0.017,0.087,-0.21,0.0048,-0.0049,0.12,0.25,0.18,-0.16,0.02,0.054,-0.036,0.16,-0.012,-0.12,0.025,0.079,-0.094,-0.13,0.11,0.01,0.077,0.045,0.0095,-0.083,0.076,-0.035,-0.59,-0.29,0.082,0.09,0.16,0.16,0.053,-0.091,0.081,0.07,0.018,0.043,-0.058,-0.098,0.068,-0.051,0.14,0.17,0.097,-0.081,-0.013,0.2,0.11,0.11,-0.044,-0.047,0.15,0.11,0.11,0.39,0.38,-0.2,-0.022,0.017,0.036,0.13,-0.11,-0.06,0.09,0.008,0.0011,0.065,0.021,-0.081,-0.042,0.068,-0.037,-0.049,-0.039,-0.096,-0.29,-0.08,-0.079,0.026,0.13,0.21,-0.23,-0.23,-0.06,-0.007,-0.099,-0.18,-0.11,0.0023,0.017,0.034,-0.048,-0.033,0.16,0.25,0.018,-0.0072,0.15,0.13,0.15,0.22,0.078,-0.077,-0.00074,0.14,0.12,0.015,0.11,-0.058,-0.17,0.11,-0.032,-0.17,-0.14,-0.16,-0.069,-0.14,0.09,-0.026,-0.19,-0.24,0.38,-0.0042,0.24,0.052,-0.22,-0.0086,0.046,0.096,0.27,0.3,-0.32,-0.057,-0.074,-0.036,-0.023,-0.16,-0.34,-0.15,-0.075,-0.019,-0.17,-0.074,0.13,-0.073,-0.0094,0.039,0.0078,0.053,0.36,0.14,0.02,0.02,0.14,0.28,0.097,-0.21,-0.031,0.049,0.03,0.14,-0.27,-0.17,-0.011,-0.02,-0.27,-0.0031,0.098,-0.12,0.11,-0.046,0.15,0.027,0.34,0.031,0.28,
0.1,0.1,0.075,0.15,-0.096,0.21,0.26,0.063,-0.061,0.18,0.06,0.011,0.082,0.0067,-0.066,-0.071,-0.09,-0.14,-0.14,0.00029,0.17,-0.3,-0.27,-0.28,-0.11,-0.13,0.041,0.055,-0.079,-0.036,0.14,-0.052,-0.059,0.055,0.14,0.21,0.16,0.18,0.091,-0.11,-0.024,0.044,-0.082,0.079,-0.0037,-0.11,-0.083,-0.16,-0.038,0.26,0.3,0.047,0.079,0.00043,0.0054,0.32,0.11,0.13,0.038,0.14,0.21,0.15,0.14,0.081,-0.14,-0.048,0.0026,-0.034,-0.079,-0.022,0.12,-0.17,-0.16,-0.22,0.025,0.04,-0.0039,-0.019,-0.042,0.04,0.24,0.038,-0.15,0.19,0.25,0.15,0.026,0.098,0.034,-0.069,-0.024,-0.23,-0.11,0.049,-0.14,-0.16,-0.2,-0.24,-0.026,-0.23,-0.037,0.085,0.12,0.095,0.14,-0.058,-0.11,0.074,0.069,0.22,0.019,0.078,-0.028,0.061,-0.068,-0.075,0.18,0.026,-0.097,0.04,0.043,0.067,0.045,0.024,-0.083,0.068,0.034,0.11,-0.08,-0.085,-0.022,-0.031,0.14,0.075,0.21,0.029,-0.11,-0.055,0.1,0.056,0.11,0.0041,-0.043,-0.13,-0.13,0.13,0.0047,-0.13,-0.16,-0.3,0.063,0.16,0.15,0.21,0.16,-0.089,-0.066,0.081,0.12,0.2,-0.013,-0.057,-0.038,0.063,0.034,0.0095,0.18,-0.046,0.033,-0.073,-0.028,0.066,0.095,-0.0039,0.14,0.14,0.09,0.24,0.17,0.089,-0.16,0.12,0.19,0.18,0.23,0.021,-0.043,0.06,0.023,-0.02,0.15,0.057,0.0075,-0.077,-0.2,0.21,0.14,0.11,-0.11,-0.11,0.011,-0.031,-0.1,-0.24,-0.32,-0.24,-0.0089,0.027,0.13,-0.068,-0.015,-0.044,-0.0097,0.0089,-0.045,0.13,0.14,0.023,0.16,-0.13,0.63,0.29,0.16,-0.025,-0.082,0.048,-0.071,-0.094,0.15,0.31,0.021,0.28,0.087,-0.015,-0.27,-0.078,0.041,0.12,0.045,-0.041,-0.11,0.049,0.13,0.067,0.079,0.038,-0.15,-0.055,0.12,-0.14,-0.36,-0.28,-0.15,-0.019,0.0068,-0.095,0.036,0.08,-0.069,-0.13,-0.22,-0.058,-0.033,0.0046,0.0089,0.11,0.082,0.043,0.022,-0.12,0.27,0.019,0.081,0.01,-0.25,-0.099,-0.16,-0.042,0.12,0.095,0.005,0.12,0.045,-0.15,-0.3,-0.18,-0.11,0.0063,-0.056,0.027,-0.0035,-0.039,-0.16,-0.038,0.097,0.072,-0.074,-0.14,-0.17,-0.091,-0.084,-0.062,0.059,-0.18,-0.0091,-0.031,-0.057,0.062,0.042,0.15,-0.061,0.06,-0.078,0.064,0.12,-0.064,0.024,0.0082,0.13,0.11,0.37,0.091,0.32,0.34,0.098,0.13,-0.055,-0.086,-0.083,-0.09,0.1,-0.0055,0.067,0.093,-0.083,0.11,0.1,-0.059,-0.018,0.22,-0.031,0.011,-0.0074,0.013,-0.19,-0.21,-0.3,-0.28,-0.42,-0.072,-0.082,-0.077,-0.16,-0.17,-0.069,-0.099,-0.21,0.00026,0.21,0.096,0.016,-0.021,-0.031,-0.041,0.21,0.018,0.078,0.076,-0.094,-0.073,0.026,3.7e-005,0.0096,0.0048,-0.078,-0.078,-0.11,-0.19,-0.22,-0.1,-0.15,-0.3,0.017,0.15,0.0029,-0.06,-0.14,-0.1,0.0088,0.2,-0.1,0.028,0.097,0.0016,0.067,0.006,0.013,0.15,0.36,-0.1,-0.26,-0.15,0.011,-0.11,-0.022,-0.11,-0.039,-0.11,0.12,0.0049,-0.2,-0.0071,-0.05,0.00099,0.029,-0.006,0.11,0.28,0.1,0.014,0.37,0.29,0.12,0.11,-0.091,-0.032,0.036,0.011,0.059,0.17,0.024,0.039,0.1,-0.038,-0.092,0.035,0.0012,0.066,-0.068,-0.13,-0.25,-0.027,0.056,0.022,-0.012,0.088,-0.13,0.029,0.046,-0.28,-0.39,-0.13,-0.031,0.034,-0.078,-0.21,-0.17,-0.17,-0.01,0.028,-0.3,-0.028,-0.063,0.045,-0.025,-0.13,0.03,0.16,0.031,0.029,0.13,0.028,0.17,0.22,-0.3,-0.09,-0.014,-0.11,0.17,0.43,-0.093,-0.022,0.15,-0.22,-0.025,0.038,-0.08,0.18,-0.098,-0.051,-0.11,0.073,-0.0057,0.076,-0.057,0.12,0.14,0.069,0.05,0.32,
0.22,0.15,0.13,0.16,-0.014,0.084,0.1,-0.12,0.0052,-0.017,0.13,0.053,-0.07,-0.046,-0.08,-0.076,-0.04,-0.078,-0.071,-0.027,0.17,0.13,0.051,0.034,0.37,0.22,0.11,0.16,0.096,-0.018,0.16,-0.055,0.14,-0.016,-0.062,0.17,0.024,-0.05,0.012,-0.048,-0.13,-0.073,0.002,-0.013,0.14,-0.04,-0.13,-0.24,-0.2,0.51,0.48,0.22,0.3,0.25,0.0063,0.19,-0.026,0.015,-0.11,-0.18,-0.0026,-0.025,-0.2,0.049,-0.064,-0.0088,-0.016,-0.15,-0.12,0.13,-0.033,-0.084,-0.084,-0.034,0.31,0.15,0.17,0.11,0.066,-0.053,0.048,-0.08,-0.089,-0.075,-0.2,0.1,-0.2,-0.13,0.043,0.052,-0.18,-0.12,-0.15,-0.039,0.022,-0.092,-0.11,-0.078,-0.077,-0.095,0.08,0.2,0.19,0.016,-0.028,-0.084,-0.1,0.11,0.021,0.098,-0.0029,-0.045,0.082,0.099,0.041,-0.065,0.15,0.059,0.17,0.14,-0.14,0.021,-0.036,0.022,0.055,-0.0061,0.079,0.02,-0.2,-0.29,-0.022,0.08,-0.009,0.075,0.12,-0.048,-0.052,-0.046,0.05,0.16,0.088,-0.13,0.085,0.049,0.1,0.074,0.11,0.059,0.019,-0.13,0.11,0.1,0.12,-0.036,-0.099,-0.06,0.086,0.22,0.12,0.16,-0.027,0.03,0.017,0.012,0.13,0.00057,0.077,0.099,0.17,0.073,-0.058,0.17,0.17,0.0083,0.097,0.11,0.15,0.052,-0.22,-0.22,-0.075,0.11,0.043,0.057,0.078,0.019,-0.015,-0.019,0.071,0.078,0.12,0.092,0.14,0.074,-0.025,0.2,0.22,0.095,-0.063,0.0091,-0.039,-0.0089,0.11,0.21,0.15,0.034,-0.034,0.068,-0.03,0.0064,-0.07,0.16,0.12,-0.019,-0.042,-0.014,0.04,0.023,0.0026,-0.14,0.13,-0.041,-0.12,-0.25,-0.0089,-0.11,-0.16,0.031,0.03,-0.078,0.17,-0.071,-0.075,-0.1,0.17,0.11,0.14,0.086,0.028,-0.11,-0.13,0.072,0.13,0.052,-0.11,0.12,0.1,0.2,0.22,-0.061,0.058,-0.11,0.033,0.31,0.14,-0.055,0.083,0.1,0.14,0.069,-0.031,0.088,0.085,0.044,-0.001,-0.054,0.082,0.042,-0.0056,-0.16,0.25,0.13,-0.067,-0.014,0.05,-0.11,0.046,0.23,0.27,0.14,0.19,-0.034,0.09,0.032,0.23,0.16,0.2,0.028,-0.094,-0.19,0.03,0.008,-6.1e-006,-0.12,-0.15,0.08,-0.025,-0.068,-0.16,0.23,0.13,0.17,-0.11,-0.082,-0.25,-0.075,0.019,0.087,0.043,-0.049,-0.06,-0.0091,0.15,0.033,0.005,-0.13,-0.054,0.04,0.24,0.051,0.085,0.25,0.26,0.28,0.32,0.23,-0.0018,-0.034,-0.057,-0.13,0.25,0.094,-0.033,0.043,0.026,0.037,0.066,0.13,-0.057,0.02,-0.094,-0.053,-0.05,-0.11,-0.16,0.07,0.054,-0.098,-0.17,0.42,0.23,0.098,-0.12,-0.2,-0.33,-0.059,-0.028,-0.004,-0.092,-0.18,-0.15,-0.064,0.078,-0.019,-0.1,-0.053,-0.019,0.1,0.085,0.075,0.065,-0.066,-0.046,0.27,0.21,0.14,-0.099,-0.2,-0.084,-0.22,0.098,-0.13,0.051,-0.14,0.089,-0.13,-0.049,-0.082,-0.038,-0.0036,-0.052,0.024,-0.062,-0.0076,-0.087,0.14,0.026,0.14,0.12,-0.29,0.0052,0.092,0.12,-0.024,0.099,-0.013,-0.23,0.013,0.00013,0.16,-0.062,-0.13,-0.11,-0.028,0.028,0.08,-0.061,-0.11,0.076,0.0077,0.2,0.18,-0.21,-0.13,-0.047,0.14,-0.094,-0.12,0.055,0.14,-0.095,0.11,0.16,0.13,0.057,-0.13,0.019,0.046,-0.026,0.095,-0.15,-0.048,0.089,0.12,-0.058,0.094,-0.054,-0.065,0.15,-0.19,0.037,0.2,0.025,0.079,0.2,-0.2,-0.07,-0.0099,0.23,0.15,-0.023,-0.13,0.024,-0.05,0.21,-0.1,-0.0008,-0.1,0.04,0.0059,0.13,-0.022,-0.031,0.061,0.085,0.096,0.055,0.079,0.17,0.041,-0.14,0.082,0.19,0.18,0.094,-0.23,-0.12,0.12,0.16,0.15,0.023,-0.11,-0.089,0.11,0.076,-0.013,-0.11,0.062,-0.012};
double a3[]={-0.032,
-0.16,-0.061,-0.11,-0.056,0.14,0.05,-0.13,-0.013,0.2,0.12,-0.19,-0.043,0.028,-0.11,0.051,0.036,0.24,-0.057,0.13,-0.13,0.15,-0.16,-0.11,-0.043,0.22,0.074,-0.12,-0.04,-0.11,0.19,-0.023,-0.038,-0.11,0.23,0.21,0.057,-0.14,0.12,-0.014,0.22,0.14,0.21,-0.032,0.18,0.14,0.15,0.074,0.34,0.18,0.11,-0.014,0.05,-0.044,0.18,0.023,0.069,0.29,0.078,0.066,0.037,0.12,-0.029,-0.18,0.047,-0.044,0.038,-0.21,0.096,-0.032,-0.13,-0.14,-0.29,-0.15,-0.2,-0.12,0.084,-0.053,-0.15,0.022,-0.12,0.087,-0.052,-0.1,-0.42,-0.21,0.3,-0.054,-0.044,0.064,-0.0039,0.16,-0.067,0.029,0.064,0.12,0.57,0.19,-0.019,-0.032,0.036,-0.035,-0.047,-0.13,0.054,0.012,-0.22,-0.15,0.15,-8.1e-005,-0.19,-0.15,0.067,-0.068,-0.13,0.083,0.11,-0.12,-0.13,-0.077,-0.41,-0.089,0.12,-0.08,0.087,0.00033,-0.045,0.054,0.19,-0.00013,0.079,0.055,-0.25,0.087,0.11,-0.089,0.1,-0.021,0.096,-0.0065,0.14,-0.011,0.015,-0.057,0.17,0.0012,-0.36,-0.0013,0.14,-0.019,-0.042,-0.086,-0.017,-0.034,0.23,-0.03,-0.071,-0.14,0.013,0.096,0.0091,-0.028,0.12,0.019,0.029,0.17,0.31,0.19,0.095,0.18,-0.41,0.21,0.017,0.057,0.2,0.021,0.071,-0.044,0.21,-0.058,-0.49,-0.099,-0.11,-0.16,-0.023,0.066,-0.11,-0.063,0.12,0.14,0.05,0.17,0.028,0.044,0.031,0.014,0.099,0.19,-0.14,0.035,0.23,-0.064,-0.11,0.092,0.031,0.084,-0.19,-0.067,0.069,-0.11,-0.026,0.055,0.02,0.025,-0.2,-0.21,-0.51,0.029,0.2,-0.17,0.15,-0.052,-0.016,0.037,-0.041,0.09,0.088,0.18,0.032,-0.0027,0.066,0.035,0.17,0.056,0.097,-0.015,-0.056,0.25,0.023,-0.29,0.09,-0.06,-0.018,-0.16,0.2,-0.031,0.0035,0.071,-0.38,-0.18,0.34,-0.14,-0.073,-0.042,0.32,-0.064,-0.0028,-0.055,-0.18,0.0071,0.027,-0.14,0.091,-0.087,0.019,-0.07,0.018,0.032,-0.13,0.14,0.016,0.18,0.15,0.2,-0.11,0.12,0.063,0.24,-0.033,-0.042,0.18,0.078,0.29,-0.11,0.19,-0.034,0.079,-0.1,0.3,0.01,0.23,0.086,0.22,0.0003,0.021,0.014,0.22,-0.06,0.11,-0.031,0.14,-0.082,0.04,-0.15,-0.093,0.075,-0.084,0.035,-0.052,-0.072,0.024,0.0034,-0.13,-0.071,-0.077,-0.21,0.062,-0.066,0.12,-0.08,0.022,-0.036,0.24,-0.11,-0.21,0.12,-0.016,-0.26,0.1,0.16,0.26,-0.099,0.087,0.091,0.21,-0.01,0.24,-0.048,0.066,0.14,-0.0091,-0.12,-0.22,-0.027,0.14,-0.021,-0.097,0.026,-0.049,0.16,0.16,0.14,0.13,-0.057,0.086,-0.13,0.27,0.19,-0.027,-0.016,0.048,0.03,-0.31,-0.16,0.041,-0.11,-0.14,-0.088,-0.043,0.23,0.071,-0.097,0.15,0.11,-0.098,0.063,-0.036,0.00045,-0.063,-0.026,-0.084,0.052,0.23,0.066,-0.077,-0.066,-0.35,0.084,0.14,0.15,0.083,0.022,0.022,0.078,0.11,-0.19,-0.13,-0.13,-0.065,0.14,-0.15,0.011,0.0056,-0.0027,-0.025,0.16,0.021,0.39,0.044,0.0092,-0.053,0.019,-0.15,-0.068,0.15,0.11,-0.025,-0.11,-0.14,-0.027,0.049,0.12,-0.12,-0.083,-0.32,-0.012,0.056,-0.062,-0.1,0.19,-0.12,-0.4,0.047,-0.00099,0.098,0.14,-0.35,-0.086,-0.1,0.037,-0.067,-0.0098,-0.059,-0.098,0.00091,0.017,-0.069,0.029,-0.08,-0.012,-0.073,0.045,-0.0098,0.13,-0.12,-0.24,-0.2,-0.094,-0.25,-0.072,0.019,-0.12,0.024,-0.037,-0.13,0.11,0.13,0.31,0.22,0.16,0.2,0.049,0.19,0.24,-0.0067,-0.061,0.079,0.14,-0.11,0.067,-0.0049,0.029,-0.0077,0.0031,0.15,0.026,0.092,0.06,0.27,0.037,0.14,-0.047,-0.081,-0.00048,0.18,0.11,-0.096,0.014,-0.17,0.021,-0.079,
-0.17,-0.051,0.04,-0.16,-0.05,0.14,-0.046,0.0047,-0.065,-0.021,-0.083,-0.17,0.27,-0.43,-0.15,-0.17,0.0095,0.079,0.077,-0.049,-0.12,-0.17,-0.072,-0.065,-0.0076,-0.28,-0.23,-0.17,-0.072,-0.026,-0.062,0.0072,0.051,0.071,-0.034,-0.1,-0.088,-0.063,-0.021,0.1,-0.12,-0.039,0.16,0.12,0.097,-0.046,0.23,-0.001,-0.0096,-0.082,-0.071,0.17,0.066,0.088,0.082,0.053,0.1,0.11,-0.089,0.034,-0.27,0.082,-0.0016,0.055,-0.064,-0.13,-0.068,0.0057,-0.037,0.038,0.045,-0.14,0.035,-0.032,0.024,-0.14,-0.086,-0.051,-0.023,0.011,0.027,-0.054,0.07,0.0078,0.044,0.012,0.033,-0.04,-0.13,-0.084,-0.084,0.061,-0.11,-0.069,0.023,-0.089,-0.031,-0.058,0.0091,0.14,0.1,-0.03,0.076,0.11,0.11,-0.11,0.043,0.087,0.063,-0.021,-0.24,0.022,0.047,-0.1,0.0079,-0.011,-0.035,0.04,-0.11,-0.23,-0.024,-0.11,-0.11,0.075,0.052,0.083,-0.018,-0.11,-0.056,0.0044,0.11,-0.098,-0.1,-0.091,0.089,-0.065,-0.038,-0.11,-0.22,-0.0029,-0.12,-0.058,-0.043,-0.079,-0.02,-0.1,-0.046,-0.045,-0.16,0.094,-0.012,-0.014,-0.13,0.047,0.07,-0.11,0.036,-0.12,0.092,0.2,-0.011,-0.048,-0.016,-0.012,0.015,-0.035,0.0025,0.071,0.0086,-0.053,0.029,-0.03,-0.063,-0.076,-0.017,0.071,-0.031,0.051,0.001,-0.096,-0.035,0.064,-0.16,-0.12,0.043,-0.026,-0.074,0.02,0.093,-0.022,0.076,0.066,-0.12,-0.033,-0.11,0.074,-0.014,-0.042,-0.19,0.14,-0.081,0.063,0.12,0.019,-0.14,-0.074,0.035,-0.013,0.052,0.21,-0.0016,-0.028,0.18,0.068,-0.04,-0.15,-0.14,-0.2,0.028,0.29,-0.11,-0.12,-0.052,-0.22,-0.0052,-0.099,-0.089,-0.013,-0.16,-0.016,0.00024,-0.14,-0.12,0.088,-0.11,-0.045,0.12,-0.17,-0.011,-0.062,0.0027,0.087,0.19,0.3,0.27,-0.059,0.085,0.012,0.02,0.054,0.062,-0.11,-0.057,0.2,-0.08,-0.22,-0.29,-0.26,0.035,-0.052,-0.046,-0.076,0.096,-0.12,0.12,-0.02,0.11,-0.31,-0.15,-0.17,-0.053,-0.27,-0.029,0.0019,0.046,-0.18,-0.027,0.069,-0.043,0.13,-0.054,-0.11,0.096,0.025,-0.17,0.071,-0.0041,0.004,0.065,0.048,0.047,0.12,-0.053,0.022,-0.045,0.089,-0.028,0.079,-0.083,0.081,0.0097,-0.094,-0.016,0.077,-0.18,-0.29,-0.11,-0.12,0.063,-0.039,0.025,0.051,-0.084,-0.033,0.0067,-0.15,-0.078,-0.053,0.17,-0.11,-0.045,-0.052,0.034,0.02,0.049,-0.14,0.035,-0.16,0.058,0.13,0.033,-0.014,-0.045,0.039,0.07,0.0077,0.082,-0.062,-0.03,0.092,0.19,0.058,-0.083,-0.071,0.091,0.024,-0.13,0.014,-0.13,-0.043,-0.18,-0.0028,-0.11,-0.16,-0.042,0.072,-0.0034,-0.0017,0.08,0.078,0.088,-0.045,-0.12,-0.087,0.054,0.22,-0.034,0.086,0.025,-0.0026,0.091,0.017,0.078,0.0091,0.19,-0.0058,0.081,0.057,-0.026,0.093,0.032,-0.017,-0.014,0.09,0.27,0.058,-0.22,-0.1,-0.015,-0.038,0.11,-0.05,-0.11,-0.085,0.015,-0.11,0.16,-0.066,0.12,0.22,0.19,0.0045,0.049,-0.076,-0.062,0.077,-0.038,0.082,-0.031,0.033,0.037,-0.084,-0.095,-0.18,0.025,0.12,-0.079,0.047,0.05,-0.063,-0.052,0.16,-0.029,-0.02,-0.15,0.19,-0.075,0.0088,-0.068,-0.04,-0.058,0.12,0.015,0.043,0.0088,0.043,-0.013,-0.03,-0.13,0.018,0.14,-0.11,0.071,0.14,0.079,0.018,0.048,-0.0098,-0.22,-0.031,-0.095,-0.0053,-0.044,-0.14,-0.013,-0.015,0.003,0.0097,-0.12,0.097,0.14,0.0074,-0.11,0.19,0.22,0.31,0.012,0.15,0.074,0.17,0.14,-0.1,0.059,-0.071,0.19,0.026,0.077,0.13,-0.15,-0.022,0.028,-0.063,0.24,-0.095,0.037,-0.14,-0.05,-0.034,0.0049,-0.099,-0.13,0.042,0.19,-0.02,-0.23,0.13,0.073,0.014,0.12,0.0079,
0.22,0.15,-0.1,-0.2,0.041,-0.16,-0.31,0.21,-0.13,0.097,-0.43,0.21,0.12,0.092,-0.16,0.3,0.0034,-0.00047,-0.17,0.074,0.2,0.29,-0.22,-0.036,0.024,-0.34,-0.069,0.12,0.23,0.058,-0.026,0.038,0.12,0.12,0.045,-0.048,-0.2,0.032,0.14,-0.061,-0.01,0.039,-0.24,-0.14,0.18,0.14,-0.066,-0.088,0.074,0.23,0.042,0.025,0.034,0.041,0.11,0.19,-0.015,-0.07,0.073,0.037,0.095,-0.29,-0.0077,0.29,0.034,-0.14,-0.03,0.28,-0.02,-0.039,-0.11,-0.16,-0.23,-0.047,-0.1,0.17,-0.065,-0.23,-0.064,0.021,0.32,-0.0021,-0.1,0.064,-0.082,-0.054,0.068,-0.018,0.1,0.17,-0.2,0.072,-0.12,0.17,0.066,-0.079,-0.057,-0.12,-0.15,0.078,-0.076,0.099,-0.2,-0.092,-0.12,-0.22,0.022,-0.038,0.0015,0.0033,0.038,0.046,-0.19,-0.43,0.28,-0.025,-0.19,-0.011,-0.0043,-0.057,-0.16,-0.13,-0.068,-0.059,-0.12,-0.087,-0.38,-0.019,-0.11,-0.22,0.083,0.0067,-0.14,-0.025,-0.035,-0.056,0.0055,-0.11,0.031,-0.071,0.1,0.048,-0.28,0.04,-0.17,0.0046,0.02,-0.23,0.058,-0.13,-0.22,0.011,0.0061,0.15,0.22,-0.077,-0.0049,0.15,-0.086,0.081,-0.15,0.011,-0.085,0.057,0.11,0.094,-0.035,-0.057,0.1,-0.087,0.13,0.11,0.066,-0.004,-0.042,-0.14,0.047,-0.0091,-0.081,-0.045,0.058,0.032,-0.068,-0.05,0.19,-0.14,-0.11,0.28,0.071,0.29,0.055,-0.085,0.018,-0.062,-0.069,0.1,0.27,-0.095,-0.29,0.19,0.12,-0.22,-0.084,-0.12,-0.056,0.034,-0.1,-0.27,-0.11,-0.27,-0.21,-0.4,0.053,0.33,-0.014,-0.0038,-0.1,0.15,-0.0077,0.12,-0.0019,0.12,0.18,-0.29,0.035,0.27,0.017,0.077,-0.056,-0.066,0.06,0.097,-0.0064,-0.18,-0.032,-0.31,-0.27,-0.23,0.16,-0.12,-0.2,-0.14,0.25,0.043,0.078,-0.29,0.28,-0.73,-0.098,-0.51,-0.039,-0.43,0.093,0.12,0.056,-0.54,-0.25,0.0087,-0.067,-0.047,-0.1,-0.23,0.12,-0.14,-0.27,-0.042,0.072,0.041,-0.034,-0.19,0.087,0.27,-0.11,-0.22,-0.011,0.062,0.033,-0.0017,-0.043,-0.047,-0.048,-0.14,0.07,0.7,-0.37,-0.49,-0.0014,-0.058,-0.14,0.027,-0.16,0.13,-0.24,-0.12,-0.066,-0.5,-0.23,0.26,0.14,-0.13,0.045,0.12,0.079,-0.14,0.24,0.054,0.13,-0.32,-0.26,0.035,0.033,-0.027,0.033,-0.1,0.076,-0.063,-0.1,0.24,0.1,0.16,-0.19,-0.27,0.019,0.095,0.064,-0.0075,-0.21,0.089,0.0082,-0.16,0.029,-0.3,-0.35,-0.49,-0.041,-0.12,0.021,0.073,0.037,-0.19,0.056,0.048,0.31,-0.058,0.45,0.75,-0.08,-0.11,-0.14,-0.15,-0.041,-0.00056,0.1,-0.2,-0.17,-0.16,0.16,-0.11,0.096,-0.059,0.022,0.01,0.076,-0.095,0.032,-0.15,-0.14,-0.36,-0.039,0.39,0.049,0.018,-0.14,-0.039,0.03,-0.014,0.18,0.014,0.034,0.48,0.013,-0.033,0.12,0.065,-0.11,0.0022,-0.029,0.04,0.14,-0.12,-0.042,0.0042,-0.0029,-0.32,0.11,0.086,0.21,0.049,0.045,-0.053,0.17,0.32,0.13,-0.078,-0.2,0.028,-0.12,0.069,-0.072,0.17,-0.1,-0.014,-0.062,0.29,0.087,0.52,-0.087,-0.16,0.13,0.084,0.13,-0.037,0.091,0.17,-0.064,0.013,-0.1,-0.39,-0.22,-0.14,0.065,-0.048,-0.099,-0.02,0.097,-0.089,-0.0069,0.058,0.27,0.23,-0.041,0.051,0.094,-0.12,0.067,0.3,-0.013,-0.18,0.23,0.13,0.18,0.031,-0.017,-0.015,-0.13,0.12,0.16,0.11,0.03,-0.0015,0.036,-0.13,0.22,-0.042,0.2,0.1,0.089,0.015,-0.046,0.036,-0.064,-0.058,0.015,0.11,-0.036,0.03,0.031,0.03,-0.066,0.22,0.24,0.056,0.17,0.14,0.037,0.37,0.36,0.33,0.13,0.035,0.15,0.049,0.048,-0.06,-0.02,0.022,0.026,0.025,0.11,-0.038,
0.079,-0.014,0.028,0.065,-0.15,0.057,-0.11,-0.12,0.29,-0.096,0.1,-0.26,-0.28,-0.29,-0.11,-0.059,-0.1,-0.13,0.033,-0.013,0.14,-0.035,-0.098,-0.42,-0.22,0.12,-0.08,0.059,0.06,-0.11,0.027,0.11,0.022,0.096,0.25,0.56,0.077,0.098,0.014,0.017,-0.021,0.12,-0.18,-0.012,0.045,-0.13,-0.36,-0.097,0.024,-0.19,-0.15,-0.055,-0.031,0.021,0.037,0.24,-0.049,-0.21,-0.15,-0.25,0.086,0.17,0.0088,-0.058,-0.09,0.034,-0.056,0.12,0.12,0.077,-0.034,-0.064,-0.039,0.19,0.052,0.11,0.049,-0.25,0.13,0.23,-0.11,0.21,0.12,0.0082,0.059,-0.27,-0.17,0.093,0.011,-0.087,-0.25,0.038,0.073,-0.097,-0.046,-0.065,-0.011,0.17,0.16,0.088,-0.064,0.048,0.11,0.12,-0.14,0.023,-0.0072,0.12,0.1,-0.35,0.062,0.11,0.042,-0.096,0.15,0.12,-0.05,0.22,0.12,-0.25,-0.058,0.031,-0.042,-0.14,0.01,0.13,0.026,0.1,0.018,-0.026,-0.069,0.053,0.028,0.079,-0.042,-0.15,0.24,-0.14,-0.074,0.26,0.009,-0.14,0.17,-0.044,0.14,-0.037,0.13,0.11,-0.065,-0.11,0.019,0.12,0.0007,-0.2,-0.023,-0.21,0.083,0.24,-0.21,0.00045,0.018,-0.042,0.11,0.12,-0.18,0.048,-0.37,0.045,-0.021,0.0096,0.083,0.037,-0.037,0.029,-0.009,0.2,0.2,0.24,-0.12,0.21,-0.37,-0.31,-0.026,-0.14,-0.047,-0.0035,0.023,-0.16,0.078,-0.053,-0.027,-0.017,-0.23,0.015,-0.077,0.032,0.13,-0.093,-0.056,0.066,0.17,0.019,0.037,0.22,0.22,0.05,0.096,0.023,-0.062,0.25,0.013,-0.083,-0.14,0.2,0.082,-0.023,-0.18,-0.079,-0.25,-0.083,-0.09,0.097,0.083,0.01,0.16,0.039,0.019,-0.17,-0.082,0.037,0.26,-0.17,-0.00092,-0.14,0.17,-0.046,0.019,-0.0088,0.038,0.13,0.091,-0.035,-0.19,0.021,0.051,0.2,-0.069,0.077,0.013,0.16,-0.022,0.052,-0.078,-0.094,-0.21,0.054,-0.24,-0.0054,-0.18,0.11,0.091,0.15,-0.05,-0.15,-0.23,-0.2,-0.094,0.12,0.14,0.075,-0.006,0.14,-0.073,0.0084,0.0045,0.017,-0.034,0.0062,0.25,-0.12,-0.011,-0.24,-0.14,0.095,-0.023,0.011,-0.032,-0.36,0.17,0.084,-0.14,0.0069,-0.15,-0.12,-0.049,0.2,0.043,0.21,0.12,0.2,-0.0025,-0.082,-0.12,-0.087,0.01,-0.17,-0.11,-0.075,0.084,0.14,-0.017,0.018,-0.003,-0.14,0.07,-0.082,-0.036,0.015,0.12,0.11,0.086,0.055,0.11,-0.14,0.11,0.055,0.12,0.25,0.16,0.031,0.22,0.058,0.052,-0.06,0.18,0.2,0.15,0.14,0.095,0.09,0.17,0.089,0.098,0.0086,0.034,-0.056,-0.16,0.0044,-0.047,0.092,0.033,0.081,0.052,0.19,0.11,-0.12,0.04,-0.05,0.084,0.23,0.02,-0.13,0.023,-0.24,-0.094,0.15,-0.031,-0.064,-0.0015,0.047,0.034,-0.15,0.16,-0.026,0.0091,-0.01,0.027,-0.055,0.034,0.096,-0.043,0.011,0.12,-0.11,-0.13,-0.11,0.055,-0.08,-0.035,-0.22,0.051,-0.032,-0.028,0.067,0.042,-0.077,-0.0013,-0.00089,-0.17,0.038,0.08,0.13,0.17,0.18,-0.26,0.025,0.067,0.13,-0.14,-0.087,0.12,0.26,-0.12,0.21,-0.05,0.08,-0.11,-0.19,0.018,0.071,-0.006,0.13,0.037,-0.17,-0.013,0.15,-0.02,0.24,0.068,-0.072,-0.015,-0.017,-0.063,-0.041,0.054,-0.041,0.11,-0.069,-0.0072,-0.0037,-0.083,-0.028,0.051,0.068,-0.059,-0.15,-0.019,-0.059,-0.046,0.0058,-0.0074,-0.051,-0.056,0.055,0.062,0.034,-0.012,-0.011,-0.094,-0.093,-0.026,-0.084,0.014,-0.081,-0.088,0.071,-0.039,0.15,0.054,0.11,-0.043,-0.1,-0.08,0.0085,-0.14,0.16,-0.0085,-0.039,0.084,0.046,-0.017,0.0097,-0.0067,-0.012,-0.12,0.068,0.14,-0.058,-0.16,0.078,-0.13,-0.018,0.03,0.059,0.064,-0.027,0.064,0.025,0.025,0.11,
-0.018,-0.033,0.058,-0.055,0.14,0.24,-0.029,0.041,-0.054,-0.15,-0.027,0.068,0.028,-0.058,-0.054,0.12,0.037,-0.029,-0.029,-0.052,-0.048,0.042,-0.042,-0.046,-0.13,0.084,0.032,0.14,0.053,0.13,-0.059,-0.019,-0.013,-0.099,0.045,-0.071,-0.041,0.12,0.012,0.029,0.019,0.065,-0.023,-0.14,0.094,0.051,0.14,0.071,-0.14,-0.048,-0.0098,0.2,0.056,0.12,-0.057,-0.044,-0.1,-0.0097,0.045,-0.014,0.099,-0.1,-0.11,-0.017,-0.1,-0.09,0.039,-0.066,0.03,-0.07,-0.086,-0.16,-0.11,0.14,0.013,-0.08,-0.16,-0.081,0.045,-0.077,-0.036,-0.077,0.089,-0.017,0.037,0.093,0.017,-0.0011,-0.0024,-0.056,-0.12,0.044,0.033,-0.069,-0.038,-0.08,0.022,0.049,0.0097,0.11,0.054,0.11,-0.0051,-0.086,-0.045,-0.012,0.031,0.13,-0.025,0.21,0.067,0.064,0.0041,0.039,-0.057,0.08,-0.061,0.033,-0.075,0.068,0.077,-0.083,0.017,0.025,-0.091,0.028,0.008,-0.08,-0.012,0.049,-0.053,-0.029,-0.03,-0.11,0.07,-0.032,0.087,0.15,-0.064,-0.11,-0.00036,0.085,0.026,0.1,0.062,0.11,0.064,-0.028,0.0055,0.024,-0.059,0.049,-0.05,0.041,0.13,0.066,0.0038,0.11,0.0078,0.29,-0.15,-0.15,-0.079,0.028,-0.096,0.054,-0.057,-0.17,-0.082,-0.092,-0.26,-0.04,-0.17,-0.0074,-0.24,-0.026,0.069,-0.12,-0.00043,0.13,-0.015,0.046,-0.095,0.27,0.22,-0.14,-0.008,0.055,0.0036,0.093,-0.053,0.081,-0.12,0.32,-0.0094,-0.068,-0.27,-0.24,-0.084,0.017,-0.11,-0.12,0.26,0.27,-0.32,0.17,0.13,-0.03,0.15,-0.071,0.15,-0.14,-0.18,-0.21,-0.11,-0.24,0.04,0.1,0.19,0.036,-0.049,-0.016,-0.035,0.082,-0.12,0.19,0.017,-0.15,-0.1,0.057,-0.05,-0.14,-0.053,-0.13,-0.079,0.0077,-0.19,0.11,0.011,0.11,0.11,-0.12,-0.098,-0.029,-0.057,-0.15,-0.13,-0.14,0.063,-0.28,-0.052,0.058,-0.021,-0.045,-0.015,-0.12,0.027,0.017,0.088,-0.098,0.1,0.025,0.17,-0.11,0.11,0.15,-0.034,-0.15,0.22,0.34,-0.072,0.048,-0.22,-0.075,0.2,-0.073,0.021,0.26,-0.13,0.026,0.049,0.23,-0.11,0.098,0.063,0.19,-0.11,-0.14,0.15,0.023,0.11,-0.099,-0.039,0.053,-0.11,0.039,-0.09,-0.052,0.055,0.088,0.14,0.17,0.18,0.12,-0.024,0.031,-0.038,0.11,-0.044,0.22,-0.011,-0.079,0.28,0.3,-0.17,0.065,0.011,0.013,-0.0053,0.23,0.048,0.13,-0.13,0.0088,0.29,0.29,0.23,-0.095,0.097,-0.033,0.05,-0.076,-0.0052,0.048,0.034,-0.035,0.11,0.15,-0.039,0.11,0.07,-0.063,0.14,-0.069,0.24,0.01,0.099,0.2,0.049,0.23,-0.024,-0.011,0.072,-0.069,-0.047,0.04,-0.0094,0.013,-0.018,0.11,0.033,-0.059,-0.054,-0.028,-0.13,0.32,0.026,0.077,-0.4,0.18,-0.0052,-0.084,-0.037,0.032,-0.012,-0.02,0.11,0.2,0.025,-0.0014,0.067,-0.04,0.12,0.036,0.052,0.2,-0.13,-0.24,-0.2,-0.2,-0.034,0.19,-0.29,-0.08,0.00039,0.075,-0.33,0.054,0.15,0.25,0.068,0.12,-0.025,-0.15,-0.055,0.067,0.18,0.2,0.046,0.0053,0.32,-0.18,0.027,0.17,-0.091,-0.13,0.24,0.036,0.026,-0.042,-0.15,-0.03,0.12,0.073,0.065,0.066,0.18,-0.11,0.082,0.054,-0.033,-0.21,-0.061,0.016,-0.2,0.12,0.17,0.16,-0.079,-0.28,-0.02,0.034,-0.0022,-0.089,0.26,-0.01,0.016,-0.054,-0.13,0.052,-0.08,-0.01,0.037,0.12,-0.083,0.1,0.014,-0.069,0.052,0.085,-0.14,0.06,0.12,0.00014,0.067,-0.26,-0.11,0.12,-0.064,0.062,0.12,0.1,0.033,0.16,-0.1,0.19,0.13,-0.16,-0.05,0.13,-0.2,-0.14,0.15,0.038,-0.18,0.0091,-0.011,-0.0072,0.045,0.21,-0.057,-0.028,-0.097,-0.073,0.044,0.0079,0.002,-0.066,0.12,-0.061,
0.14,-0.24,0.0029,0.066,-0.049,0.14,0.15,-0.086,-0.061,-0.1,-0.018,0.066,0.22,-0.076,-0.091,0.21,0.082,-0.27,-0.0066,0.059,0.22,0.32,0.19,-0.045,0.16,-0.15,0.082,0.15,-0.38,0.035,-0.085,0.12,0.08,0.12,0.13,-0.06,-0.051,0.085,0.0033,-0.1,-0.055,-0.17,-0.25,-0.2,-0.049,-0.21,-0.12,-0.096,0.044,-0.24,0.016,0.086,-0.13,-0.17,0.34,-0.049,-0.11,-0.17,0.06,-0.28,-0.11,-0.15,-0.17,0.17,-0.005,0.098,-0.39,-0.17,-0.032,-0.23,0.058,0.15,-0.059,-0.1,0.11,-0.032,-0.059,0.1,0.062,0.18,0.064,0.024,-0.1,-0.055,-0.059,-0.07,-0.077,-0.059,0.077,0.093,0.038,0.096,-0.058,0.0041,0.11,0.23,-0.052,0.044,-0.18,-0.25,-0.08,0.11,-0.11,-0.0004,0.17,0.13,-0.03,0.15,0.058,-0.14,-0.094,0.017,-0.027,0.021,0.028,-0.046,0.041,-0.25,-0.068,0.018,0.016,-0.034,0.13,0.057,-0.016,-0.094,0.28,0.1,0.055,0.12,-0.022,0.0063,0.11,0.072,0.007,-0.13,0.1,0.033,-0.22,0.06,0.15,0.03,0.27,0.079,-0.088,0.17,0.079,-0.15,0.11,0.16,0.11,0.026,-0.034,0.27,0.069,0.1,-0.013,0.043,0.012,-0.015,-0.11,0.00058,0.021,0.007,0.15,0.039,-0.16,-0.0087,0.1,-0.13,-0.083,-0.0025,0.43,-0.32,-0.17,-0.19,-0.13,0.082,0.04,0.22,-0.016,-0.026,-0.02,0.091,0.23,-0.032,0.088,-0.28,-0.15,-0.19,0.065,0.08,0.14,0.011,0.067,0.033,-0.21,0.067,0.14,0.043,-0.036,0.1,-0.009,0.12,0.044,0.11,-0.065,0.085,0.29,-0.13,-0.055,0.0037,-0.2,-0.25,-0.064,0.023,-0.14,0.029,-0.064,-0.062,-0.16,-0.041,-0.18,-0.075,-0.28,-0.13,-0.15,0.069,0.084,0.14,-0.1,0.18,0.023,-0.24,0.14,-0.04,-0.11,0.027,0.0041,-0.081,-0.047,-0.037,-0.073,-0.054,0.05,0.027,-0.013,-0.077,-0.2,-0.26,-0.19,0.13,0.033,-0.07,-0.051,-0.03,-0.25,-0.091,0.077,-0.21,-0.06,-0.099,0.15,0.053,0.0066,-0.18,0.0096,0.083,0.27,-0.11,-0.097,-0.018,0.048,-0.081,0.078,-0.05,0.17,-0.044,-0.099,0.087,-0.099,0.013,0.036,0.035,0.17,0.3,-0.099,-0.084,0.02,0.067,0.065,-0.12,0.0038,-0.33,-0.19,0.075,0.024,-0.14,0.083,0.059,-0.12,0.02,0.17,0.11,0.024,-0.21,-0.15,0.098,0.052,0.00035,0.051,-0.059,0.034,0.0096,0.13,0.011,0.018,-0.079,-0.0063,-0.13,-0.073,-0.032,-0.16,0.04,-0.11,0.03,-0.08,-0.023,0.13,-0.13,-0.26,-0.052,-0.067,-0.0031,-0.086,-0.049,0.2,0.098,-0.076,-0.014,-0.34,0.095,0.012,-0.086,-0.064,-0.1,0.1,0.031,0.081,-0.048,0.02,-0.087,0.14,-0.021,-0.033,-0.073,-0.13,-0.074,-0.16,0.065,-0.02,-0.041,-0.045,0.0091,-0.36,-0.31,0.024,-0.016,0.016,0.009,0.085,-0.08,0.06,0.034,-0.088,-0.0038,0.15,-0.15,0.058,0.11,0.084,0.078,0.11,0.35,-0.082,0.22,0.25,-0.37,-0.085,0.29,-0.12,-0.083,-0.12,0.31,-0.15,0.11,-0.027,-0.098,-0.1,-0.061,-0.25,-0.045,0.19,0.051,0.063,0.067,0.054,0.07,0.11,-0.0061,0.067,0.035,0.019,-0.01,-0.13,-0.19,0.098,-0.017,-0.16,0.12,-0.15,-0.0097,0.24,0.13,-0.26,0.32,0.28,-0.16,0.057,0.12,0.014,0.034,0.045,-0.36,0.01,0.11,-0.056,0.25,0.12,0.19,-0.14,-0.05,-0.18,-0.012,0.043,0.069,-0.064,0.049,0.18,0.019,0.075,-0.063,-0.11,0.036,0.082,0.091,-0.0048,-0.11,-0.12,0.16,0.21,-0.056,-0.012,0.13,0.016,-0.16,-0.16,0.04,0.012,-0.12,-0.028,0.17,-0.051,-0.18,-0.001,0.016,0.065,-0.021,0.19,-0.021,-0.12,0.07,-0.046,0.16,0.17,0.22,-0.082,-0.097,0.15,0.084,0.077,0.14,0.035,0.1,-0.098,0.19,0.053,-0.042,-0.18,0.38,
0.17,-0.13,1.4e-005,0.00092,0.055,0.0098,-0.056,-0.081,0.16,-0.052,-0.0062,-0.02,0.21,0.14,0.033,0.039,0.01,-0.062,-0.045,-0.14,0.097,0.2,-0.043,-0.0014,0.07,-0.0053,0.064,0.072,0.006,-0.013,-0.18,-0.089,0.11,-0.092,0.0091,-0.27,-0.019,-0.17,0.28,-0.037,0.00098,0.095,0.061,0.14,0.16,0.023,0.24,-0.15,0.063,0.16,-0.16,0.055,-0.0017,0.067,0.033,0.23,-0.29,0.19,0.26,0.098,-0.014,0.13,0.063,-0.018,0.049,0.049,-0.16,0.043,0.2,0.21,-0.16,-0.00023,0.067,-0.024,0.013,-0.18,0.03,-0.078,-0.25,0.026,0.0065,0.11,-0.11,0.035,-0.0031,0.33,0.073,0.11,-0.044,0.069,-0.0063,0.034,0.034,-0.28,-0.22,0.037,-0.062,0.022,0.097,-9.4e-005,-0.11,-0.047,-0.081,0.023,0.32,0.21,-0.11,-0.025,0.12,0.15,-0.16,0.07,0.011,0.058,0.091,0.098,-0.032,0.13,0.16,-0.14,0.013,0.0043,-0.13,-0.042,0.13,-0.32,-0.11,-0.013,-0.092,-0.056,0.016,0.047,0.11,0.0029,0.07,-0.12,-0.02,0.0028,-0.12,-0.037,0.12,0.058,-0.11,-0.07,-0.17,-0.078,0.053,-0.085,0.042,0.00095,0.11,0.12,-0.23,0.1,0.013,0.071,0.12,0.073,0.06,-0.14,0.081,0.19,-0.2,0.019,-0.077,0.031,-0.044,0.065,-0.043,0.022,-0.17,0.027,-0.03,0.072,-0.094,-0.19,0.03,0.036,0.1,-0.055,0.029,-0.0035,0.022,-0.031,0.041,0.082,0.056,-0.12,-0.25,0.068,0.1,0.0029,0.11,0.075,0.011,0.055,0.032,0.06,0.14,-0.13,0.033,-0.054,0.017,0.094,0.13,-0.054,0.1,0.08,0.1,0.029,-0.018,-0.019,0.04,0.061,-0.075,-0.063,0.062,-0.0084,-0.029,0.074,0.18,0.18,-0.0061,0.056,-0.11,-0.04,-0.065,0.15,-0.031,0.003,0.073,-0.045,0.0069,0.14,0.14,-0.16,0.056,-0.004,-0.17,-0.028,-0.03,-0.068,-0.056,-0.0037,-0.0029,0.19,-0.032,-0.039,-0.066,0.15,0.035,0.076,-0.062,-0.069,-0.021,-0.093,0.027,0.22,0.0076,-0.0013,-0.22,-0.14,0.13,-0.094,0.011,-0.065,0.1,-0.14,0.02,-0.11,0.0077,0.062,0.081,0.14,-0.22,-0.053,0.11,0.074,-0.13,0.056,-0.017,0.034,-0.034,-0.23,-0.067,-0.038,0.073,-0.1,-0.015,0.0059,0.057,0.042,-0.2,-0.11,-0.17,-0.04,-0.072,-0.099,-0.12,0.034,0.049,0.09,0.038,-0.018,-0.038,0.12,0.16,-0.038,-0.086,-0.05,-0.085,0.033,-0.088,-0.063,0.087,-0.066,0.078,-0.097,0.12,0.0042,0.11,-0.12,0.05,0.0027,0.11,-0.026,-0.1,0.0029,-0.026,0.11,-0.05,0.041,-0.011,0.09,-0.073,0.096,0.059,-0.046,-0.0056,-0.02,-0.027,0.061,0.064,-0.089,0.066,-0.044,-0.1,0.055,0.087,-0.12,0.047,-0.17,0.13,-0.05,-0.0095,0.12,-0.099,0.036,0.19,0.12,0.15,0.071,0.041,-0.092,0.21,-0.013,0.024,0.34,-0.11,0.098,0.21,-0.029,0.11,0.073,0.29,-0.064,0.15,0.018,0.0064,-0.13,-0.056,0.03,0.33,0.12,0.034,-0.18,-0.065,-0.065,-0.03,0.069,-0.057,-0.091,0.082,0.063,-0.16,0.03,-0.019,0.0011,0.15,-0.14,0.16,-0.11,-0.048,-0.14,-0.087,0.057,-0.09,0.13,0.055,0.24,-0.34,0.096,-0.024,0.11,-0.32,0.22,-0.017,0.061,0.15,0.049,0.027,0.065,0.15,0.15,-0.068,-0.18,0.023,-0.06,-0.096,-0.065,0.021,0.013,0.26,0.22,0.038,0.12,0.12,-0.04,0.24,-0.07,0.14,-0.11,-0.0061,-0.08,0.21,0.23,0.081,-0.057,-0.093,0.016,-0.075,-0.1,0.2,-0.091,0.094,0.082,-0.18,0.0042,0.011,-0.026,0.1,-0.031,0.15,0.15,-0.087,0.021,-0.0026,0.34,0.041,0.053,0.16,-0.13,0.1,0.16,0.11,-0.1,0.056,-0.22,-0.091,-0.24,0.08,0.23,-0.021,-0.034,0.074,-0.048,0.036,0.13,-0.28,0.097,-0.26,0.23,0.031,0.21,0.037,-0.22,0.017,0.067,-0.06,0.052,
0.1,-0.027,-0.33,-0.11,-0.19,-0.3,-0.064,-0.2,-0.088,-0.2,-0.051,-0.14,0.0066,0.3,0.16,-0.082,-0.13,-0.15,-0.083,-0.035,-0.15,-0.086,-0.0085,0.19,0.18,0.28,-0.19,0.065,0.019,-0.18,0.1,0.049,-0.12,-0.068,0.068,-0.078,0.034,0.17,0.12,-0.11,0.15,0.052,-0.072,-0.017,0.13,0.063,0.2,0.1,-0.071,0.099,0.061,0.086,-0.11,0.067,0.13,-0.017,-0.031,-0.057,-0.077,-0.18,0.045,-0.15,-0.19,-0.043,0.088,0.18,-0.015,0.16,-0.012,0.027,0.007,0.19,-0.13,-0.096,-0.21,-0.42,0.23,-0.038,-0.16,-0.027,0.018,-0.19,0.038,-0.12,0.18,-0.044,0.084,-0.023,-0.061,0.14,-0.12,0.084,0.18,-0.14,-0.0091,-0.063,0.15,0.099,-0.094,0.072,-0.069,-0.081,0.076,0.005,-0.069,0.041,-0.096,-0.022,-0.045,-0.073,-0.2,0.056,-0.057,-0.064,0.043,0.062,-0.072,0.026,-0.064,0.02,0.06,0.0019,-0.031,0.058,0.11,0.032,-0.09,0.007,-0.028,0.01,0.11,0.024,0.076,0.086,0.078,0.054,-0.029,-0.15,-0.049,0.14,-0.0069,0.014,0.068,0.14,-0.043,0.079,-0.00063,0.11,0.085,0.0013,0.068,-0.02,-0.015,-0.11,0.041,0.074,0.023,0.048,-0.097,0.068,0.067,0.0035,-0.025,-0.047,-0.037,0.16,0.083,-0.092,-0.0077,0.077,-0.048,-0.15,-0.054,-0.063,0.05,-0.037,-0.15,-0.071,-0.025,0.014,0.054,-0.0024,-0.096,-0.015,0.073,0.0015,-0.029,-0.014,0.12,-0.098,-0.1,0.035,-0.045,0.005,-0.044,0.044,0.057,0.087,0.096,-0.011,-0.13,0.084,0.041,-0.093,-0.0043,-0.095,-0.025,-0.0096,0.11,0.22,-0.047,-0.051,-0.12,-0.1,-0.046,-0.061,0.018,0.15,-0.081,0.11,-0.054,-0.17,-0.061,0.0081,0.035,0.072,0.024,0.02,0.086,-0.077,0.016,-0.083,-0.057,0.047,-0.017,-0.0022,0.006,-0.12,0.031,0.12,0.0018,0.037,0.18,-0.079,-0.029,0.044,0.074,0.05,0.098,0.17,-0.037,-0.067,0.063,0.09,-0.19,0.056,0.037,0.035,0.07,0.13,0.064,0.094,0.027,-0.084,-0.01,0.017,0.17,0.16,0.05,0.062,0.0053,-0.016,0.12,0.13,-0.015,0.025,0.091,0.05,0.0014,-0.14,-0.11,-0.09,0.033,0.017,-0.041,0.069,-0.038,-0.03,-0.0012,-0.036,-0.016,-0.1,0.086,0.015,-0.054,-0.035,0.049,-0.075,0.041,0.16,-0.022,-0.021,0.09,0.021,-0.013,-0.028,0.058,-0.03,-0.049,0.14,0.046,-0.057,0.007,0.0056,0.058,0.0028,0.047,0.16,-0.0038,-0.062,-0.043,0.017,0.041,-0.02,-0.012,0.023,-0.02,0.065,-0.056,-0.053,0.084,0.0077,-0.077,-0.036,-0.055,0.034,-0.084,-0.042,0.0059,0.07,-0.011,0.045,0.021,-0.0021,-0.023,0.067,-0.019,-0.25,-0.29,-0.046,-0.06,0.057,-0.047,-0.002,-0.051,-0.043,0.067,-0.1,0.067,0.02,-0.049,-0.1,-0.13,0.053,-0.057,-0.042,0.0019,-0.015,0.019,0.08,0.078,0.078,0.022,-0.057,0.034,0.098,0.1,0.13,-0.12,0.13,0.044,0.11,-0.077,0.011,-0.0051,-0.058,-0.0079,0.31,0.025,0.15,0.01,0.14,0.046,-0.12,-0.053,0.12,0.12,-0.039,0.057,0.068,-0.019,-0.0088,-0.061,-0.087,-0.021,0.065,-0.023,-0.081,-0.13,-0.11,-0.02,-0.0058,-0.021,0.035,0.0074,-0.016,-0.012,-0.05,-0.015,-0.016,-0.066,0.037,-0.015,-0.19,0.15,0.18,-0.045,0.13,0.087,0.088,-0.03,0.0095,-0.033,0.079,0.056,0.15,0.069,0.073,-0.037,0.07,-0.0096,0.037,-0.0049,0.018,-0.056,-0.05,-0.072,0.05,0.053,0.12,0.014,0.029,0.027,0.037,-0.03,0.16,-0.0076,0.021,-0.069,0.054,-0.067,-0.03,-0.048,-0.03,-0.12,0.083,0.043,-0.096,0.055,0.00029,-0.0037,0.091,0.074,0.11,0.061,0.028,0.04,0.054,0.022,0.064,0.066,-0.01,0.065,-0.061,-0.086,-0.26,-0.034,0.13,0.05,0.017,0.085,0.045,0.0053,0.095,-0.16,-0.086,-0.0051,-0.098,0.073,-0.021,
0.048,-0.1,-0.065,-0.038,0.14,-0.036,0.27,0.043,-0.01,-0.094,-0.0084,-0.056,-0.023,-0.013,0.021,0.068,-0.062,-0.14,-0.083,-0.029,0.005,-0.061,-0.067,-0.056,-0.0036,0.0045,0.077,-0.035,0.014,0.0083,-0.22,-0.069,-0.012,0.068,-0.012,-0.089,-0.032,-0.13,0.11,-0.088,0.029,-0.046,0.1,0.053,0.053,0.049,0.094,0.046,-0.1,0.033,0.041,0.015,0.06,-0.019,-0.16,-0.11,0.034,0.0021,0.041,0.031,-0.1,0.043,-0.085,-0.0076,-0.14,0.0067,0.12,0.12,0.14,0.11,0.066,0.07,0.084,0.067,-0.059,0.17,-0.036,-0.087,0.064,-0.16,-0.14,-0.11,-0.16,0.14,-0.11,-0.12,-0.17,0.076,0.032,-0.13,-0.19,0.097,0.034,-0.066,0.00023,0.0035,0.047,-0.24,0.2,0.0079,-0.18,0.11,-0.27,-0.014,-0.13,-0.038,0.019,-0.029,-0.071,0.019,-0.069,0.1,-0.13,0.16,-0.02,0.067,-0.087,-0.037,0.12,-0.042,-0.12,0.075,-0.04,0.17,-0.021,-0.099,-0.22,0.063,0.14,0.027,0.022,-0.054,-0.037,0.022,-0.11,-0.14,0.15,-0.13,-0.11,-0.019,0.0044,-0.19,-0.023,0.046,0.0047,-0.16,-0.054,-0.094,-0.011,-0.052,-0.057,-0.11,0.018,0.13,-0.13,0.033,-0.088,0.048,0.036,-0.071,-0.074,0.014,0.13,-0.13,0.099,0.11,0.11,-0.18,-0.019,-0.25,0.11,-0.038,0.049,0.085,-0.0065,-0.022,0.032,0.0073,0.055,0.0089,-0.066,0.16,-0.052,-0.088,-0.076,-0.0027,0.046,0.13,-0.035,0.11,0.22,0.044,0.12,0.028,-0.008,-0.34,-0.02,0.1,0.061,-0.12,-0.14,0.064,-0.057,0.19,-0.031,-0.036,0.061,0.037,-0.016,0.19,0.16,-0.19,0.045,0.055,-0.086,-0.011,-0.048,0.31,-0.027,-0.077,0.19,0.08,0.0026,0.26,0.088,-0.12,-0.075,0.024,-0.068,0.08,0.11,-0.033,0.092,0.18,-0.21,0.099,-0.13,0.022,-0.12,0.04,0.032,0.14,-0.085,0.044,0.051,0.11,0.31,-0.033,0.017,0.056,0.067,-0.074,0.042,0.067,-0.013,0.043,0.17,0.07,-0.23,-0.1,-0.036,0.09,0.15,0.23,0.082,0.00088,-0.044,0.058,0.089,0.17,0.24,0.26,-0.087,0.11,-0.2,0.066,-0.027,-0.033,0.1,0.098,0.099,-0.038,-0.074,0.023,-0.14,-0.088,0.0042,-0.12,-0.073,0.2,-0.062,-0.11,-0.032,-0.045,0.051,0.098,0.095,0.15,0.078,0.11,-0.032,0.016,-0.021,-0.037,0.14,0.07,0.0021,-0.029,0.099,-0.087,0.052,-0.035,-0.16,-0.18,-0.18,-0.0047,-0.31,-0.12,0.09,0.081,0.13,-0.0081,0.15,0.11,-0.048,0.16,0.18,-0.035,-0.042,0.19,0.073,0.057,-0.096,0.32,0.002,0.18,-0.2,0.07,-0.062,0.073,-0.095,-0.0079,0.26,-0.073,0.006,0.22,0.012,0.12,0.078,-0.0048,-0.024,-0.019,0.24,-0.38,0.024,-0.22,0.002,0.24,-0.066,0.09,-0.042,-0.13,0.042,0.057,0.079,-0.079,0.02,-0.1,-0.15,0.1,0.085,0.096,0.044,-0.18,0.071,0.13,-0.35,-0.017,0.25,0.066,-0.24,0.043,0.056,0.034,0.077,0.045,0.22,0.12,0.13,-0.0077,0.027,-0.022,-0.16,-0.067,0.0031,0.053,-0.082,0.019,0.0062,-0.089,-0.24,0.064,-0.077,0.18,-0.12,0.028,-0.19,0.21,0.038,0.16,-0.16,0.095,-0.094,-0.26,-0.056,-0.1,-0.0041,0.063,-0.098,0.0037,0.026,-0.11,0.09,0.041,0.00056,0.076,0.016,-0.082,-0.11,-0.17,-0.072,0.11,-0.096,-0.11,0.0025,0.16,-0.059,-0.093,-0.013,0.25,-0.0091,-0.12,0.027,-0.13,0.059,-0.0096,-0.038,-0.066,0.22,-0.093,-0.18,-0.03,-0.02,0.024,0.18,-0.025,0.027,-0.16,-0.17,-0.099,-0.032,-0.011,-0.17,-0.19,-0.11,0.072,-0.012,-0.13,0.06,0.011,0.072,-0.0056,-0.052,-0.33,-0.29,-0.096,0.25,-0.014,-0.056,-0.094,-0.099,-0.16,0.089,-0.11,-0.27,-0.3,-0.12,-0.011,-0.16,-0.2,-0.09,0.012,0.078,-0.049,0.024,0.039,-0.16,-0.064,-0.044,0.016,
-0.1,-0.063,-0.059,-0.18,-0.079,0.015,-0.0044,-0.11,0.013,-0.19,-0.21,-0.042,0.05,-0.17,-0.051,-0.046,0.048,0.16,0.068,-0.019,-0.15,-0.043,0.067,-0.048,0.062,-0.11,0.24,0.088,0.065,0.00083,-0.038,0.036,0.057,0.14,0.023,0.21,-0.13,-0.054,-0.24,-0.13,0.043,-0.009,0.087,0.12,-0.32,-0.11,-0.17,0.025,0.21,0.15,0.1,-0.071,0.078,0.16,0.043,0.076,0.11,0.086,0.037,-0.016,0.026,-0.0016,0.085,-0.14,-0.02,-0.32,-0.086,0.041,-0.23,-0.29,0.014,-0.09,0.023,-0.05,0.11,0.039,0.12,0.052,-0.037,0.0063,0.1,0.02,-0.22,-0.039,-0.027,0.1,-0.034,0.11,-0.056,0.11,0.02,0.029,-0.32,-0.098,-0.031,-0.19,-0.17,-0.046,0.047,0.0077,-0.18,-0.1,0.085,-0.0075,-0.2,-0.084,0.066,-0.32,0.0088,-0.23,-0.092,-0.24,-0.21,-0.055,-0.039,-0.26,-0.081,-0.052,0.24,-0.24,0.078,-0.15,0.2,0.054,-0.074,0.29,0.0065,-0.039,-0.22,-0.09,-0.04,0.17,-0.00024,-0.16,0.11,-0.089,0.082,-0.074,0.18,-0.044,0.033,-0.11,0.12,0.2,-0.11,-0.16,0.15,-0.0085,-0.12,-0.14,-0.012,0.045,-0.099,-0.1,-0.13,-0.28,-0.1,-0.057,-0.091,0.035,0.093,0.13,0.056,-0.056,0.026,0.16,0.0073,0.02,-0.26,-0.061,-0.016,0.034,0.2,0.045,0.15,-0.4,-0.026,0.093,-0.14,-0.16,-0.034,0.053,0.19,0.086,0.079,0.19,0.017,0.16,-0.19,-0.069,0.043,-0.037,-0.038,-0.14,-0.11,-0.078,0.089,0.06,0.19,0.088,0.031,-0.1,0.11,-0.058,0.16,0.26,-0.1,-0.064,-0.044,0.12,-0.026,-0.065,0.17,0.046,-0.077,-0.092,0.11,-0.067,-0.29,0.019,-0.094,0.19,0.068,-0.068,0.097,-0.063,0.13,-0.037,0.031,0.0047,-0.0085,0.096,0.0061,0.064,-0.046,-0.037,0.042,0.021,-0.15,0.044,0.053,-0.084,0.02,0.036,0.14,0.24,0.16,0.14,-0.076,0.013,-0.019,0.041,-0.0087,-0.092,-0.13,0.043,0.077,-0.0077,0.18,0.043,0.032,0.051,0.057,-0.0076,-0.18,0.0057,-0.082,0.15,0.043,0.095,-0.2,0.026,-0.11,0.073,0.047,0.18,0.062,0.062,0.066,-0.0066,0.042,-0.095,0.034,0.0078,-0.052,-0.081,-0.032,-0.21,-0.17,-0.28,-0.067,-0.045,-0.066,-0.084,0.08,-0.079,-0.19,0.06,0.21};
double a4[]={-0.069,
0.047,-0.081,-0.059,-0.11,0.1,0.042,0.043,0.016,-0.0021,-0.043,0.031,-0.094,-0.012,0.12,0.0011,0.11,0.015,-0.055,0.47,0.48,-0.15,0.19,0.032,-0.13,0.6,0.067,0.032,0.043,-0.027,0.04,0.066,0.28,0.0027,0.073,0.087,-0.049,0.17,0.34,0.072,0.48,0.074,0.042,-0.032,-0.012,0.58,-0.52,-0.068,0.00065,-0.022,0.033,0.043,-0.057,-0.04,0.00039,0.048,0.0026,0.0079,-0.0022,-0.0094,-0.033,0.29,-0.16,-0.11,-0.047,0.73,0.075,-0.091,0.0056,-0.47,0.073,0.014,0.17,0.027,-0.029,0.046,-0.024,-0.19,-0.34,0.38,-0.037,0.025,-0.056,0.0093,0.47,0.12,-0.011,-0.0013,-0.0058,-0.0092,-0.021,0.023,-0.046,0.0091,-0.48,-0.014,0.0097,-0.011,0.013,0.45,-0.08,0.065,0.056,0.13,0.26,0.31,0.11,0.39,-0.027,0.23,0.21,-0.021,-0.031,0.034,0.13,-0.11,0.0042,0.018,-0.0044,0.23,-0.0077,-0.02,0.057,0.015,-0.43,0.48,0.011,-0.041,-0.032,0.032,0.08,-0.035,0.044,0.014,-0.17,-0.017,0.0098,0.01,-0.021,-0.43,-0.54,0.1,-0.14,0.0038,-0.32,0.45,0.014,-0.0089,0.011,0.062,-0.028,-0.11,-0.17,0.018,0.26,-9.7e-005,-0.006,-0.052,0.2,-0.35,-0.12,0.13,0.076,0.06,0.32,0.74,0.15,-0.22,-0.012,0.21,-0.38,-0.036,-0.047,-0.026,0.083,-0.053,-0.057,0.03,-0.091,-0.2,-0.061,-0.6,0.025,-0.055,0.017,0.63,0.06,-0.012,0.0018,0.0044,0.035,-0.00035,-0.03,-0.017,-0.0073,0.012,0.035,0.011,-0.03,-0.6};

struct NConnection{
    int nIndex;
    int wIndex;
    NConnection(int n=0, int w=0) : nIndex(n), wIndex(w){}
};

struct NLayer{
    NLayer *prev;
    size_t n;
    vector<vector<NConnection> > cons;
    vector<double> w;
    vector<double> out;

    void calculate();
    size_t size(){return n;}

    NLayer(){}
    NLayer(int size, NLayer *prev = NULL) : prev(prev), n(size)
    {
        cons.resize(n);
        out.resize(n);
    }
    void createFullConnections()
    {
        w.clear();
        if(prev != NULL)
            for(size_t i = 0; i < n; i++)
            {
                cons[i].resize(prev->size());
                for(size_t k = 0; k < prev->size(); k++)
                {
                    cons[i][k].nIndex = k;
                    cons[i][k].wIndex = w.size();
                    w.push_back(0.0);
                }
            }
    }

};

void NLayer::calculate()
{
    if(prev == NULL)
        return;
    for(size_t i = 0; i < n; i++)
    {
        double sum = 0;
        for(size_t j = 0; j < cons[i].size(); j++)
            sum += prev->out[ cons[i][j].nIndex ] * w[cons[i][j].wIndex];
        out[i] = SIGMOID(sum);
    }
}

struct NNet{
    vector<NLayer*> layers;

    void calculate(vector<double> &in, vector<double> &out);

    void addLayer(int n)
    {
        NLayer *prev = 0;
        if(layers.size() !=  0)
            prev = *(layers.end() - 1);
        layers.push_back(new NLayer(n, prev));
        cerr << "added layer " << (*(layers.end()-1))->n << " " << (*(layers.end()-1))->prev << endl;
    }

    void read()
    {
        //random_init();
        for(size_t j = 0; j < layers[1]->w.size(); j++)
            layers[1]->w[j] = a1[j];
        for(size_t j = 0; j < layers[2]->w.size(); j++)
            layers[2]->w[j] = a2[j];
        for(size_t j = 0; j < layers[3]->w.size(); j++)
            layers[3]->w[j] = a3[j];
        for(size_t j = 0; j < layers[4]->w.size(); j++)
            layers[4]->w[j] = a4[j];

        cerr << "readed\n";
    }
};

void NNet::calculate(vector<double> &in, vector<double> &out)
{
    for(size_t i = 0; i < layers[0]->size(); i++)
        layers[0]->out[i] = in[i];

    for(size_t i = 1; i < layers.size(); i++)
        layers[i]->calculate();

    out.resize(layers[layers.size()-1]->size());

    for(size_t i = 0; i < out.size(); i++)
        out[i] = layers[layers.size()-1]->out[i];
}


void createNet(NNet &net)
{
    net.addLayer(19*25);

    int lay1_mc = 4;
    int lay2_mc = 20;

    net.addLayer(9*11 * lay1_mc);


    int kernel1[] = {
        0, 1, 2, 3, 4,
        18, 19, 20, 21, 22,
        36, 37, 38, 39, 40,
        54, 55, 56, 57, 58,
        72, 73, 74, 75, 76
    };

    NLayer *lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc * 25);
    for(int map = 0; map < lay1_mc; map++)
    {
        cerr << "map " << map << endl;
        for(int ney = 0; ney < 9*11; ney++)
        {
            cerr << ney << " ";
            int base = (ney/9)*18*2 + (ney%9) * 2;
            for(int c = 0; c < 25; c++)
                lay->cons[map * 9*11 + ney].push_back(NConnection(base + kernel1[c], map*25 + c));
        }
        cerr << endl;
    }

    int kernel2[]={
        0, 1, 2, 3, 4, 5,
        9, 10, 11, 12, 13,
        18, 19, 20, 21, 22,
        27, 28, 29, 30, 31,
        36, 37, 38, 39, 40
    };

    net.addLayer(3*4 * lay2_mc);
    lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc*lay2_mc * 25);

    for(int map = 0; map < lay2_mc; map++)
    {
        cerr << "map " << map << endl;
        for(int ney = 0; ney < 3*4; ney++)
        {
            cerr << ney << " ";
            int base = (ney/3)*9*2 + (ney%3) * 2;
            for(int f_map = 0; f_map < lay1_mc; f_map++)
                for(int c = 0; c < 25; c++)
                    lay->cons[map * 3*4 + ney].push_back(NConnection(f_map *9*11 + base + kernel2[c], map*25*lay1_mc + f_map*25 + c));
        }
        cerr << endl;
    }

    net.addLayer(20);
    net.layers[net.layers.size()-1]->createFullConnections();

    net.addLayer(10);
    net.layers[net.layers.size()-1]->createFullConnections();
}

int main()
{
    char str[100];
    NNet net;
    createNet(net);
    //ifstream fin("perceptron");
    net.read();

    while(cin.getline(image[height], 1000))
        height++;
    width = strlen(image[0]);

    for(int i = 0; i < height; i++)
        for(int j = 0; j < width; j++)
            switch(image[i][j])
            {
                case '.': image[i][j] = 0; break;
                case '%': image[i][j] = 1; break;
                case '#': image[i][j] = 2; break;
                case '@': image[i][j] = 3; break;
            }

    vector<digit> digits = split_image();
    //cerr << "splited";
    for(size_t j = 0; j < digits.size(); j++)
    {
        //digits[j].print();
        digit d = scale(digits[j], 25, 19);
        //d.print();
        vector<double> x;
        for(int i = 0; i < 25; i++)
            for(int j = 0; j < 19; j++)
                x.push_back( (d.mat[i][j]>0) ? 1 : -1 );
        vector<double> y;
        net.calculate(x, y);

        int jm = 0;
        for(int j = 0; j < 10; j++)
        {
            //cerr << y[j] << " ";
            if(y[j] > y[jm])
                jm = j;
        }
        //cerr << endl;
        cout << jm;
    }
    return 0;
}
