#include <iostream>
#include <fstream>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <set>

using namespace std;

char image[200][1000];
bool c[200][1000];
int width = 0;
int height;

struct pixel_set{
    set<pair<int, int> > s;
    double xc, yc;
    int left, top, right, bottom;
    pixel_set()
    {
        xc = yc = right = bottom = 0;
        left = top = 1e9;
    }
    void add_pixel(int x, int y)
    {
        s.insert( make_pair(x, y) );
    }
    void merge(pixel_set &b)
    {
        for(set<pair<int, int> >::iterator it = b.s.begin(); it != b.s.end(); it++)
            s.insert(*it);
        calculate_info();
    }
    pixel_set split_half()
    {
        int mid = (top + bottom) / 2;
        pixel_set second;

        for(set<pair<int, int> >::iterator it = s.begin(); it != s.end(); it++)
        {
            if(it->second > mid)
                second.add_pixel(it->first, it->second);
        }

        for(set<pair<int, int> >::iterator it = s.begin(); it != s.end(); )
        {
            if(it->second > mid)
                s.erase(it++);
            else
                it++;
        }
        second.calculate_info();
        calculate_info();
        return second;
    }
    void calculate_info()
    {
        xc = yc = 0;
        for(set<pair<int, int> >::iterator i = s.begin(); i != s.end(); i++)
        {
            xc += i->first;
            yc += i->second;
            left = min(left, i->first);
            right = max(right, i->first);
            top = min(top, i->second);
            bottom = max(bottom, i->second);
        }
        xc /= s.size();
        yc /= s.size();
    }
};

struct digit{
    char mat[100][100];
    int width, height;

    digit(){memset(mat, 0, 100*100);}
    digit(pixel_set s)
    {
        memset(mat, 0, 100*100);
        width = s.right - s.left + 1;
        height = s.bottom - s.top + 1;
        for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
        {
            mat[it->first - s.left][it->second - s.top] = image[it->first][it->second];
        }
    }
    void print()
    {
        for(int i = 0; i < width; i++)
        {
            for(int j = 0; j < height; j++)
            {
                switch(mat[i][j])
                {
                    case 0: cout << '.'; break;
                    case 1: cout << '%'; break;
                    case 2: cout << '#'; break;
                    case 3: cout << '@'; break;
                }
            }
            cout << "\n";
        }
        cout << endl;
    }
};

int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dy[] = {1, -1, 0, 0, 1, 1, -1, -1};

bool check(int i, int j)
{
    return i >= 0 && i <= height && j >= 0 && j <= width;
}

void dfs(int i, int j, int min_color, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1 ;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(check(ni, nj) && image[ni][nj] >= min_color)
                dfs(ni, nj, min_color, cur_set);
        }
    }
}

bool inside(pixel_set s, double x, double y)
{
    return y >= s.top && y <= s.bottom;
}

bool can_merge(const pixel_set &a, const pixel_set &b)
{
    return inside(b, a.xc, a.yc) || inside(a, b.xc, b.yc);
}

void bfs_add(pixel_set &s, int len)
{
    queue<pair<int, int> > q;
    int dist[200][1000];
    memset(dist, 0x0f, 200*1000*4);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        dist[it->first][it->second] = 0;
        q.push(*it);
    }

    while(!q.empty())
    {
        pair<int, int> p = q.front();
        q.pop();
        if(dist[p.first][p.second] < len)
        {
            if(image[p.first][p.second] == 1)
            {
                bool bad = 0;
                for(int k = 0; k < 8; k++)
                {
                    int ni = p.first + dx[k];
                    int nj = p.second + dy[k];
                    if(check(ni, nj) && image[ni][nj] > 2)
                        if(s.s.find(make_pair(ni, nj)) == s.s.end())
                        {
                            bad = 1;
                            break;
                        }
                }

                if(!bad)
                    s.add_pixel(p.first, p.second);
            }
            for(int k = 0; k < 8; k++)
            {
                int ni = p.first + dx[k];
                int nj = p.second + dy[k];
                if(check(ni, nj) && image[ni][nj] == 1 && dist[ni][nj] > 100)
                {
                    q.push(make_pair(ni, nj));
                    dist[ni][nj] = dist[p.first][p.second] + 1;
                }
            }
        }
    }
    s.calculate_info();
}

void dfs_set(int i, int j, pixel_set &s, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(s.s.find( make_pair(ni, nj)) != s.s.end() )
                dfs_set(ni, nj, s, cur_set);
        }
    }
}

pixel_set make_one_component(pixel_set &s, bool bad)
{
    if(bad)
        return s;
    vector<pixel_set> sets;
    pixel_set cur;
    memset(c, 0, 200*1000);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        int x = it->first;
        int y = it->second;
        if(!c[x][y])
        {
            dfs_set(x, y, s, cur);
            cur.calculate_info();
            if(cur.s.size() > 10)
                sets.push_back(cur);
            cur = pixel_set();
        }
    }
    if(sets.size() == 1)
        return sets[0];
    return sets[1];
}

int between(int xl, int xr, int xm)
{
    return xm >= xl && xm <= xr;
}

int dist(pixel_set a, pixel_set b)
{
    if( between(a.left, a.right, b.left) || between(a.left, a.right, b.right))
        return 0;

    if( between(b.left, b.right, a.left) || between(b.left, b.right, a.right))
        return 0;

    return 1000;
}

vector<digit> split_image()
{
    vector<pixel_set> sets;
    vector<digit> res;

    pixel_set cur;

    for(int j = 0; j < width; j++)
        for(int i = 0; i < height; i++)
            if(image[i][j] >= 2 && !c[i][j])
            {
                dfs(i, j, 2, cur);
                cur.calculate_info();

                sets.push_back(cur);
                cur = pixel_set();
            }

    bool *merged = new bool[sets.size()];
    memset(merged, 0, sets.size());

    vector<pixel_set> blacks;
    int cnt = 0;
    for(size_t i = 0; i < sets.size(); i++)
        if(!merged[i])
        {
            cnt++;
            cur = sets[i];
            for(size_t j = i+1; j < sets.size(); j++)
            {
                if(can_merge(cur, sets[j]))
                {
                    cur.merge(sets[j]);
                    merged[j] = 1;
                }
            }

            if(cur.s.size() > 10)
                blacks.push_back(cur);
            merged[i] = 1;
        }

    bool bad = 0;
    while(blacks.size() > 3)
    {
        bad = 1;
        int mi=0, mj=1;
        int mdist = 1000;
        for(size_t i = 0; i < blacks.size(); i++)
            for(size_t j = i+1; j < blacks.size(); j++)
            {
                if(dist(blacks[i], blacks[j]) < mdist)
                {
                    mi = i;
                    mj = j;
                }
            }
        pixel_set a = blacks[mi], b = blacks[mj];

        blacks.erase(blacks.begin() + mj);
        blacks.erase(blacks.begin() + mi);

        a.merge(b);
        blacks.push_back(a);

        cnt--;
    }

    if(blacks.size() == 1)
    {
        pixel_set a = blacks[0];
        pixel_set b = a.split_half();

        blacks.clear();
        blacks.push_back(a);
        blacks.push_back(b);
    }

    delete[] merged;

    for(size_t i = 0; i < blacks.size(); i++)
    {
        memset(c, 0, 200*1000);
        pixel_set s = blacks[i];
        bfs_add(s, 5);
        res.push_back(digit( make_one_component(s, bad)));
    }

    return res;
}
digit scale(digit d, int w, int h)
{
    digit res;
    res.width = w;
    res.height = h;

    for(int i = 0; i < w; i++)
        for(int j = 0; j < h; j++)
        {
            res.mat[i][j] = (d.mat[i*d.width/w][j*d.height/h] > 0 ? 3 : 0);
        }

  	for(int i = 0; i < d.width; i++)
        for(int j = 0; j < d.height; j++)
        {
            int ii = (double)i * w / d.width;
            int jj = (double)j * h / d.height;
            if(d.mat[i][j] == 3)
	            res.mat[ii][jj] = 3;
        }
    return res;
}

#define SIGMOID(x) (1.7159*tanh(0.66666667*x))
double a1[]={-0.077,
0.0154,-0.184,-0.19,-0.195,0.748,0.45,0.161,-0.0456,-0.039,0.316,0.405,-0.153,0.0493,-0.125,0.0689,0.359,0.354,0.47,0.261,-0.0284,0.143,-0.0526,-0.0885,-0.119,0.23,0.651,0.323,0.498,0.0317,0.0632,0.208,0.355,0.138,0.197,-0.0574,-0.161,0.138,0.0245,-0.0132,-0.289,-0.295,-0.211,-0.16,0.176,-0.378,-0.629,-0.373,-0.614,-0.464,0.786,0.52,-0.0821,-0.141,-0.35,0.308,0.845,0.593,0.182,-0.0653,0.345,0.187,0.348,0.0399,0.0408,-0.0703,-0.169,-0.123,-0.0895,-0.409,0.193,-0.177,-0.219,-0.376,-0.315,-0.227,0.298,0.366,0.443,0.422,-0.497,0.178,0.622,0.585,0.324,-0.428,-0.339,0.139,0.375,0.311,-0.404,-0.274,-0.0926,0.0109,0.354,-0.274,0.0227,0.126,0.00651,0.137};
double a2[]={0.415,
0.216,0.275,-0.131,0.0962,-0.279,0.336,0.188,0.0644,0.0474,-0.253,0.0245,-0.0851,-0.149,-0.0971,-0.226,0.0953,-0.209,-0.151,-0.289,-0.323,-0.149,-0.0535,0.0185,-0.029,-0.17,0.0752,-0.0504,-0.0347,0.0455,0.0221,0.193,0.043,0.0775,-0.0829,-0.00672,0.0347,0.203,0.163,0.0803,-0.0631,0.0595,-0.0917,-0.169,-0.172,-0.0186,-0.198,0.132,-0.189,-0.221,0.254,0.241,0.128,-0.00793,-0.0386,-0.141,0.544,0.164,0.247,-0.0807,0.0382,0.189,0.221,0.102,-0.0137,-0.357,0.0595,-0.21,-0.168,-0.347,-0.37,-0.0313,0.049,-0.101,-0.00797,0.107,0.233,0.0794,0.0267,-0.0543,-0.0127,0.281,0.259,0.0423,-0.0152,-0.0344,0.0683,0.101,0.0289,-0.0947,0.0808,-0.0467,-0.284,-0.285,-0.245,0.0571,-0.199,-0.0369,-0.167,-0.222,-0.131,-0.12,-0.126,-0.156,-0.0412,-0.224,0.15,0.0178,0.126,0.169,-0.124,0.174,0.101,0.00954,0.154,0.113,0.173,0.00917,0.00374,-0.00934,-0.0507,0.207,-0.207,-0.139,-0.13,-0.285,-0.0917,-0.102,-0.0259,0.126,0.188,-0.193,-0.11,-0.118,-0.263,-0.189,-0.156,-0.00349,0.105,0.0187,-0.0684,-0.0653,-0.0347,0.0432,0.175,0.208,-0.124,0.0521,0.186,0.32,-0.284,-0.287,-0.268,-0.0685,0.08,0.0115,0.0453,0.0895,0.0963,-0.123,-0.133,0.203,0.00886,0.0861,0.196,0.0272,0.276,0.0655,-0.025,0.114,0.0619,0.0812,0.0224,0.0292,-0.0832,-0.34,-0.15,-0.0755,0.089,0.177,0.0547,-0.0582,-0.00131,-0.112,-0.271,-0.135,-0.0555,0.232,0.189,0.0583,-0.0631,0.157,0.0502,0.11,0.0831,0.135,-0.033,0.0813,-0.0581,-0.0796,-0.087,-0.206,-0.112,0.0316,0.0611,0.00197,-0.00161,-0.083,-0.0815,-0.0486,0.197,-0.115,-0.0817,-0.0326,0.168,0.181,-0.204,-0.0668,0.0597,0.0733,0.18,0.278,-0.0562,0.181,0.136,-0.125,-0.0622,-0.0963,-0.0793,-0.00112,-0.0699,-0.0309,-0.0263,-0.0421,-0.0789,-0.0902,-0.0489,0.0111,-0.00976,-0.131,0.0539,-0.0605,0.00721,-0.0207,-0.0535,0.0316,-0.216,-0.188,-0.235,-0.044,-0.196,-0.0743,-0.178,-0.065,0.0092,0.143,-0.0292,-0.217,-0.0367,0.0775,0.194,-0.115,-0.0644,0.0296,0.059,0.171,-0.16,-0.0742,-0.00692,0.172,0.282,-0.117,-0.141,0.234,0.132,-0.274,-0.12,-0.048,0.0273,0.257,0.459,-0.322,-0.0555,0.0657,0.236,0.037,-0.112,-0.104,0.0912,0.0614,0.331,-0.0685,-0.00732,0.0651,0.188,0.152,-0.033,0.00517,0.0442,0.0708,-0.168,0.0098,0.179,0.174,-0.0422,0.162,-0.0586,0.0142,0.165,0.0871,0.101,-0.0428,-0.0457,0.0273,0.196,0.173,0.0381,-0.228,-0.179,0.0322,0.159,0.185,-0.0674,-0.248,-0.315,-0.0465,-0.0622,0.0304,-0.0904,-0.0401,-0.0591,-0.0554,0.0763,0.181,-0.0243,-0.157,-0.116,0.102,0.104,-0.0398,-0.101,-0.32,-0.021,0.0908,0.177,-0.0648,0.135,-0.298,-0.154,0.134,-0.107,0.0472,-0.027,0.213,-0.00198,0.0481,-0.136,-0.00286,0.151,0.107,0.0357,-0.0287,-0.047,0.0136,0.0451,0.0289,-0.125,-0.18,-0.0915,0.193,0.153,0.175,-0.178,-0.138,-0.0378,0.136,0.149,0.221,-0.0429,0.0157,0.0742,-0.0292,0.145,0.228,-0.0898,0.0104,-0.129,0.144,0.186,0.0629,0.0686,-0.196,-0.00302,0.245,0.26,-0.0548,0.116,-0.159,-0.0683,0.185,-0.41,-0.292,0.16,0.221,0.122,0.0315,0.00376,-0.221,-0.0762,0.126,0.155,0.121,0.0493,-0.0692,-0.298,0.0588,-0.0251,-0.0772,0.07,-0.103,-0.354,-0.069,-0.00687,0.143,0.0375,-0.327,0.127,0.0234,-0.0574,-0.0816,-0.0834,-0.248,0.0306,0.0801,0.0752,0.0187,0.069,-0.165,-0.242,-0.108,0.279,0.0969,0.0625,-0.0208,-0.0739,0.0168,-0.0621,-0.0982,-0.136,-0.141,-0.671,-0.0492,0.125,0.0918,0.0325,0.191,0.0346,-0.259,0.176,0.318,0.0428,0.136,-0.118,-0.241,-0.192,0.198,0.00817,0.0284,0.026,-0.164,-0.158,-0.111,-0.034,0.0526,-0.0161,-0.034,0.159,0.0783,0.207,0.118,0.139,-0.259,0.154,0.265,0.109,0.109,-0.0234,-0.251,-0.1,0.0849,0.212,0.172,0.124,-0.169,-0.167,-0.161,0.0228,0.122,0.00566,-0.313,0.145,
0.028,0.0629,-0.036,-0.03,0.135,0.04,0.0297,0.083,0.27,0.137,-0.063,-0.155,0.00713,-0.0108,0.109,-0.0319,-0.231,-0.0737,-0.095,-0.168,0.205,-0.149,-0.19,-0.0698,-0.121,-0.0892,-0.178,-0.314,-0.226,-0.0819,0.0129,0.0837,0.0555,-0.0338,-0.0624,-0.0731,0.214,0.0988,0.36,0.151,-0.212,0.0188,-0.0349,-0.0613,0.144,0.0304,-0.146,-0.151,-0.00517,0.0361,0.105,-0.097,-0.105,-0.104,-0.0357,0.0579,-0.00787,0.073,-0.0108,-0.00957,-0.00223,0.0319,-0.012,0.278,0.294,0.0462,-0.0923,-0.0721,-0.0804,-0.124,0.0556,-0.177,-0.0473,-0.0463,-0.0792,-0.119,-0.182,-0.17,-0.0946,-0.0255,-0.0674,0.000267,0.0229,-0.068,0.045,-0.0492,0.0391,0.149,0.257,0.14,-0.0705,-0.127,-0.0663,-0.137,0.195,-0.174,-0.117,-0.096,-0.0688,0.00545,0.206,0.129,-0.0345,0.0148,0.203,0.159,-0.108,-0.187,-0.012,0.0166,0.286,0.0498,-0.0344,-0.0609,-0.0681,0.161,0.0377,-0.0867,-0.0816,-0.0582,-0.279,0.14,-0.0828,-0.15,0.306,0.257,0.0551,-0.0903,0.132,0.067,-0.0552,0.0667,0.000834,-0.00707,0.0918,0.0752,-0.0389,-0.0261,0.015,0.0153,0.0403,-0.0581,0.0152,0.026,0.00102,0.219,0.243,0.0963,-0.128,0.337,0.463,0.0974,-0.0105,0.0947,0.232,0.0481,-0.0106,-0.0373,-0.0704,-0.0299,0.179,0.127,-0.126,-0.0538,-0.00275,0.178,-0.0905,-0.0107,-0.106,0.0394,0.11,0.0799,-0.0968,-0.0293,0.399,0.144,-0.112,0.161,0.124,0.213,-0.0416,-0.116,-0.0459,-0.0702,0.205,0.0906,-0.0743,-0.00221,0.056,-0.0454,0.0557,-0.0372,-0.113,-0.119,-0.0125,0.0975,0.0149,0.0482,-0.2,0.302,0.134,0.112,-0.0473,0.0498,0.0238,0.014,0.0893,-0.0291,0.00835,-0.0498,-0.187,-0.000668,-0.0666,-0.0307,-0.0604,-0.207,-0.13,0.0496,-0.0924,0.005,-0.34,-0.0992,-0.0639,0.128,0.197,0.112,0.109,-0.114,-0.181,-0.207,0.215,-0.0383,0.0578,0.0995,0.164,0.00533,0.0749,0.0736,0.102,-0.0306,-0.0571,-0.0277,-0.0931,-0.137,-0.106,0.196,0.0871,-0.0164,0.0536,0.543,0.373,0.0152,-0.0356,-0.135,-0.087,0.251,0.0809,0.0293,-0.151,-0.107,0.0106,0.0289,-0.00345,0.0473,-0.0379,-0.228,0.0256,-0.124,-0.0559,0.0119,-0.17,-0.194,-0.0674,-0.0175,0.241,0.184,0.161,-0.103,-0.412,-0.562,0.256,0.0381,0.0767,0.0636,-0.0371,0.157,0.123,0.12,-0.128,-0.238,0.0236,0.0279,-0.0591,-0.0338,-0.379,0.121,-0.095,0.0386,0.0363,-0.164,-0.253,-0.0458,0.0276,0.153,0.219,0.103,-0.0567,0.00153,-0.0234,-0.0673,0.106,0.117,-0.0436,-0.0342,-0.143,0.0817,0.153,0.0327,-0.0392,-0.128,0.433,0.0499,-0.00307,0.0801,-0.203,-0.00507,-0.00271,0.156,0.244,0.169,-0.176,0.00223,0.0388,-0.0491,0.136,0.015,-0.124,0.0553,0.108,-0.0795,-0.116,0.107,0.00501,0.0961,0.0633,0.0261,-0.0778,0.0596,-0.0705,-0.591,-0.333,0.0538,0.108,0.194,0.173,0.0315,-0.117,0.0453,0.0655,-0.0116,0.0729,-0.0427,-0.0883,0.0653,-0.014,0.161,0.154,0.081,-0.0531,-0.0271,0.197,0.111,0.0764,-0.0959,-0.0902,0.119,0.146,0.135,0.436,0.407,-0.234,-0.0349,0.00368,0.026,0.137,-0.106,-0.0442,0.0934,0.0417,0.0415,0.06,0.0134,-0.0485,-0.0298,0.0994,-0.0463,-0.0541,-0.0622,-0.128,-0.251,-0.0601,-0.0887,0.0416,0.135,0.197,-0.282,-0.198,-0.0419,-0.0066,-0.105,-0.161,-0.122,0.027,0.0219,0.0252,-0.00909,-0.0167,0.179,0.26,-0.00822,-0.0651,0.186,0.135,0.106,0.261,0.0862,-0.0757,0.0186,0.119,0.0923,0.0309,0.128,-0.0964,-0.168,0.129,-0.0463,-0.167,-0.156,-0.188,-0.0637,-0.118,0.0899,-0.0144,-0.167,-0.283,0.39,-0.0212,0.234,0.0368,-0.179,-0.0334,0.0537,0.166,0.311,0.281,-0.295,-0.0357,-0.0576,-0.0324,-0.0323,-0.232,-0.328,-0.137,-0.0945,-0.0271,-0.154,-0.109,0.163,-0.0583,-0.0151,0.033,0.0145,0.0322,0.365,0.173,0.00699,0.0629,0.168,0.309,0.134,-0.175,-0.0181,0.0294,0.0398,0.152,-0.252,-0.14,0.0031,-0.0266,-0.244,-0.00339,0.123,-0.0971,0.123,-0.0166,0.189,0.00737,0.345,0.0543,0.305,
0.101,0.0922,0.0928,0.132,-0.108,0.216,0.244,0.0356,-0.0657,0.226,0.0688,-0.00667,0.0734,-0.0364,-0.0497,-0.0325,-0.0966,-0.143,-0.162,-0.0149,0.164,-0.317,-0.251,-0.32,-0.122,-0.0975,0.00332,0.0311,-0.101,-0.0223,0.104,-0.0237,-0.0252,0.0707,0.125,0.203,0.143,0.195,0.138,-0.105,-0.0155,0.0512,-0.099,0.105,0.029,-0.0983,-0.0748,-0.151,-0.043,0.287,0.317,0.0445,0.0562,-0.0118,-0.0127,0.348,0.123,0.139,0.0485,0.186,0.253,0.126,0.143,0.0625,-0.143,-0.0242,-0.0117,-0.0462,-0.0788,-0.0245,0.124,-0.168,-0.152,-0.21,0.0149,0.0467,-0.0374,-0.0162,-0.0431,0.0457,0.22,0.0203,-0.14,0.226,0.265,0.151,-0.0157,0.0927,0.042,-0.0477,-0.0292,-0.233,-0.117,0.0512,-0.152,-0.146,-0.172,-0.255,-0.0305,-0.244,-0.0233,0.0685,0.124,0.0762,0.181,-0.0972,-0.106,0.1,0.065,0.22,0.0292,0.039,-0.0425,0.0815,-0.0892,-0.106,0.15,-0.0216,-0.104,0.0781,0.0326,0.0408,0.00751,-0.0278,-0.0641,0.0821,0.0307,0.145,-0.068,-0.104,-0.0084,-0.00628,0.14,0.0472,0.222,0.0627,-0.0846,-0.027,0.0929,0.0303,0.131,0.0216,-0.0131,-0.0833,-0.0935,0.145,0.0112,-0.141,-0.159,-0.324,0.0644,0.196,0.163,0.257,0.175,-0.112,-0.0395,0.0749,0.122,0.191,-0.0253,-0.0753,-0.00685,0.0509,0.0234,0.0209,0.135,-0.0715,0.0722,-0.0741,-0.0574,0.0521,0.0538,-0.0257,0.145,0.143,0.0875,0.266,0.236,0.0637,-0.152,0.111,0.167,0.148,0.244,0.0308,-0.034,0.0518,0.0175,-0.0399,0.138,0.0528,0.0352,-0.0653,-0.24,0.191,0.0937,0.0813,-0.0956,-0.0916,0.0408,-0.0176,-0.0634,-0.265,-0.336,-0.24,-0.0147,0.0262,0.127,-0.0605,-0.0361,-0.0373,0.002,0.00913,-0.0268,0.103,0.102,0.0223,0.16,-0.149,0.639,0.299,0.151,-0.0208,-0.0554,0.0658,-0.0699,-0.0983,0.155,0.316,0.0365,0.274,0.0731,-0.0213,-0.338,-0.0474,0.0653,0.12,0.0462,-0.0523,-0.134,0.0541,0.129,0.068,0.0985,0.0424,-0.155,-0.0637,0.117,-0.125,-0.369,-0.281,-0.155,-0.0501,0.0471,-0.0665,0.0637,0.0825,-0.0631,-0.169,-0.22,-0.0549,-0.0582,-0.0141,0.0263,0.0658,0.0757,0.0592,0.0361,-0.117,0.255,-0.00827,0.08,0.00423,-0.249,-0.0961,-0.16,-0.0735,0.0884,0.0771,0.0105,0.108,0.0668,-0.153,-0.354,-0.195,-0.0912,-0.0322,-0.0255,0.0603,-0.0224,-0.0157,-0.179,-0.0141,0.215,0.0862,-0.0809,-0.121,-0.179,-0.0788,-0.0748,-0.0342,0.062,-0.192,0.0396,-0.0687,-0.0305,0.0843,0.0849,0.139,-0.0895,0.0346,-0.0686,0.0438,0.11,-0.0759,0.0268,0.00892,0.107,0.0675,0.373,0.105,0.304,0.359,0.112,0.111,-0.0963,-0.121,-0.062,-0.0459,0.117,0.033,0.0615,0.103,-0.0508,0.118,0.116,0.00221,0.0244,0.236,-0.041,-0.0289,0.00794,0.015,-0.184,-0.21,-0.285,-0.319,-0.431,-0.114,-0.0963,-0.0939,-0.194,-0.145,-0.0204,-0.0994,-0.219,0.0407,0.266,0.11,0.0089,-0.00651,0.0128,-0.025,0.215,0.0242,0.0612,0.0776,-0.115,-0.104,0.0172,0.00721,0.0342,0.00468,-0.0924,-0.0858,-0.106,-0.194,-0.216,-0.0889,-0.194,-0.286,0.0387,0.147,0.0451,-0.0526,-0.171,-0.104,0.00927,0.158,-0.132,0.00759,0.0327,-0.0298,0.0531,-0.000477,0.031,0.122,0.353,-0.0938,-0.246,-0.174,0.00829,-0.0806,0.0318,-0.122,-0.0306,-0.123,0.142,0.0082,-0.202,0.0159,-0.0544,0.00274,0.0472,-0.00121,0.0952,0.289,0.124,0.0144,0.385,0.301,0.0977,0.116,-0.0762,-0.0348,0.0621,0.029,0.0543,0.162,0.0358,0.0315,0.0862,-0.0171,-0.0974,0.0112,0.0158,0.0568,-0.0955,-0.12,-0.269,-0.0411,0.0548,0.0101,-0.00436,0.0729,-0.141,0.0301,0.0624,-0.296,-0.386,-0.142,-0.0409,0.0575,-0.0787,-0.216,-0.167,-0.21,-0.0169,0.0394,-0.347,0.00468,-0.0624,0.042,0.0154,-0.125,0.0373,0.175,0.0226,0.056,0.134,0.0223,0.154,0.253,-0.312,-0.117,-0.00532,-0.0988,0.178,0.433,-0.0914,-0.0334,0.146,-0.197,-0.00562,0.0267,-0.071,0.203,-0.0941,-0.0119,-0.113,0.0725,0.0297,0.0827,-0.0534,0.105,0.116,0.124,0.0651,0.333,
0.24,0.147,0.161,0.124,-0.0523,0.062,0.091,-0.107,-0.00772,-0.0212,0.154,0.0422,-0.0355,-0.0227,-0.0597,-0.085,-0.0359,-0.0504,-0.0865,-0.0109,0.168,0.122,0.095,0.00802,0.396,0.223,0.0929,0.167,0.0908,-0.0133,0.139,-0.0482,0.129,-0.0206,-0.0714,0.155,0.00268,-0.0607,-0.00684,-0.081,-0.115,-0.0471,0.0237,0.027,0.167,-0.0136,-0.105,-0.237,-0.23,0.533,0.529,0.208,0.326,0.217,-0.00292,0.196,-0.0332,0.0296,-0.138,-0.195,-0.0049,-0.0654,-0.211,0.0493,-0.0887,-0.0131,-0.0126,-0.12,-0.0869,0.169,-0.038,-0.141,-0.0524,-0.0575,0.322,0.14,0.191,0.0919,0.0535,-0.0781,0.0423,-0.0672,-0.112,-0.0961,-0.204,0.122,-0.228,-0.139,0.0199,0.0482,-0.151,-0.0963,-0.143,0.00124,0.0608,-0.0851,-0.08,-0.119,-0.116,-0.0907,0.0666,0.176,0.182,-0.00179,-0.0776,-0.0962,-0.112,0.117,0.0502,0.105,-0.047,-0.0403,0.082,0.0899,0.0331,-0.0725,0.154,0.0777,0.183,0.146,-0.147,0.0573,-0.0206,0.0351,0.0709,-0.0183,0.0628,-0.0124,-0.211,-0.287,-0.00581,0.0697,-0.00478,0.082,0.0974,-0.0405,-0.0579,-0.0622,0.0345,0.166,0.0559,-0.164,0.0664,0.0183,0.111,0.0659,0.104,0.00959,0.00956,-0.133,0.0944,0.0641,0.121,-0.0427,-0.127,-0.0559,0.0794,0.221,0.122,0.146,-0.0496,0.0389,0.013,0.0262,0.139,-0.0207,0.0436,0.129,0.164,0.0579,-0.0522,0.19,0.157,0.0264,0.075,0.105,0.124,0.024,-0.255,-0.258,-0.0923,0.102,0.0299,0.0448,0.0435,0.0285,-0.00579,-0.0172,0.0849,0.095,0.115,0.102,0.136,0.0468,-0.0414,0.222,0.227,0.0936,-0.0578,0.00707,-0.0673,-0.00819,0.131,0.22,0.171,0.0359,-0.0425,0.0494,-0.0392,0.0183,-0.048,0.182,0.119,-0.0229,-0.0234,0.00618,0.0782,0.0321,0.00829,-0.144,0.138,-0.0419,-0.106,-0.263,-0.0198,-0.1,-0.14,0.0787,0.031,-0.0677,0.161,-0.0731,-0.0833,-0.0993,0.147,0.101,0.137,0.0755,0.0253,-0.138,-0.11,0.0886,0.114,0.0744,-0.0964,0.144,0.121,0.206,0.23,-0.0729,0.0409,-0.0915,0.0576,0.341,0.179,-0.0634,0.0655,0.0729,0.151,0.0528,-0.0119,0.0858,0.0878,0.0352,0.00839,-0.024,0.0926,0.0255,-0.00876,-0.141,0.253,0.181,-0.0485,-0.00875,0.0407,-0.0956,0.0793,0.255,0.3,0.179,0.193,-0.0419,0.085,0.0211,0.226,0.165,0.204,0.0321,-0.107,-0.201,0.0452,-0.0105,0.00281,-0.0789,-0.163,0.104,-0.0239,-0.0605,-0.15,0.244,0.125,0.176,-0.102,-0.0512,-0.259,-0.0649,0.0316,0.0828,0.0465,-0.0378,-0.0536,-0.00168,0.162,0.0361,0.0103,-0.0908,-0.0569,0.0354,0.255,0.0391,0.0696,0.257,0.256,0.311,0.311,0.215,0.00777,-0.06,-0.0789,-0.163,0.239,0.087,-0.0309,0.0486,0.0163,0.0108,0.0601,0.134,-0.0703,0.00635,-0.0783,-0.0547,-0.0592,-0.114,-0.15,0.0368,0.0582,-0.11,-0.163,0.439,0.209,0.0789,-0.113,-0.199,-0.377,-0.0642,-0.023,-0.0164,-0.0912,-0.142,-0.164,-0.0374,0.0704,-0.00557,-0.115,-0.0334,-0.0146,0.105,0.0831,0.0786,0.0855,-0.0697,-0.035,0.279,0.217,0.123,-0.0683,-0.183,-0.0883,-0.23,0.0852,-0.131,0.0514,-0.129,0.0902,-0.134,-0.0561,-0.0713,-0.0378,-0.0215,-0.0585,0.028,-0.0882,0.00352,-0.0857,0.152,0.0317,0.146,0.0957,-0.299,-0.0559,0.0592,0.126,-0.00821,0.0787,-0.00662,-0.239,0.000543,-0.00468,0.194,-0.0566,-0.154,-0.107,-0.0594,0.0102,0.0902,-0.0661,-0.0994,0.0794,-0.0182,0.241,0.155,-0.187,-0.0913,-0.0631,0.15,-0.106,-0.14,0.0594,0.107,-0.115,0.098,0.151,0.125,0.0585,-0.11,0.0224,0.0364,-0.0324,0.111,-0.179,-0.0387,0.0445,0.102,-0.0889,0.115,-0.0606,-0.0454,0.103,-0.147,0.0203,0.198,0.0751,0.117,0.197,-0.203,-0.109,-0.0253,0.22,0.156,0.012,-0.17,0.0355,-0.048,0.234,-0.132,0.0058,-0.133,0.0384,0.00283,0.142,-0.0636,-0.00886,0.0191,0.0631,0.108,0.12,0.127,0.204,0.0531,-0.189,0.0711,0.174,0.183,0.0919,-0.231,-0.12,0.14,0.177,0.151,0.037,-0.111,-0.123,0.112,0.071,-0.0387,-0.0715,0.0793,-0.0238};
double a3[]={-0.000849,
-0.133,-0.0354,-0.1,-0.0781,0.129,0.0811,-0.145,-0.0232,0.208,0.137,-0.185,-0.068,0.0255,-0.135,0.0627,0.0625,0.231,-0.0448,0.175,-0.135,0.159,-0.157,-0.091,-0.0563,0.214,0.0777,-0.129,-0.0253,-0.0984,0.196,-0.01,-0.0208,-0.102,0.253,0.209,0.0405,-0.127,0.128,-0.0408,0.241,0.14,0.227,-0.0269,0.193,0.153,0.16,0.0875,0.359,0.185,0.117,-0.018,0.0846,-0.022,0.177,0.0127,0.115,0.303,0.0891,0.0501,0.0397,0.122,-0.0247,-0.206,0.0349,-0.0544,0.0373,-0.218,0.107,-0.0328,-0.121,-0.141,-0.277,-0.14,-0.197,-0.117,0.0777,-0.0459,-0.167,0.0192,-0.101,0.0945,-0.0373,-0.105,-0.435,-0.219,0.312,-0.0479,-0.0758,0.0814,-0.00986,0.159,-0.0743,0.0103,0.0492,0.122,0.588,0.17,-0.00313,-0.0248,0.0607,-0.0597,-0.0414,-0.146,0.0541,0.0378,-0.215,-0.154,0.184,0.017,-0.183,-0.149,0.104,-0.0444,-0.156,0.0838,0.15,-0.105,-0.16,-0.058,-0.427,-0.0785,0.126,-0.108,0.062,-0.0173,-0.0435,0.0624,0.184,0.00329,0.104,0.0733,-0.257,0.0906,0.109,-0.0967,0.119,-0.00881,0.0761,-0.0123,0.159,-0.00685,0.0111,-0.0579,0.189,-0.00174,-0.367,-0.0073,0.158,-0.0191,-0.0412,-0.079,-0.0163,-0.016,0.238,-0.0442,-0.0665,-0.136,0.0287,0.118,0.0453,-0.0158,0.13,-0.00589,0.0459,0.182,0.341,0.178,0.0943,0.162,-0.441,0.19,0.0387,0.0607,0.193,0.0125,0.0853,-0.0272,0.216,-0.0599,-0.477,-0.0892,-0.0858,-0.199,-0.0582,0.0722,-0.0963,-0.0777,0.107,0.14,0.0738,0.176,0.000837,0.0376,0.0392,0.00559,0.096,0.189,-0.126,0.0391,0.232,-0.0652,-0.108,0.098,0.0257,0.0883,-0.215,-0.0897,0.0743,-0.107,-0.0399,0.0468,0.0318,0.0425,-0.201,-0.209,-0.513,0.0413,0.235,-0.178,0.111,-0.0467,-0.00562,0.0385,-0.0348,0.103,0.0944,0.189,0.0499,0.0154,0.0891,0.0379,0.182,0.069,0.0886,-0.00475,-0.0487,0.254,0.0483,-0.281,0.101,-0.0873,-0.0152,-0.0857,0.186,-0.0424,0.0184,0.0764,-0.41,-0.137,0.373,-0.123,-0.0694,0.0206,0.339,-0.0956,0.0149,-0.0522,-0.191,-0.0531,0.0559,-0.158,0.0902,-0.0989,0.0361,-0.0195,0.0285,0.0301,-0.098,0.157,0.0522,0.207,0.136,0.219,-0.139,0.0966,0.0788,0.254,0.0189,-0.0341,0.189,0.0601,0.318,-0.163,0.211,0.0243,0.112,-0.174,0.342,0.0125,0.231,0.11,0.235,0.0176,0.0172,0.0251,0.211,-0.0225,0.0813,-0.038,0.125,-0.0712,0.00384,-0.112,-0.112,0.0882,-0.1,0.0237,-0.018,-0.0608,0.0158,-0.00762,-0.14,-0.0189,-0.0914,-0.182,0.0509,-0.0569,0.134,-0.0928,0.0546,-0.00977,0.245,-0.0992,-0.248,0.059,-0.0266,-0.26,0.108,0.175,0.272,-0.0863,0.0769,0.107,0.211,0.00323,0.273,-0.00548,0.0935,0.149,-0.0164,-0.134,-0.246,-0.0386,0.138,-0.0267,-0.095,0.0326,-0.104,0.2,0.181,0.152,0.119,-0.0385,0.138,-0.132,0.289,0.203,0.0405,0.000409,0.0718,0.0267,-0.284,-0.166,0.0325,-0.104,-0.126,-0.0824,-0.0654,0.24,0.0596,-0.0909,0.157,0.116,-0.0488,0.0577,-0.00905,0.0198,-0.0758,-0.0406,-0.0686,0.0934,0.259,0.0772,-0.107,-0.0425,-0.389,0.0653,0.127,0.164,0.0589,0.00605,0.0537,0.0489,0.122,-0.243,-0.12,-0.132,-0.0553,0.153,-0.168,-0.000855,-0.0485,-0.00858,-0.0353,0.143,-0.0169,0.38,0.0424,-0.00178,-0.0667,-0.0247,-0.167,-0.0701,0.142,0.075,-0.0445,-0.11,-0.124,-0.057,0.0271,0.121,-0.131,-0.0413,-0.338,0.0047,0.0627,-0.0891,-0.11,0.244,-0.123,-0.406,0.0358,-0.00533,0.114,0.15,-0.334,-0.0628,-0.0937,0.0689,-0.045,-0.0164,-0.0333,-0.0876,0.00486,-0.0134,-0.0384,0.043,-0.0461,0.0115,-0.0671,0.0766,-0.00574,0.158,-0.0992,-0.224,-0.205,-0.093,-0.293,-0.0403,0.00839,-0.141,0.0167,-0.0231,-0.176,0.0908,0.129,0.284,0.23,0.153,0.226,0.0607,0.194,0.281,0.00739,-0.0737,0.117,0.167,-0.157,0.0774,0.00258,0.0326,-0.0435,0.0341,0.13,0.0132,0.0869,0.0807,0.264,0.0187,0.163,-0.00807,-0.0926,0.0562,0.235,0.103,-0.0837,0.00591,-0.153,0.0504,-0.0681,
-0.21,-0.0776,0.0563,-0.183,-0.00249,0.198,-0.0279,0.0336,-0.0691,-0.0238,-0.0913,-0.148,0.309,-0.504,-0.183,-0.157,0.029,0.0973,0.0689,-0.0469,-0.145,-0.155,-0.107,-0.0317,0.00534,-0.275,-0.254,-0.154,-0.0573,-0.018,-0.0445,0.0339,0.0552,0.0525,-0.0351,-0.125,-0.082,-0.0947,0.0125,0.123,-0.13,-0.0207,0.161,0.14,0.0843,-0.0491,0.249,0.00684,-0.00495,-0.0945,-0.0855,0.174,0.048,0.0716,0.0851,0.063,0.103,0.0972,-0.0967,0.0443,-0.278,0.106,0.0221,0.0581,-0.111,-0.162,-0.0562,-0.024,-0.0228,0.0493,0.0587,-0.15,0.0237,-0.0425,0.0294,-0.14,-0.0718,-0.0149,-0.0368,0.0313,0.0295,-0.0609,0.0762,0.015,0.0474,0.0243,0.0217,-0.0634,-0.127,-0.072,-0.0483,0.0761,-0.0646,-0.0686,-0.0109,-0.0963,-0.0308,-0.0792,-0.0045,0.152,0.0981,-0.0376,0.065,0.111,0.105,-0.106,0.0434,0.0814,0.0481,-0.0345,-0.255,0.0196,0.0335,-0.0928,0.0393,0.0154,-0.00629,0.0574,-0.104,-0.246,0.0168,-0.134,-0.103,0.0771,0.0263,0.0791,-0.0876,-0.106,-0.0312,0.0164,0.0999,-0.0893,-0.125,-0.0977,0.047,-0.0806,-0.0341,-0.126,-0.222,-0.00397,-0.148,-0.0686,-0.0519,-0.0713,-0.0395,-0.133,-0.0312,-0.0906,-0.15,0.0795,-0.0383,0.0139,-0.112,0.0474,0.0456,-0.119,0.0347,-0.129,0.0799,0.217,-0.0506,-0.0876,-0.0245,0.00819,0.00595,-0.0446,-0.0175,0.0633,0.0355,-0.0135,0.0165,-0.0464,-0.0791,-0.0701,0.00108,0.0882,-0.0413,0.0836,0.0101,-0.101,-0.00984,0.0861,-0.149,-0.161,0.0674,-0.00291,-0.0837,0.0549,0.153,-0.0244,0.0683,0.0385,-0.112,-0.0279,-0.136,0.104,-0.0279,-0.0595,-0.167,0.132,-0.0915,0.0773,0.0922,0.0127,-0.161,-0.0783,0.0694,-0.0582,0.0855,0.213,-0.00731,-0.025,0.198,0.0663,-0.0418,-0.182,-0.17,-0.191,0.0404,0.29,-0.11,-0.137,-0.0308,-0.229,-0.0231,-0.116,-0.0884,-0.0077,-0.162,-0.00974,-0.00837,-0.157,-0.129,0.0885,-0.0998,-0.0439,0.138,-0.156,-0.00468,-0.0779,-0.0117,0.105,0.165,0.303,0.259,-0.0435,0.0681,0.00403,0.0152,0.0718,0.0589,-0.12,-0.0681,0.193,-0.0764,-0.21,-0.287,-0.264,0.0362,-0.0523,-0.047,-0.0771,0.103,-0.143,0.0886,-0.0121,0.108,-0.321,-0.163,-0.164,-0.047,-0.273,-0.0464,-0.0148,0.0342,-0.176,-0.0212,0.0702,-0.0636,0.161,-0.0745,-0.101,0.116,0.0361,-0.181,0.0661,0.008,0.0253,0.0678,0.0491,0.0483,0.107,-0.0381,0.0333,-0.0646,0.0794,-0.019,0.0487,-0.0825,0.088,0.0256,-0.0924,-0.0177,0.0728,-0.187,-0.295,-0.117,-0.11,0.0627,-0.0507,0.0218,0.0595,-0.0649,-0.043,0.0135,-0.171,-0.115,-0.0712,0.187,-0.131,-0.065,-0.0407,0.0461,0.0313,0.0452,-0.119,0.0284,-0.137,0.0668,0.135,0.0416,-0.0224,-0.0445,0.0247,0.0683,-0.00222,0.0853,-0.0577,-0.00959,0.0761,0.185,0.0517,-0.11,-0.0813,0.0787,0.0234,-0.129,0.0263,-0.164,-0.0503,-0.184,-0.000456,-0.109,-0.162,-0.0365,0.0575,-0.00301,-0.00695,0.0952,0.0855,0.0717,-0.0492,-0.136,-0.0633,0.0457,0.224,-0.0223,0.0881,0.0198,0.0056,0.093,0.035,0.0737,0.0402,0.197,0.0184,0.0811,0.0835,-0.0222,0.112,0.0174,0.00338,-0.0188,0.0997,0.277,0.0441,-0.231,-0.0793,-0.0155,-0.0173,0.127,-0.0187,-0.0899,-0.0699,0.0233,-0.125,0.16,-0.0558,0.121,0.189,0.179,0.000874,0.0395,-0.0804,-0.0815,0.0711,-0.0557,0.0969,-0.0488,0.026,0.0457,-0.121,-0.123,-0.173,0.0185,0.113,-0.0842,0.0322,0.037,-0.0697,-0.0369,0.142,-0.0352,-0.0142,-0.161,0.183,-0.0913,0.00318,-0.0641,-0.0407,-0.0592,0.119,0.00737,0.0402,0.00149,0.0322,-0.0136,-0.0254,-0.149,0.0398,0.16,-0.139,0.0627,0.129,0.0824,0.0137,0.0779,-0.00618,-0.227,-0.0309,-0.101,0.00492,-0.0628,-0.14,-0.00695,-0.0249,0.00254,-0.00556,-0.131,0.146,0.175,-0.00151,-0.0581,0.172,0.256,0.329,0.0516,0.165,0.0669,0.171,0.134,-0.145,0.0714,-0.0434,0.213,0.0585,0.0559,0.185,-0.131,0.025,0.0384,-0.0684,0.285,-0.091,0.0775,-0.144,0.0058,-0.0474,-0.00488,-0.0651,-0.13,0.0101,0.178,-0.0362,-0.23,0.111,0.0701,0.0283,0.137,0.0476,
0.231,0.149,-0.107,-0.138,0.0769,-0.142,-0.301,0.212,-0.106,0.113,-0.414,0.245,0.119,0.135,-0.124,0.33,-0.00477,0.0426,-0.141,0.0434,0.268,0.279,-0.241,-0.0589,-0.000958,-0.355,-0.0732,0.0987,0.233,0.029,0.00457,0.0898,0.162,0.111,0.00137,-0.0629,-0.186,0.00959,0.161,-0.0767,0.0211,0.0674,-0.24,-0.172,0.175,0.0952,-0.1,-0.113,0.0505,0.203,0.0128,0.000286,-0.00989,0.0452,0.0762,0.201,-0.0543,-0.00249,0.0956,0.0653,0.0822,-0.294,-0.00146,0.315,0.0504,-0.161,-0.0153,0.346,-0.057,-0.02,-0.0867,-0.0965,-0.225,-0.0336,-0.0947,0.205,-0.054,-0.251,-0.0789,0.0127,0.348,-0.0239,-0.129,0.0524,-0.0917,-0.0503,0.0935,0.0152,0.0308,0.212,-0.218,0.0519,-0.188,0.211,0.0765,-0.0846,-0.072,-0.115,-0.13,0.0779,-0.0401,0.131,-0.228,-0.169,-0.111,-0.247,0.0606,-0.062,0.00744,0.0327,0.0212,0.0283,-0.185,-0.44,0.301,-0.0439,-0.158,-0.0587,0.0441,-0.071,-0.153,-0.152,-0.07,-0.0463,-0.117,-0.0561,-0.371,-0.0992,-0.114,-0.239,0.124,0.0134,-0.164,-0.072,-0.0592,-0.0558,0.032,-0.114,0.0495,-0.0791,0.0928,0.0187,-0.341,0.0136,-0.193,-0.00376,0.0406,-0.229,0.0659,-0.134,-0.258,0.0472,0.00511,0.121,0.198,-0.0462,0.00501,0.174,-0.0753,0.104,-0.0969,0.0383,-0.0558,-0.0188,0.091,0.128,-0.0652,-0.0639,0.127,-0.0794,0.127,0.131,0.105,0.0363,-0.0545,-0.119,0.0587,-0.0106,-0.125,-0.0745,0.0984,0.0531,-0.0834,-0.042,0.192,-0.108,-0.142,0.301,0.0508,0.347,0.0674,-0.0843,0.0638,-0.0378,-0.059,0.102,0.331,-0.0712,-0.265,0.193,0.106,-0.229,-0.0732,-0.124,-0.0603,0.0275,-0.0999,-0.267,-0.108,-0.267,-0.223,-0.394,0.0492,0.327,-0.0192,-0.000833,-0.1,0.147,-0.0289,0.114,-0.0091,0.121,0.173,-0.302,0.0489,0.272,0.00347,0.0777,-0.0656,-0.0759,0.0538,0.088,-0.0209,-0.194,-0.0352,-0.326,-0.273,-0.218,0.158,-0.12,-0.199,-0.142,0.248,0.0436,0.0666,-0.305,0.269,-0.74,-0.0922,-0.501,-0.0419,-0.434,0.0958,0.118,0.0619,-0.544,-0.252,-0.0025,-0.062,-0.0498,-0.104,-0.223,0.135,-0.141,-0.277,-0.0467,0.0685,0.0503,-0.039,-0.195,0.0798,0.268,-0.112,-0.219,-0.00413,0.0576,0.0324,0.00618,-0.037,-0.0443,-0.0547,-0.151,0.0708,0.701,-0.371,-0.477,0.0128,-0.0582,-0.138,0.0309,-0.159,0.145,-0.217,-0.111,-0.0636,-0.501,-0.228,0.258,0.126,-0.133,0.0476,0.121,0.0801,-0.151,0.229,0.0444,0.132,-0.325,-0.249,0.0449,0.025,-0.0286,0.036,-0.0907,0.0811,-0.0703,-0.0984,0.245,0.107,0.159,-0.202,-0.271,0.0259,0.105,0.0713,-0.0162,-0.21,0.0898,0.00367,-0.174,0.0165,-0.31,-0.341,-0.483,-0.0592,-0.12,0.0293,0.0793,0.0385,-0.204,0.0395,0.0296,0.308,-0.051,0.448,0.754,-0.0726,-0.106,-0.149,-0.148,-0.0419,0.0101,0.111,-0.192,-0.158,-0.172,0.165,-0.113,0.0874,-0.0667,-0.000414,0.00441,0.0747,-0.105,0.0307,-0.171,-0.15,-0.359,-0.0313,0.399,0.0477,0.0168,-0.138,-0.0327,0.0329,-0.015,0.177,0.0148,0.0434,0.466,-0.00246,-0.037,0.125,0.0615,-0.12,0.00173,-0.0232,0.0536,0.133,-0.127,-0.0523,-0.00266,-0.0061,-0.309,0.103,0.0688,0.205,0.041,0.0342,-0.0584,0.165,0.307,0.125,-0.0747,-0.208,0.0386,-0.125,0.0794,-0.0581,0.174,-0.104,-0.0245,-0.0754,0.275,0.0871,0.517,-0.103,-0.165,0.139,0.0729,0.123,-0.0489,0.0805,0.17,-0.0645,0.00676,-0.115,-0.407,-0.21,-0.132,0.0542,-0.049,-0.0949,-0.022,0.0983,-0.0953,-0.00526,0.0431,0.269,0.251,-0.0462,0.0449,0.104,-0.141,0.0499,0.326,-0.0258,-0.219,0.264,0.146,0.162,0.0217,-0.019,-0.0123,-0.134,0.0857,0.143,0.141,0.0698,0.00718,0.0219,-0.138,0.238,-0.0337,0.215,0.119,0.0779,0.0286,-0.0398,0.0184,-0.0688,-0.0404,0.00157,0.133,0.0111,0.0473,0.0625,0.0431,-0.0976,0.236,0.25,0.0715,0.18,0.165,0.0367,0.396,0.389,0.336,0.128,0.0459,0.167,0.0582,0.0476,-0.0688,0.00854,0.0184,0.0212,0.000673,0.107,-0.0276,
0.113,-0.00295,-0.00734,0.06,-0.152,0.0593,-0.121,-0.128,0.267,-0.0717,0.0632,-0.238,-0.274,-0.315,-0.0797,-0.0531,-0.101,-0.139,0.0285,-0.017,0.182,-0.0257,-0.127,-0.429,-0.251,0.105,-0.094,0.0314,0.0828,-0.116,0.00607,0.103,0.0157,0.114,0.256,0.578,0.0756,0.116,0.0493,0.0415,-0.0442,0.121,-0.176,-0.00431,0.0745,-0.133,-0.361,-0.115,0.00922,-0.184,-0.142,-0.0161,-0.0192,-0.021,0.0176,0.263,-0.0349,-0.187,-0.126,-0.237,0.118,0.174,-0.0138,-0.0605,-0.104,0.0446,-0.0599,0.0841,0.127,0.0656,-0.058,-0.0813,-0.0349,0.199,0.0529,0.137,0.0478,-0.25,0.116,0.238,-0.0842,0.219,0.125,0.000745,0.0761,-0.278,-0.162,0.107,0.00235,-0.0684,-0.25,0.0408,0.0922,-0.084,-0.0572,-0.0393,-0.00266,0.158,0.158,0.123,-0.0481,0.0352,0.0854,0.14,-0.136,0.0205,-0.000677,0.132,0.109,-0.36,0.0759,0.147,0.0249,-0.128,0.134,0.159,-0.0633,0.255,0.147,-0.251,-0.0393,0.0554,-0.0495,-0.143,0.02,0.148,0.0057,0.0952,0.0585,-0.0203,-0.0904,0.0413,0.0389,0.0773,-0.0426,-0.157,0.258,-0.165,-0.109,0.266,0.00415,-0.161,0.186,-0.0464,0.138,-0.0147,0.125,0.128,-0.0739,-0.0856,0.0204,0.104,0.0145,-0.192,-0.0168,-0.224,0.062,0.246,-0.222,-0.0208,0.0285,-0.0266,0.101,0.109,-0.175,0.0756,-0.373,0.0539,-0.00562,0.00294,0.0489,0.0684,-0.0137,0.0108,-0.0419,0.206,0.214,0.256,-0.112,0.265,-0.384,-0.302,-0.00964,-0.168,-0.0428,0.0365,0.0419,-0.18,0.0819,-0.0212,-0.035,-0.0459,-0.254,0.017,-0.0712,0.0724,0.137,-0.0848,-0.0341,0.0965,0.205,0.0231,0.0556,0.229,0.257,0.0375,0.0886,-0.00681,-0.0823,0.261,8.3e-005,-0.0928,-0.179,0.259,0.0802,-0.0485,-0.201,-0.0654,-0.241,-0.0806,-0.0978,0.112,0.0788,0.0444,0.186,0.0412,0.0138,-0.192,-0.0149,0.0596,0.307,-0.2,0.0256,-0.107,0.149,-0.0647,0.00876,-0.0124,0.0591,0.142,0.0784,-0.016,-0.18,-0.00306,0.0494,0.211,-0.0746,0.037,0.023,0.155,0.00518,0.0321,-0.0892,-0.0711,-0.226,0.0555,-0.263,-0.0211,-0.179,0.0882,0.093,0.154,-0.0574,-0.144,-0.256,-0.234,-0.0933,0.117,0.159,0.106,-0.0155,0.135,-0.0824,0.038,0.0208,0.00944,-0.0129,0.0348,0.259,-0.128,0.0017,-0.264,-0.141,0.0976,-0.0407,0.0118,-0.0552,-0.387,0.176,0.104,-0.164,0.0325,-0.187,-0.127,-0.0657,0.218,0.0429,0.197,0.0805,0.251,0.0101,-0.0581,-0.153,-0.0789,-0.0122,-0.187,-0.117,-0.0514,0.0225,0.199,-0.00854,0.00311,0.0248,-0.126,0.0758,-0.102,-0.0371,0.00365,0.121,0.104,0.112,0.0528,0.128,-0.177,0.133,0.0581,0.138,0.266,0.196,0.062,0.219,0.0647,0.0873,-0.0649,0.233,0.182,0.178,0.142,0.141,0.0629,0.221,0.079,0.108,-0.0159,0.0525,-0.0585,-0.134,-0.0182,-0.0301,0.11,0.066,0.0716,0.0352,0.192,0.122,-0.125,0.0938,-0.038,0.132,0.229,0.0325,-0.124,0.00693,-0.233,-0.115,0.134,-0.0567,-0.0629,-0.0123,0.0599,0.0347,-0.183,0.148,-0.0549,0.0253,-0.0224,0.0157,-0.00077,0.0248,0.084,-0.031,-0.00134,0.123,-0.116,-0.135,-0.0709,0.0599,-0.1,-0.067,-0.231,0.0583,-0.0124,-0.0527,0.0792,0.0328,-0.0607,0.00794,-0.00203,-0.163,0.0433,0.108,0.137,0.173,0.159,-0.254,0.0454,0.0528,0.1,-0.107,-0.0869,0.145,0.262,-0.113,0.206,-0.0487,0.102,-0.099,-0.178,0.0497,0.0353,-0.0709,0.0719,0.0122,-0.119,0.0658,0.0436,-0.0559,0.208,0.0242,-0.0597,-0.0354,-0.0228,0.00477,-0.101,-0.0383,-0.15,0.0814,-0.0826,0.0184,0.0354,-0.0669,-0.0202,0.0202,0.103,-0.164,-0.156,0.0311,-0.0861,-0.053,0.097,0.0269,-0.0196,-0.132,0.157,0.107,0.00757,0.0447,-0.0593,-0.12,-0.117,-0.0712,-0.00393,-0.0201,-0.0993,-0.131,0.107,-0.0353,0.194,0.0282,0.1,-0.0447,-0.0705,-0.0889,-0.0305,-0.152,0.103,0.113,-0.0679,0.0193,0.0758,0.0198,-0.0831,-0.0569,0.00608,-0.107,0.0437,0.093,-0.0762,-0.222,0.152,-0.0517,-0.0406,0.086,0.101,0.0933,-0.0412,0.102,-0.0733,0.02,0.0848,
0.0959,-0.0241,0.0984,-0.0283,0.168,0.229,0.0216,0.048,-0.0556,-0.182,-0.0289,0.000647,0.0859,-0.021,-0.0722,0.1,0.0453,-0.0283,-0.0436,-0.0478,-0.0661,0.0701,-0.0193,-0.0243,-0.195,0.0686,0.027,0.105,0.0812,0.202,0.0508,-0.1,0.0115,-0.0134,0.0231,-0.0757,0.0805,0.132,-0.00993,0.0355,0.0104,0.0497,-0.1,-0.0725,0.0761,0.0295,0.103,0.0678,-0.243,-0.0293,0.0638,0.166,0.0425,0.187,-0.0286,-0.0507,-0.155,-0.0146,0.012,-0.06,0.158,-0.0702,-0.0753,-0.0403,-0.127,-0.169,0.0669,-0.0386,0.105,-0.0319,-0.0917,-0.133,-0.131,0.242,0.0616,-0.066,-0.218,-0.0258,0.00564,-0.0361,0.0421,-0.0101,0.0707,-0.0407,0.0292,0.134,0.121,-0.0661,-0.0484,-0.0484,-0.14,0.0298,0.07,0.00144,-0.0436,-0.0123,0.0113,0.0719,0.0312,0.15,0.0867,0.0822,0.0851,-0.017,0.0233,-0.0524,0.0214,0.0674,-0.123,0.23,0.128,0.103,-0.0191,0.0118,0.0357,0.0586,-0.0816,0.0213,-0.0358,0.0772,0.182,-0.0295,0.0398,-0.00155,-0.0863,0.0865,-0.00456,-0.0926,-0.0701,0.049,-0.0883,-0.0573,-0.0564,-0.0347,0.0695,-0.0207,0.0659,0.0856,-0.00281,-0.0809,0.042,0.0739,0.0448,0.0918,0.147,0.161,0.0398,0.00194,-0.0282,0.00015,-0.0445,0.078,-0.0999,-0.039,0.0987,0.0669,-0.00108,0.101,-0.00492,0.321,-0.173,-0.173,-0.0823,0.0359,-0.141,0.0364,-0.0894,-0.177,-0.117,-0.0815,-0.283,-0.00826,-0.165,-0.0276,-0.202,-0.0247,0.086,-0.175,0.00395,0.169,-0.00501,-0.00109,-0.107,0.292,0.203,-0.146,-0.0498,0.0676,0.05,0.0269,-0.0348,0.0902,-0.124,0.3,-0.0465,-0.0719,-0.246,-0.251,-0.0699,0.0341,-0.101,-0.114,0.249,0.247,-0.351,0.197,0.134,-0.0524,0.176,-0.0461,0.157,-0.133,-0.205,-0.234,-0.166,-0.29,0.0284,0.0933,0.147,0.0323,-0.092,-0.0282,-0.0246,0.0282,-0.153,0.239,0.0558,-0.141,-0.0924,0.0278,-0.046,-0.171,-0.0493,-0.0758,-0.11,0.011,-0.155,0.112,0.0281,0.0749,0.113,-0.109,-0.0909,-0.0194,-0.0683,-0.164,-0.13,-0.159,0.0601,-0.281,-0.0569,0.0465,-0.0045,-0.0649,-0.0252,-0.129,0.0175,0.00561,0.122,-0.116,0.091,0.0246,0.19,-0.114,0.198,0.139,-0.027,-0.15,0.257,0.349,-0.112,0.0445,-0.201,-0.0708,0.204,-0.0427,0.0254,0.305,-0.108,0.0408,0.0557,0.259,-0.0897,0.0973,0.0532,0.19,-0.136,-0.155,0.162,-0.0552,0.125,-0.0832,-0.0171,0.0673,-0.12,0.049,-0.104,-0.0347,0.0425,0.0756,0.124,0.16,0.19,0.137,-0.0321,0.0517,-0.0409,0.0829,-0.0791,0.248,-0.0197,-0.0694,0.302,0.298,-0.243,0.109,0.0113,0.0324,-0.0543,0.273,0.028,0.134,-0.115,0.0147,0.33,0.293,0.219,-0.0739,0.112,-0.0209,0.0286,-0.0623,-0.0304,0.0604,0.0181,-0.0429,0.127,0.165,-0.0733,0.111,0.0692,-0.0374,0.161,-0.0805,0.245,0.0369,0.119,0.213,0.0352,0.246,-0.000334,-0.0386,0.0809,-0.063,-0.0985,0.0267,-0.0193,0.0162,-0.0242,0.121,0.0227,-0.061,-0.081,-0.00992,-0.147,0.377,0.0206,0.0516,-0.414,0.18,-0.00427,-0.0782,-0.0115,0.00254,0.027,-0.0105,0.117,0.236,0.00418,0.00559,0.0636,-0.056,0.0988,-0.0198,0.0322,0.199,-0.12,-0.242,-0.204,-0.263,-0.0874,0.183,-0.283,-0.0924,-0.0245,0.0964,-0.36,0.0292,0.118,0.268,0.0218,0.129,-0.0169,-0.131,-0.0738,0.126,0.128,0.231,0.0625,0.00805,0.344,-0.193,0.05,0.172,-0.12,-0.149,0.252,0.0658,0.0383,-0.068,-0.128,-0.0251,0.133,0.0885,0.0867,0.054,0.181,-0.0808,0.111,0.0514,-0.0168,-0.244,-0.0256,0.0323,-0.2,0.136,0.146,0.182,-0.113,-0.266,0.00345,0.0455,0.0221,-0.0939,0.275,-0.013,0.0255,-0.0793,-0.158,0.0212,-0.11,-0.0237,0.064,0.0988,-0.0922,0.128,0.0138,-0.0817,0.0489,0.0904,-0.182,0.0702,0.153,0.0125,0.103,-0.289,-0.152,0.155,-0.0501,0.0908,0.103,0.0755,0.0248,0.133,-0.0924,0.158,0.109,-0.199,-0.0404,0.134,-0.227,-0.156,0.145,0.0473,-0.212,0.0269,-0.051,0.0113,0.0442,0.207,-0.0621,-0.0165,-0.11,-0.0758,0.0524,-0.00811,0.00416,-0.057,0.164,-0.0835,
0.148,-0.238,0.0305,0.0555,-0.0429,0.153,0.16,-0.0711,-0.0474,-0.111,-0.00831,0.0741,0.226,-0.0809,-0.0455,0.234,0.0919,-0.238,0.009,0.0664,0.189,0.309,0.2,-0.0365,0.157,-0.159,0.0951,0.194,-0.358,0.0196,-0.106,0.106,0.0905,0.101,0.159,-0.0778,-0.0211,0.107,0.0427,-0.11,-0.0587,-0.175,-0.276,-0.178,-0.0679,-0.199,-0.148,-0.103,0.0276,-0.286,0.0196,0.0394,-0.103,-0.183,0.344,-0.0583,-0.103,-0.164,0.103,-0.261,-0.0883,-0.154,-0.192,0.184,0.0291,0.109,-0.453,-0.138,-0.0449,-0.223,0.0267,0.184,-0.0552,-0.115,0.13,-0.0322,-0.0309,0.0908,0.0853,0.177,0.0519,0.0257,-0.0778,-0.0909,-0.07,-0.0607,-0.0945,-0.0129,0.0729,0.0968,0.0491,0.0816,-0.0624,0.00854,0.145,0.232,-0.0186,0.0653,-0.202,-0.251,-0.0805,0.127,-0.112,0.0619,0.169,0.119,-0.0412,0.188,0.0448,-0.135,-0.0771,0.0333,-0.00526,0.0218,0.0134,-0.0506,0.0514,-0.246,-0.0456,-0.009,0.00456,-0.041,0.122,0.0523,-0.013,-0.137,0.295,0.125,0.0598,0.116,0.0123,0.0184,0.114,0.0906,0.00838,-0.108,0.152,0.0506,-0.225,0.0836,0.094,-0.031,0.273,0.0548,-0.11,0.163,0.0627,-0.154,0.0947,0.176,0.101,0.0264,-0.0133,0.299,0.0708,0.0878,-0.0344,0.0415,0.0426,-0.004,-0.0921,-0.0182,0.0112,-0.034,0.149,0.0832,-0.171,0.0167,0.103,-0.13,-0.101,0.0102,0.355,-0.316,-0.188,-0.155,-0.131,0.126,0.0448,0.241,0.0107,-0.0408,-0.0315,0.131,0.22,-0.0177,0.0496,-0.289,-0.0916,-0.193,0.104,0.0846,0.175,-0.00169,0.106,0.0145,-0.231,0.0129,0.103,0.0614,-0.0143,0.128,0.0023,0.112,0.045,0.0828,-0.116,0.0503,0.297,-0.0931,-0.0564,-0.0244,-0.195,-0.296,-0.0285,0.0339,-0.12,-0.0251,-0.0342,-0.065,-0.116,-0.0529,-0.18,-0.0441,-0.304,-0.169,-0.139,0.0629,0.0821,0.163,-0.105,0.203,0.0287,-0.174,0.145,-0.0671,-0.111,0.0539,-0.00242,-0.0684,-0.0404,-0.0459,-0.0447,-0.0686,0.0526,-0.0163,-0.0384,-0.0959,-0.192,-0.255,-0.211,0.158,0.0122,-0.091,-0.0177,0.0354,-0.213,-0.118,0.0451,-0.192,-0.0835,-0.141,0.148,0.0998,-0.0228,-0.176,-0.0141,0.0947,0.267,-0.0929,-0.119,-0.0705,0.0692,-0.0746,0.0972,0.000553,0.217,-0.0532,-0.0754,0.111,-0.107,-0.00986,0.0394,0.0458,0.125,0.307,-0.0545,-0.073,0.0113,0.0757,0.0794,-0.0903,0.042,-0.318,-0.197,0.0755,0.0556,-0.114,0.096,0.0557,-0.0958,0.00449,0.16,0.071,-0.0169,-0.245,-0.139,0.0818,0.0503,0.0439,0.0385,-0.0461,0.0429,0.031,0.131,0.007,-0.000786,-0.0694,-0.0114,-0.135,-0.115,-0.1,-0.166,0.0601,-0.0961,0.0148,-0.0747,-0.0225,0.11,-0.142,-0.278,-0.091,-0.0588,0.0151,-0.0635,-0.0876,0.207,0.073,-0.0807,-0.0408,-0.346,0.0928,0.03,-0.0969,-0.1,-0.0653,0.0625,0.0847,0.054,-0.018,0.0201,-0.0704,0.149,-0.0117,-0.069,-0.0292,-0.159,-0.0692,-0.129,0.0569,-0.0536,-0.0813,-0.0609,-0.00782,-0.352,-0.298,0.00676,-0.0352,0.0222,0.0391,0.0986,-0.0581,0.064,-0.000712,-0.108,-0.0235,0.124,-0.177,0.0287,0.157,0.106,0.121,0.102,0.36,-0.125,0.243,0.216,-0.421,-0.087,0.315,-0.107,-0.121,-0.0829,0.295,-0.143,0.0718,-0.0168,-0.094,-0.0534,-0.0662,-0.295,-0.0328,0.202,0.0429,0.0229,0.0189,0.0568,0.0729,0.142,-0.0289,0.0794,0.044,0.0634,-0.0405,-0.147,-0.161,0.121,-0.0112,-0.135,0.131,-0.156,-0.0438,0.26,0.127,-0.239,0.329,0.271,-0.134,0.0821,0.137,0.032,0.0662,0.0553,-0.34,0.00927,0.123,-0.04,0.252,0.154,0.182,-0.158,-0.0687,-0.177,-0.016,0.0838,0.0466,-0.0631,0.0775,0.206,-0.00831,0.00871,-0.0614,-0.0964,0.036,0.091,0.0934,-0.0388,-0.103,-0.139,0.217,0.158,-0.0942,-0.0223,0.125,0.0548,-0.169,-0.172,0.0669,0.0483,-0.106,-0.0437,0.137,-0.0424,-0.165,0.0101,0.0438,0.0637,0.00545,0.178,-0.0451,-0.146,0.0414,-0.0568,0.172,0.175,0.208,-0.0894,-0.0884,0.142,0.0898,0.109,0.149,0.0482,0.0909,-0.0764,0.191,0.0342,-0.0459,-0.146,0.404,
0.126,-0.108,0.000347,0.0178,0.0656,0.00194,-0.0505,-0.102,0.182,-0.0794,-0.0148,-0.0128,0.221,0.143,0.0349,0.0374,-0.0174,-0.0955,-0.0561,-0.148,0.112,0.208,-0.063,-0.0105,0.0383,-0.0247,0.0604,0.0994,0.0313,-0.00226,-0.18,-0.0586,0.111,-0.0814,-0.00354,-0.245,-0.0798,-0.171,0.279,-0.016,-0.0172,0.0588,0.0525,0.136,0.181,-0.00991,0.209,-0.148,0.062,0.132,-0.15,0.0637,-0.000418,0.0608,0.0287,0.265,-0.267,0.209,0.253,0.13,-0.00774,0.143,0.0629,-0.0229,0.0328,0.0248,-0.193,0.0625,0.179,0.177,-0.186,0.00595,0.0388,-0.0169,-0.0212,-0.171,0.0115,-0.0462,-0.264,0.0185,0.00823,0.142,-0.128,0.025,0.0247,0.321,0.0785,0.0865,-0.0341,0.0478,-0.00893,0.0278,0.0722,-0.315,-0.197,0.0559,-0.0813,0.0322,0.0939,0.0142,-0.0843,0.0076,-0.0776,0.0139,0.317,0.21,-0.089,-0.0114,0.0997,0.152,-0.188,0.0713,0.0263,0.0736,0.0636,0.105,-0.0104,0.136,0.144,-0.158,-0.037,0.0193,-0.125,-0.0592,0.0934,-0.35,-0.179,-0.0209,-0.0784,0.0143,0.0309,0.0564,0.0866,-0.102,0.00301,-0.147,0.052,0.0786,-0.106,-0.0871,0.0134,-0.0454,-0.123,0.0436,-0.16,-0.119,0.0206,-0.0498,0.0396,0.0888,0.155,0.0986,-0.239,0.19,0.0816,0.0955,0.194,0.0614,0.0216,-0.116,0.106,0.303,-0.147,-0.0648,-0.152,0.0478,0.0137,0.112,-0.0913,0.0338,-0.14,0.115,-0.113,0.078,-0.061,-0.147,0.132,0.101,-0.0243,0.00134,0.0694,-0.0886,-0.0162,-0.0247,0.000251,0.0853,-0.00722,-0.0572,-0.302,0.103,0.0532,-0.0591,0.139,0.112,0.0219,0.0187,0.0188,0.0102,0.114,-0.0886,0.123,-0.0729,0.0288,-0.0541,0.144,0.013,0.0896,0.0411,0.135,-0.0422,-0.0106,-0.0214,0.0751,0.103,-0.0898,-0.0191,0.00467,-0.026,-0.0191,0.0977,0.0811,0.228,-0.0646,0.0693,-0.0891,-0.0628,-0.0675,0.122,-0.00725,0.0232,0.136,-0.0523,0.00714,0.0853,0.06,-0.152,0.124,0.0384,-0.0964,-0.0204,-0.0771,-0.03,-0.167,-0.0683,-0.0353,0.197,0.00966,-0.0802,-0.0871,0.0969,0.0288,0.0696,-0.0137,-0.0511,-0.0393,-0.0221,-0.0708,0.195,0.00112,0.0428,-0.103,-0.103,0.0862,-0.057,-0.0773,-0.151,0.127,-0.117,0.0696,-0.108,-0.00751,0.0187,0.0632,0.285,-0.115,0.019,0.109,0.141,-0.101,0.107,-0.0277,0.0306,-0.0723,-0.194,0.0314,0.134,0.12,0.00622,-0.00557,-0.0189,0.111,0.0991,-0.151,-0.127,-0.195,-0.0853,-0.0525,-0.0415,-0.0495,-0.0138,0.0912,0.165,0.0428,0.0115,0.0146,0.0905,0.101,-0.00985,-0.0347,0.0252,0.0704,0.0271,-0.0852,0.0344,0.086,-0.0493,0.0733,-0.178,0.0792,0.0518,0.123,-0.0841,-0.0166,0.0281,0.12,-0.0277,-0.133,-0.0309,-0.0726,0.159,-0.0529,0.0735,-0.0385,0.0424,-0.0183,0.015,0.0867,0.0463,0.0279,-0.0121,-0.0068,-0.0321,0.0696,-0.131,0.148,0.0535,-0.0131,0.06,0.117,-0.0831,0.117,-0.148,0.0738,-0.0613,-0.0251,0.117,0.001,0.059,0.18,0.174,0.153,0.0696,0.00776,-0.104,0.187,0.0118,0.0401,0.376,-0.131,0.111,0.237,-0.0515,0.129,0.0483,0.358,-0.0876,0.184,0.0147,0.0417,-0.135,-0.0549,0.0305,0.33,0.129,0.0167,-0.171,-0.0287,-0.0731,-0.0531,0.086,-0.0283,-0.128,0.0992,0.0476,-0.221,0.0227,-0.00726,0.00246,0.185,-0.143,0.146,-0.112,-0.0205,-0.142,-0.101,0.0892,-0.0978,0.11,0.0281,0.272,-0.357,0.126,-0.00396,0.165,-0.351,0.239,0.019,0.0557,0.181,0.0761,0.0438,0.0993,0.119,0.14,-0.0933,-0.144,0.0613,-0.0287,-0.0926,-0.101,0.00603,0.027,0.261,0.183,-0.00201,0.154,0.186,-0.0795,0.23,-0.0529,0.154,-0.113,0.0371,-0.0851,0.227,0.204,0.0148,-0.0476,-0.0947,0.0144,-0.06,-0.104,0.157,-0.102,0.135,0.0745,-0.239,0.0391,0.0422,-0.0189,0.0888,-0.0403,0.155,0.162,-0.0353,0.0261,-0.0158,0.367,0.0142,0.0684,0.204,-0.115,0.105,0.108,0.0949,-0.119,0.066,-0.23,-0.0785,-0.268,0.112,0.232,-0.0582,-0.0984,0.0471,-0.0282,0.00978,0.157,-0.326,0.0688,-0.264,0.214,-0.00375,0.212,0.0276,-0.211,0.0396,0.0615,-0.0762,0.0592,
0.116,-0.0162,-0.342,-0.125,-0.209,-0.302,-0.0868,-0.232,-0.0601,-0.197,-0.039,-0.149,0.0357,0.296,0.135,-0.0746,-0.144,-0.194,-0.0791,-0.0297,-0.171,-0.102,-0.0458,0.193,0.127,0.233,-0.207,0.082,0.0111,-0.193,0.102,0.0698,-0.0906,-0.113,0.0636,-0.0356,0.0633,0.157,0.0718,-0.104,0.16,0.0689,-0.108,-0.0383,0.123,0.0262,0.182,0.138,-0.102,0.11,0.102,0.0729,-0.155,0.0376,0.0949,0.0121,-0.0227,-0.0218,-0.0911,-0.198,0.0421,-0.137,-0.227,-0.0577,0.12,0.228,-0.0352,0.143,-0.0508,-0.0181,-0.00399,0.211,-0.111,-0.0728,-0.227,-0.407,0.237,-0.0546,-0.163,0.00324,0.041,-0.192,0.053,-0.123,0.141,-0.0638,0.122,-0.0161,-0.0381,0.132,-0.167,0.0722,0.197,-0.0847,-0.0329,-0.0783,0.155,0.133,-0.131,0.0655,-0.119,-0.104,0.0767,-0.0703,-0.0903,-0.0168,-0.0613,-0.00868,-0.0663,-0.158,-0.176,0.0641,-0.0801,-0.0489,0.0735,0.064,-0.154,-0.0398,-0.052,0.0921,0.0979,0.0552,-0.0633,-0.00766,0.124,0.0866,-0.035,0.00507,-0.054,0.0593,0.102,-0.00414,0.165,0.117,0.0356,-0.00173,-0.0466,-0.14,-0.0134,0.0782,-0.0495,-0.026,0.0652,0.141,0.0376,0.0958,-0.0108,0.0927,0.0706,-0.0491,0.005,-0.0374,0.000541,-0.102,0.019,0.0281,-0.0248,0.0812,-0.0344,0.0519,0.111,0.0559,0.0237,-0.111,-0.0679,0.132,0.12,-0.106,0.0378,0.0646,-0.0286,-0.141,-0.0811,-0.132,0.0339,-0.0733,-0.0939,-0.022,-0.0334,-0.00539,0.0179,-0.0365,-0.0236,0.0353,0.0605,0.00174,0.00271,0.0272,0.0804,-0.048,-0.103,0.0635,-0.0522,-0.0342,-0.0599,0.0209,0.0559,0.0195,0.051,-0.0261,-0.077,0.059,0.0054,-0.139,-0.0338,-0.00122,-0.00352,-0.0427,0.0814,0.156,-0.0892,-0.0147,-0.0674,-0.0348,-0.0378,-0.148,-0.00895,0.14,-0.0989,0.076,-0.0827,-0.137,-0.00987,-0.0326,0.0192,-0.00991,-0.0514,0.0515,0.153,-0.0624,0.0359,-0.0961,-0.0602,-0.027,-0.0446,-0.0132,0.0572,-0.0914,0.0203,0.0619,-0.0481,0.0804,0.244,-0.0898,0.047,0.12,0.0866,0.0263,0.127,0.151,0.0274,-0.0223,0.0817,0.033,-0.194,0.00962,0.0702,0.0612,0.0564,0.0871,0.132,0.181,0.0713,-0.117,-0.0499,-0.0421,0.169,0.148,0.102,0.108,-0.00192,-0.00984,0.119,0.17,0.0797,0.0353,0.0836,0.0206,-0.0427,-0.136,-0.127,-0.109,0.0532,-0.0121,-0.0476,0.096,-0.0269,-0.0223,0.00389,-0.0805,0.0403,-0.0552,0.123,-0.0209,-0.0798,-0.0361,0.0944,-0.02,0.113,0.156,-0.0826,0.0122,0.133,0.00806,-0.0783,-0.0364,0.0526,-0.0271,-0.0274,0.0737,0.00206,-0.0496,0.0347,0.0736,0.0895,0.0137,0.0588,0.118,-0.0216,-0.0767,-0.0616,0.0374,0.111,-0.00546,-0.0517,-0.0213,-0.00958,0.0293,-0.069,-0.0767,0.0768,-0.0812,-0.0652,-0.0588,-0.0171,-0.0473,-0.111,-0.0763,0.0505,0.0622,0.0196,0.0459,0.0013,0.00895,-0.0359,0.0575,-0.0245,-0.257,-0.256,-0.0297,-0.0435,0.0863,-0.0491,0.0145,-0.0588,-0.0594,0.0709,-0.094,0.0445,0.0227,-0.0623,-0.123,-0.118,0.0661,-0.0536,-0.0622,0.0308,-0.0123,0.0309,0.101,0.082,0.0769,0.0148,-0.0428,0.0269,0.114,0.0821,0.0936,-0.0968,0.151,0.0417,0.124,-0.0518,0.0174,-0.0321,-0.0303,0.0259,0.297,-0.0521,0.166,0.018,0.127,0.0214,-0.0973,-0.0462,0.146,0.128,-0.0024,0.0558,0.068,-0.032,-0.0316,-0.049,-0.0924,0.00526,0.0499,-0.0139,-0.0971,-0.159,-0.0951,0.0042,-0.0293,-0.0379,0.0592,0.0328,-0.0194,-0.0385,-0.0255,-0.00742,0.0078,-0.0555,0.0554,-0.0254,-0.203,0.142,0.185,-0.0502,0.149,0.103,0.0698,-0.0481,0.0321,-0.0308,0.0616,0.0457,0.164,0.0704,0.0705,-0.0404,0.05,-0.0284,0.0472,0.00603,-0.0144,-0.0472,-0.0459,-0.064,0.034,0.076,0.113,0.0337,0.0553,-0.00161,0.0701,-0.0185,0.177,0.01,0.0291,-0.0724,0.0798,-0.0649,-0.0282,-0.0228,-0.0122,-0.0944,0.108,0.0592,-0.0937,0.0456,-0.0138,0.0124,0.105,0.0615,0.143,0.0843,0.0323,0.0152,0.065,0.0275,0.0629,0.0852,-0.00347,0.0846,-0.068,-0.104,-0.26,-0.0543,0.119,0.0627,0.0207,0.0587,0.0393,-0.0203,0.105,-0.179,-0.082,-0.0347,-0.119,0.0947,0.0109,
0.0693,-0.0952,-0.0708,-0.0472,0.15,-0.00408,0.273,0.0371,0.00171,-0.104,-0.0293,-0.0966,-0.0421,-0.00257,0.00456,0.0435,-0.043,-0.12,-0.0849,-0.0157,0.0248,-0.0519,-0.0446,-0.0702,0.00285,0.0102,0.0816,-0.0255,-0.0137,0.00836,-0.224,-0.0731,0.000129,0.0619,0.00592,-0.0717,-0.0416,-0.144,0.0911,-0.0703,0.0273,-0.0573,0.114,0.0501,0.0877,0.0457,0.109,0.0253,-0.0971,0.0248,0.0638,0.0136,0.0918,-0.0446,-0.137,-0.118,0.0448,0.00742,0.0186,0.0326,-0.0721,0.0137,-0.0881,0.024,-0.123,-0.0085,0.122,0.117,0.0964,0.115,0.0806,0.0781,0.0747,0.0667,-0.0304,0.179,-0.0577,-0.075,0.0524,-0.167,-0.12,-0.0932,-0.123,0.102,-0.127,-0.124,-0.182,0.0889,0.0583,-0.16,-0.195,0.0472,0.0816,-0.0289,0.0333,0.018,0.0504,-0.221,0.178,0.021,-0.184,0.103,-0.24,-0.0682,-0.162,-0.037,0.0412,-0.01,-0.0533,0.015,-0.0551,0.151,-0.128,0.13,-0.0179,0.0989,-0.0848,-0.00388,0.117,-0.0256,-0.0916,0.0994,-0.0382,0.19,-0.01,-0.0674,-0.232,0.0968,0.157,0.0409,-0.0191,-0.0518,0.0187,-0.0442,-0.141,-0.154,0.123,-0.112,-0.0969,-0.0843,2.94e-005,-0.152,0.00456,0.023,0.0612,-0.126,-0.0341,-0.119,-0.0165,-0.0317,-0.0356,-0.134,0.00751,0.15,-0.136,0.0303,-0.092,0.0748,0.00543,-0.0609,-0.0632,-0.000772,0.107,-0.11,0.0985,0.0979,0.155,-0.201,-0.0419,-0.212,0.0967,-0.0543,0.0653,0.077,-0.00091,-0.000266,0.0595,0.0184,0.0419,-0.011,-0.0318,0.181,-0.0443,-0.102,-0.113,-0.0184,0.053,0.0923,-0.0271,0.0807,0.143,0.04,0.13,0.0168,-0.013,-0.368,-0.0222,0.118,0.0731,-0.147,-0.169,0.0463,-0.0358,0.173,-0.0165,-0.00955,0.0748,0.0449,0.0297,0.14,0.144,-0.196,0.0939,0.0431,-0.0879,-0.0358,-0.0598,0.351,-0.00952,-0.079,0.161,0.0365,0.0176,0.233,0.0794,-0.0774,-0.0889,-0.00723,-0.022,0.0499,0.098,-0.0115,0.0466,0.171,-0.241,0.104,-0.164,0.0864,-0.155,0.0463,0.0141,0.102,-0.111,0.0283,0.0252,0.091,0.291,-0.0379,0.0196,0.0483,0.0357,-0.01,0.0302,0.0554,-0.0498,-0.017,0.167,0.0873,-0.253,-0.0709,-0.0634,0.06,0.107,0.166,0.0867,0.0185,-0.0555,0.0618,0.094,0.147,0.219,0.202,-0.0853,0.101,-0.215,0.0697,-0.0353,-0.0511,0.102,0.0782,0.0642,-0.00906,-0.067,0.00755,-0.141,-0.148,0.0263,-0.13,-0.0951,0.205,-0.0226,-0.125,-0.0424,-0.0613,0.0423,0.111,0.1,0.154,0.0666,0.0795,-0.0561,-0.0406,-0.0101,-0.00853,0.116,0.0838,0.038,0.00143,0.115,-0.105,0.0483,-0.0156,-0.124,-0.18,-0.19,-0.00587,-0.297,-0.111,0.092,0.0359,0.104,-0.0488,0.12,0.0825,-0.0617,0.136,0.159,-0.103,-0.05,0.185,0.082,0.0486,-0.0534,0.31,-0.0327,0.152,-0.252,0.11,-0.00105,0.0806,-0.104,-0.0488,0.284,-0.113,0.0406,0.2,0.0143,0.127,0.044,-0.0265,-0.0455,-0.0548,0.253,-0.412,-0.046,-0.24,-0.0208,0.222,-0.0958,0.0821,-0.0879,-0.144,-0.0408,0.0925,0.0859,-0.0968,0.0256,-0.0985,-0.143,0.0417,0.101,0.0664,0.0294,-0.193,0.0543,0.116,-0.344,-0.00872,0.302,0.0722,-0.215,0.0434,0.0145,0.0809,0.137,0.11,0.232,0.0485,0.154,-0.0163,0.0458,-0.00595,-0.226,-0.0904,-0.00565,0.051,-0.0976,0.0646,0.0126,-0.0636,-0.286,0.0526,-0.0432,0.228,-0.121,0.0696,-0.15,0.221,0.0489,0.194,-0.18,0.0995,-0.0717,-0.238,-0.0277,-0.103,0.0231,0.0246,-0.137,-0.015,0.00106,-0.178,0.087,0.0244,0.00114,0.0456,-0.0122,-0.0866,-0.106,-0.169,-0.0594,0.141,-0.106,-0.111,-0.00276,0.179,-0.0588,-0.0781,-0.035,0.261,0.0172,-0.204,0.0115,-0.13,0.0541,-0.00589,-0.101,-0.103,0.245,-0.0624,-0.179,-0.0426,-0.012,0.0215,0.172,-0.0496,0.0139,-0.148,-0.203,-0.112,-0.0153,-0.0045,-0.166,-0.166,-0.082,0.0925,-0.0414,-0.109,0.0872,0.0285,0.115,0.0294,-0.0695,-0.36,-0.293,-0.126,0.222,-0.0163,-0.0608,-0.076,-0.0725,-0.205,0.0255,-0.125,-0.321,-0.344,-0.149,-0.0458,-0.157,-0.215,-0.099,-0.0209,0.0956,-0.0336,0.0554,0.0772,-0.181,-0.0761,0.00101,0.00981,
-0.142,-0.104,-0.0692,-0.192,-0.104,-0.00461,-0.0243,-0.135,0.000165,-0.192,-0.244,-0.0389,0.0387,-0.198,-0.0428,-0.00737,0.0178,0.159,0.0548,-0.0374,-0.192,-0.044,0.0894,-0.0697,0.118,-0.0954,0.242,0.0483,0.0693,-0.0165,-0.0308,0.0373,0.0678,0.137,0.0216,0.181,-0.188,-0.0853,-0.248,-0.141,0.0481,0.0326,0.0259,0.133,-0.351,-0.137,-0.181,-0.0272,0.206,0.0976,0.0238,-0.0978,0.0669,0.15,-0.0468,0.0513,0.0922,0.109,0.0157,-0.03,0.0346,0.0304,0.0765,-0.1,-0.00218,-0.327,-0.112,0.0484,-0.242,-0.307,0.0237,-0.0871,0.0321,-0.0805,0.104,0.00894,0.112,0.0453,0.0099,-0.000581,0.11,0.0252,-0.205,-0.0287,-0.0555,0.0787,-0.0351,0.0901,-0.0487,0.0952,0.0156,0.0268,-0.308,-0.101,-0.0364,-0.16,-0.2,-0.0833,0.0448,0.0166,-0.189,-0.134,0.114,-0.0208,-0.199,-0.109,0.115,-0.338,0.0136,-0.247,-0.0948,-0.26,-0.213,-0.0398,-0.0391,-0.241,-0.095,-0.0247,0.23,-0.254,0.061,-0.141,0.169,0.0431,-0.0878,0.281,0.00245,-0.0363,-0.243,-0.118,-0.0409,0.166,-0.0191,-0.168,0.11,-0.0846,0.0882,-0.0775,0.158,-0.0441,0.00091,-0.118,0.134,0.232,-0.0656,-0.139,0.142,0.00881,-0.126,-0.141,-0.00643,0.029,-0.106,-0.103,-0.119,-0.302,-0.115,-0.0577,-0.082,0.0263,0.104,0.144,0.0525,-0.0539,0.0282,0.168,0.0176,0.053,-0.266,-0.0831,0.0129,0.0456,0.201,0.021,0.158,-0.398,-0.0508,0.0885,-0.127,-0.157,-0.0273,0.0472,0.207,0.0813,0.0673,0.186,0.0237,0.174,-0.161,-0.0506,0.06,-0.0386,-0.0501,-0.168,-0.109,-0.0971,0.0643,0.0577,0.163,0.0769,0.0305,-0.0857,0.0978,-0.0478,0.154,0.275,-0.0891,-0.0594,-0.0247,0.127,0.0136,-0.0891,0.172,0.033,-0.0665,-0.0848,0.104,-0.0812,-0.292,0.0303,-0.0811,0.194,0.0723,-0.0404,0.111,-0.0322,0.0963,-0.0346,0.0451,-0.0165,-0.00162,0.0881,0.00979,0.0685,-0.0365,-0.0337,0.0583,0.00378,-0.14,0.0164,0.0473,-0.0791,0.0145,0.0459,0.174,0.235,0.179,0.121,-0.105,0.0168,-0.0197,0.044,-0.00133,-0.124,-0.141,0.0327,0.0523,0.00819,0.168,0.00697,0.0297,0.0476,0.0301,0.0102,-0.168,-0.0169,-0.084,0.129,0.0083,0.0894,-0.207,0.0304,-0.0993,0.0602,0.0488,0.183,0.072,0.079,0.0498,0.00933,0.0448,-0.0762,0.0392,0.0244,-0.0519,-0.0856,-0.052,-0.223,-0.208,-0.309,-0.0699,-0.0656,-0.106,-0.0987,0.0729,-0.0746,-0.217,0.0861,0.204};
double a4[]={-0.0213,
-0.0137,0.00573,-0.0252,-0.0487,0.103,0.0101,0.0376,0.118,-1.39e-005,-0.0367,0.132,-0.0376,0.0441,0.0419,-0.0556,0.0684,-0.0474,0.0287,0.545,0.337,-0.000657,0.289,0.0154,-0.0864,0.576,0.249,-0.0161,0.0746,-0.00519,0.117,0.0728,0.134,-0.0169,0.118,0.0488,-0.0919,0.133,0.298,0.018,0.591,0.0387,0.0046,0.0531,0.047,0.563,-0.559,-0.0671,0.128,0.0059,0.0374,0.0871,0.00809,-0.13,-0.0547,0.0712,-0.028,0.0368,-0.0916,0.00759,-0.216,0.487,-0.307,-0.0791,-0.105,0.814,0.158,-0.111,0.0514,-0.421,0.13,0.107,0.0542,0.102,0.101,0.105,-0.0297,-0.0734,-0.252,0.334,-0.0154,0.0484,-0.0336,0.0531,0.488,0.0761,0.0463,-0.097,0.119,0.0492,0.0104,0.0828,-0.0988,-0.0125,-0.641,-0.0596,0.0437,-0.0451,0.039,0.495,-0.0401,0.105,-0.0569,0.0772,0.0175,0.366,0.0728,0.313,0.138,0.184,0.142,0.101,-0.0866,-0.0502,0.185,-0.12,-0.00674,-0.000143,-0.0458,0.0926,-0.0512,0.0241,0.00513,-0.0315,-0.462,0.487,0.0298,-0.102,0.1,0.109,0.138,0.108,-0.0109,-0.0663,-0.2,0.0282,-0.00683,0.0179,-0.0895,-0.466,-0.446,0.0524,-0.18,-0.0262,-0.272,0.431,-0.107,0.0262,0.117,-0.00573,-0.0321,0.0525,-0.107,0.0028,0.328,0.0337,0.0372,-0.0385,0.229,-0.357,-0.181,0.0381,0.148,0.0107,0.353,0.796,0.151,-0.0806,0.117,0.0905,-0.427,0.125,0.029,-0.113,0.236,0.0818,-0.0837,0.0676,-0.218,-0.195,-0.0813,-0.683,0.1,-0.0346,0.0153,0.663,0.0583,0.0249,-0.15,0.0294,-0.0453,-0.0833,-0.0283,0.154,-0.0619,-0.0782,0.154,-0.0906,0.0148,-0.61};
struct NConnection{
    int nIndex;
    int wIndex;
    NConnection(int n=0, int w=0) : nIndex(n), wIndex(w){}
};

struct NLayer{
    NLayer *prev;
    size_t n;
    vector<vector<NConnection> > cons;
    vector<double> w;
    vector<double> out;

    void calculate();
    size_t size(){return n;}

    NLayer(){}
    NLayer(int size, NLayer *prev = NULL) : prev(prev), n(size)
    {
        cons.resize(n);
        out.resize(n);
    }
    void createFullConnections()
    {
        w.clear();
        if(prev != NULL)
            for(size_t i = 0; i < n; i++)
            {
                cons[i].resize(prev->size());
                for(size_t k = 0; k < prev->size(); k++)
                {
                    cons[i][k].nIndex = k;
                    cons[i][k].wIndex = w.size();
                    w.push_back(0.0);
                }
            }
    }

};

void NLayer::calculate()
{
    if(prev == NULL)
        return;
    for(size_t i = 0; i < n; i++)
    {
        double sum = 0;
        for(size_t j = 0; j < cons[i].size(); j++)
            sum += prev->out[ cons[i][j].nIndex ] * w[cons[i][j].wIndex];
        out[i] = SIGMOID(sum);
    }
}

struct NNet{
    vector<NLayer*> layers;

    void calculate(vector<double> &in, vector<double> &out);

    void addLayer(int n)
    {
        NLayer *prev = 0;
        if(layers.size() !=  0)
            prev = *(layers.end() - 1);
        layers.push_back(new NLayer(n, prev));
        cerr << "added layer " << (*(layers.end()-1))->n << " " << (*(layers.end()-1))->prev << endl;
    }

    void read()
    {
        //random_init();
        for(size_t j = 0; j < layers[1]->w.size(); j++)
            layers[1]->w[j] = a1[j];
        for(size_t j = 0; j < layers[2]->w.size(); j++)
            layers[2]->w[j] = a2[j];
        for(size_t j = 0; j < layers[3]->w.size(); j++)
            layers[3]->w[j] = a3[j];
        for(size_t j = 0; j < layers[4]->w.size(); j++)
            layers[4]->w[j] = a4[j];

        cerr << "readed\n";
    }
};

void NNet::calculate(vector<double> &in, vector<double> &out)
{
    for(size_t i = 0; i < layers[0]->size(); i++)
        layers[0]->out[i] = in[i];

    for(size_t i = 1; i < layers.size(); i++)
        layers[i]->calculate();

    out.resize(layers[layers.size()-1]->size());

    for(size_t i = 0; i < out.size(); i++)
        out[i] = layers[layers.size()-1]->out[i];
}


void createNet(NNet &net)
{
    net.addLayer(19*25);

    int lay1_mc = 4;
    int lay2_mc = 20;

    net.addLayer(9*11 * lay1_mc);


    int kernel1[] = {
        0, 1, 2, 3, 4,
        18, 19, 20, 21, 22,
        36, 37, 38, 39, 40,
        54, 55, 56, 57, 58,
        72, 73, 74, 75, 76
    };

    NLayer *lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc * 25);
    for(int map = 0; map < lay1_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 9*11; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/9)*18*2 + (ney%9) * 2;
            for(int c = 0; c < 25; c++)
                lay->cons[map * 9*11 + ney].push_back(NConnection(base + kernel1[c], map*25 + c));
        }
        //cerr << endl;
    }

    int kernel2[]={
        0, 1, 2, 3, 4, 5,
        9, 10, 11, 12, 13,
        18, 19, 20, 21, 22,
        27, 28, 29, 30, 31,
        36, 37, 38, 39, 40
    };

    net.addLayer(3*4 * lay2_mc);
    lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc*lay2_mc * 25);

    for(int map = 0; map < lay2_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 3*4; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/3)*9*2 + (ney%3) * 2;
            for(int f_map = 0; f_map < lay1_mc; f_map++)
                for(int c = 0; c < 25; c++)
                    lay->cons[map * 3*4 + ney].push_back(NConnection(f_map *9*11 + base + kernel2[c], map*25*lay1_mc + f_map*25 + c));
        }
        //cerr << endl;
    }

    net.addLayer(20);
    net.layers[net.layers.size()-1]->createFullConnections();

    net.addLayer(10);
    net.layers[net.layers.size()-1]->createFullConnections();
}

int main()
{
    char str[100];
    NNet net;
    createNet(net);
    //ifstream fin("perceptron");
    net.read();

    while(cin.getline(image[height], 1000))
        height++;
    width = strlen(image[0]);

    for(int i = 0; i < height; i++)
        for(int j = 0; j < width; j++)
            switch(image[i][j])
            {
                case '.': image[i][j] = 0; break;
                case '%': image[i][j] = 1; break;
                case '#': image[i][j] = 2; break;
                case '@': image[i][j] = 3; break;
            }

    vector<digit> digits = split_image();
    //cerr << "splited";
    for(size_t j = 0; j < digits.size(); j++)
    {
        //digits[j].print();
        digit d = scale(digits[j], 25, 19);
        //d.print();
        vector<double> x;
        for(int i = 0; i < 25; i++)
            for(int j = 0; j < 19; j++)
                x.push_back( (d.mat[i][j]>0) ? 1 : -1 );
        vector<double> y;
        net.calculate(x, y);

        int jm = 0;
        for(int j = 0; j < 10; j++)
        {
            //cerr << y[j] << " ";
            if(y[j] > y[jm])
                jm = j;
        }
        //cerr << endl;
        cout << jm;
    }
    return 0;
}
