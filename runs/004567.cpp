#include <stdio.h>
#include <stdlib.h>
#include <memory.h>
#include <string.h>
#include <time.h>
#include <vector>
#include <stack>
#include <math.h>

#define MAX_LEN			1024				// maximum linear parm of the image (width/height)
#define MAX_SIZE		1048576

#define WHITE			0
#define LIGHTGRAY		1
#define DARKGRAY		2
#define BLACK			3
#define SYMB_WHITE		'.'
#define SYMB_LIGHTGRAY	'%'
#define SYMB_DARKGRAY	'#'
#define SYMB_BLACK		'@'

#define VECTOR_LEN		16
#define VECTOR_LEN10	160

#define HORIZ_PARTS 16
#define VERT_PARTS	32

#define CONN_HORIZ_PARTS	5
#define CONN_VERT_PARTS		4
#define CONN_MAX_PARTS		64
#define CONN_WEIGHT			0.5

#define MAX_FONTS_FIGURES	1024

#define N_FONTS 23

#define RLE_NUM_BITS	5  

using namespace std;

struct FigureImage
{
	char* Image;
	int Width, Height, Size;
	double Ratio;					// Width / Height
};

FILE* fin;
FILE* fout;

// base image
char Image[MAX_SIZE];		// array of intensities
int Width, Height;
int Size;

// image of single figure
char FigureImg[MAX_SIZE];
int FigureWidth, FigureHeight;
int FigureSize;

FigureImage FontsFigures[MAX_FONTS_FIGURES];

// buffer for different operations
char Buffer[MAX_SIZE];
char Buffer2[MAX_SIZE];
int BitsLen;

// reads image from file
void ReadImage();

// converts line of symbols into numbers
void ConvertLine(char* line, int imgLineIndex);

// splits image to figures and processes each
void SplitScan();

// scans single figure
void ScanFigure();
double CompareImages(FigureImage* img1, FigureImage* img2);

// unpacks all images data and builds a huge array of them
void UnpackAll();
void DecodeChar(char* buf, char c);
void RLE(char* buf1, char* buf2, int bufLen);		// RLE decompression
int BitsToInt(char* buf, int len);

char Code[] = "?7d749J68Gm8K7g1_NX6niPKo3gPKp1ZE@S:2f45V0ee5^DITp=?T0eT5fCHehQ=QBaGU;P0eWb95@Vo9XHBpT]<98;kUQ2F2oYHBUpP4T9Bpa2B4YOi193JCo0IOa3;o0IOa3;o0IOa3;o0IOa2N0TpP4]4UpP4T9Bpa2B4YOi192D]5nBaeTP`ZF64T5nBaaVo9XP9ORG0UP`:F2a9O:K41Y8;ZVc9i;RWP]RR2gZ=2Z4I@FXP^06paKGm?mGpD3LoPFbQ7m<FQR5c6CVN0MCA2pYa=d2?i9OaObpTP_P6peL@=p]gPKpO1JGpC@plIVgD3JI0=U1J0=WSIlFV5W`Ii0=UaIAD<o86bR0cP_;>4<i;RdQ3?XcQ;?XcQ;?XcQ^UeI@6`ApYk?n?ApYk?n?ApYk?n?A[0IM6L4dk<XBdk<XBdk<XBdk<XJI@G5W33:2i]iXF?43IA0Im6N5U1KFL5PJK0=USJJ@=WUJj@=Y1I0=pee`oL5YOmMdpKb0hoS]pcoa=p4lo2G<8pYPUYHQNANS>0[O?X;EaSZdP_06hh>i;DVP]JOBTfPJ:2d9=cC:SP^k>2b8oH6Rb8X;VSaXoc:>QAMTL@4OL3A@aRP_k>64D5hAaQ7kA@U7kA@U7kA@U7kA@gRn8i2Ce_n;`Ble_n;`Ble_n9H2;eSPTOY52DOY52DOY52DOY52DL5hAaaRP_k>64OL3AA@X_c?0Sl8X;0RP_J?4SjY<@6RP^k>2c9=cC<1XnH6RP^2J2bYnK_2g_>CC_1ZiAn5Kja6c5_8CD]8pYVV81mMBD9fC@S:2eTL5bBbaJ>82B>2gYI8FbQ_TTL9ZBAPnHFB>:3B1XXcFm92><QWBA@nTT@<X6SRQm8ic6=973N4T@<86TRQn99J:4]D?]3AcPHBATORF@69HkCgUTQ=943oTTX^943oUT0ZB:7mUS0YXXOcF82R:7mVQQA53oC@aXRQp9XHDA@pTe<:8XOcJ654D?j=73Y8XOcJ>5BA0pYHi9;4CoUT1RB>TnYI:BBbP`@6TUQQBA1nPJBD62F:7eURQaY8ZO:F>TaYHY>a6TRQc98XNcB<SVBaS]URQe0J>8?996BfY8Rle]H7LUQSFUT0h1?4C22e]P6k0KZBQ_XJ5WP2Mi5c3BdDPpmBG=8GOn:4f;4C]9Y?m82:6`lP5X9B^pfX?JQT7Wm4H0Ec4aOm:PlZ<XFkP<0>pAD;L@60;Kk:XGR:Plo2<0?l0609pm:303oX1P2gpX060;K<0a1?pXa609oD1P2gpY060;K40aPppD2X?bRX?pYa647m8304poX0HAOXL0Ghn@0aR`Pa1OOf032Do23pka1P3o]8Cpka1P3o]8Cpka1P3o]0FpnF0aQpN11pEPN15P@OfH7PAH47nF1i4F11pEPN15P@OfH7PAH47nF1i4>4;Oo[0m0OjQ2OpEP<8OfQ2OpF0<1?f@OpF0<0WeH0``kPS@O325npD0<8WiH@Upf0324p0<X?pYa647m@323pn@:Pp60a1KOeP305^U5@OpAP<0Cmi305^p@3:5^0322pk01P1pL:Plo2<0?la60;Ko:QKR0a0lm5aFkP<8C_XZQOX302_@V3peXC=8cSCo]1J2DSOn]QR5n5n:k2^mpQ@k0hhX7=PBoi7c2Gd1lX4pN2p23F3`Y11IaOo8La?pT45S2Oo3GiaWpa2745np089J5pi8A@aPpQ1@@aPpPaQQ:7o3264XOi<8HBQpQ0@aU1p20ZpQ0EOaP:`i@5Gm82[o4132D7m8224XH;o2449@aGm488BQP`i8@@aQpPaPQQ5p0T613p47g111OP^m@Jpo4p8Qp0pV3h`@Bn27e3oX?NlQ>g1KnPNi1KmPNk1KlPLmQ`]i:pQPe4=LbORNP;@@fp51jU2Mm2gg1KMP`_0Fh8;lX5n_2Oi3OJPnla5`Y@O46M11O445S@pPfo=5p@iD<5pAA0A@Gm0RQQ5p12:48pi8A@U7p12:6eGm48i2Co25hm4;`i8GOa@UP8`i8AaB?o24D9Apa@RQY5p12:64D5p08XXD45p@bT4Gm0Qb8`aJp8QP`R3<6`o1`^222m1;g8?0CnaJpZ3p8?Ni0lh3OK0En3h<XC`iD::4M1]Q?Z4^74;oT1KB2pXXA[AaGP?Nj1?@M@UnQ`@`R4`_3_<7nXBp8;cQ;f0pk2MV2gd0pk1pD3o@;Kc4lF3o<7p@>lPOaPpl1O0Mi?N@WL1OQp@>mQO[p@;k2N`k1ODEjhP7oc:2m0ngA@GH7O2:2l0`cRP_XC`2:2k0lk4pKX3hXCl_H;nR``j0`i:mOT3hXGJOP3`aIiG`1Oa9o07nX;o1OH0UkaMnQ?c1?ePnk2oc1lgD5oP^n0Jp62p8Fob3Q1l]7`KP=15Kf@aG83BL@FPP_kNNZZeOm6gT5pB1;Ab2l3Jcp]7D]=Og@;JaSoVOanp1QE2<i;C@Ga3C@G9?j0eT5gDn@=91Ma`4p03BNPGPCKT]5j1N==[BoaEU0eT5V0eWa7]cK<TP`H;eYH;41Y?P;fY]BB2nP`H1Y8c2Gi2^cJ<2To0n_C@aUo0`P1Y8HB@GX5mT]9BoaGeBaBGe2_ZN0Tn0neIN@Gg0g7P5o6?L5oF?H5NV?H7`:J0TkP`e1Y82GX2pJJ0UjP`iUPT]5a1Gf93BGR3h^;3BKL3`a3BA@Y=a;oY]2GH2pZF2a9^@>p4g=;1J0NnY]ZK<3`b=WCI@Gl0eT5X0eT5Q1O^=^0eTU2oTh03BAahQ=1LP=;2O2J2l0JKZWoYi;JXpQ@ZI1FYQ7n8kp]@MCA2o3JCW]9J68GnR1]HApCPKWoSOanp0Wo7mpcoWoR2l=<Z`X1^8;<1YoBk488;BWP^cg8222fYnP6[aQlgb?[FHahgYEX0fD5S3OIfgMIhB@U9UEaGE74A;1HUWP9N==REp06E;QEaGn6TSXEGn:UR0^pY0=933:2pPaUQ3Go4192EL9@K0UKTT9EmD_b93J[PXf9H2dNYP];pNYP];pNYP];o>he:<XJ^n1Ie_a3Ba6Na9Fj;1;XApAY8B[pZDT9EaGn>TQYE1OekB65On>URQEO@ObPJ?0[nXiZ4T5PE@F41c0eT1;REc1OZ`b]i;Z[P]S7g1Y]a6]P`cGB[pP4_X3EK46I;^FJD<5R0eVnIY@@F5;1L5_M541?eFjDD<Y_l32aP`06pcO@=pPpPQp3hn21_OkT5]HApH1;@b2oRkRlaLoY>i6VP_@Bm@KlJ6oc1[mc;DSS88nRB:U5]C@BCJUP9N06QP9>B20UP_222BmA?bAmAOXDFm7mBGH3o@3BJ0^]cJ2b1;fPJBDQO1Ke0eh];OL<gFiR=lo45Cm3OI@hhD9oa;lT5n_1pP4`R4`L4pX5nZ@M46T=nf3OIT45f@jD?Q11HTGQ5RAN4F57iAAD9?2B64WQ932CaTQ:GaTQ:GaTQ:GaUP9`3;acm<`3;acm9H9;iB@U;iB@U;iB@eTm98HBN4TD:;aRS88p2;4Rm8]@6PlXH;8PP_Z7<7`M0nl@4pZPf1Kn0`^PCo8Bo0CniCoHCnP?nahgD=nk0f?m8262j3:2pP;Ab2p[@=3S0e?n<1Y<cGo41CVD@Ga3EIUOT3FIU`D3GIUp43HIV>jWVI@FYYVJJ0=YVJjggI^1HP=^VKih6IbQLjW4M2id>XHMIWD<>]dZ4_mdZ4_mdZ6hFIpjd?p>Ipjd?p>Ipjd>i9hVM@UhVM@UhVM@ekd>XHMIWDD;S<ja_<dR2a><dS6hd=X;8gd=]lG<eP^06cd<nX6ad<_33<ak;]ck2l0J[<]P`@6Xd:Oi8CjTe5pA0^3S0e<8p[0UXiQNbDckb6jd2MQ2M^2MU2MZ1NT7M0FgT7maCnPGg8;OH4p6Pg8<:7HPSXD6b15@Rg8XHAK4D<8^R:48nR:4XnR:4XnR:4XnR:6eFb70BK5gbM]GK5gbM]GK5gb;0AK4L4Sg8XBSg8XBSg8XBSg8XJAK4D<8^R:64Fb552Pg8L27HPP]23HPb1Kl0Wj0Wl0`]PFgT7n8;ePl[2MU2M^2MQ2Md4KV]1P2icQnomMJ5k@^m@Cmc74PP]B;4Qb8mB;01X]B>82C4TQQ9RB@Q;RB@U;RB@U;RB@gTb9H2K4cb<]C;4cb<]C;4cb<]C;4cb<]C;4cb<]C;4cb<]C;4cb<]C;4cb9i2C4UPT_992D_993BC4TQY9RB@aTb98P8mB?2Rb8X;01X<B;6Qb88;85`R2OY7FPoi?`f3?5oH;A@fp0VD8lXH;:2eOA3]0eNm3@L0=7]@aG991J4GE;V0e45gBjDGU;R0eGY91H4O^;PAaGY=52RP`JF64T5lBaeToYHBUp98BUp9H9;oC@4`j?0BOVGjUoIOVGjUoIOT]1=oB@4pj93JCmTQ:GmTQ:GmTQ2GmTQ2F2o98@UP`JB82B2nXiZ4h^7P0eWY9RBNTD5RBoDFE;g0e45V0eD5eAJTW=3^BLD45_0eNf11LeT8cX?H6aP`iH^32>X`YOA31Oe8Fg47piDoP7pHKlB6ol1?gQKn0^o0CoB3R6`hX8;RQg0J3XQf8_X6PP]a6PP_Z;>Rm8X;41X`2?6SmPJ;2SP`:>>QA@GU9419lBaaTo98@Uo98BUo98KBO4]1=mIO6GbUmCa4Wb;19ORB4YORB6TWb932CgURQA@GU9PAaGU71H4OT3AHP=5iAjDGQ51I0=11MDFQ5f0e45X0e7A3^@@G53`@L@fp4;OP4pZ4pJ5`i2oeQ?o0pX1po6FaPppAR=lZ:eGH1X?i<:?kZ2n;`06[n;<X>K0=CW1pHYeQKIa=A]2OX0e_m9oM=b3OHe]5c2hb0JC]4p2TP_aFo19j@A0Aoe48Ap448AOQ7gPpQOXpi1Ap4?Z3o0@@47m2@Ahhm0PSW`ifmOp4WQ1p4?23o3N09pmLe7paSH0``a?H0Wpa?64p:0j0N@;li1j0Up0EU2Ok1l<5ni0n0Bp07[2Of1lFPiPja2G^1GDGO;23pX5Z8;o:;dL=U;M@UYHQOeP;JaSopQla1`m7EOQ0fh1QTHK0=OU0foYSXH@FIUXIIFFT3H@F9U1JFN9U1JFN03I@FUY41Y]J@aeg=8@fg=8Bfg=8Bfg=8Bfg=83OHpgl7ohHpgl7ohHpgl7ohHgP=MSB4^MSB4^MSB4^MSB6VVbY33CHeRQI@FUYQI@FUWRI@FUWSIJ@=Q1I6FQUWHk645X0foD3GlF6AQaGi@=Me0ho3epQlo2g]8pY0UYHQMQ]jOg1Y8ApFPK:2pXa=EU3OOa9OY1pk1]=PFhIY_2gj=_0>m0=^c1hH1_>P;f>oXC]a6kl0[<nm0nR0hWP5HhhT5iGpX?XOa?@NapPNa`7m7l2mOaOa9[o3o1M`i7a7hm;o?m?bpQo?m?bpQo1O`i7a9do3o1=OaOa9[o3nQ_Wm3g6iOa?@Wa``@?H7hT5iP=ji1p6nlQ>c0K[]3_Mhf2MX0h7@5l@=^c1hPgi0leJKPMm0K3H3`a3GJ@OpQ@Z]HSNpXa=U1Ofa;AaSg7oMPFUQ7m2JaGM9<:[C@G03A@F^=^0e?=;Y0eGE;1IDL5g0eVA9jCH@=9kCH4T5k0eTA4]5lCacTp9X9=oC@BKmVP9pcJ0Wp9X2OmVP9pcJ2COTe4VP`RJ2C@Gb;32KiURXCNe_1=kB@F5=jBI0=9g0eD5VCLeV^;aBKee5YAaG83CbBYXAjI@SoB2ZZk3IBOD9J:6`kP5]X;o33g2o0Ko9hH3Oi_KpA`0ho[F1`n]5WOmX;81]X;01^]S:2c0KB2a0K;>ha==3J:QYYK@aff=X@ff=XKJJP=Y0Kkge1^[Ol^SpK1JVm1Y1JVe1^[JaCODeQY^1J6T==n;B:5^XJA0KaFIU1H76EWSLHVL5T0hp3Bphkhoc2g`n45bOj8;]pQpmnP`i<=H;oX2FQR5j6M8m@=92?l>2l0KOTpgY^0;CJTT5^CIa=51LD]5SAaG@3BHP=5iBAT4L5jBb@X`RB64Oe3A@eRP`ZB2AaGj90Apa2F0RpP5hm0_pP5hm0_pP4]151OTT171OTL4TpXXJBODL<9?P6RRQAoeDI1;i0eF83AnTL5SCLeVH3BleT5X0ee5V0eT5]0h`43L@GD5]8;o1Y8Ad4A?Q5dAmTW03BKP==]0f6X3EJ0=IV0fg=WP0em1=25D8KAD=8;0bc[M:V4JTh1=aCL4h1=aCL4h1=aCL4h1=aCL4h1=aCL4h1=aCL4h1=aCL4h1=aCL4h1=aCL4h1=aCL4h1=?6d7X3GNV7P3HMgOIYeKLP=^a0h6flZ0hgMp3o=pRRSOpppppppo8@pcbD?mF=p6oc?iAXMlg]8j=>dC]el=>dC]el=>dC]el=>dC]el=>dC]el=>dC]el=>dC]el=>dC]el=>dBN7V>:7P1X=k?LTg0JCD1Y^06Xd0J[81[<@6_R0dQUA0Jaeba[mJc2c:8;@TP^RCLTh9=cCLTh9=cCLTh9=cCLTh9=cCLTh9=cCLTh9=cCLTh9=cCLTh9=cCLTh9=cCLTh9=cCLTVRbNB:6?06RQW_UQW]VQW85`SDadT@AaJZ6LP6YP9XIdY8P9XId0jUCadYB@U=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?I=3?AG2=l62f^Ok43pX@?<mURQkXNa:AmPnY5^1J264>X5Y8H@@FDYj@L88;V6i@@G<=aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222k1L88;X5aPP_PG222jQ_445d3L88;V6i@@G<=aPP_HKQ5c3g4G8?iALPpQ5W3E]ZZXTDmPl]9END<_:F2jXoc;]Rl8_c;]Rl8_c;]Rl8_c;]Rl8_c;]Rl8_c;]Rl8_c;]Rl8_c;]Rl8_c;]Rl8_c;]Rl8_c;]RP_J>2j9N2_2b?YiTBi0?8Fp45Y<a6ai0JKTVjYNJGXTk9>RCXTk9>RCXTk9>RCXTk9>RCXTk9>RCXTk9>RCXTk9>RCXTk9>RCXTk9>@6TP^a6XP]P6jX1<W`3KmaFTh0J><OYB@S03oU71HPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOh1OHPOc?X3o0pXX]GhP^9f1JST9`ZCL<`TBkP=5QBkb6?QBm0OaYN0?iD`07m:GP3o5;a1p2Ui0pQBm0OaYN0?iD`07m:GP3o5;a1p2Ui0pQBm0OaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1KPOaYH;L3o5;1HWppp`WRYdo3?X5X_86Zg<H;62geEKk4`i_WmBWn2Uc6T5XJ@FP3IJgN^W[BbT4>^;Q@l4V03@K4N55]AAT4Nb57@X^R;0Tg0J30Sh8HP8i;JQRQA@FeEn2B2gR`XB@FeEn2B2h2?A;1KQ7XUP^aSeBaFiCkDW0?kCL0nY=b2NXi[N:hR^j;>BdT]j:X;TZP_@6XP_JV2jZH;VYP_JV2jZH;XXP_RS]Xl:>cS_WlYokO_<mZc2>7TPePJB2bR;b5R5FPQP^R;JRgPJ22fXi;DTg9=JGBUP^06SfY8;DTP^BB2f8nZ;LQh3pX;U3he45SCJ4L5[3JLAUR_m;GFgf=`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVn9`BKeVf?poRN<U`i8pXPWpaHAo@MDj7m;h>=dSLih>=dSLih>=dSLih>=dSLih>=dSLih>=dSLih>=dSLih>=dSLih>=dSLih>=dSLih>=dSLih>=dSLih>=dSLic?mmm=:jaViUVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9ZBJTVY9RJCaabU@Ja=1ZAJ4VH3BHaFVa1I9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Vd9]cK<Va0JoN6RpP7pAXOi<9OX;DNEp=;2Dof=2<2KDTP]cKD7_JP=9[1Fn;p1Q;p1Q;p1Q;p1Q;p1Q;p1Q;p1Q;p1Q;p1Q;p1Q;p1Q;p22TpPQ=p12Ko24hm49`i8COa@VpPQ=p12Ko24hm49`i8COa@VpPQ=p12Ko24hm49`i8COa@VpPQ=p12Ko1:?c_2h?m>9pQWRQKR2pPFpP3ALaFVeYX2K]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cK]Vl9_cJ2j0JOR1ZnP;H@F5pAA4`a3h>BGN1YnH6Ze0Jd<1[Y@:<LP6`bPK721^8XDL@U4<9<2N64N9=5BPc9XJ@@FA=8;mi6TPT6U;77JTW99cBLeO=7eAM4?E11M445e@@GA1g@MT7I1g2ol1OMPOm0pi1pa3pP7`0?o0OmP`c2p8;mP`e1oPGk1F4IL^hEnUW@3FLP=Ma0g6f[YLi@=pppppo62OanPKb2d==dCLeh==dCLeh==dCLeh==dCLeh==dCLeh==dCLeh==dCLeh==dCLeh==dCLeh==dCLeh==dBL>5pfH7pAP^5p1J[_2gFe3Nj@FpUO6pe@4L@WmSgc?iGZOa`DpQNYp2nCo5kWm;f?iGZOa`DpQNYp2nCo5kWm;f?iGZOa`DpQNYp2nCo5kWm;f?iGZOa`DpQNYp2nCo5kWm;f?iGZOa`DpQNYp2nCo5kWm;f?iGZOa`DpQNYp2nCo5kWm;f?iGZOe_9So8:iPkUdP^QWImepA=eCM4hA=eCM4hA=eCM4hA=eCM4hA=eCM4hA=eCM4hA=eCM4hA=eCLf6X5]ib3kNATpiFZJ4OaaKJ2m0KpXpbKP=pSP^@6pcaFX3Oj=dp;`OjN06pbmP=pQp0K[o0MOa3[o0MOa3[o0MOa3[o0MOa3[o0MOa3[o0MOa3[o0MOa3[o0MOa3[o0M@Gfh1O0=jlOa=H6QR6pbBRQOni3pj0OoHaKpUV0hoR2jR:^G8:^a`c?0?Nh0J22fYH;@1YX;<1Z8;6^P]:o>QHA@Y8BUQ2C2TT1oE971ITVj9_BKTVj9_BKTVj9_BKTVj9_BKTVj9_BKTVj9_BKTVj91K4T5]B@Fb91K4Tf7df2FSR5p1K>4MP=hcObOJho:2e?m]5T0f<8e0J[6XjPJJ2a0JG_1Y]2KeVR0UP`JF8RGmUQ2KmVbPlpCOekKoWBpf2B2pY@=9pCY`kD3B@Gn8WpY4m5pA:?kAApA:Ok9C1Oe2V2pX5<5p30Z8;o61DOe86XpXE?n2ZpXEGn01Z8;o61D@Gm<2XpXU7n6XpY4pn:WpYDe5pAPKpO1?o<1pcP?pppppWU1S_3ZZ<EpA0^poOjNi6pfL7p7JpkJGpN2c`pFApmb=i;:2gg1^]0gTE3B2h0K:8SCVeQ3>2j=8IIM6VTIEKeIpfK>2pZ@=U1Of3GoXKOelN2pY77n81_?k<3L@Gn0lP`k1jp@0K`o41l1OaHNaGm8;`oP0hD5p30_X;o61LpeCZ2pX@=`pB0KOoT0gpn:ipYWph01`p_1ppRQOpiHOpiV?pmCWpo;jppRNppbO`ppppUWSASN2e<@`8;G@G83KKP=fZ0h_Q?1IDm5TBl@=9SBm0=7Q0eD5cBH4OI74171MTDA4OQ7455iB@BCaTaPljBOaP9?i@4D5p1Q71Oa@TpPaUpQ1A@Gm2Bpa@TP`i9BOa9;1Oehm2COa2Ko2DT5o0e`m3Bpa=;p0ehi3COP==pCaGf?1OTe5o0e`m3Bpa9=p1:Co19`i<Y?i8Oji3pA0Opppp3?8Rgm5YHROe3N2o?]83NXQ6E?6Ag9m8;@acVS0k4g0;l44^=53UCH0G[1JF>Tb99:3h0JJ:701Y<0>KaFTUY8CH0?T1YI@H9]07dCc@aVa0OA=932JBQ>BJF65=P0oBJD62S01i0?@VS0i5<8a2KAR0eTI34fR1SCAaV83HAeF5;7@jP=I6@bYXa>T;=7Q0m@6Ta0Na7]XCL@6Ta0j`1J>4HP=9P1Gn4Va0[oQCH@NpQPDV49hm64]5P1Gn0TP]0Fhm64V4;Ko61@iPWOe::DPpn8Ra0[oVAB@MpBXXi?oW0e4H;o1je<I7o9L>1361pShQPQRQoP^1933pO837p2B6Goo>6OmHaKpU53pKPOn_1iWp6FA7_4^32?k@5]8;o7GkTL5k2GcAMaUi0=52<P6PjS?3<a:bPJ3P6iiPjP3GlaVn@La88;F4da8T4>X;le0aX=@;p3Z3l@3hi1Q@J0?o8:46P3pR0Q1pFQL8?ke;Q1pFR]?p[QL7`kiA3pfaVSpfa_3hnJ9QpnL:QKo^4@pnN:QKo^4@pnL8PpkmA3pg0JGo`4bKo^4bKo_4BhnL8U`keC5`ki=;pH1YOl0;;k0j1KOPE_3d`a>K47m8>^1p3Pn8Klo81maNnp@P`8PpY0^]06PpYAOXDmH[c<^iOnHHOnL8djGV2e<8pX67m3J@GMjd4hd@1YX;N3p<3BK@OlPJ;N0n0J22pZTOnFRpZeGnFQp[445pEX?kb3pEQlhnFPpZanloZ@OfR3o]3OOf@Klo[2OpF1;p[@Op[@Op[POp[@Op[@Mp[@Mp[@Mp[@Ep1SD2`iDVP5OaXn0:pQagH5Oaip<2`iP`cPKp;T0hoK61`mm5QOk`ke;Ko`0midA;V1XXAn0IPfpH1]0e45`0L4Fa1eAJ@?]Rd0ngA@F85NDN47OBB@3oeTT;NTLP7o8Y:?nXj:Gg0<i6RQQ1]0IeL@46]1WAi@WkP6M51HP`]a3@RcQKiaGXAJ0=;Z@lA6jZ@Oe8Fpn25`pA0ppAPppAPppB0npAPnf0K0?c0ePOT1Z0p@7X0p8Fg@3Oa<P6pQF83Oa`4paH@=p6obS=TnXBe<@`@6bk8H;6WP^PNnY3o46T;ON=k7j@^o@?i0WiPhh8OJ3m0Boa?iA^aO_4p4:m?c3o8GJKa3o<AeoPObR>Se3o<9hi7m@Fhi5iaOpQ>aQ?p0lR2gp0`44po4l05no1F49pmLk5pbb@Gp73QOmL6UpbaDOp7Pllo32;oR@peB22pX@UnP6a;KZ4l@5^g1h@2`H?jPGn1p64lm3o49hmEm;p945pUQYpWS8H@Un0FSR5p22dnPJ2FZ^Ce@aFT;j;1KD74?YA@FP=Oe3m4L5U@nQ6PSc88;]3_03@iT7]3aXjJ3pP?H4N07pX?H0=591ha7]:>>Up0jQAbTpi=HDLM1p1F571Ob09P0eD5p40g191Ob0=PBOe8W@Xpk45i4T5p70X:?oR3H9H;oP2iCOe@G2GoS2DVpXaFWpXaMCOeRWoUCpea6UpYP=91OecGoXBOfB:2pZDGnFQnPj]@@Ga7^@Cpi>kPWpa[miKloQcPpp1U5R2Gm2FVa1KK@nES5@phaepiaepie49Cl0JJ8Gn82gpm6hpT3AaS>2fD5c0e?9I`0e?II]AN@=E1J4D5kFIeObI1I0=5mGI4V]1ZGI4VX5kD>4?Nb98;@5nV@I0`]@6Se8<c784p8Vc8mP6Pc8<SO:SaPJ3:fP]K?>ccPJ28ZF2e[H;:Qc8X;J2e<8e1lgE3pB8H;:6opXeD5U2OpAPJC85np@PJR8Z3oS@H@==pA8LRCoSAI4Gn6Tc1?pY0=;Q2GpB0K7oT0g45pB<H;oUHOekpoX0f`nB_pZUT5pDPJZ2pZUOnJ1Z?kjC1OfX6VP`kjAp@Q:c0JGm1YH;8VkQ;GHega9KS4VcP^p2mBJ6hoN<PpmAe;pb41plQ3pj27pc6Gp_2eTZZZhm:pZSnEE_5@7NRC]6cA@G45H4O05HTVX;K8Se8<k:2dPnYA@GU71N0=3kAoDL5i3h`@Nnm2Oo2Om0e<8l0JSJ2g45V0eN5?R@AR]ZN@WnT<AOI>TI;`1J68GMUb0ge5Z3h<a6WdQKKE6@9h9=1H0NkYii?aVSYO06UX3bY`CaBR2h9XIClee8DlT]@4on96@Bm4V@9O=9p12:2pPQ5p1Q31Ob8`pX0Wpe8Cpk47pk4;KoQ1loQ1loQ1Gn42`k85Oe@:pXPLpX@LpX@Lk0pX1d]2mi>N0Nc0jk1l43W]9g05OQO@`iVe`m<<`mL4pcaCp;1?m^4:2p4=FUS5Oea7W0f`m8>nQ1MaOj]X;R3pIY_8OKj]0gVUM]KjV>^`TIaFQb1H0=WYMH6gQfPKJ7DM2de_m3>2e?<06af?<Bk2f?<P6XP^S`@:hdPkP`k=fpB>`kEdpB_8;oUK@Gn<fP`kMWpE]8ApE[HApFZHApHYHApJ2?;o4;Z2`k<7_H>XXQNPMj<iQK@hgnp_h0KpK1K0=p`g0KpO1JP=pafPKpSZ0hp62e`oN]3Om=SpS^Om=k22fQ;IaSN3pa7D<=M@?op@39ULi;@aSN2]PNnX0JafoH1_@iP703@Ae?5563j8X@PQ6b53J:2f8X2KFaf9H2?FTPTD5ZBB@^]A@GI51MTGM7h@aGH3@N4?Q3i@@GM1j2hmQ``0Bp@?oaGl1Ga5p0?i3W]3o0Oe3k0N07>P301nQ53f4M;Z4`H9n1?X9n51P2idX8A^1F09NX5I46L1V@ia6U51H@6Q751[BA0fY8Z=BB6^RB6^ROJXSQ]RR2@I645RHiem19RBaBG4TQ:G4TQY51HTTE:38Ta1KI4O551L4?=1e2ojPpf1GH3lP?03_0p`fH3L0mPOP?Pj0?@B>XB>X3c2_i6hQ^^0La7<1d0Lb4aQ;j0JB8Gm8;B2m0Kc2j?iOh?mN^=1JP=GYA@G83D@FI1i0eoL9p]3CIPOp9X;64poVc1>pP4g<5pa@Vb0pp12KoYBpfBB2pZDWnFTpZTL5pDY?kY71Of86QpZeOnFRP`kT3@@GnDRpZeGnHQp[4?nHQp[4?nHPP`k^11OfJ3o]@OfZ3o^3OOfPCpki7pki;Ko^0ho[21`n]D;pO3;pU0OppoVL>5mPFQR5n1p<7hna`^@6Qi1?i0J7H6oj0J7BPkY<XNng0eFA1jBHT?Y9Q@oTTE2;eTRXANTe<8`BJ:51kCA0@aGQ=P@o4]5P0e45e0eT5RAM4gE7cBk4L5]0eT5[5KjXCOaa:B2pQ0Bpe06TpX4]5p20UpX0=7p@Y?k97pA0J7oSAOeJ;oT@pePNnpAQlhn65`i0K0On0[B3p]1Z1pi2n0?NaOdPnk3h]Sp3TOi]Kp71H7oG0pdja64UR8^d2FUR5p26iP_lo;lP1`mL5Z0em8cP^M1IP==1K0=M1Hf75QR0eh=QQC@GAQ41?gHA4CnV<8DMVD4Xl<X9AgHaQAfHbDY_P6aR0Wk<L2OT1]8;62e75U_0L6?n01]?iH5Qp@<Ok1Sp@<Ok1Qp@]?k5O1Oe2loSGOe@6^pXP=I1Oe86]pXa=GpB0KpOP0hp6:5pdQUpgP?pppppppppppppo9b@Gm1f=6:pYa=f1Oa952=8;DaS_PQ783Emanda_h1;o]=@FhjSX2Mp0<X;82pi8JiaGp22eb0`o26mU1paP^m0;pPC_>7pP7TL?pNbapjj9@`a3NBT7n?m@GhIpS2hk0Kk2c1?j?i?@3h1p2`i4pPOaHOa[o2Gpm4?i?o27m:pPUpp1Up0pPCo7`i1p1paIOa?i4pQOm2Oa`o2Gm:p0Ko3pP7m?pa3o9hi3OaOm3Oa`opRop?iOp`iWpP=p4li1`pm:OpkWAaO^1JB6`K>2j0KZ2f`iNdXXAU1Jd@3W03D@Gm8:OoPDOaa:KoPCpe2KoQBaGn0UpXDT5p@Xpk83AOeB>2pX4L5p@X`k95pAXH;oQ0e787=PJpX4lBPlQKIahhP;l84`g7`HGoB>QOjHBpf@QpZQ3pEA2HYj2FSR5pC0^`2?lo;l_pcma=pXh?ne5X0hp7<1`oL5SOnmKpdQOo]3pfQ0f>Ap5nQDJ7m7T0eN^p0dQ^^Sk2pP7`m67Wm67L5p13Z2pQ1LpaP>`k1b1Oaa;J2pX6m5p@^X;F6mh>=J?H1_=:F2e0K`:1Z<a6pjj0=pfb0Kp^Q0hpN>QOoHZGp_6Gp_6Wph01`om5pHYplE9pLQ`]jK96:e]@_KN2g_i;Boe?i6D7=X;D@Gi3COaBTP`i9Apa@UpPQ9p12Co24Om64D5p0TOm64Om48X;o18pi@D45p0TGm64Gm48`i8AOa@RpPB?o2D?m6D?m0SP`a6QpPcPP`k?o1?m]4pc@UpTQ^pSXPoHhPJB4OaaK22n0KR2j`i71p4pJpbJ@=A1J0=A1IE71CT0e`E=TCMe]5QBaGQ;Q0eWY=W1hgVpYe`n@TP`kI;pC9`kE?pA:Ol3o3:c2pPQKp@<X;mfp2kPZpkH5Y`kL3Bpf06TP`kM=pD9OkU91OekGoXCOekKoWCH@MpPBF0VpP4T9CO@=92Dpb=32J2m0JF<2VP_P6Vb:8;P1YmH6YQ6UGV0ho?D1`iWlP=p0j`?CCo71XiAe6D6N0MDAR`k@5`Oi1pSQ7H3Oji;T1`nVnpcfPKpW1IhpO>pmj0=[W0gT5RJka=WRJlVV03I@FjYW1fCaInPMi]X;oY0gGnB1]pkM`p13o1p1Qpp@??k=d1OeS_2pXWm3o41p3pm2Oi?dp7n0JFm5pDPKCo[J@GnDdP`k^WpF=?k^YpE^=HR[l<j1F]l<XB"
"ek<iJJ@G1Y52eh=L;J2d^m@6pnIGpW>pl@FUpdh?np9pZP_lp51OaFmP`kH7E4H[_;eI_0eD8o[_lB2i>8;Hmf0JG<We9MJB2c0J?NTc9>:?6TjXX;2SP_B?21X_RC:3`E9p20TpQ0ApaP8i;o455p1Q;p0T]5o0e`UMkEp5GjK1NF7P1UCOe2GoPBOe2CoP0eGn0SP`i@4D5p20SpX4Wm82Co41981OJleRQ^51MeL9BMa=532C]TQQ;d0eDI1;1KP=9RCK0=91Hem5U1JG>1`^@6kh^_X6^Q7]5XHAa6A5m0VYiAp1Qd1NTT5UDbaFf9_CbeVY7Q0eN5=53XBB@MS3k4m@<c>>QfQ]DTE>A972KPDVRQbY8XN8:CA@iTTD?A=53RBAaW9=53SBB0CPVRQc9L0:g0JF:3>ZR1YCAaVL3Ac4;>VSXM@>HaOdYii;L2e>H5Ym0;o0Jh42pP6ZP]@:p[Y:NpQ4aP^;pGYi;o45741?p1S65eXR5pBPkVQ7nDXQWoW0eeAOkMA47oWCb@jQG1M54@<B687MA93:B:7]XS1YiXNcR>6CA@nTmP6CA@nE4T49HkCT1YYH<4]D7=?=1X9HiCL1YXi?41Y8iCFWTXK81Y8i;>WT8FY=2<ZS23_T=2jbPl^6D5ZHQHaOjPnj3OMe48fR=lo6=Cb4j0<87h2FQR5p50YW4KW]3a0J:4H0UnbM3<Y38G_8K;N1i0hgi;dX;P`^2Mh5e?fP[g;P`Z0pXcSl@1pb<?pZP_47nB5aPpZ@_47nB;PnpE2XNpZ1E3pf8`2hn@9XOnD9a`nB9T`nB8T`kXC9?kLCH`kT3@aSod3h`l4?Np[afpnJ9UpnF;QOpE1H8?kXG2po[1b3pDQH8?kT;Q11OeiG222pYa_445pCQH88CpCQ8@A0pXa]44L5p@3H;g05pb8X@HaOpSH;gD=ni0H46Y12>87P@KTL5Y4n11d5c[@aS47_N0^=8SLpQReL@_H`AG8E`Wi3F@GEYb0ge5]3h]X;CJPUlT]5W2MbBJP7@3AOe:;oQ@peB22pXD7n64poT2opX@UpeP?peHGhn25^p@QKpe86RP`i1Cm2oDNPEP0ehm8:Ko32Ko41;p@8i;o417p@Xpk55p@XL@:o89J3`R303`j191piCk445l5N2Rn0lR0eGL5jP=51L@G[BKP?R1XX;:1p0FQR5b5j9k0^32?8C<J;V3VU7_1lH1XMH;iXX;<3`97V2McBI0Ok9<HCoR?65`eA@F91V0ITFE1U1FA5V2hc0NE3Y@H@6I1^0eT5S@LP_maKlo83pk192?PFg512>P:eX8;P3g^31K0Lh8`i@4D5p12?o32Co24Wm2BOaIABT;lY8HAnDL@DO<3A@aTP_B:>QALeF=5c@jT?0=OZ@K@nlL7_I@hhL3B@SV<gCgPJB8GT5]HAa4hd28he>e?Ne4KP`IPWlc?X?]@Bo@Cm8Cm8CoP?iaOa1>k1KHQOPoiC]@_aGL9g<EehL9g8CHO8C]@WaN0MbPpp1p45^n1p0PpQ`4GjEoDOee5p1QE2?j5N^pm<GP@OaYm@BpiAmH?paSiaOpPpT1pm3o@7pa?j0Op0pT3o`@?ib?cm0pS5hSl1KHA`eOX3o=1P2ohQ?b1lg0?NfRpX8]Z6FD534171J0=O0Bm0FdQ7L7DT@_0324`X2eL@`i@FL8m0J22aP^E1LD<5Y3pDVe=Oa3o4]5V3Gmb=XB@F8=Oh1N1;R@N0Ma0J:JPomRNPUTPpi2m:BB3`P?i4TM7o1N597ApPNa98iOm3g19p@0`01Xpk07L2CoQ3k4`n06]COe8Kf;p@Zi;o61D@Gm<2WpYUL8pY5hn89_:B2pXA=XB@Gn23o03A@Gn04l0TpX@GRAaGm@3iTOn03_99p@0`4TpX0WH4T5p41g191Oaa_5;4;o3o03BAAp@Oa9XiOg3_1=;@nh4M2O24p]7m:LB7TPP:]c64J@Faf9iIKKa=p2>[R4OaMCA2k3JCg8hLZZZ`kbpWW5EF^phf`ooYpie`p>P3Oni;>pm@FMp7jH0==1JV]@^@6VP^RR:[ZXhQjGnApKZ?lQ?pL:?lL3COgi6Vp^a==1OgX6VP`lD3C@Gn]Xp^f7n_Xd0?k^?U2opYf45R3Gpea6hpYP=b1OeaJ^[pH]`l=QpJ0JcBQOk]3Fa445pE]X;o_GOgRdogEaGnZ[p^UWnZ]fP[oQFJ0WpeBd@5`p@[=0Nnp20]P]8;BOaHIa5Gm6F<TLXi;k^S[<P6RP`BhNTP_a6]P^a6UQ703Fmf<8e0K3Zpf@GEpXP_P6pdaG@3@@gpROf@H@=l5Og0mi6dRT@aGn61Y8Z]PJpoT3h_0;pYT7<1pC8Olm0PpY0647?iL5pGXH;oY0eT5pCZX;oPGaGm8;3oBgQ;Dn@nlB4^91L@hh151LaOiQlhn<2eGn>1Y`k<3E@Gm82poPH@Gn0PQ:OoQ1F03B@GnBVpZDhnBVpZDOnFQpZ0FRP`k85Ypk5E2?i@e?n:2e<8pY4D8pYT<5pE1``k]9OnL4po_2op[0gpnJRp]0Np]AVBgT9J64NF48i88;<1XMXCnc;BPi0J7<Ri8i;41Y8;HTb9nZB2a0JGJUbY8;HVc1;iY`i1;p0TT5p09?i8Apa@SpPQ51OaBPP`iMOp5Umj0JV4NED@`k85XHAp30XX;o32>2pQ1A@Gm49?i@DOm49Oi8B@Gm0UpPBKo0CB0`_VPTWA;19_JB0Yj989?cAbDXoH6Ra88;XRP]0Fp@3@@F@?Nh0J22e2KjWAL0F`Q7L5XHQL1TQO8=FWR5p41VMI2>aFgfO1Ke]5ZI@FUIWJ@FIOUK@F=S1HW683Hih45PJHW45PJHWF03HihF5STMHP=KUL@F@3Djh6^12=COoPKOe;B2pXF?n81ZiAp0<pl03DaSo[G@Gn>bpYVWn6gpXFpn0iP`i8MOa@kcR=lLkS8:^K_65gUj1<=3c0cd`H3;<kP=LdZ0ed_XIH@FId333Bia1OYnKJ2aQoR24K6_H5o6NX9h=S1KPLi0Jh_5YWF@So6;CAfGLE<_TE`Vm9V=1Z0nB7:2nR;43of36@@aFU752RP^2:6TgQ7459XB@Q71J4T]6gY9gAneD5gAN4?Q3i@@GL=nh3OM@gW191OPndgPo8O@6Pn8O86PP_k?aRm8X;]SlY>cBB=^RB0SP^B>4Y=B:0VfXX991JTD8@aF^39@oi=OR1Nj1T1F]9NX9V@;KN2e<8fP<0G6DA`K@VH@OdP[>PbPNU3Q0JeDM1ZB@b]B@SJTU_>c9H2B2b<LK;4WP9<BJ0TbYH@RP]BBFQK8Ti9>2:2i8NHCoX;fPjQ1FP3B@Fm9V07>i?ne7A3dA@G19aBL4T5_BBe;I4]@D6A=18mJJ0Ub9i2C4cb<8;4TP9LRBFjK8TQ[HTQSHSa0=B:<Q[@iPEX@I0Ld0pY1F85Kb=meS?5ni6TQ7m2IaGP3LLhon92<Z`HRP^P6Wf8>H6VeQ?l9X;<5^hCIaOn9]a;nY]XC`BG<2pRB2c0lmBOek?oWApei6PpZ4<5pCX8;oV@peaOOp1QS2?KV2kQ`]i;C@G45Kem5pB9i;oTCpeZJ2pY4]5pBY`kE=pBY`kE;pC98;oUBOekB8?n4RTXlo32;22piD:345^p088;64poPdQ?o8=:22m1OJeG@7o2J4J@hh83JaSk4^74;c;iGa1J64OahV<A`MPUl4<5a2G`0e>e;OT1XMB7XRP]a6Pk0J;<RkXmc;]RP]P6PP_R?>Rk9<k>2i9=HSLh8pkA51OeJ;oTAOeP6PpY4<5pAX8;oS2Gl3h<8?p@=I1O0=51HD48m1KJ4?n@RP`k<3A@Gn6TpXa=7pAYOk=91HaNmYL23gVQ23kVPT45mC@4?j;2D7j90ApTT4RoY8PX?RB8R62mY<8Jpc1XLZ22kXmk7XQgX8;JQP_8SLcR=lg4^34;V;aEc6KUMP=O`0ge5WNaF=p1iUe5R0eL@5_Y752WQ6b5Q@aG95p12;o24Gm48`i4RpR2po24?m488;o0@@Gm0PP`i111OaZpiP;pR0`o91pmD7hm@OOaipo91pmD3hm>;pR@Op50np3Qpk0;lo83piP7pRPFpR1Ko73pe0>paa:F4XHQKWo6FS;oB14FhPkXS5OaFkP_[p3`0hoF2eYXAWIaFI91KP=QT0eO=SSBMF>5;gHAT4`IS41=gI@aVl<]8Rhl<`k5Q1Oe37oQHpe06apQPF45p1K;XpQGIh2?CWonQ7Qp4lo63Ipe@6cpX@=Up@]pk5Wp@]YZ[OadPT`Q[0BN7m3apPN6L1=iI@gTl]i@Ul0K:64`AW7@YN3C61YHAX0gNL3Ok=Sp72>8;NpPfJN<Ec6e5p8>Z8QOea;MpaK@aS8bQ7H3@@FY[cAKh6f31L7>^11LWD5Y2IeNOeKc2pXG`n4opXGhn2opXGT5p@`8;oQNOeKZ2pXh45pB^X;oWIpfRk2pQPF]8pY@=I3GnkWR5pI]HApE^X;oWLpeddoSOOe;poPOa?i@7m:pPQp1paHOa`o27m;pPQp1paHOc:lipQB3ipQQ1lOH445iNI445gM@FH=OfLKDD8h=NRB4J6?e3OaSoR3EYibGTGe`L4^93G^^2>06ng?iWja=32=Jd>3h@3D@Gm<2WpXP==pA9pk==pAY`k=;pB98;oRBOeR?oT0e?n81XOk@CO?k4CO?iD::4Oa3:6`3W]0eP^A1Oe0;Cpe@6WpXP==1Oe:OoR0ehn4WP`k5=1Oe:J2pXDe5p@Y`k9?p@PJB2pX4pn2VP`iH5;p@0JGo41?1OaQYOiDJJ2nPJ_2iR:^KgH@SiPSZ`k4K>FjQ;Bb2pYPFjQ7e5`m7IpZP^a6pgaF^pcf?oL5X0hp?BTd?iOf1;g`pi@7]5p20lpXWGn6ipY6hn<gpY@=^1Oe3o7?Kp;c1KpG1K7p;F1`o<5YOn=CpW[OmX;F2^;o9pm6Gm3o45np20opQ0Npe3c2pQ0NOe;do61M@Gm8;do45j1HQMm^@6pb`p6<3On][p^W0hp62f0KpIcOjX;c2he5pA1ZeeEGmDJ>L;EC3G5h1Jhm5WOa`:1`iObPjb1JR2pPU;p2QBOaHBpaP9?i@4Wm82?oPA@Gm64Om64Om8::2pY?P6WP_C22k^H;RjP^P6lm1;F@Gi3D@Gm4YOiD:Co41;p20UpQ0BOaP9?i@4Wm82Co419p20RP`i<8piH53p20SP`i8ApaHBOa9;p1JCk2ehT5ZN@Bfe5Z0ge5`I@SX[Q7XCc`j849OoQBOfH6TpZ@==pD:OkMEpBPJ[oTFpeBpoQHOaa;3o33?o24e1?p09i@Vp0JJ64hf?5@Vo9m:Ke1YLJKa1Y]RK_WP]RK]WdY_P6Ve9_JODViYi;DVi9nZKL1Y^cKJWP^cKHVP_2KDWjY^06Vk9]kN2k9]dpppppppppppn?i@4hnFVpZehnFVpZehnFVpZehnFVpZehnFVpZegPKDHpYFGnNep[@=YpEPKKoZLpf;[oWNOeX6mpXa=npA?i?oPOapp20pROp22pROp1;p3pGaC;k`QYUmGAD<`@6^a]`06^b]_kp8ck[md;X_P]d;T1[M;;P1[MK;L1[M[;J`h<^Rk2h<^Bk2i<^06^j]]a6^k]]dpppppppppppppppppppppppppppploUIOg;;obIOg;;obIOg;;obIOg;;B<gHn0JCo41=p22VpPQAp1:So0EOP=EoFO0=IlGoP=50BoD]4Tm0J:6TWM;32C]1XXZ4WE9QBM0=51H4W=9SBLTT5RBLDVE9aB@FA9`BIeVj91ITVf9YBK4VY9[BJeVY9]BJDVf9XBKTVM9`BITW19UBLDVAppppppppUo9?k59p@Y?k59p@Y?k59p@Y?k59p@Y?k59p@Y?k59V5c5k:OkjA4CoYDb@pf2V87n@1YXkCoWDA@pf:N:3oYCbeWn>1YXXOkU=7AHP?o41=53R4F7j;6@aRlap4e@<86PRQo99J44TD?X3BB@PVRQn99H<4eD?U961a9XXO2B>2a9XXNk>>Qb9XXNcB>6b9XXNZ><3UCA@n4DM3VCA@meDP6d9XXNB:<5YCA@m0=161fYXXMk6>Qg9XXMc6<3_CA@l0=143RVRQf0KpQ1HhpN2pQ0CI4Om64gA558pcc@aRQWo0CE@aO3p09XXLa?Oa2J:706`pPaVRQpZeeD?nB1Z8Ppeck8hn2eR=pMPOnk1paP_]@gHbpCQlhn_1X8;ogAaGnX3k62p]a`445pHQp222p[b=i@@GnJ1X8H@@GnF=_L88;oZ7N3222pZ@GQ2i@@Gn>2mHG222pY@EU2i@@Gn63_H;Q11Oe8>k0_445p@1>e1L88;o83^@G222pQAl@_445p1`N5aPP`a:iQL88;i3`8;Q11NP^_@G222mQ>k1L88;_3pL;Q11MPGj2i@@G@7p@G222j1KNP_445a2Gn2i@@Fi;Om5aPP^0B7o:66<<?mD<<8;oS2i@@GnV5aPP`l<;Q11OgHG222p]a_445pIQL88;od2i@@GnV5aPP`l<;Q11OgHG222p]a_445pIQL88;od2i@@GnT6i@pgHKQ5pHQl2;ob3o4D5p20pceDO:OabpnJ5`pF8Ok^5pDPJ;oYBOei:ApeaC4Gn:5aRpXamQ5pA0N55p@PN95p40V95p2QcX`i@Lc;o4C<Rp0[BRoP`DRo0nZANPE^AN@?NRlP`PRl0naAM0EdAJP685n4FLCe7od0pgAPGo_8SpMp12;o[AOfJ;o[AOfJ;o[AOfJ;o[AOfJ;oZBOf2Oo91Jl><mBpPhpF8?kT3@Oei6RpY@=9pAPkTpX@^4Wn06iBOaaN19p33H4Wm8g99o1FE9m1FM9k1FU9j0nJC_2nRC]1lTVX1S1dLTf0N05LDVXAPmeVTAbn4VPCj_RC:RP?npY9U@oTVL9pY9X1heTeP`eTf0OY9Z0NeWn>TpYeWn<UpYT`n:1Y8;oQ0f45nMI1WBObAp30Z?iX?]0?pb0nR1po0@I0Op0J383pf7T1pgPR?T1pe;nOT1pa=_7j0Ol1;a1?c0pf2OQ2OT1pX5nQ2OT1pT4`84p83p09NH9o@7niCmiCmP?lP`]iCmP?l0WkPWj0Of1;g1?c0pY2O^2OT1p>6ogQ?c0pV2Oa2OT1p8J`EEED>@IkZnc?m_A?i2OT1po6?c0pp37j0OpQSmP?pabo@7piHp83pm<OT1po6?c0pp37j0OpQSmP?pabo@7odo5K7m:g?kE8cpm8:[oXFpeiKf?pBROPVpXa^m2KoR3OH4hn2PP]2Ko4151H4hmL;lH4hmLO7H4hmLn7H4hi9N09g1=m2haQ>a9`HKl24l0Vn1OHaWH4hP9NH9g1=g2hdQ>a9_XKl>4l0Vk1?f1>a9_@BnPC]2KP5`^2MPCKahge9g1=_2Oa2MPCK0UmPWH4gX;OV4l0VeQ`_@Fg1=X2Of2oa9]a6oP]3pW1H7p>2a<83o7]320pQl0a`RZZZZY:ga9Y:ZpQ>a9`k@9g1=pB1>a9`k@9g1=pB1>a9`k@9g1=pB1>a9`k@9g1=pB1>a9`k@9g1=pB1>a9`Sp3eOiNSp3P6FXNPEpOYTL8p`aHBphi<9H;op0Thno32Kop12Oop0Tpno24e5pOP4m5W0Og:S81XOkjAR0e`nD1YmJR2pYf45QDaGn>XP]BR2pY@=AT0e`n@Zd0J7oZEJa7nF1Z8;onE@GnkZp`@=EpN[>RB2n[>ZB2n0JZ2k98;e]P_RB2o0JSN0a9?i@DVLA`H4Wm8:?>Ta9?8:a98;<Ta9?0RoBaFI9PBN5gQ9PBNE_Q9PBOP==XBH4Wm0TP^2C0Tp`iBjb2lT`pN9ppbAT7pp71I0=ppQNUpkQ6^peP^0_e;pI2=dp`1KhoZ:Q51Kho[0RP_[Z:E7PA@G^I2<Z>:Q51Ob1f^AbD8X;ogAbD8`lQ75@Rp_DDE2;ojAAD8`lU55@Rp_DDE2;ojAAD8`lU5=@oOh::2p`e2:2p`e2:2p`e2:2p`e2:2p`e2:2p`e06PP`ln2QP`ln24do?3A?P9Wn25^pA1>pX@UpeP?pe86PpXDWm8:Co24T5p0TL5p1Q5p@XH;oP@peB7oQ@pe06PP]XC>R;:6ojXmPGhE3T2hl8]B;B2]@6SS4X]X?HW613R0hmC<0NnQ0g48bQ>fZH;kSP`i8BOaP8`k49pn64poS2hpXe7n65npA1?pXaUpeHCpk<;KoS1hk:iGo6GpY@=1pAPJ;oRBpe:Ko61COaHDpaXepm<XVpQ_4hi?XCO0EQCNaWH4hX5HehT5j4hP7]RK_2mcK]3gI=e1h@VjQ>e9_@:fY_8C^BKP2^ZKN4lHVh0`NVgP`PVc2`3iY]P`bh1=T4NO==T4olTVc?ppo9pQ=T1paVc0piCI0Om9]P?o4g@7p2KoQCOe:KoQCOe:Kemi?<0_T`n:1]`kb[pE^`kT3KOf3WoYLOea:LOePB77n40a>?k81PLOe034ipQ0c>?i@<SSo2<dSo0e>?X3DioP=CSe0g_?83LimP=dS_0i>>X3TijP>SSV0k>>03_ihP?3SN0m>=P3gif0?[SB2`SSB0p><a3o1><[ppQpQ0LOf;SoYLOf;SoYLOf;SoYLOf;SoYLOf;So41pWWRYG_2piApiCpc3kQo0J3gSn0J;eTm0JCcUl0iTlPY9f2@TkQ8BLa619c0HDW41RBL06=9`0I4Vi1UBK@ETBK06M9[1FI9Z0JDV]1XBJ06^9Y0JTV89Vf9R2ig9<@?KTV9pQi9<@7aBHP?PTb0O19R0o2CeTn9?BCeTn9>CBR2ASR4[aPlXNa6Pl8_Z?X1X_RCVUj0JCTViYo06Vi:=i6Wh0iVh0mVgQ:CK0]4ga;1=[3D9^@32Vf0<:KB2]2K@0bY^036VdP[4Vd0<ZK<0cY]X:c9]P3>Vc0<kK62]cK40eY]ChFVj9_BKTVj9_BKTVj9_BKTVj9_BKTVg0Jo:324`oU0pki3@OfJCoY0eWn@WpYf7n:1Z?k@7epn65iVpX@n1=p40_1=p41g1=p2SbY`iALRKo4l8Vp0`>Vo0lXCNaWJ4hX5kehP7MRK_4lHVl0`NVkP`PVk0naCLPEdCL@GeCL0GfCKPMl9^XC_cKH2p:KD1`o<4pk@7p>0pkOa2KoYCOf:KoYCOf:KoYCOf:KoYCOf2N2pY5L5kOb?i?kObe`o71pfH?pf8Fpn@QpYeGn<SpYDWn61Y?k9?p@PJKoP1BKoP1BKo844hm@D9`i5QCOa69=o0Heha1UCNaETCNP?<VmP[<Vm0=:K]3VQ=f0nJKX1l4h<5K4h83h9_0>KTgm5m4gH3a0naCIQ63dCIPo7XVcQoGE=T3oocK41`oOY=R2hn9]P>oTgD5oTgH3n9]a7kCIP?eVpXTm5p30Z8;o2fT5hMeD72kdU1NEEY8R?nD1p[Q;o>@@A0Kb2c1?b<8AZ2oeSZhdH5npBP`oW1poX1On@2pkP5pf0;pZ0GpD0[oX1hoY1loW1GnB3pn>XQ7fUj0gT5fKaGD5^?iH^?p@YpkI5pCXOkM11OeZ7oVAOeZ7oV@@Gn:PpY@=1pBX8;oT@peZ7oU@peR7X1lD7P3e2=lg1iando>3O>Pg8^p20]pY@=IpB;pk=Qp@PK3oPIpaP=?i@FWm2Kpa3Sm1_?P6kn`OB>0em0J:2JMeL==>c>83CX1X]3CVSP]3CTSb^>06RP]CCNTc^=cC<eg98;<ef0J?BeeYMCC@TP^CC<1Xn[C:Uh=<RB2h=<@6Si^<CppppppppppaoVhm4=`i8KOa@gpPQ^p13Ko26hm4=`i8KI1=Ip`a7noS1hop@1KphiD:3op1U5pOP4`nmWp`5?ne[p_5`n]`p^F7nVcp]FD5pG^8;o^K@GnFiP`kT3L@Gn>1_X;oU0hT5pAPKk2pX@=p2`iP5Oa[o857m:pR51p2`a>i7m:o0lROa[e3_Ap2`0>jWm:lQ>d?iEf2MXOa[V4lDpQG49gbp2^i?lhm7_1pRpQNa5mhm;f0`ZpQNP3OpmL4ppii;epQOn6pQOn6pQOn6pQOn6pQOn6pQOn6pQOn6pQOn6pQNXK2FpX@=1pFPJ;o[0eWnDWpZ5?n>XP`kEE1OeHNoTP`k4CO4T5p@88P98;o3232TP`i8@HTT5p4;g991OPnl8TP`Z3>TP`J3BTP`B3DTP`0NnZB@GH?Ng98;ZPhY8;VQi98;TPj98;P7`LTT5_3GnDT5^@nTT5]@@GI91JP=pdP?oe4pkdbEEcBiPfGm498;o[B@GnFTP`k^91OfJB2pZeT5pEY8;o[B@GnFTP`k^91OfJB2pZe`nHVpZehnF5Ua6C5pfiSNp]U<5pF[Ok^SpD<pkI[pB=pk9dp@_`i@7Wm8;do2Ghi3Oa?[o7pKp1kOiO2G0hl0J?6gk0JC8gj0JC<giYH;<ghYH;@gh9MKKHUg^^@6Th=^06TP^dK>Wi=]cORgc0JR2g`HJOpi3pp2hppppppppp30Opi3pp6QOoH;o1>Ok=bpA_?k=bpA_?k=bpA_?kAYV5p;pP4m5pAZ8;oQE@Gm<2ZP`i<982:2pPQ52DL5p1:664L5o0eD@4On76@ApTN97mAj4OX3AIDOU71I0=5iA@FI9gAkDW@3@keW=7]BLDL5]BL4D5_BKP=3bBKDO99]AM4VY51M4VP3@neVM7iBIGpF0pia7p62Om8JOli;o24WnBTpZDWnBTpZDWnBTpZDWnBTpZDWnBTP`kM91OekB2pYeT5pCY8;oWB@Gn>TP]iSjf?m>bpQf`mF^pRf0Kp3ZOinBB2pYT]5pC9OkL3BOekKoWBpekF2pYT]5pBPJCoWCI@FPQ[XUa<>2F:UY1Jee1hY0hoC>peIET5Y1JR2aZ_BW2Xl9ik5;kCj@MoY`kQ;1OekB2pYe`n@VpYehn>VpYehn>TP`kM90Cpe]8BpP=924]5lCA0CNP=9P0e`L3BiU7<3CI0=C[0f45VOj=Kp1`0hp<3M@GP3I@Gm<FSQ7@K@Hd?o_Ypff?o_Upge`ogP3OnM3p`XOnn3p`XOnmlpbWHpfX6ap[F?nLaP`kfQ1OfS62bPJB8GMS41Y2>;:0lhPKpS1JWpF2e?om5VOoL[phTOp8;01^M3S41]=i6egRJhdJ@GnDdP`k^WpF=?k^YpE^?k^WZ5EKgIA5HnVD9JLa=U33B2i<ia;B2g=8c3S@gbPKpd1I7pS@plJhp;NphM7oSepaaSo2hL8pYPMDA2mR=7@pPJ7m3@pPIhm7WOaNH3AOaP9?i@4On0RP`i<8i;o32?o61AOaP9?i@4On0RP`i<8i;22e45bAaUM2=@6ne`i?>pRMTDja==SCaF^=RBaFn;7@XoH6Sc0lhBOaa:;oPAaGm82:2pQ0BOaP9?i@4Wm82Co419p20SpX4D1;jAagRm0J:48i;]TQQ7gAbD98;TTaYN06SbYMX6TcYi;:WP]a6nfPKWN1^NP;FaSg2e<8i3Hd?n>5`pJX`l<IKbpJ1p?nPQQW@peadXOjiZn3p=55YOiik7DpR9R1lDPpR0lHPoQKmD4<>HAe@A@pfk2:7o`@A@pfk2:7o`@A@pfk2J63Bb4o88aKCcPQ3dZQP8X;:2f79=aDAAJTN85Xib2R6=B706mc1lBN6=8gm;_2DWR1`1hV1Z8HhP?0;CA0pZDmE?nBWS1OekR87n@XRQpYf4D>L5O54D>@7L07gDA@i0=1P0ocR@69L07fDA0EH0?X1YXk=AP0oRR@4Yj:4iZ9@<:<07aDH0o5=9@VfA81<2S03VUCP0mRS21jU>07]cVJ@@Ei0E[0hm:a0la0h45R1h_4^?4C<2p07i2Ko3f=8SLpX0VYHRMAVC7n82]dlHjgX?k13p60`OaP8?k11p@1lhm823oQ@Oe0Klo411p@X?k11p@1lhm823oQ@Oe23oPDbR_;V2fP>8;A@Gn0RpXP=1p@Q[pi5P@pac27o=8Gpa613p3D8?iHQ11OP_445o2i@@Gi;Q11OP]47m<@PpQH8?ig2np2@Pp3H;hm647m:Q1p20PP`i8@@Gm2@aGm>`pPQ31OAFoLaUXiQNAFcpf@:pYPG`LaFi3LL745`Lm0``k@9hn:3`n>3hn<2pkL7OkL5peiC`kE13Gn2WQ7nMl0g?m6fD5p26WpQaJKoPCpe:KoQ0eOn4TP`k57pAXpk=51OeB;oTAOeJ;oS@peR22pXe45S0pZ383pa;l64pg4p8Pn1OHeGP7mZB2k0[<WP_87Z1JGL2^i;BaSoP2FSQ7DGT[oT0OeP:pXP^`iT5lam[>Pi]oC;X`P_XCDL8n0jpAPnpAPOn:1peP;pY0?oU1Gn63Wn61jAFoM1N3<PBo8K;F7`K0WKanlB3p93Y1OA3X1GA5W0MTD5T0MeND1hBOa@TpPQ9p12:2pPQ58ApB>48H;]1XHPX_c:64WE37@X_PJp4SjX<Z;T4p@Qi1;g8=XFh09NP9hT5XHAf6J9l6e5_0ge5_2ob1ONPOc0pl1p64`g5nR1pi3o<9p]7mHFhX;K43pa7mHCpH?ia^`@Fg87pP?iaWp0Ob1OO0nn?2?06PTZ^51M@6eA`OePKKoU2gpY@MpYaGpC0lpC1>pY@NpY@OpY@OpY@OpY0WpePC`k<Cl?ii?SpSbm?p2ha1?nQlg132>J;8UQ[>2eNT3M@FnW1N@FQR5b5p;hPKdX6jDdEEG@?XCpb@i9piXL57mD=2J2pRCPWpS1iDhmD=2Oo:71?p62aY`iXJ4pm:?0VpS1HDhmD>2Oo;3@VpRaoZ8bGfd1NGWP3h0^9pF8pke3@OfXJpo_@@GnHPp[P^pki=npFQOOfXCpkj1pFX?kf1pFQ?p[@hhnF;`EpCX8XpkDOO3pk43@AD8?i@D>551O0=5RBaSZUcZXAW2FVe`m?1p1M@FdQ7m8J>8G@E>NLdLZZZpZWmOjlOjX;Zpf@G<1POj?:S>4^IgC@Fm5Z=X;E@G=A]FaGH3B@FUKk0e45cCO0Ol0JCk0kQ;BOg:`oc0f45pI1ZDD5pL8i;oiApgZSofDOgZSof0eT5pK9H;64^34;o19XBfQ7^pSn`m]5gOji;Xpen1^;l>enQ?dPKB2m8<Z665hQ1T3h]2c2pX@^mJhoT1F@3EOgB_2p]ED5pG0^GpD^OkUY9EWn08ZFD5pD:XBQT1hm<2XQ:`o41E2E48pPa[QQ91Ma?>1Z8k551M445SEiTNH1X3GiUL5R0eN<;l:QR8]dYI@;k4D1I[C@46YU_FJV7=pWP_a6paOWm3oQKaGnD4^55En6J7J@gW89>Q=8:]aGgMnWAH@UX8Z^c;oPApaa:7oPAOaa:22pPaQpXDGn0SaP^32>2::UE1KT]8a0JB2g8HAVCJe6^=1J0UlDe5Y1FjAp0:?i4WpPQ91Oa@Tj0jXBL@Wk4D5a@I0=5e1p:SP_a?HDL5i0f?n36:mS=U`k47pkD;OF4^dZOaFP3O@FQp0f?nKlHiQ[J4loV2MpC1>pYPWOea;pZ0GpD0`oX1On>3`n>=m5XiQM7?4;CF2eOn6UP`k43A@Gn2TpXT`n2TP`iH59p@9H;o4191OaP9Ok1=p20VpQ0CBA^kB@U71N4T=Xp:B2CMeL=9Ni6RR0RmXX;05ni0e><7O06PP]a:kPJ22f1lVT5XNCCi2eL8k392nHNEp4UGFpfaFYp[g?n<5]OkM[pA1KGoOPpcmWo?V1`ihWAp4dahR5p17ni0p_PEpM0[ok0H@fJF8GmH6nUE@Se5^[FaGL1aGpf3:2pXgT5p@^X;o41bp20iP`i8MOa@kpPQf1Oa3`o1??i1jU4KgbjQEJGN1MWMAD<<dZ8S62c>XHJI7<@6VAbP0gFA^1HF<5TJjF6IWXFaFIS[0eo^K2=k3N1ZHAh3KIf<5p3QE4H[g:VGm1p0ES0gT5RK@F9^TJ@FAS2<a7o0pa7o0pa7o0pa7o0pa7o0pa7o3HXXA_1l:6onX?R3gQmPJ3cRm8p2:2l8X;]SlY>cC]Tl998gg8XBSP^B:6eVY519MJ:2B@FU34A31JP=1P1pLPP]8;gQ`]P:f1`^87U2Gc5Kj_5oIk0>i7PIH6F1UPIH6F1UP0oa3a0lP>i3Z2_X:kP[Z2_X347`IcD51oD=1R@HaLcXL@B]R;21jeDQ1dY8i;<TRPe98XM2B:W@TRYe98RJDT5]CK4gb=]CK4gb=92V9=18]BJ0SP]2F4Y<2B0Wa982O0TP9H;0TP9LBB48H;4TRSe8Xk7@Ra0jV@@F81V@IaLa1;g2=lB<mGb0Kp5WOjLdp;VOjLdp;VOj<i?pfX?pfX?pfX?pfX?pfX?pfX?pfX?pfX?pfX?pfX?j@UXiAg1p01]X;P7m_X;HpaJe_X5ZM:7TZdQ?lPJJ2c0[gWpYDpn:VP`kA;1OeZKoUCOeZKoUCOeZB2pYDT5pBY?kM947oQAcDMp22Ra0pp12:2a1KOP=3T2OnAIaWoTNU1f0e>f72=8;Alhe5bMN6Wm:=34;g<kFk1jFm5M745dLnFm5e0gT5g1N0=FQQ7X7`kX5pfP;pZaGpF0npEPOnH2pk]5OfP?OfH7pFPOnH1i0=52?aNAS3lpHGVP3@@GH7^P6Qk0`NSP_8:i0J;P0k9?kI9pBY8;oSB@Gn6VpXehn6VpXe`n8TP`k=9=@KNe]@4L5i0eLH59iBH4hQ7Q0eOL3AHeL5gA@FA7f0e>Q7dAJa=11L4?13^@aGD=nU4Khm5XXJlRn5l@ndo41;p1Q?p0Te5pCpaBSpPaTpPaSpQPD7n0QP`i@4?n06`pXD<5Q0pR744pePbXNiNnRAMPWjDGH;l8RkPpVAn0Od0J;T5^WAk@687n:?R6od0J>8JV4`ihg1l4;<RP]k?N4dHRpXDGn2RpXDGn2RpXDGn2RpXD45p@Q?pY@WpePCpk@9hn82pkL7`kD7`kD5pea>peX?peX;pYPLj3HRgEpXP^;pAZ0hoODpekWoSFpdaFUpXP^;pAZ0hoODRP`kn51Ofc?oaApg2?o`Apg2:2p[eD5W0eT@_Z?41^8;NSRSN@F^pYe`nVMGXJIE45]IiTp9US1J3X1]M@3ZdpXFD5p20cP`i@6Wm83C62`3B6DGQY0Bo6L9BN6D1?hIaBK]1]XIBMVDA4`EU"
"QBmgF83BlgD5TCaS>dP^3p=`0hmKlZmQ7m=FUR5g6CUmGo;c1`m<5i1Ono4Kon1hop1Ono4Kon1hop1Ono4Kon6g2e]H[oSOaSoRQ6QK2?0Nj]Ho0?ReP`kM`pC>OkAhpA?8;o41np20oP]HC_Sp4Qk?i6111M7mcSl]pUDniObmp^p6lo?ih`bpQo?igpbp6`o?if`bp6So?j0MkOB4?goa0lkN@F85oGNH7ol[@5^eLK0Umge5_3h=dCZPQ6YSmA@S8^Q7m8KOoY1f=4;g<gFa0Ko=nROiLSp3TOiLPWj_mXGhn86opY0hhn86opY0WpeXFpn:PpYD7n:PcP?dF4LWNjp0f?iOdQZ]XBfhm5Z`i4ZpPQCp1QAp1QAp1Q?p20VP`i8C@Gm49X;o24e5p12Ko41=p20VpPaUP`i@DWm64]5p12Go52TpQ1BOaPY?i9Bpa2N2nP^=1KanEI2>Bo4NDDH[o@4IKD1`mg^p]e?ngIp`c`noEp`P]SpO1HP=p`c?nm5SOm<P6pgaFAp]Q6EMpC0JdoWGOekpoULA2o0Ko9hApUP^dpE2<lpOU0hp74pki0=pfa?og83Om^H;Oji;N2ho;XpbMWmColo7p3o3m`iEiOa?;o2m?i60?Be`j6Ppji@=pab`nm5T0ho_2d`n45^OiX;ZnP`iP[BbR`Y31N7m38pPI7m38pPI4Fm?EcX8;o2445p0T<5p0T?m64?m64?m8:3o24Gm48`i8AOa@RpPBZ<EdKaF^j2<So3k1;Fp5Gj?1OThn;1OP=7p09Oi19p09?i19p09?i19p08pi171OP=5pAaGj7p0eGj91Ne]5jCaGH3D@Fm9J`F1^8;JaQ79C2?0WUOa;25bf0eT@`i<=?S_2k0KpR1`iOgPKp31JED8dZn2SRWP]ZOZWc9X;]1Y8;2Vn9H;0Vo9L:B2pZ4`nB1Y?kU91Of:B2pZ4_]5XHQKe_D5[X;FUb0KJ2dYHP?]X6TQ3o5iee4paHDm172=:_:QM1L0=A32`aWQYCl0ee4Xp9X9?p09HKBOa@TQ:Go24]4UpPQ=0Bpa@VP9Oi8C@BCo24]8BOa@TRYApa2F8RGm1Y<2B2o9]06TP`06TP]BK]1Y]ZN2i0JJ2d:HAYEkWo?LpSOL7m:k0KWk1]HAp41J:6_@cPde6[BAEOf0;LpaP?iWp7oJ2k0KpC1L0=p^P^P6pikhpGBplaF@3JjVgEY1JF_83I@Fa3I@F1WbFAfF1U1L1>Zh]pk^YpE]X;o[I@FL3B@SVdc0K22g]m06iP^;>:5lW0gD4pROTOpLCpnQOpiZ7po;Qh2<[N6W>f^1=o;B4=N@6cQ;CZcQ;>2k=83>2k=89U1M6T4cP_SB6F45eIaack]XZ6G=W7@]N;C4dgPK?61^8;:hP]SpbXOn^@6piaFa3Ol_86pfM@=pUP`@6pQpo52lpZ@fJF8GLGXdT:hdk_Q7@3I@G03K@Fa3M@FU;1I0==XBJe]5T0eFn;TA@G19R0e?A71H4D5eA@F15gBA0@aGm<2PpXDGn2RpXD?n2QP`k131IbFoKD<5R0fNY36@IaF@3@A0LHeD8MaF150B@S81Y]2Z2fYXP:8;NUQQ?d0eL8CMTT4UlPJ:2B@GM73J;eRQ:?eTP8pBB0Sn982?eTPTGY918`B:6TGY54A5iAbD8_a6Ra8X;XSb8o@6RP]B?PUcY=RF2d9X;81Y^CdLiP_3B2k[`a6RQ6iK4GjQ=Ab4pXVL5pMbAMD]5S1JJ8743Al4m@=c>2a0J6<2VR1[ABe;H@gRN<5VBAaNT9ZJ86D3AAe>e3CH@?4TSQ>2;89e:><3c2oaQ`<2B<3e0H@Od9HPNPWJ4]H7_2^RF:3oWBbT<@;BaSVUU8XbP^a6TTPU^]0eV17T1JKDVRQ@JeoQ=3232Ra9XPHTf0`@]@SbBA0aYX9161dQJ9I@D9X9153Z1b=922JHO3^1BFFV59:;3P1YY@TY<P7cBcPbBHPLj9Y0@UT1pE=932B:7aVTQQ953iCBaaXXZO2JD62B6?:F<3PBAAMD]I721XXXNP6TSX]B:8WE=53T0e<H7RUSXLc:<5`CAaVM762fPJB>QfXXi;@UTXKH1XL8:b9Xi;TSP]JNBQNa6daPln2JUQ685p0?X4lo6FdQMpeX;BaSX=Q<OabJ>8GmV7f1CaGT7mB24J@7<7m0SNpXB=8G`k<5i47n<?e;hn:?e;hn:?e;hn:?X;hn<>aG`kL=PPpZ0mQ1pD3]5loW0m23oX7H;hn>7T8?kTIQOZ6KjL@f23:`P^P30Qb1;e8n@d2p26n@afP0e6P;11;@nW4n13U3D88iKL>T;mPF26:CT7T88;06a@aGP=PQa1]4?]=@PYXHG`QO2o3222o0<26B6445n3D898H@@Gm922BV445o2a@BDPPP`aG22RR3lm5aPXXXop1L89B28?iG22FQ11o2a@H0]47m92368UpXFR36;Pnl6@`HaT8?@G23<9QpXG3l>9QpPC2nPZ?_PV7lam`V;Pnb3co0ZU`0BnPZU`PNnT4@pm>3BBE^pB0J:4MbNR`iL5pA0[oP2Ip@0npA1KOe0?peH?pe@Bpk89On45`pA1``k49pn4PpXPhhn2PpXT7n4PpXT>T5X8;H6`dPJV4IT45SHaFA1R2gbP^;R@i0LfYHc2720hYHXD7U924GX3A@B;gSP8pR>0RoY823mRP8Oc:0QP`R648OZ2:U1m@A0@aGY1P3Goa`]:62lPpU0e7H;K<6`kPnZ3Gm@E`3Gl@Lk1lgD3p0^32=i`I?P5XiAk3h<Z3V7`K46i;OPRf8>B?>PP_BC8QkXmH6Pl0J22aXH;a5^RAOeB;oRA@Gn0SpX@=5p@Xma;@aSJSUX<cX8AWAbfgb3VCaG13S0e`A5QCMTDE2G_1XHP9?:>64WY53BCeSR2Rn98@Sn98@Sn98HANTDE2;eRS88OB;4PP_k62b1[oi6Pd88;VQP]k3V6`g8>23PPg1`_PNjT2Go0eD@_8db?g3Z>6`i;Ho5Ta[lVZpU@`Unp92n3pb8;aPlp4P`44lo85m@;pR@OR2gpR1l42piT7iP^`iPNb0pp41o<7piT;HP^]Hch[H3o@Ai<=0?j@pU13F45X8;64l8TP^XKl24l6SjS`XG:QlS?QmXKla;^?U2Ol5N?U1pk9moD9haGjK64li;^MT1lk9koD7pX[YmP?p1MYmPFhXIi?T1pg3o07mPGhL7m@?iaUna`]@CmHCoHFoH9o<9om?NdX<HOjWAKD45P0e<@e`43@bc:_2l0K?o4594;L<S;pRaEXHQOe@;DcB^o1JR2pY@=A1Oec[oX3geOn@7iY?kH?iBpeaSaB@Gn:9i:CoU4N2F2pXb=XCOeP?i4]5pAPpPCOePWX9`k@7m2J2pXaNa9^HB_@>iDo83EaSD3o03BbPFL8d0nPC@eTU:ZUP]HC]2o4KD<5Q1N5K1M44U1iEL5i@Aao5C1NbWeo5Ap@ACiDm5p5OOQCpbPno5?p1264iDpm488KaYpi8@BW@Cpa@PRVa9X;o0@ACi4e5p088YL06VpP44aM1?p7?@o1=1O2fk3X9pR343o1?j3Gj0Oa9i;ZQdR`1C@G03@kAMaDob9^5h1EbRf74En;`_6`LaGf`1Oe@BeT=LQ]bhoV1Gng5`pL9?l=CpH;?ka3GOf;?oUKpeC[o41l1Ohm5nN@So0M@Gm4>8;o61JpeKF2pXgOn<1]8;oVHaGn>aP`kQOpE[`kbK1OfJc2p[5WnL1Z`knE1Ofc[P2e<@_06XfP^O^D@FP3K@FQAXNjU6Mp1j4oH3OapRCjD]5V0fTM2UcXncg64e5T@mfD=9]Z62jZX@Vc0J3]ZPTgA5hDa4oA5V0Jf4=Y<R;<3oQC19LZ62c1OIUD1;UAiP=1VE@BC<cd:X99WHIf<@DD5V0fVQA4A;X0f45WDbD98;FPQ6X3DHD`m65F=;p0UD5SCO@=CW0e`T3EJP=;eFaFbC2=:o2i?mm5e0ho3ipQdo1>?kT9J>8GTGDKi6go8X;_5kQkQ>a0`V2]X?L0Gp1lk3pe;Ki3`m9g8?Nh0N=71K1oQOA@FLKm;b8]H6Pi0pRA@FiEJ2GN8m56iCiDoeAi:XAW1p21Z]a;d0^?S1hF2fe5`FM@=;m2lg3>5`k89On02eWm4XHAp4RpoR3GpeJ62pXT7n86`pY0fpn:QpY4<5pAXOk@3@@Gn4SpXeD5pA8pk=9S0eD8iY<2k4JP=5;BnW@JDTM^_@IU45b@iepI5QBoDDH59jAaeVn8i@Vn989=kB@4pY90CoTm19kC@4`Y=0BoT]8BNTT=9?BB:U5kBH4GY7Q0e45hAaF911MeFD3@MP=1X2hl88;D4pV6`hQ?hQ[oHJp@QP_l3o56PQ[P<X;pQEYHQOf86Qe8XAp31XX;BVpPJB2e;?:W@`kPJ[>bP_06]d0K7N1[]dCH1]<dCFdd]^KC@aP^06ee0JhDhfZ^H6ghR^mg>?kIdpB_`kEf:1E=2=ld61ZiAYMjF6QhVI@F9jVJ@F1jVKH7VI`41jVL@emd>XIMIWD8MjWD9MjWL8MIWT4kd?8ILIWT8LjWL@76If6@KjWF9^VMHg_Ib1I0=UVLJ6FI^1JV6I[`GIVO<3EIV45g0f6IK2?H;BIUD5p30XLH6UQ7nD4^74;c:VGc1oPWMaNn0pj2Gj2Gj2Gk2Ok2Oj2hmX?8Nni@N0fpU11Me<5g0e7Q5S@JDDD6<7mR>6<aBmBCF:n171JT4@4Nb13BCHRPTVb519=R:0Ug8X2GH_g9H2;HTP8nRB0Sg982?HRQY5]A@eRg8XZD6b5413]@iD6b11H@Wl0Wj@Og1OI@WJ@Of0`@2naC]8C>HSNfP<0G6M12=X?iP?D4p<0dX=8341X=07RAHe<M2Rb8XZ4V03B@aTa9X@Ua9X@Ua9HHBiDLE:C4RQQ=T1F5=_CKTgj=_CKTgj=;1nRC@cTa9X;0QR0VP]2:6Tg9919]BB2CHTT1?RB@4o9;0CHVF9URIHVF9URIHTm19RC@4_9=0BiT]4Ub98JBHTT=9<BB:55RBH4F951H0=1RAHe>911I@WiPWkAfX?`3GkQWRpn44doVB@SoPA@SoRAOeZ;oV0e45pBQ[pkQ3pCX`kM5pD8OkQ5pCPJ22pYTGn@RpZ4Gn@RP`kI7pCXn@;@b2h8X;6cePJ;41^X;8Ta?LJB488AWEbT4eIlL1Z8P:NP6WQQ?i0ee<Y8;eVP9pP6TP9pZJ0Vp<`d;mWP9?cF2BpTT9BpTT=9?cB64T5mBA@XX;gSP]2Ce1X]@6Rn8X;8Sm8^2>2k8MH6Rj1[ni6Rh1[oRC@QP`06aP`iH^32>X`YOa9J64OacV=5j2geXi;T5n]BKahgi3A@F^1dA@FU3e3Gke45j0JPfpn<1X8;oTApeX6PP`kA7pBY?kA71OeH6RpYDWn8UcP^13G03Ai0VID6f96BgQ[n:F8`03@IE<5cAHf7I7QCaGI761CN0=53BOeTQ2J2n989=mB@4pb90Cp4m19mC@4`b=0Bp4e4To98JBO4TE:;gUR0SP`:G0RP`2B2aX`:C81X>a6RP]c7ZSf8N@6Qh8Mk;V4pHQP_iKl87`OaQXHQLBgBT;OaP9HAoF@fgOjH3p93KoIj2nQ6IG6:k0J:2pPB?o4511Oa@RpQ0AOaP8`i@4Gm82;oP@aGm6548o;iAfIaGm<FPP`k51pA8?k8;OoS2OpA1KpeHCpk91p@X?k49pn07`OaH@Oe0Cpk0?NpPaPpX0Wpe0Co8:f1Mn0OcQlhHCOD45n5KUm6B5oPUXiQOeSSo0OaGQpPk;i;:WP^klJVg[nkF2f;X;PTP^06_j9]l7TVd<NJK:bP_BK8cP_HB^C;oS0gGn6ecP^32>3?4`P^;>8SK@ePWL5SOn<@6hc<m3O@cR0gf<XJJl6D8J@F^W1==d:0fh<XKIKVL4dh=83?LeP<ndB2IKVT4ch<XZF6jU5@ah<]33Lca[i;FbP]Bk2f0K3:`f<8;<1[8;>bf0J`>1[^a6[bPJlT1`m7P5`X;m1^X;oT2FSR5e6dUpXBe<@`ka5]HApA:Lk3o25_]9pa3GK@hhH3HKP^oP6ci1?iPKCR4pL1^_@>KG?n6kpX@=fp@?OiH5jp20opPappQ1OIAFoK7m301Zn;oI2jT3h]KoCQ=PFg5p1nQMXGm3a7m?iGj3M?iGk2gOa`g4jp2pP;Oapm2nOa?PChm7m2NpPpPGdo1m2oOa?PORoo1^7p]5i7hX7L06mn0`6mm0lUMo0GWMMPMf>>PFg^`c2gh^N0Fh=W^3ON0=MY2lpP5_E31Oe0;IaSoZ2FSR5j6O;pfP3oZ1J3oR1JSo45=1OaaJGoR0eT5pA9H;oS0eOn<UpYT`n<UpYT`n<1Y?kI;1OeZGoV0eWn<VpYP=9pCYLak^ci0JB2a0Jo4JTe@76U=9;gMC1Hf4=la==1H0=Cd0eg1EgCb0D@GM?3BSe1YX9AlCaBOkVP9i;i1]X;kdP`ZR0TP`ZN0UP`ZN0WoYi9=nBbDY?ZF:Q;l0eV03BNTT5RB@GM;UBnP=51IP=7eBJa=7aBKa=91JDL5dCcEFSo0^O2?j8:Z[T;W;h3NOh:WocGpfS?oXKOeX6epYV]5pB=`kI[pC0KCoVJaGn:gpYV]5pB^`kI`U2FPQ[PiSXfofpdP]a6plIGp[6poH7pk8Spp45ppPWD5Q1KZ0jP]a6jP>=CpW[La6obb0KlFe8K@FbY3COJeRQK@FYYPLJVN43LJ6FAf1HP=SU0hpG@pjaFYpah`nW=pXlPKp31NaFppX0=`pEQ;Ab2mR_5pQkhm>3CO@F]n0K3_]Q7X3CpaIBpaP9H;o419p@Y?k971Oe:?oSApeJ?oTA@Gn4SpXa=5pAXX;:4^53Fb51H0=SXAb4LaF=73;c2aY93jX0f4M2VP_06VQQ=g0eT=98;a1Y899mB@4`a3Aa4WfOoBa4D5mB@4L5mB@4Wf919?RB2BO4L@DD5jAbD9?2C01Xoc>2b98;RUcYH;JUP]a6UQ6D5YMH6ni>H;X1]8;k1Y8Ab4O;pppppppppppappDXX;oWA@Gn>SpZ0=5pCPJ:2pYTWn@TpYa=51OecCoXBOei6RP`kI;pCY8;oVBpekB2pYT`n>TP`kI;pCY8;oVBpekGoWBpei6TpYeT5pC9OkL3BOekB2pYT`n>1Y?kM;pD98;oVBpei6TpYe`n@TP`kI;1OecF2pYT`n>1Y?kM=pCY`ij>HOpppppppppppppppppppppppm8Op`kP3Hpf;;oYIpf;;oY0g45pD<`kYUpDPK22pZ6GnDcpZ@=Q1Of;;oY0g45pD]`kT3H@GnBcpZ@=Q1Of;;oZIOfC:2pZFGnDcpZVD5pD]`kYWpDPK22pZFD5pD]`kYWpE<`kYU1Of;:2pZFD5pD<pkYWpE<pkUYp56RppppppppQpoPAOaP8`iH511OaHAOe2;o61@@Gm64Om82:2pQ1@pe2:2pQ1@paP8i;o453p20SP`i@DGm82:2pQ1AOaP8pi@4Om82?oPA@Gm8:;o417p20SP`i@DGm82?oPA@Gm64Om<2RpQ0Ape2:2pPaSpQPDGm82Co417p@8X;o32>2pPaSpX4Om<2RpQ0BOaP9?P_8_Ap]d`nLE69p[RRb?nL8c`nD@LP?pe8Wej0OpX1GbI0pQpPQS>9m?iCiLaWPp45]D;G@obGei4TH7gPR3R@i0Lm2lelPMmX8XLa;@@GY153pEXHXOkX3@A@pfB6>RpZDDD?nBRSY?kL3AA@pf2>>TpYeTD?n>1XiaGn>TRYpYa=953pCYHaGn:1Y8ROf2J:7oU0ee@?kI?53pBYik;oS0eeA?kIA43oVDA0pYE<D?n61Z8XOk=E53pAZXXOk=E53pAZXZOlL3p^a?oTGn1m9TOnH9pVaXI0jn4Fg117GOaa>03@AApe832PS8pe8:a88i;oP0H0fo01p@PN117@Oe@30PaP?k01Q@Of830PpZ@651pE1H8?kT1P@@Gn>0aX?kX;11pDP<0NnpCP<:3oZ2a@Og0NnpD0<23oY0H47nP7`Of030PpZ@613pE38G`kP1P@Of830QpZQT;hnNPpZ@651pE2iGpg23oZ0H47nB<P`pZaT88;oX0H47nB0a8?k]9222pZ0611pDP<23o[2@PpZP]47nF4Q1pGQlhnB4Q1pGX?keAOOfHJpo^2IpC2_Uc0?ki7`kT3OjH;0pdiGoJ2a0Kp9pD1KiP7n05nS0Ob0OR0Oe0Ghn@4poY2opZ0OpZP``kP7pkX;loX1poZ1hoZ1poZ2gpZ@GpE1KOf8;pZP^`kT7pkT;KoY1poY2gpZ@OpZ@Upf@?pf8BpkX;loW2hpZ@Wpf0FpnB4poX3h`kI3pCQlhn<QpYafpn>QP`kD=Mp@T]Ti?kD7`k=pRR0pab4OiHa;o9o1pPaQ?p0<8?pa;21pa;40pPbS0Oa7n<0p`g83oV0OeH3oW0OeP3oU0OeX:pXa?oT1On62`k<9hn25^p@QOOe0Klo411p@X?iH51p20RpQ0AOaHApaPX`i8ApaXD45p1Q3p@QKLc6RD?m]<`mUmNZZZ[HNZ`SkQ>c2O1e1p:4le3o@7p@Fg@7p@?j0^`8?j@On1KHaWoPOc1KN@OcPpk1h:4pe3o@;Kc4l83pX7mX?oaGU2om1KI0On0pT2Gk1p:5ni2gc0pk1p84`e3oD;la3_D9pX7mPBp@C]PGhP7mXCp@;cQ?mQKI0``0?j@Wo@OcQ?mPlV2om0pT2hmPpU2Oj0fT5iGNEhHEm_03OlHHOlHZGog<7k3n5<DW]?aCaGm@e:?i@m2Oo;:2VP`iQXDOb9aDObI@De5p4=2So9>2So9=2R2pQg2Wo:F5?p4VQA1Oap1Cp4:2Wo9=2R2pR>5Ap4>2Wo8<5<5o4g5Ap4=2Wo8L5<5o3e5Gm>eEOb;QDOb3PZpQg2[o7L:`iQXEOb72YpQk2[o7J:piSQDpan1Ep3]5Om=aZP`aKQGp0<`a6aP`d;eKV>aIGna]S5Oelg<EmOk8bFbphT:Spj4ApmRQOoiHOm82F83p16:b0JB8SR<EaCA0EA2pYjHB`kM?pIYi;obDOgBWob0epnRYP`km3DOg:[V4[]1ZN86QkZX;L1YNB`PXP^cdNYP^Z_2i:8;H]j0JGL^k0J7N1Zp@3R^P`k]3FOfZlo[0eD<XOkb55@PP`kY5P@pfJ;0RpZT<I15pE8]2:2pZ4<I17pDXL86RpZ4<5PApf06Pa0J:2pYe45PBOei6PaYOkM3Q0eD5pC8LBCoWAHD`n<QP]06SpYTF991OeR?4TpYDm<YOkA^pB0KB2pXghn61^`k<3JpfJo2p]5?na2e7nm2`8dj3_8^=H7_1jMV2O_0e_91Q0e6j7XIIandNSP_0>LeOn>VpY@=72?kA9pD9?kQ;pCY8;oVBpf2CoX0eGnBRP`kL3AOekB2pYeWnBSpZT?nD7`Oei6RpZ4`n>SpZT?nHPP`kY1pF1lhnD6opYTL5p30XiApCQOOfadAG01`m65pQb?m>5pPP]06pROROi<Ko=nQ1pk3_87Oa?HPGn1h83ha5j0Gn2MR1hi3`n:2pkD9hn63pn83pn83`n:3pn84loS1poU1On85^pAPppB1?pXa^`k<;loQ2hpXe7n4QpX@=1p@X`k17p20TpQ0B@Gm2CpaBVpP545oDpa=ApDOaIBOe0GO4I<GQ0miBe]H[c0a0N5l3F]7m8G;pUSOn][pYWOmn3pK5MXOkiSkWoZ>Fe`mmL?[0ho:DAobp6ob1?g`8Jd88;F3pn4Rg0jp@XX;H0pXTVe1p@Y`l==1Og:SobEOfkdo^F@GnF1[8;oY0fe5pD<OkQWpC^?kD3JOeSOoS0ghn6ipX@=bp@_`k5fp@>piH5dp@>X;o41f1OaP>X;o61LOeCSoTK@Gn8epZ0=OpF[?l<E`WmQ@[3k67TA7]@7LM2ka0`a0a0OL1Q0p0320lP<@3a0p`aHp`aHp`aHp`aHp`aHpPSo0pPSo0pPWo2`a>O@Go1hm3pi7pXCpR3iPo88;cRn8p2B2l9NkK]1Xp2>2mQ^_H304bpppppoC_2oi;kQ9kQ9kQ9m0OP1pO`e83oc0N@7H1i1GH3l0[]2oa?n0Un@`_HCoPFpA1d@mT?=11LD<5aA@G151KeL5`Ble_i3BKTgj=_CKT_m3A@Fn7c@n@Ee7O;[ppppp83pU1?nm=?ne@445p50`P@Oe8Gg0;lo:1O45np51nR2opQboD7piP?d0pp3Smi?pacoP7piKlo[2OpFQ``k]9pnH5`pF1``k^1pEQlhnDQpZe45pE8?kb11Of8Jpo[@pfJ7oZ0e7nDQP`kU5pE8H;oYAOf86PP`kQ7pDXX;oW0eGn@SP`kM9pCPJ?oWBpekGoV0eT5pB9`kM;1Oea`AN43pYaNpY7oB:5pRR0pbbD?mL@7o?0PpPN0;Ko1i@Gp2Va0Om8N45OaKaP?iDOn:2pk@;KoS1poS2GpB0ppAQ;pXahhn25`pA8?k8;OoR@OeB22pX4?n2QpXD?n2QpXD<5p20RpQPD?n0RpQPD?m82>2pQ1AOaHBOaXDGm64Wm64T5p0T`m49Oi8BpaHBOaP8i;oP3OObUR`8?Lo0J:2n9OBCg1XOH6Qo8pR:2nXH;iQoPJ3kQP`J?iRP`J;kRoXH;kQp1lhj1p08?k3H0gQ``iCn8KdD5`T0em8c8<@6^Q611QIbD8<3J644@6m=88HAi5D8@B@OVD@B3RUQY1P1FU92D?993J22i98@RiXiP8X;JSa9=R?4UP]a6Rc0KR2d0KGF1[iAb7FfFaO2FWpF2OnH9pfPWpF0pl@7pN0pppnL4pjaepjOea6XpY@=A1OeR[oUEpeZ`oT0fGn61Zpk=KpA[Ok83FOeBpoQ0fT5p@;pk5Op@[i;o41Qp@<OiH5M1OaP<8;o45Qp20cpPacpQ@]8;o26D5p13:2pPC?o45Up13Co26Wm4=?i4fpPCGo1=Oi9JOa3KX?X;Kpp5kppanpAPKSoULpeP6iP`k=fpAPKWoTM@Gn4lpXhOn6lP`k5jpA??k9j1Oe3hoQ0hWn0nP`iH5jp@?piH5j1OaP?`iH5np20ppQ0OpaP?i7m67m3o33o5Oa9p1pa@pPpi8Oanp0?iGp0Wm;pPcpQGnp3pm4`i?o0ObOOP=p2pi1p4pm1`iWOWmCpa6pROoOb``P6pROoOiO[p3k5N:pia7p20phaQp^QY3O:ZZZZRZ[@@aPpUPGXGpQ0@H@OpRa`H@WOa@PbP`o:5l61paH@Of8JpoZ@Of8JpoZ@@Gn>1X?kU11Oei6PpZD45pCPJ3oY@pf06PpZD?n@1X8;oWAOei6PP`kM5pCPJ7oXA@Gn:1X`kM51OeX6RpYeOn<1XX;oUBOeX6SpYTWn:1Y?kE;pB0JCoUCOeH6TP`k==p59SW3NOgi6TP`l43Onic3pl45pnPWpk2OpXBpp@cpo@QpnQYpnQQpmS0`p<I1pkb:iAdHHf45jFaFA;nFJ0nlk]p[UT5pF;Oke3EpfZg2pZfhnH_p[5e5pE;pk^OpE[i;oYHOfC3oZH@Gn@bpZF?nBbP`kMUpD<`kQU1Oed?oWIpea6cP`kEYpBPK?oVJ@Gn61^?kE[pC]i;oZGpg@Be<8mSMUdpE0Oki3ppjP?n=EjEELTD5p@X`k=3pAXH;oQ0e7n6QpXe<5p@X`k95pA0J3oRAOe@6PP`k15pA0J22pX4Gn4RP`k15pA8X;o61@peB:2pQPD?n2SP`iH53p@Xpk57p@Xpk57p@0J;oPAaGm<2RpX4L5p20TpX4L5p20TpX4L5p20TpX4L5p20TpX4Wn01XX;oR2fpT@O<L@UXHQOaQ]OH6jk`o;o7nX6paJU<5YDaFI?bCjehA=UBaGE;1HP=9iBiehQ=RCN4g9=iCHe`Q91He]5fBaFA=eCIeh43B@FP3C@FUA^0hm7cNaGM[1NG<5dOan]0ho3B1YiAYEI@==1LDm5QCneo03B@GU=41;nC@Q;1OD]9Bpa2B0WpP4]1=p0<`i1Up09i2Co0BaBF2oYHJBp@=932J2mYiP9p2J2a:8;RYbZi;B2f45T0hoCB1`m6e3OaO9l1Mg]5p35XHQLQTjWH9JF<EpB0^h2?[p51MP=pVj`n_jpbf?o_MpgP]SpdSK@S6hP]06dfPK?2eg^L3CLea==dC01]^d?4dP^S:2b<nH6cc^H;62gNMpff?o<5]0hodTpe@GEpUkPKpAaOm8;@1`oL5UOo<SJ2c^]86ef^HZ6Vn[26L5a0gD8In6D=]_S>0ek?n?ApYk=H3;XdPVW43I@U[1KF]==X;BhRQKjW61pmb0KpbUOnmlpY1JGp22g`nWEpTP`H;NaSoR1fA6:lRn6L1FoOEe8k0K:2i0KOLlP^BJ2bYn06Tf98;<TgYLZCN1XX;6Sj8X;41X_B?6Tj9<BCTTb9>BC41X_B?8Sj8X;8ShPJ;<Th9<kGDTP^06TP]JKJ1^oC>2k[i;VhP^P6lePJG<2e_I;1Je]5RB@Fn;P0eD5c0eDE2C]TQ2>2l0J:48pB:6eGY70BNUhYMkGNT]15kAaB?eRQ:CaSQY9gBA@XoRC0UP^kF2a0JB2fY]ZO>1Y]lo2e_i;JhP_Jo2nQ;@@f_5B7p6Pm?l=31OgR:6Ol933?nV9o?nPQR3pG0J2:7o]AA@OfJ>>QpZ@=371Of06QaPJ>4Oa976@Fp0=3S@@F531MTDn3;k44=L4E533gY32=P6QS0i17PRa2?`HRS9HA55R8I?UX0eDD>T1V1b12=:B:7ePQW@TRQn88Ie9HaGM147@VR9h5hYe0JJ2lXHPkfG=353]0fNj36Ah]8;6SSXNC>4Xm8?M0=b1H0Nn0K>@Apa9dpOoTTM6djPJ?67Y[nkG22]ck8FI;P2M[EbFHT]P5j0JR4H@=971nf4P@BbPOJN>ABATOX6TR:WSQ?cF8:J:7o2DT4XRQpPQ91:8XOi8BACY8POaHBACY8k;o0AbQ4eD?m0RT^5971ODLTe9XPODDEN9=43eRS3I4eD7E74;B1YNX6QS2lE<5Y1J:>UhQXhDQ7k3Z2f?>B3pHKCJ:^do83DmI;T9T?T3BafpC1<eQlOm8>01a2Gl4c;X5`g4aCa5`c4aGi4`T8S`8Z7^PV3obD;lA4?n4Ao]E1peE3gT923i;PnY2@Po2]?f38G`@`3gT;11l5aNi88;_:XOJ6Q@MP609oe1P@nAN5^iF2?P:TOT0a0J:2fRL7f0HTT8cRL?j0HTg4G@li0c:91Mp32Hf7n:4d6VQ7mLE_HaFTP`1F2e6I0=91LA=7e1<cYH;D:TON2]cC@9XOH9V83@jA<5nPN<3@@F01P1po3V03@H1L7`iA<22NRQpiD643@@S04poQ0H4<aa`oR0HD4eanpA1Z44fanpA1Z44aP`oS3D89XPpoR3D89X8OoR>@O@P^p80P`Q5@Op81@nR5@Gp625k1D;OAD;kbD;NA<;kQ;n1``@Nj[5Enp41JN<Ed5k:h0J>6`@FVD=nd2M]@@Fe9h111J@Ok8H;<3`H=OW1p_QP]HCp276Pm8]B3aRb8?2766`lX8;6QP_R3<Rj1lgM71KD6]3A@FX9om3B@F@;lT1YI97n:i;oXpP5L5h1p21YNHFgH3B@F]=n[CJ0WmP=51Hahh@3AHPWoDLX5pJ>647a3@@U3nA@U1oEOUGj32D45m@@U5n@@aRP`@Cm2?c4p41XNiGg@3@ma^^:>2g0[TRQ6D9hT5XXJhS<T^X6SQ[a5YW3NKaWKPUkaEf2GX1OP9N@7p@Kl05^k2OQ2on89H?`B26445k4p13l5oQ@@GL7mBCZ3oA=1KPMd0JR2e0[F1ZjQ1gi3IM@FaP_[>2iQN[i;F3oD3Eja^^H;C@F8;KT1Y<0Boi6RTYOeST3h^94OmXp8H23mPS^pc2>?p3pP^l2OR1pe3oH5naMf0[V2_0?JPNn0J>6^a325Wd0eT@`i<8XBYQ7PWNPobR=lR6oaQ?fQMl@Uj@`^aBn@?jaOj1KIPOdPpe1p<3oP9h@7mXC]iC_PFg<9gL9p@;K64l@5nc1p:4pB4pR3oL;lB6ofQ`]aFo^1X3OJPWlD4M2PP^Z3LXk8=i6PP_k62gX?HJpN7`M0=91KD711;1O`2G[2GV@aFa9NL9o]?Ng1KHP`^k3J3o09OD9NaIi?i2G[5N?l2ge2l;O0OeR_ooQ>dR_op0`@:lKm3oLEfpi7macapk2ma?i47X9g@7m@VoM0ObQ`]Z:4KQGX8H;D1XjbEFPQ^3d0hD5n1f?5Ea6d5oi>YHJpZ0FfQ7m2Oajj6O@YY2ZVkQ;aPJB2eP^3b2oa0JB2h0J7J5^QCM4<5Y1p6VP_P6Pe0pSCo445V1l41Y`0Jp<4l4XmXLXC]BScQcQ>b0JOaPdPnSDnahgH5j@=Ae@J@GVE@Fi?Nf0`<]f8^aC]Zg2aP^3b1h@^PTT8k0lX0gD5k1hB`P`aFgP3FpaUka=I1MP=91JEh9=5O[0fNe3A@F4=nYFJ@=3Y2G[0f>D3@lPhgP3D@F93d2GY0f60=Oi1pBXRX@@GT9oMA327m3oH3CBBnp1p>VP8H;o6>c9X262pQQmRJ0QP`iH?8VT^lo83]BJ4X?iT7HTe<88;o6>b9Ha:3o6>a0JB2a8`a?iDgA71NA?@Cje]5d5O2UgPJF8FL5[o@;Oi`Sk4Oe0J^?4;]=V>MaFRQ[o]IaGn4lP`i9B@F<5YpZSFWm:^a6Tk0J[RTj;NBB2h;NJKL]P_:OJ^P_06VP^@6]P_2WF_iZnBlP1Z^@6]i;=JhP[g;>2_2g:X;L1Z^kV2h:o86VP^Z`XXP^@6XP_cW@ZnPKo5OWpm3Ob>lZH;:_k9Hll<1[N2BB2miOgZg8m@CmX[aE>U9T1p85nPEjTL5U1F<9o=G1HTW<9gAIQAaGm8:Z:Q9p1QM41;0@M@FcQ2h]6oFagTRZpP5T1?p@_`k5fp@_Y:5n]82J@GlaGQGaBlT7m;iJEjD6@;MQ3B[<Pd0K::5CU@IP=SQEie6=[R0f]@44L6fc`o_QpbP^;pM1KGoZ2j?m]5g0hm?pPFlQ7m<6dQ7n@4^74;c<Z?l1JNe]5e0f45`1p6"
"6`g8LZ62d0J:2c0J3<1Y<c3@VbQ`^:G07_KE`5C1M4`T3AMem5a6GX8XAY@I@=;RAJDm@4F^?2DNe5YH2;RTP8o::0UP^c6498;LPa8X;JPbXMXBmX6Pg0pX@JPUkD45V2O]2lc1`_2Z2k9X;F<gFhP^34;gbP_J>2cP^11KDFe3@@FU7aA@FI7cAj0=51LTN=9eBHD`A97@Y>RF82KXVQQ=eCA@Y>RG0Uk98;0Tk9<@6Rk8mR>2iXma6QiPJ22e0J3PQh8=XNnc3h]Z3i2e]8oP^C2>aVoIA6n`AK@=11J0=3b0e>I7eA@F97f0eF03A@GE9419iB@Q;iB@gTm9H2Kacm<`2F2Bo4T9Bo4T<9?2B82>2kXi;01XNX6QcX_J?@QiXMX6PP^06Qj0^S2?8Be<@^acP`]3ZZ<EpA:]H6WQ7X3FIU`ASVH@FfWVIkV_IY1IVgI^UKjVe5R0ggI`SLIW69bVLHP=^VKj6oI^1I6gI^V0gVIY1J0=UVIl@=QVH@G45[<chg1ZLH6WQ7m67D8pQ1Dia=E1MfoIO2=a6ad<nCG<fd=mdO6id>8c3W<kQQfVM@UhVM@UhVMaUfVOoLdpdVOoLd_2MjWD9MjWD<>]dV<2id>8c3W<hbPKK<fdPKC<dfPK;<aP^l7<^m;LcV4Of6<3AaSoV3EYHQNbDcke<5c1FD5K0OeQKI@hgT=nR@K4603@K4<@4Fb524Nb53J;HSP9=RlH_g9H2;HSPTNb52DNb53B;HRR0Qg88;0Pg8<HKlB6ocPpY2gePpU2gh:=i?j@^^8Cn0GgD=nY3OHT6b1Q@l44E2;HRQ2?HRQ:?HRQ^5]Aa4VbM]GK4]15]AaB?HRQY5]A@aRg8XP8MR22a1Kl0Wj@`^8Cn0?k0Og0[:2_R62g2o<I@_nX:aPjV1h83V<9oD5iT6H3aXLaS@@jQ?1@@F@?iAj@pQ9T3o4V@CaDD5R4J2G48e4_83b9923SBi0ER0eT@<cF:3<UQ6Q=1JD]5ZB@FY;[0eV^;1JDoP7DVL74]5T2aCI@e:C40b9H;00bYL0:b0JB>6bYHZLcB:`<1XXZmkJ4k56P3CJDoY34ODPR[f88ZnB2>6e3OP_P7m@?I@WI0NaQ>eR=d><kGiPJB8Ge5]Ni6PP]ZF2i8^RGJRhYH;@RP_06TdXoJF2c9>RG8Uk9]JGXVb0JCXUbY_RB2b9X;TTc0JGVSd9i;NSe:=c;D1Z8;@1X=c`<Pj;IZ3lZ_S;O0=I1Oa9O1OaB_P`J20_P_J302f_j5VGkDFbKT0eG03DiTL5c0f619g0eeE::2m9i@TnYi2GiWP9?S;iTP9pRB0Wo98@Uo8iHBp4DE2B2mX]BGaRc98;ZQe98;RQP^BB2gXN06SQ6D?`l0^Sp1:B4MANcnaBe4=O0UjT48jQ`^@JpN7`KTFX3@LDNM31LP=3U0e7E7TAMTD5QAnTN43AMTV19gBH4WI7Q0eD5eA@F59fAI4T5bAIDh03@Ieoj11J0==1J0nlH1YmaKlP1ZI93m<?X6]P`Zo2m19FaG8;K2]h1`]k[B6`gPJJ2c8N86Vb0J22j0JG0RlPJB64D5iB@U7k0eD=X`Jpi_o;`R>2Ap4D9Ap4D<8X;eRR0Rn8H;01X?0Jp:6`l8M0JpVPgX=iBoHNnW3NNaFRQ[NFgE5doQBpe06pcARWoV:5pSP]HZe_:7oS2GpBPppC0`oV1hoV2MpBP`oW1On>2pkP7`kH5pei;pZ0?oW1Gn@3hn<2pkL5pf07pD0On@3Wn>1pf07pD0jpCPOnB1pf07pD0jpCPOnB1pf07pD0jpCPOn@1pf0>Oei7pE0?kP1p6YBoaBeL@`k@5^pi1p2p86paaG83CaSFZhPJJ2jYi;D1Yp2OBYn0JB2d:`JK>Zo9]Z`iVc0JZ2n9LZk2m98;8bQ7A9VJaSNTe>XAX0eFUp2m86Rg?nG1pWjPKp=2>3pEbOk_86pem0=pYg0KpIXBagpbaF83Aj0FpROP0eNe3OA0BnG<=98;c2gL4Up^82Co1?Oi<>pi@5]9BOaP;8BUP`i8F@aUpPa[S0Y8;o[S89i;i1ZLH6VP`06Zd0JN4LP=EZ0f<8eP^GaOjodo9pi5_8;oT2FTRZl3IcpT7De@`kL3LaSoSQ[N:hda1X8;gPk8piLG`0eWmD2gX3COe8>kE<5p@1>d;8;o71j@=M1OaaoAWp2Wb^i;i2mS_2m0nROa[T3_Ap6ogPpUOj=0?ja=pVUT;f?o45[OlnlpS1JP=pcf`oVYpfePKpYYOnH;@pkJ@=pdc`p45P6h8GokB2mdpM67fPKpC4?PpeAGLho>8`Up9npfp5?p0WLD`m<2eSXpk<3HH0GpB[H;24loTEI@OpYDoT;loQBl@UpaP8i;P6`oPJ7c1XHA`1J7o27D8pYPMCA2o0<8BoakZZpQPF<8n0J>@EYoc>2f0JB2hX_86TP^R;X1Y=B:2l9M2?a1Y<a6RmYLcCcUd9?:G<TmYLcB2l0J:2d9_cC@1YNR>2eZH;LSgPJWF1XN:c2c0J22k;Xk511N0=[p0<`k03H@Gm2JaGU35B`k8]X6_P^Z;F1[8;@1XN0;E@F@3AMEN=71MfF59mDA0BOTm=98;mVQY91Oee4UP`kJ2BaGm0TQ:F2pP4T9BaGn;32Go0BAPDWj91H4`b9TCN4VL3Bn4Vb?1Je]5a0f<H^?j0gT5p:1EEG@I<Eg2FUS5OeH6lQ7^pSkPKpA_OlnCpWWKj0FbbPKK@1]<CSDaS8>MC::5b1J6D<?8;<bR0oP]K6>QOc25QQOo8;4pkaF@3Om=KpM_Ol8;Npg@Fi3Ol=X6phJ@=pcc?p45POoiXF<1pSQ;722hmKfQUOn^06pikhe1Q^LaUS1K74=<^SR:5Q1JVe5PI@FQ[TJI6oH3OmH;Bph@Fi3Oji;X1`ihhe5_X;oT1f?5Ef6M;L@=92?i;H@GH3L@G1p^C@FM?1J0=7`0eVQ9cBjTL5dBj0=5gBI4WI9TBMTV@3A@GA9UBMDD5VB@G57X0eT5_A@FY=1JP=3_DIa=3b0f4I19gJ@Se1[Oi1Ql0gT5dBB25C`0eD5V0eo^7_DIeO9AS0eGI=6@AaGQ=32?iUQ:>2o0J>2Apfpm0_pP5hm0UP8X;mTP9?k>49?Z>6T`^941=h0eD5P0e`9=U0eoX5YM86pPndg2j^8An2FQR5b6O<L@FQR5p1QU2?;[]pP^a6pRM[OiX;@[f:La6Wj9]RS]UP]06Vm0J?2VP`BB82Kk1XXR9H;mSR2TpP4T4VpP4T4VpP4T1?p0982Oo0B@gTpP4T9Bpa2J0UP`ZN2CO544WmPJR49i;X1ZXHD@G03FA0EaFUSP0hmCTg83O@eUcPKZ:Q91IP=^RB@FX3G@FA91Ka=52=BB2pYT`n@UpYehn>TP`kI;P0eWX3BHD`Y;RCMa=9TC@G83Bj@==1KP==XDk@=A1J0=pPgPKo3iPKhZ1_8;c2g45p2QB@S]<X<l1;BbR`kL3M@Gm8;o7pSp=1M0=pZiPKpM_OmnKp[1IP=phc^i;:gbPK?J1]]CCP1]L3>2i]iP<oS::UUfI@QYfIaCCZdPVWEW0JnFL9In0=U2FW=Y3CCP1^X9^]0h48KaFD5_XHOpig3pp0a0KplROpLSo=mddPKg83:2e_];:2g]XAQIaG<5XXJd]pkbWpE^?k^U1Kb5GbIi@^E`03IHFVjYSJ@FU[T0gT5T0g_Ipie0KpW1JWp;LphmWo`]pd@GX3Ob>pQ1LaSoX1f=6:nRn6KPFPQ[i1[8;Zej>M[hDXP]P6Td0JGHSP]RGPSbYN@6PP]2B2k8]2C]1X8R8i;_RQQ7kA@cRn8X99kA@BCeRP9OB:0Un8X2GeRQ:?eTP8i;_UPTOL3B@BC]VQU7d0ee8BaFnC52TP^J`0WQ6@3A@4N5h24N83KA4AIVLI131J0=GT@aFeE`VM31Oaa:22pQ0AOe:;oQAOe2;oP0e4E2C]RaXoZ?2SP_B:2b8oB?8TP^c?<Ug9=2J2cYH;BmgPKOTel0^I1OAFoLQLA_8;Bb4pX@=U1OeVD3BA@M0=5]0eDA>:C2Ta8iRK@=5P1N@?TAb0f8j:6eQ]DD@<kB>4j8iX<RB<3e0eD@<JB<ShAb@H4]L9gBBaPY8PN@=7:35953jBbacJ:7cUSQTeD?Y96BCb@oT]H==53kBbPDeA?JJ>7BbP_@FRJ>7CA@mP`TeL<VR9c3O9XiIA43N7`9Y0HYRRfX8@VUQQDAAIe<8Cb@i5L@]8;@A4CA@Hh]@4mD6Ed41A6Ae<]8;CbeVDA1YH;26]Cb@kPLfS?XDeD>m5YHATCb@pecJ>4pY4mD?n:1Y8c?n<VSQ`kA;7ApeZJ>6pY4]M7pBYHa?n:1Y8aGn81Y8i?oTBi0?oTBcD=pA9L0?Oe86Ta0np@9]0C`i@Dg0;Kk2f45P1pe1ZiAP2go0J>8F<7pl09OnZ0pSPAWkRR5pE9I2=p40R3<9XpiE;g]E2hLE;gmE2h<E7h8G1KN9QpLG1lJ8Up8Z3n@Z3pHZ2n0cUlg:Pp<5PPpRHOU2a@OP609o<;A1p0]0Gg4I1np6D;i0_445p647i0_445p<47e<88;o1HApXH@@Gm4i2pXHG`i9a4?Pa@OaIa88PH4?m4i44]523o2L230=P`OP651P0H4?e5H0WiQ_2pe4[05nR0m222kTXX?]H7P@aFmATH@Wja?0RQ6LGn325`X1F43EAfg01Q2O]2MQ1J2<[T1F0;lL5YW2MT0H@^oX6RQ6X1Q2OpFP<8Cpke1Q2OpFP<8Cpke1Q2OpF0<8FpnH>X?`ka;11pF0<8Cpka1Q2OpF0<23o[3e47nF>XG`kP?@@Of92QO>a>Ja^D<5p3UE4@`k0GX[L2e<8o0jU@MP?J6`hP[R6`g0`X6`e0ph3Gj@^_k62aQ?n0J30PnXHZ47b3327i1X8I@OD<17o@@4Oj30A@Gb70AO4D171NTD4SnXXIA@GQ34191Ka6116@BaFX5HD45P0e]8bPpS@I0=Q1He>L5ZLiJpLQP^B22pXD7n27`Oe:3oR3OOe:3oQ2hpXPhhn24poR2OpA1;pXP^`k47Ok87pk85OeHC?k05Oe@3oR5l9i0J:4OaOd1^_XKlD4`T6oh1Kl0fp<;OBQP_J7<QlQlg83@@GM3RANT4I17kAA@X`B:64WY53BCeRQY9kAb1ANTT8AoTT<8X;_URQ@na=9417gCH0=3d0eT5R0e45`1j71ID<5[2eAaFP?NcP[2ShP^13F@3AOe:?oRAOeB;oR0e45p@XLP?oT<5QAMe><3AMD6E9e@IP=5c2G[AL0UlT>i;KT7`IP^`H;A@fj6N9laFSQ7m2IaGMIP1J22i0J2RZ^l2PgQlgT;`64`B5`a2GS2GV2Oe2gb1KHP^_a?j0Ob0pj1p83o07pH>j1`QKg4l6<kNo0pT4oOm3_@CjpiC]@_ghe9g<Efhe9g<CfpaC]H[YpPFg<Ie^k2obS>Qp0NnS7M1p@3@@F<9g0?Nh0J;83_E52<HlO7c0pX0feU3iaOh3:Z]HC]@Fhm@;H@Wpb0?R2Gp40o89pm@2iPWpe0;aQKpb0;P3h`j@>PopQaN11p@3`2po<1n@aFi7=8;Cm@=38:fD5e0gL8oPJB8GiI6Ge0e]=OeH6fQ7a3NaSZeP:oBB8F4C_EFj5`4g5?[@@G8AH:<iNng4F2N2bQ``@;a9m@Fpe5i0=;Q2op0[0WTPpo4?01Y9:?pRbX9ijOo64a9X91p2QaPJB0QpQPm:F0QpQPm:R8pm<7RCAGpaaN9=5Op31iTeHpo5;RCAcpm9o9=83pXFo9=411j0e69=P3Gn@=5QCHa=3_AA4aYH;81YIAEXiaV03B@FL5]Xk74VhZXAR0m:KoU0m86TP`k<7<2KoU0m06TP`k@3aY`kDC8DT5pBQ]4hn<7T9`kL?1BOeiN2TP`kD?9B@Gn<6bB@Gn<3kOoXEOei;D@G@;CB2f45lLOeH6VR5p60Y8?kT1pEPO8=npB1?i1KkaEi2oh1?cY?0gmFQU5nTBNVe5SBo0=dRBnGmKA;dOi8BUi0KpOS1p4pj@F152Ee8d^H;01^8;L1]8;62fhEO1IfOUK1J545k0fD5WDpUD5WCaGnC1IP==p12R2d:?i8EIU7m4:]cSo25FH3COa@ZbP^Ap12Z82po25F1M1OP=EP1N1?oFJTe5k0fV^?jGl0==fHaFbA1KP=U1JP=G2<a6gP^0Vo`n]5V3Gi7T4^P]PJp<eS4;8;<3oe5XiQI5T5p08=Jg2pP46^K1Oa23F`pP46^Op36kP=MpH]?l5QpH]?lQCpL:OlL3DOgBpoaHaGnLPQ:R2p^U<5pK:H;ogDaGnJ1]8;o^I@GnJ8jE<5pKZ8;ohEOg@6^p[6D8p[5D8p]a=32?l]7>Xdj7o32:4OePSaAOaiK6SpPW@TnPp[AaGH;lJSP_@Fp17c@m4O43@L4D5a0eD5]ALeg^3fCk47^;T@aGX3Bi4OjU1Oa9IpC0JCoYBOf:?oYAaGn61YOkI;pC0J:2pYTGnD6`p[47nH6opZT?nBRP`kL3@oP6a3@@GX7^:62oQ>c2Kjp22XP`kH?`pYAVcge9J26`Zo2l1[n0SNi88;H7`K4?4?Ne0J3XPdX_XJp:RP_Z62aXi;]Ra9?2::Q9iAaaUm98@Um982OaTP9p2B0Wm9H2KaVP9O2J0Um9X99iC@cRm9HHAo4TM2PP_cB2a8NX6TP]B22i0JK<PgQO9M0NnU5KRRP^Jg:Q9b0eD8b8pk571Oaa:7oRAOeB62pXD?n41X?k931Oe:22pX@nloQ@@Gn0PpXPnlo;1Op22RQ7j91Ob@9Oe8cP`]6[BAEOf0;C@F172?i<:i;6WP`Jp<YlPK3<]j0K;<_h0KC<af0KK<ce><d?:1_<dB2b>]dK2ld=Xc3`<iQQjVL@emd>H@md>XIMIWD8MjWD9MjWD=>]d_67>Ij33S<ma=]dd2fd?<S;<md0Jl<kP^@6[c>i;R1YY1@kP`k=fpB_`kEb1Ib6neLIEG5`TFaFj^1HV6j[THaFbYTJK6D5TJK645V0g>fOZHaFbK^HKUD5`Fm4pIAb0eL8mYH;L1XHAp26Qf88ApD0kVR5p@2YUfX8Ac2gaQ>g0lX1l@5^Y2MU2O]1p85`]2oaXMR301X=R2:Q5]@aaSg8X@Sg8X@Sg8X2GHRP9MR:0Ug8i2CH_g982?HTP8nRB2AK4T4Rg98@Qg8XZ46b5;@OZ0eD5P2GX1B:2b1;c18AJ0nl4RlX`262l0J3aQmX?:3cPP_k3c5`j3ON0Wo@Uo@Uo@^`0FWL9hP7?8305bV4hdH>^1n8Fo89oI3R@@F95RAHDN95P0eF97419RB@aTb98@Ub98BUb98BUb98KBHT]1=RIHVF9URIHVF9?0BHTe1;RC@4_9=0BiTe4Tb9XIAHTe8AiDmD:32Wa9H@VbR`8CKTgj=_CKTgj=_CH0EUC@aRb9HHAaF195BTa98JCH4T=9]2B64T5PBA0AiTDn1lHTF83e8LP3@Pd0<iGgP7<0FgeA`JAWRp43BA2p^?2>2d0J:2i0J7LTgPJ7VSf8oZ>2cXi;]1X]P6Rn8mB>2n0J;01X`ZB82CmTQ2GmTQ2GmTQ^9oB@4pj90CpVGjUoC@4]5mC@4p^?19X;aXPU7MA32SXYSXDp0;n;1H5D5W5KPTc>m:C<1^8;2Ue]<c>2hP^32=2CoWApek>2pYDWn<SP`kD3@pek?oWA@Gn:1XOkH3@pea6QpYP=3pC0J7oUAaGn61XOk<5XX;oPBaGm8:F4OePK;oR5n;j0^32?i4PQ6<=nh@aFX9O<3@@Fj11K0=3c@aFU7e0e6Q7gAI@=51MTD5QBo0=5P0eOY75@TP`B>64`b924`b93:CiTP9pRB0Wo9H2KiWP9?RJ0Uo9X2GiVPTT5jCacRP`06UR0Tm9Xc2?_WP]06QkPJJ2b8_JW<1X>0GkC@6`gQ_4Ve?NcR]QA@G43A@S8TpYDOn:SP`k<3AOeZ:2pY4Gn<1X8;oU@peaJpoX@JaOlQlgY5d3OJeL5a2oh9=a?mP=51J@Om8i;82`iDJ68Gm4HBE8ch49JB:[oQ0g]8o0Kk2k`m?9O1HE_fQVFkV6QKW0foT3F@F=S1JEo83HK5e5PIK64@6NbQ4AW]Hb1IK6D4eg<X9Y]I@6_bU3K;HcQ;?HdPVNbY1<^KF2I@FP3J@QUYK@acd0KJ83?41_<;pWS0h<9I@FE^33>2e0Jg@@]X;J<^mc=?k5Yp@]X;oQII@=3dIHeh83H@F9=cHjDh9QV0eW5O1Ie]5_Gkega3Fl@==1I@F^i`m<5e0hpa5^X;oP2FUR5k6dUoiBeL@`kX5]iAp@8H;8]P`aNjXGoPhgbU1LaOi^8;N3p=^1JaOk_=@;l_]a>o7D5T1OUjR1henaP`goa0nkOAeObp65o?iepbp6Wo?ifpbp6`o?ig`bp6lo?j7=kOboO^p:ilapUL?iOaN07olo5H@Wl@g3o5He6HE_3o5IP=GQOa=X[O<Spo33k2pPQnp20npX7T5p20lpXWGn6iP^X7dKla`_3GR5`aIn@Wlg?P=n]Gp0hgYI1Ob2nVD@Gn42g<8p[0=94;o;oGc1J>8Gm2JNTT8aP^91LP=51JP=7`0eG03Aka=5e0eNQ71MT_E9jBaF03Aoe_591NP=94A;1O4]@DT5mC@BJ2o9X2N2o0JB0WP`ZJ0VP`[>2o^?X6VP9pRR2C@GYA1:?:V49i;]1Z8XDhEEQDLUD5RD@F];n?V0f4Y@D<=9^;K0Vh0^G2<06TP_XJ[@VpY@=91OeZKoU0eT5pBYOkH3BOeX6TP`kA;1OeRKoUBaGn8UP`k<3ApeZF2pXThn41YHAp26WpX4pn<7YOeicH`]6[Ab2pYPFhQ7np5nhOjX;P1`nFfpae`oVD3On]CpfP0ge5QMA0K@FEd26oU`3KKDgP>M@6fP>=KpQ]Oli;DgP>=KJ0jP^3F4>]lF6WT5RKA4Op<3phQOo8;41`o_Ipfe?o<5Z0hohNpf@GD5XHQ_`k5b1Oe;OoTK@Gn4gpY6hn8fpY6]5pA^OkA[pA^pk43KOeCOoU0g?nF_p]Dm5pK1MpbHiNH6SQ[kclPKJ2h`^ZF4IE6U91K0=91I0=51L0=9TAn@=7Q0eGQ9PAo@=732>2n98@So98IAODL1;nB@4WjMoBa4D5mB@4Wf90Bp4T4UnY8IB@GM;32J2jYiXDe5`Di0=?2<iONUb?H@Tc0KJ:Q7XIHeD5[2FQR5UAaGn4SpXa=5pAXpkA51Oe86RpXeOn6SP`k59p@PJ:2pX4`n0UP`i<9H;o32Ko56UpPgWo0^E1M0=SkG@SiWQ7mD>Gno";

int main(int argc, char* argv[])
{
	fin = stdin;
	fout = stdout;

	ReadImage();
	UnpackAll();
	SplitScan();

	// realease resources
	for (int i = 0; i < 10 * N_FONTS; i++)
		delete[] FontsFigures[i].Image;

	return 0;
} 

void SplitScan()
{
	char splitScanThreshold = DARKGRAY;

	int col1, col2;
	int line1, line2;
	char* pImg = Image;
	
	// do for each figure
	col1 = 0;
	for (int fcount = 0; fcount < 3; fcount++)
	{
		// find where figure starts
		for (; col1 < Width; col1++,pImg++)
		{
			bool empty = true;
			for (int l = 0; l < Height; l++)
			{
				if (pImg[l*Width] >= splitScanThreshold)
				{
					empty = false;
					break;
				}
			}

			// first non-empty column
			if (!empty)
				break;
		}

		if (col1 >= Width)
			break;

		// find where figure ends
		for (col2 = col1; col2 < Width; col2++, pImg++)
		{
			bool empty = true;
			for (int l = 0; l < Height; l++)
			{
				if (pImg[l*Width] >= splitScanThreshold)
				{
					empty = false;
					break;
				}
			}

			// first empty column
			if (empty)
				break;
		}
		FigureWidth = col2 - col1;

		// now find bounding lines for this figure
		
		pImg = Image + col1;
		// top line
		for (line1 = 0; line1 < Height; line1++, pImg+=Width)
		{
			bool empty = true;
			for (int c = 0; c < FigureWidth; c++)
			{
				if (pImg[c] == BLACK)
				{
					empty = false;
					break;
				}
			}

			// first non-empty line
			if (!empty)
				break;
		}

		// bottom line
		pImg = Image + col1 + (Height-1)*Width;
		for (line2 = Height-1; line2 > line1; line2--, pImg-=Width)
		{
			bool empty = true;
			for (int c = 0; c < FigureWidth; c++)
			{
				if (pImg[c] == BLACK)
				{
					empty = false;
					break;
				}
			}

			// first non-empty line
			if (!empty)
				break;
		}
		line2++;		// next line
		FigureHeight = line2 - line1;

		// copy image data
		FigureSize = FigureHeight * FigureWidth;
		pImg = Image + line1*Width + col1;
		char* pFig = FigureImg;
		for (int l = line1; l < line2; l++, pImg+=Width, pFig+=FigureWidth)
			memcpy(pFig, pImg, FigureWidth);

		// process figure independently
		ScanFigure();

		// next image data
		col1 = col2;
		pImg = Image + col1;
	} // for each figure
}

void ScanFigure()
{
	// convert to FigureImage
	FigureImage currFig;
	currFig.Image = FigureImg;
	currFig.Width = FigureWidth;
	currFig.Height = FigureHeight;
	currFig.Size = FigureWidth * FigureHeight;
	currFig.Ratio = (double)FigureWidth / (double)FigureHeight;

	// compare with each font and figure
	double minDist = MAX_LEN * 4;
	int minFig = 0;
	FigureImage* pFigs = FontsFigures;
	for (int fig = 0; fig < 10; fig++)
	{
		for (int font = 0; font < N_FONTS; font++, pFigs++)
		{
			double d = CompareImages(&currFig, pFigs);
			if ((d != -1) && (d < minDist))
			{
				minDist = d;
				minFig = fig;
			}
		}
	}

	// print best figure
	//fprintf(fout, "%d", minFig);
	printf("%d", minFig);
}

double CompareImages(FigureImage* img1, FigureImage* img2)
{
	// first compare ratio
	if (fabs(img1->Ratio - img2->Ratio) > 0.9)
		return -1;

	// now calculate distance
	// (by rescaling img2)
	double horizStep = (double)img2->Width / img1->Width;
	double vertStep = (double)img2->Height / img1->Height;
	double rectSize = horizStep * vertStep;

	// curr resct
	double left, right, top, bottom;

	double dist = 0;
	left = 0; right = horizStep;
	top = 0; bottom = vertStep;
	char* pImg1 = img1->Image;
	for (int line = 0; line < img1->Height; line++, pImg1 += img1->Width)
	{
		for (int col = 0; col < img1->Width; col++)
		{
			double fTop = floor(top);
			double cBottom = ceil(bottom);
			double fLeft = floor(left);
			double cRight = ceil(right);

			int l1 = (int)fTop;
			int l2 = (int)cBottom;
			int c1 = (int)fLeft;
			int c2 = (int)cRight;

			// summarize
			double sum = 0;
			char* pImg2 = img2->Image + l1*img2->Width;
			for (int i = l1; i < l2; i++, pImg2 += img2->Width)
			{
				for (int j = c1; j < c2; j++)
				{
					if ((i > l1) && (i < l2-1) && (j > c1) && (j < c2-1))
						// full pixel
						sum += pImg2[j];
					else
					{
						// part of pixel
						double frameWidth;
						double frameHeight;

						if (l1 == l2-1)
							frameHeight = 1 - ((top - fTop) + (cBottom - bottom));
						else if (i == l1)
							frameHeight = 1 - (top - fTop);
						else if (i == l2-1)
							frameHeight = 1 - (cBottom - bottom);
						else
							frameHeight = 1;

						if (c1 == c2-1)
							frameWidth = 1 - ((left - fLeft) + (cRight - right));
						else if (j == c1)
							frameWidth = 1 - (left - fLeft);
						else if (j == c2-1)
							frameWidth = 1 - (cRight - right);
						else
							frameWidth = 1;

						sum += pImg2[j] * frameWidth * frameHeight;
					}
				} // for j
			} // for i

			// update dist
			double val = sum / rectSize;
			dist += fabs(val - pImg1[col]);

			// update rect
			left = right;
			right += horizStep;
		} // for col

		// update rect
		left = 0;
		right = horizStep;
		top = bottom;
		bottom += vertStep;
	} // for line

	return dist;
}

void ReadImage()
{
	char line[MAX_LEN];
	memset(line, 0, MAX_LEN);
	int currLine = 0;		// current line in image

	// read first line and calculate width
	fscanf(fin, "%s", line);
	Width = strlen(line);
	ConvertLine(line, currLine++);

	// scan all lines
	while (fscanf(fin, "%s", line) == 1)
		ConvertLine(line, currLine++);
	Height = currLine;
	Size = Width * Height;
}

void ConvertLine(char* line, int imgLineIndex)
{
	char* imgLine  = Image + imgLineIndex * Width;
	for (int i = 0; i < Width; i++)
	{
		// write proper number
		switch(line[i])
		{
		case SYMB_WHITE:
			{
				imgLine[i] = WHITE;
			}break;
		case SYMB_LIGHTGRAY:
			{
				imgLine[i] = LIGHTGRAY;
			}break;
		case SYMB_DARKGRAY:
			{
				imgLine[i] = DARKGRAY;
			}break;
		case SYMB_BLACK:
			{
				imgLine[i] = BLACK;
			}break;
		default:break;
		}
	}
}
void UnpackAll()
{
	int codeLen = strlen(Code);
	char* pBuf = Buffer2;
	for (int i = 0; i < codeLen; i++, pBuf+=6)
		DecodeChar(pBuf, Code[i]);
	BitsLen = 6 * codeLen;

	memset(Buffer, 0, MAX_SIZE);
	RLE(Buffer2, Buffer, BitsLen);

	// scan buffer
	pBuf = Buffer;
	for (int fig = 0; fig < 10; fig++)
	{
		for (int font = 0; font < N_FONTS; font++)
		{
			FigureImage* figImg = FontsFigures + fig * N_FONTS + font;

			// build width and height from first 16 bits
			figImg->Width = BitsToInt(pBuf, 8);
			figImg->Height = BitsToInt(pBuf+8, 8);
			pBuf += 16;

			// build other parms
			figImg->Size = figImg->Width * figImg->Height;
			figImg->Ratio = (double)figImg->Width / (double)figImg->Height;

			// allocate memory
			figImg->Image = new char[figImg->Size];

			// scan by 2 bytes
			for (int i = 0; i < figImg->Size; i++, pBuf += 2)
				figImg->Image[i] = ((int)pBuf[0] << 1) + ((int)pBuf[1]);
		}
	}
}

void RLE(char* buf1, char* buf2, int bufLen)
{
	int maxRepCopy = RLE_NUM_BITS;			// repeats <= this will be copied
	int maxRepLen = (1 << RLE_NUM_BITS) + maxRepCopy;
	int maxCopyLen = (1 << RLE_NUM_BITS);
	int repLenShift = maxRepCopy + 1;
	int copyLenShift = 1;

	int pos = 0;
	int bufPos = 0;
	while (pos < bufLen)
	{
		// copy sequence
		if (buf1[pos++] == 0)
		{
			// get length
			int len = BitsToInt(buf1 + pos, RLE_NUM_BITS);
			pos += RLE_NUM_BITS;
			len += copyLenShift;

			// copy
			memcpy(buf2 + bufPos, buf1 + pos, len);
			bufPos += len;
			pos += len;
		}
		// repeat bit
		else
		{
			// get length
			int len = BitsToInt(buf1 + pos, RLE_NUM_BITS);
			pos += RLE_NUM_BITS;
			len += repLenShift;

			// repeat
			for (int i = 0; i < len; i++)
				buf2[bufPos++] = buf1[pos];
			pos++;
		}
	} // while pos < len
}
void DecodeChar(char* buf, char c)
{
	// get encoded number
	int code;
	if (c >= 93)
		code = (c - 93) + 44;
	else
		code = c - 48;
	
	// split to bits
	buf[0] = (code & 32) >> 5;
	buf[1] = (code & 16) >> 4;
	buf[2] = (code & 8) >> 3;
	buf[3] = (code & 4) >> 2;
	buf[4] = (code & 2) >> 1;
	buf[5] = code & 1;
}

int BitsToInt(char* buf, int len)
{
	int sum = 0;
	for (int i = 0; i < len; i++)
		sum += ((int)buf[i] << (len - i - 1));
	return sum;
}