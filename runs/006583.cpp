#include <iostream>
#include <fstream>
#include <cmath>
#include <vector>
#include <map>
#include <algorithm>
#include <string>
#include <iterator>

using namespace std;
const double PI = 4 * atan(1.0);

class ANN {
public:
  ANN(size_t nInput, size_t nHidden, size_t nOutput) 
    : wInputHidden(nInput + 1, vector<double>(nHidden)),
      wHiddenOutput(nHidden + 1, vector<double>(nOutput)) {
    int pos = 0;
		for (size_t i=0; i <= nInput; ++i) {
			for (size_t j=0; j < nHidden; ++j) {
				wInputHidden[i][j] = weights[pos++];					
			}
		}		
		for (size_t i=0; i <= nHidden; ++i) {		
			for (size_t j=0; j < nOutput; ++j) {
				wHiddenOutput[i][j] = weights[pos++];						
			}
		}	
  }

  size_t Classify(vector<double> inputNeurons) {
    size_t nInput = inputNeurons.size();
    inputNeurons.push_back(-1);
    size_t nHidden = wInputHidden[0].size();
    size_t nOutput = wHiddenOutput[0].size();
    vector<double> hiddenNeurons(nHidden + 1);
    hiddenNeurons[nHidden] = -1;

    for (size_t j=0; j < nHidden; ++j) {			
	  	for (size_t i=0; i <= nInput; ++i) { 
        hiddenNeurons[j] += inputNeurons[i] * wInputHidden[i][j];
      }
      hiddenNeurons[j] = ActivationFunction(hiddenNeurons[j]);			
	  }
	  
    vector<double> outputNeurons(nOutput);
	  for (size_t k=0; k < nOutput; ++k) {
	  	for (size_t j=0; j <= nHidden; ++j) {
        outputNeurons[k] += hiddenNeurons[j] * wHiddenOutput[j][k];
      }
	  	outputNeurons[k] = ActivationFunction(outputNeurons[k]);
	  }

    return max_element(outputNeurons.begin(), outputNeurons.end()) - outputNeurons.begin();
  }

private:
  vector<vector<double> > wInputHidden, wHiddenOutput;
  static double weights[];

  static double ActivationFunction(double x) {
    return 1. / (1. + exp(-x));
  }
};

//double ANN::weights[] = {1.15178,0.173062,0.244166,0.241802,-0.353628,-0.41287,0.797639,0.78024,-0.260342,0.00937316,0.394927,-0.748987,0.139591,-0.163676,0.339995,1.10864,0.873511,-0.588535,-0.766248,0.349683,-0.836907,0.208446,-0.0246241,0.727901,-0.800451,1.31133,-0.549886,-0.990615,0.344798,-0.356796,-0.460587,1.32316,-0.703145,-0.456896,0.231053,0.176391,0.135858,-0.0943348,-0.456655,-0.727001,0.0118731,-0.175746,1.05752,0.361101,-0.383967,-0.877246,0.0914385,0.291425,0.0996173,-0.806235,0.02612,-0.875381,0.563014,-0.105464,-0.274562,-0.385686,1.02146,0.186261,-0.269109,-0.305578,-0.728951,0.192896,-0.561339,0.721141,-0.0929842,-0.296531,0.836201,0.318804,0.0211725,-0.968362,0.123362,-0.5145,-1.00395,1.02964,0.980351,0.181831,-0.201834,0.337105,-1.07925,0.293969,0.0905776,0.791489,0.198796,0.259434,-0.137337,-0.184284,-0.62059,-0.18131,-0.757303,-0.436993,-0.214753,0.273964,0.613905,0.0814833,-0.0412591,-1.18083,0.172857,0.437858,0.607938,-0.31649,0.0690929,0.42021,-0.0993287,-0.0695094,0.67469,-0.152714,1.12199,0.368923,-0.677343,-1.15246,0.589003,-1.22393,0.133707,0.412417,0.885691,0.940479,0.262355,0.568272,-0.281246,-0.0914657,0.0663108,-0.156396,-0.323309,0.528683,0.0709266,-0.135937,0.387262,-0.221183,-0.0894744,0.0742437,-0.0454652,0.276362,-0.465769,-0.213122,0.227436,1.00637,0.0889724,0.445499,0.294734,0.813249,0.0256449,0.159642,0.0355157,0.699507,-0.490549,0.509357,-0.633468,-0.120161,0.642732,0.00246425,-0.0987628,0.556097,0.0115884,-0.129743,-0.908959,-0.296981,0.0101356,-0.113642,0.938489,-0.0216904,0.0604553,-0.0706318,-0.157554,-0.190258,0.0744138,-0.584545,1.0971,0.810539,0.830908,0.262939,0.45852,-0.754964,-0.291474,-0.136093,0.187744,2.61123,0.714664,-0.645555,-0.466456,1.17252,-0.694719,0.786201,-0.863754,0.341965,-1.43601,0.474301,-0.555234,-0.915394,0.235619,0.225624,-0.107244,1.54826,-0.478699,-1.23915,0.00411934,-0.492643,-0.538596,-0.00372764,-0.429133,0.147667,0.4856,0.565992,0.415615,0.65999,-0.651011,-0.418673,0.140793,0.0661581,-0.857214,-0.361196,0.076758,-0.0645297,0.13852,-0.545917,0.0420131,0.272568,0.485082,0.174966,-0.54399,0.213628,-0.411361,0.0710671,-0.261466,0.891998,-0.104625,0.546231,-0.0579834,-0.300813,0.66962,-0.849732,0.131488,0.482535,-0.271868,0.800669,0.327071,0.923751,0.654242,-0.3911,-0.190065,-0.323846,-0.286792,-0.213708,0.839586,0.444869,-0.598534,-0.48187,0.142381,-0.12209,0.046092,-0.250432,0.0143093,-0.579371,0.39847,-0.316124,-0.640433,-0.135802,0.453202,-0.00557039,-0.869125,-0.0585342,-0.233225,0.266339,-1.37284,0.664735,-0.178255,-0.516075,0.389489,-0.160176,0.151882,-1.07232,0.12672,0.0413586,-0.178963,1.06045,0.285916,0.532679,-0.0974095,-0.279274,-0.999268,0.647367,0.494791,-0.258977,0.785855,0.00611059,0.202994,-0.303523,1.01271,0.625036,0.224391,0.806021,0.276504,-0.336583,0.268042,0.242268,0.18332,0.0055908,0.503385,0.158072,-0.187215,-0.10629,-0.185304,0.38716,-0.076844,-0.0163815,0.0798307,0.466633,0.338554,-0.2587,-0.170033,-0.26841,-0.455419,0.393684,-0.71317,-0.175943,0.255958,-0.601464,0.0240089,0.767224,-0.0168307,-0.316487,1.21104,0.770562,0.838631,0.306929,-0.105609,-0.637575,0.1888,0.899921,-0.744867,-0.333726,0.0120406,0.0738029,0.159493,-0.212859,0.35414,-0.22289,0.789737,0.031264,-0.112207,0.140887,-0.385438,0.356177,0.2019,0.0103697,0.383077,1.10149,0.348535,-0.323992,-0.177851,-0.788233,0.405768,0.0490083,-0.300643,0.215113,0.021456,0.78765,0.387743,0.131812,0.0753205,-0.647702,0.783463,0.96804,-0.671413,-0.0818592,-0.0939273,-0.300029,-0.314595,-0.0900807,-0.589713,-0.112892,0.354462,-0.675778,0.0849248,0.0238738,-0.0293043,1.06119,-0.144855,-0.428092,-0.0226005,0.373404,-0.249678,0.392898,-0.914628,-0.222612,-0.482698,0.614022,-0.0553082,-0.616124,-0.68412,-0.368173,-0.161868,0.573862,0.270344,-0.978536,0.29264,0.408787,-0.0623346,-0.44607,-0.0322923,-0.265005,-0.57352,0.326989,0.0911663,0.643994,-0.105041,-0.526155,-0.475535,-0.207131,0.135527,-0.442768,-0.0706988,-0.281489,-0.494697,-0.0598251,-0.497508,-0.189877,-0.103376,0.23546,0.348408,-0.469007,0.348637,0.176535,-0.454687,0.147097,0.0964595,-0.901702,0.537205,0.775189,-0.116504,0.111407,0.194737,-0.481422,0.0924447,1.11947,0.325291,0.539115,0.0421137,-0.353739,-0.636629,0.80329,-0.216961,-0.857746,0.59076,0.0370222,0.610017,-0.336664,0.813392,0.152495,1.25872,0.490779,-0.615934,0.0799203,-0.875801,-0.193894,-0.639569,0.215146,-0.00785922,0.230231,0.277111,-0.026332,0.27052,0.396615,-0.498432,0.127253,-0.321733,-1.01928,0.0625754,0.107768,-0.551234,0.0626575,-0.0266846,-0.688043,-0.403712,0.323017,-0.383645,-0.643812,-0.65426,0.161326,-0.330545,1.33701,1.28914,-0.638772,0.604576,-0.111399,0.213067,-0.495098,1.13507,0.145561,0.0381131,0.674684,-0.282046,0.75526,-0.0989499,0.23841,0.284061,0.223161,0.43283,0.497256,-0.0264246,0.0877109,0.160003,0.150336,1.02178,0.0367116,-0.173338,0.499304,-0.0738543,-0.544312,-0.713639,-0.539596,-0.134001,-0.363118,-1.32937,-0.229023,-0.240622,-0.678375,-0.644186,0.540307,0.785191,-0.680806,0.846544,0.549608,-0.550341,-0.51996,-0.678393,0.648765,-0.762452,0.334609,-1.39345,0.0892022,0.547199,0.134554,1.07061,0.534549,-0.00968071,-0.855311,-0.197551,-0.591743,-0.133433,-0.693409,0.00824279,-0.669037,-0.219038,-0.355111,0.817756,0.632977,0.673654,-0.022972,-1.12553,-1.08743,-0.232078,-0.169267,0.669269,-0.854368,1.26771,1.1545,0.283042,0.0525994,-0.140884,-1.1736,1.34973,1.14642,0.0742697,0.0971576,-0.562125,-0.00694172,-0.779777,-0.0620192,-1.66192,-0.184649,0.181247,-0.363012,0.791661,0.620363,0.113757,-1.86712,-0.28534,-0.200897,0.377678,-1.01972,0.131754,-0.405166,0.376305,-0.454512,1.25339,0.713135,1.42545,-0.347013,-1.21616,-1.32361,0.0220278,-0.777132,0.582021,-0.106206,1.40615,1.14792,0.331646,-0.00427056,-0.126326,-0.998804,-1.46773,-0.326385,0.00607441,-0.0629509,0.828233,0.223944,-0.0550056,-0.393339,1.50682,0.339866,-0.217484,-0.430136,-1.05555,0.382296,-0.426355,0.293952,-0.390735,0.205504,0.869892,-0.46328,0.507224,0.381849,-1.1237,-0.653914,0.373926,-1.76175,0.319808,1.09428,-0.292273,1.35453,-0.263789,-0.0491573,0.583074,0.0977096,0.101134,-1.01794,-0.390985,0.575879,-0.94706,1.51303,-1.07765,-0.00162389,0.0967514,-0.058572,0.392924,0.149133,-0.182534,-1.17274,0.640055,-0.0919396,-0.367847,0.685374,-0.342373,-0.31996,-0.840667,0.392016,-0.530455,0.501807,0.297315,0.87224,0.209284,0.759682,-0.555235,0.41465,-0.343442,-0.874803,-0.5004,0.393099,0.14532,0.376851,0.643821,-0.38133,0.492432,0.0320366,-1.12874,-0.610467,-0.349185,0.163889,0.347412,1.4845,-0.0910905,0.335346,0.704924,0.0398434,0.157334,-0.361015,0.580418,-0.289186,-0.789525,-0.646939,-1.26499,0.817551,-1.46677,-1.44491,0.124538,0.0999583,0.159316,0.571455,-0.104675,0.640578,-0.51439,0.237063,0.705613,-0.143335,-0.546343,-0.440395,-0.786597,-0.245361,0.923576,0.0158689,0.733217,-0.459296,-0.223908,0.307853,-1.40543,0.710937,0.236587,-0.393744,0.450548,-0.332295,0.14631,-0.155539,-0.574432,0.1066,-0.524604,0.596749,-0.892627,0.286373,-1.0784,-0.587274,0.218201,-0.202893,0.277689,0.0807347,-0.0949798,-1.08203,-0.42594,-0.209458,-0.279194,-0.365558,-0.133604,-0.652539,0.240391,0.0390948,0.419522,-0.0101852,0.112156,0.036,0.310986,-0.432197,0.404642,-0.00553683,0.572335,0.279557,-0.272984,0.818212,0.129366,-0.534146,0.236411,-1.02975,0.804024,1.43495,0.88651,0.0353469,-0.182418,-0.603429,-1.06005,-0.209882,-1.02934,-0.397688,-0.0848885,-0.212826,1.27417,0.61453,-0.0356483,-2.45319,0.0510094,0.167995,0.602665,-0.934858,-0.385104,0.597343,0.514819,-0.592565,1.30238,0.0296868,2.05291,-0.194448,-1.37652,-1.70686,0.984739,-1.72241,0.411736,0.0807506,1.7091,1.40488,0.0189288,0.796855,-0.540461,-0.732506,-1.6428,-0.670723,-0.437383,-0.0120859,0.879831,0.998892,0.368506,0.800923,1.33976,1.14632,-0.203711,0.0909773,-0.760003,0.56695,0.419113,0.389569,-0.513674,-0.228349,0.282041,-0.827625,0.235396,0.0576865,-0.916914,-0.561578,0.895396,-1.46427,0.0454013,0.997291,-0.101255,1.90426,-0.446353,0.549443,0.556135,0.0684316,0.870365,-0.885581,0.634233,1.23472,-1.28461,1.20531,-1.10832,1.27657,-0.101777,0.428329,0.206252,-0.145944,-0.804436,-0.620438,-0.379718,-1.04221,-0.759591,0.639589,-0.598935,-1.0548,-0.351455,-0.658113,-0.181701,0.260082,0.0970007,0.270487,-0.334917,0.31352,-0.37206,0.255689,-0.00121197,-0.663786,0.145623,0.419097,0.859597,0.600248,0.866593,-0.434501,0.712019,0.78972,-0.838218,0.978785,0.72346,-0.0998052,0.258627,1.11491,0.174461,1.05798,0.17619,0.225998,0.266707,-0.276921,0.361176,-0.345158,-0.73037,-0.944556,-0.962924,1.43665,-1.01632,-1.65374,0.413048,0.674082,0.101984,0.451616,-0.0904731,0.892175,-0.192994,0.166353,0.222707,0.111384,-0.734494,-0.0502606,-1.21871,-0.650475,1.13065,0.151744,0.647017,0.176249,0.160051,0.0997757,-1.87113,0.831037,0.489427,-0.912342,1.19021,-0.143655,-0.028594,-0.596923,-0.280364,-0.169309,0.178935,-0.0247773,-0.062421,0.256442,0.619103,-0.254832,0.46377,-0.501069,0.0209334,0.839347,0.321457,0.345009,0.2515,-0.124522,0.415522,-0.165536,-0.124719,-0.181534,0.0397006,-0.0564629,-0.0498228,-0.161548,0.0024086,0.526613,0.0333572,0.69276,-0.24972,0.10617,-0.462201,-0.444117,-0.0943005,-1.42453,-0.261189,0.0223562,0.286702,-0.429089,-0.324012,0.148277,0.927099,-0.303449,0.65506,-0.370479,-0.080556,0.420268,0.838285,0.322189,-0.250003,-0.264031,-0.449253,0.642054,0.267003,-0.72502,0.207419,-0.0544897,0.811681,-0.510619,-0.296566,0.661815,0.22096,-0.851343,0.20401,-0.815434,0.675331,0.182652,-0.566877,0.679875,0.235935,-0.809454,0.30391,-0.271973,0.650587,-0.257805,-0.278919,1.02543,-0.805063,0.584903,-2.16658,-1.12199,-2.30802,-0.236039,-0.203212,1.95991,-0.332354,-0.282409,0.63496,1.3787,1.00921,0.715008,0.810637,0.778079,0.403087,0.446204,-1.43544,-0.337556,-0.618717,-0.624253,1.13405,-0.766163,-1.22906,-0.0542796,0.468978,-1.12368,-0.515351,1.21904,0.17215,0.934778,-0.816442,0.996008,1.60477,-0.180827,0.867696,-0.664497,0.751969,0.453944,-0.302618,0.843173,-0.844108,0.675193,-1.95073,-0.196749,-0.0756787,1.18903,-1.08432,-0.925576,-0.3407,-0.224389,0.520353,0.264493,0.20336,0.447017,0.289247,0.224884,-1.40507,-0.604943,0.00862999,0.418482,0.646102,-0.036531,-0.922574,-0.226745,0.041883,-0.384991,-0.415903,0.611697,-0.428242,0.595688,-0.120176,0.472,1.45705,-0.837408,0.383983,0.576894,0.368597,-0.245684,-0.00430638,0.85926,0.00292476,1.35869,-0.374229,0.0290225,0.195826,-0.221347,-1.14361,-0.98753,-0.798089,-1.32529,-0.113487,0.630562,0.076817,0.222485,0.385737,0.236789,-0.378663,0.586089,0.85377,0.69958,0.216629,0.525119,0.0252145,-0.0841964,0.0836664,-0.183674,-0.0274854,0.586603,-0.202435,-0.150544,1.26039,-0.520481,0.597285,-0.588537,-0.119137,0.709075,0.321351,-0.292309,0.428154,-0.268656,-0.300154,0.157457,0.233282,0.0347976,-0.121884,-0.374302,-0.464358,0.154035,-0.0505764,-0.823944,0.123738,0.46607,0.243587,-0.0369096,0.59261,0.200182,0.483837,0.12227,-0.46303,0.65202,-0.841855,0.0956306,0.323429,0.381622,0.0502663,0.380536,-0.375633,0.143116,0.934639,0.728063,0.707257,0.50615,-0.366729,0.115015,-0.658825,-0.236326,0.205686,0.0695349,0.396069,-0.58215,-0.852443,-0.106697,0.900072,0.0181066,0.44189,0.00757969,0.44039,0.905763,0.944706,0.464057,-0.639928,0.718592,-0.665931,-0.562988,0.807089,0.657532,0.35119,-0.183929,-0.764045,0.327266,-0.762129,0.118096,-0.412909,-0.206606,-0.190898,-0.38016,-0.436849,-0.153322,0.949691,1.10244,0.138798,0.831895,0.198641,0.101309,-0.190678,-0.00786798,0.513686,0.461941,-0.652819,0.502255,-2.01827,-0.780678,-2.57063,0.0457823,-0.778495,1.99897,-0.896189,-0.922019,0.0711474,1.14304,1.31594,0.821001,1.8936,0.583392,-0.183695,0.353189,-1.79216,0.280593,-0.70078,0.0761539,1.26374,-0.785486,-1.21101,0.875042,0.397562,-0.659384,-0.414889,0.971636,0.371156,-0.177901,-0.422071,0.541706,1.53514,0.385041,0.334854,0.330433,0.760518,-0.353969,0.597079,0.974522,-0.751481,0.00744418,-1.65361,-0.265549,-0.0872603,0.742667,-0.395073,-0.671126,0.129987,0.729907,0.572425,0.0895778,0.271888,0.776889,0.0184279,0.453783,-1.02074,-0.279927,0.227638,0.00653027,0.952955,0.0714311,-0.496481,-0.132912,0.152634,-0.546294,-0.0398455,0.54591,-0.9252,0.129561,-0.711342,-0.0159604,1.05387,-1.13076,1.16597,-0.233773,-0.279679,0.123691,0.0275124,0.563698,-0.211242,0.811529,-1.00005,0.0559569,0.418293,-0.1473,-1.02389,-1.04405,-0.172077,-0.983113,0.192544,0.104756,0.467812,0.977285,0.903312,1.5572,-0.181615,0.497586,0.697592,1.18769,0.240441,0.90172,0.187617,0.136314,0.0812557,0.314128,-0.624911,0.66577,-0.208079,0.585761,1.29556,0.22315,0.159722,-1.17484,0.448337,-0.538965,0.0802578,0.206484,0.565545,-0.946008,-1.04979,0.213458,0.372879,-0.0420884,0.174139,-0.267029,0.0356938,0.180077,0.409861,-0.312381,-0.78515,0.891446,-0.95038,-0.802076,0.127133,0.631888,0.120253,-0.107999,-0.406115,0.563553,-0.997735,0.466084,-0.0530835,-0.270259,-0.322348,-0.27504,-1.10108,-0.195307,0.621197,1.47538,0.488905,0.536692,0.327357,-0.333364,-0.743626,-0.0780395,0.263776,-0.26148,0.332485,0.0690544,-0.692519,-0.0609863,0.825722,0.0693895,0.242252,0.0268142,0.845608,1.01434,0.413617,0.370267,-1.13917,1.39947,-0.933811,-1.55847,0.838002,0.82806,0.349088,0.271289,-0.685425,0.675037,-1.35841,0.249814,0.119662,0.051828,-0.270258,-0.00633371,-1.03316,-0.361104,1.3179,0.794921,0.694412,0.908864,0.196397,0.511991,-1.02718,0.316517,0.756313,0.0545788,0.378279,0.418754,-0.477108,-0.258126,-0.698965,0.407346,-0.622226,0.764382,-0.31132,-0.188803,-0.711789,0.0446015,0.567814,0.202967,0.829977,-0.0281694,0.108936,-0.448485,-0.599474,0.14884,-0.603581,0.190811,0.261899,-0.444332,0.0390728,0.931507,0.130792,0.228794,0.0843911,0.0429715,0.502212,-0.62057,0.0998788,-0.0293336,0.525079,0.60146,-0.358955,0.991596,0.98895,-0.282506,0.45006,-0.019108,0.330708,-1.20305,-1.30687,0.239906,-0.817576,0.705449,0.205568,-0.214721,-0.54592,0.95879,1.07906,-0.869257,0.867475,1.21273,-0.453956,-0.963075,-0.58896,-0.210954,-0.468413,-1.06978,0.982412,-1.13721,0.495859,0.942182,0.351724,0.566722,0.479708,0.360527,-0.486364,-1.04245,-1.34213,0.131934,0.0207085,0.134808,0.65949,-0.269055,-0.382826,-0.151476,0.277702,-0.100848,0.549146,0.183343,-0.588558,-0.206904,0.113419,0.214199,-0.421091,-0.134755,-0.45509,-0.297461,0.543046,-0.207675,0.79984,0.838131,0.927743,0.670909,-0.0960578,-0.0797603,0.285104,0.473327,0.29816,0.353877,0.812331,-0.191289,0.276438,0.999403,-0.155118,0.00678253,-0.649068,0.14793,0.482214,0.309848,-0.389494,-1.35611,0.681839,-0.616299,-0.184077,0.586474,-0.200413,-1.57321,-0.609149,0.138488,1.00907,-0.312796,0.340542,-0.386032,-0.0538714,0.23114,0.386256,-0.292842,-0.554078,0.100294,-0.651328,0.0210725,0.0268839,0.289832,0.42189,-0.296715,0.197493,0.0204112,-1.05128,0.442226,-0.00567319,-0.619274,-0.193924,-0.329834,-0.166174,-0.0923075,-0.260476,0.819906,0.40836,-0.287289,-0.0789609,-0.789935,-0.000255266,-0.161706,-0.270975,0.319144,-0.518047,0.089716,-0.131518,-0.733738,-0.230275,0.336871,-0.169924,0.102395,0.273656,0.352817,-0.0574206,0.156261,0.0750619,0.520995,-0.366725,-0.346781,0.140913,0.234072,-0.0530027,0.321159,-0.408691,0.0331367,-0.195129,-0.816288,0.698832,0.7346,-0.326719,0.452761,-0.630791,0.210437,1.29987,0.60933,-0.228152,0.578599,-0.132531,1.39666,-1.35588,-0.0375542,0.27251,-1.04753,1.20631,0.279083,0.501452,-0.240194,0.455997,0.965608,-0.0919714,-0.620023,0.115137,0.143922,0.237945,-0.673601,-0.0752725,-0.776779,-0.344225,-0.133828,0.132351,-0.0965308,0.469486,0.188513,0.299787,-0.367976,0.160577,-0.226738,0.707548,0.916251,-0.0411254,0.235338,0.391239,0.737709,0.439362,0.0574515,-0.0802188,-0.0736913,-0.662132,1.18939,-0.374617,-0.00777685,0.00989535,-0.560381,0.132497,0.0569386,0.411168,-0.494827,-0.0713151,0.876338,-0.282874,-0.157501,1.18349,0.190371,0.326069,0.119177,0.469237,-0.575841,-0.0455462,-0.53497,-0.660067,-0.13976,0.292242,-0.00468822,-0.593401,-0.835804,0.650269,-0.168717,-0.663534,0.86926,-0.473796,-0.248026,0.711618,0.183735,0.0899738,-1.03677,-0.852149,0.186237,-0.193403,1.17913,0.210869,0.414726,-0.205899,-0.201818,0.0918828,1.11388,1.09801,-0.383064,0.329878,-0.0322833,0.361769,-0.54575,0.945428,-0.129645,0.276464,0.106447,0.332563,-0.124436,-0.139258,0.416529,0.2064,0.0543856,0.415701,0.0841173,0.0296593,-0.107042,0.525702,-0.165302,0.334465,0.166291,-0.546478,0.413321,-0.0285192,-0.121394,-0.349139,-0.347341,-0.424008,0.114439,-0.698606,-0.160565,-0.194778,-0.606846,-0.587801,0.0300015,0.15386,-0.555342,0.19765,-0.373892,1.00694,0.0359509,0.273515,-0.331759,0.728916,0.517561,0.519677,0.292716,-0.0732868,0.347248,-0.0645526,0.405811,0.244006,0.147791,0.439298,-0.0565752,0.551323,-0.28107,-0.21961,0.0127416,0.71099,-0.0864511,0.202266,0.0232809,0.162674,-0.0277453,-0.545786,0.0655775,-0.185177,-0.487017,-0.631963,0.167455,0.282201,-0.545581,-0.146795,0.641351,-0.0614224,-0.28713,0.437312,-0.25481,-0.135288,0.699091,0.107915,-0.553997,0.0674245,-0.383173,0.00681086,-0.487569,-0.128822,-0.102805,-0.714609,0.177327,-0.388162,-0.108225,0.105431,0.728676,0.999856,-0.450023,0.619617,-0.76428,0.578401,0.440485,-0.217486,0.103015,-0.230443,0.927045,0.476796,0.228851,-0.172623,-0.60729,-0.420137,1.17778,-1.27435,-0.394993,-0.115698,-1.14223,1.04209,0.0821948,1.17481,-0.188616,0.707049,0.495843,0.274906,-0.838727,0.165653,0.301865,0.0134948,-0.281696,-0.0472672,-0.722609,-0.239206,0.299804,0.389905,-0.231192,0.46501,0.213279,1.04056,-0.387613,0.497897,-0.185514,1.42328,0.372326,0.0799865,0.58095,0.154499,0.601305,-0.416122,-0.114771,-0.339331,-0.593099,-1.08231,0.332048,0.218861,-0.485311,-0.267653,0.184635,0.231737,-0.341937,0.847119,0.302805,0.977727,0.981324,0.114495,-1.15708,0.879211,0.330272,0.402616,-0.968143,-0.721948,-0.360295,-1.08308,-1.39864,-0.109944,-0.123709,0.910715,0.00214802,-0.320112,-0.47357,-0.0332149,-0.174979,0.183007,0.74631,-0.68066,-0.31369,0.0624138,-0.16421,0.466657,-0.433566,0.0357519,-0.255619,-0.625346,0.972328,-0.263414,0.45402,-0.138371,-0.471533,-0.0987984,0.4371,-0.479532,-0.358142,-0.49984,0.362294,-0.566057,0.0788484,0.0163363,-0.233647,-0.0158843,0.086505,0.385212,0.258748,0.528498,-0.559751,-0.132036,-0.0849801,-0.180189,0.0415017,-1.11384,-0.279002,0.667878,-0.994632,-0.26433,0.825871,0.00690458,-0.394487,0.246749,0.17188,0.545857,-0.179705,-0.505225,0.438443,0.0498609,1.0556,0.134422,0.312713,0.147537,-0.210525,0.490561,0.325583,0.25243,-0.304438,-0.428838,-0.0801109,0.142287,0.281301,0.0535821,-0.769521,-0.128524,0.483187,0.581906,0.327171,0.899522,0.809656,0.108109,-0.0563877,-0.47343,0.81677,1.00141,0.399546,0.777708,-0.368987,1.34099,0.606703,0.17305,0.774838,-0.594077,0.632029,-0.523279,0.00731158,0.109371,-0.64894,-0.770173,-0.477637,-0.60998,-1.39097,-0.594516,0.187133,1.35113,-0.861466,0.801126,-0.00400067,-0.303032,-0.601932,0.665739,0.143786,0.220993,-0.802508,-0.294717,0.56812,0.202876,0.394072,-0.158453,1.22945,0.178531,0.212117,-0.544991,0.878668,1.88163,0.293201,1.67692,-0.403097,1.72749,-0.207812,0.350043,0.643839,-0.659104,0.884494,-1.18207,0.00518833,-0.366565,-1.03091,-0.343309,-1.17874,-0.750002,-1.63087,-0.82387,0.464544,1.36072,-0.710599,-0.101544,0.526809,0.470669,1.01586,0.188497,-0.319625,0.216846,-0.372737,0.462787,-0.334704,0.184407,0.600813,0.19018,0.0823876,0.271666,0.64557,0.456261,0.971697,0.275637,0.403066,0.44383,0.1908,-0.0429729,1.02353,0.0702859,-0.0419006,0.392319,0.719117,0.476575,0.44086,0.511318,0.0404622,0.0815285,0.738578,0.230619,0.759814,0.61678,-0.228656,0.649068,0.882225,-1.38323,2.1795,1.78068,1.61521,-2.09025,-2.17664,-0.951908,1.3673,-2.76869,-1.6329,-2.25045,0.591002,-0.941742,-0.105109,-0.25108,-2.34973,-2.21009,0.469237,1.87867,1.49002,-1.01093,1.41389,-0.838897,1.87129,-2.34339,2.33452,-3.21734,-1.11838,-1.50476,2.47618,-1.13694,-1.91225,0.195659,0.330066,-2.03251,0.143584,-0.315176,-0.592466,0.489089,-0.581165,-1.45437,1.47608,-0.598093,-0.91723,-0.397591,0.555781,-0.249395,-0.870478,-1.34186,0.509603,1.95464,-1.37459,-0.771088,-0.65422,1.50505,-2.90672,1.23961,-0.0459633,-0.5068,-0.738364,-0.0893134,1.09701,-1.44006,0.701017,-2.47356,1.51181,1.26582,-0.142093,-1.90636,-1.99773,0.750761,-1.23799,-0.963337,0.899725,-1.13713,0.327248,-0.164898,1.34599,-2.71357,0.695114,-0.255201,-0.120962,-0.961339,-2.66493,-1.14274,2.64058,0.797791,-0.121668,-2.08386,-0.186242,2.05758,0.447218,-0.487847,-0.52001,-0.0713839,-1.3813,1.23407,-0.00108257,-2.41497,-2.14041,0.682826,-1.39853,1.2665,-1.61391,0.291266,-0.925172,0.0695308,1.40201,0.359503,-2.09794,-0.633403,1.29843,-2.34251,0.487361,0.694695,-1.87209,-0.168331,-2.27531,0.654825,-0.642501,1.79901,-1.60192,0.726305,-1.30912,1.27797,-1.40739,-2.43438,1.06006,0.766777,-2.10953,0.442134,-0.382674,2.73829,-2.86708,0.856519,-1.19119,-0.830318,-0.137395,-1.73102,-1.11196,-1.51451,0.0483605,-1.06163,-0.201597,1.13222,-1.15961,-0.94425,0.554148,-1.45797,-0.825336,-2.24351,0.530468,-3.01537,-3.24011,0.242821,1.39418,1.38879,1.6815,-0.412152,-2.44488,-0.896111,0.244131,-0.299744,0.737631,-1.88856,2.31908,-1.65845,0.646652,-1.3113,0.316376,-1.13095,-0.435315,-0.0021785,-0.268307,-0.531908,0.0429644,-0.79774,-2.65908,0.759302,-0.836674,-1.62237,1.98113,1.51324,-2.39844,-0.262898,-0.664728,-0.978181,-1.82056,-0.258683,1.14495,-2.09066,1.6002,-2.07082,-0.622389,1.43603,0.500517,-1.4142,0.0137143,1.01624,-1.52016,0.411439,0.0482835,1.47208,-2.15841,-0.482344,-1.78668,1.36978,-1.2273,-0.062877,-2.27063,-1.40594,1.47619,-1.10243,-1.16608,-0.55909,0.3584,-2.19505,0.892113,0.260108,0.660076,-1.18837,1.99085,1.64227,1.41188,0.705013,-0.513066,-1.35172,-1.4564,-2.5403,-0.647934,-0.209687,-2.77086,0.309514,0.170086,-1.42609,0.438129,0.0255519,-0.56399,0.75276,-2.59784,1.45703,-1.11159,0.467886,-0.466173,0.545661,-1.69097,-1.01672,-1.21619,-1.19215,1.1317,-1.21135,0.343938,0.360392,0.630317,0.581475,-2.39975,-1.09958,1.51861,-1.97283,-2.03055,2.07286,-1.39835,1.29699,-0.428914,-1.8962,-0.450805,-1.91783,0.314265,-0.467259,1.628,-0.208169,-1.77562,1.01978,-2.24539,0.507203,-0.0122079,0.684508,-2.37983,0.315885,0.563266,-1.03163,-2.6958,-1.63515,1.97169,0.142048,1.17348,1.21419,-0.612374,0.416219,-0.443465,-2.18034,-0.831662,-1.48131,-2.31831,1.55005,1.3613,2.18713,-0.929895,-2.34105,1.02697,-1.70687,0.168949,-1.30052,0.0169765,0.718496,0.174033,-2.83069,-0.520456,1.38037,1.49279,-0.795549,-2.04925,-1.88001,-0.286869,0.722326,0.092034,1.81324,2.00214,-0.732317,-1.93813,-0.163032,-1.43248,-1.32752,-0.988257,0.514939,-3.13543,0.874247,-0.191164,1.81307,1.11762,0.272274,-3.17742,0.785467,2.17728,-2.87779,0.282377,0.469819,-1.97353,0.77882,-0.583605,2.7509,-1.78614,-0.0351623,-2.2301,-0.0727582,-0.806911,-1.91837,2.10418,-1.41948,0.392307,0.491889,-1.72493,-1.3504,1.5371,-1.32373,-2.72018,-1.6757,0.543138,2.30659,1.1408,-0.404695,-2.00222,-1.66596,0.520212,0.116692,-1.59849,-0.840289,-0.397466,-0.257191,0.594854,1.02258,0.836675,-0.577537,-1.21699,0.452766,0.287164,-1.67115,-0.173809,-2.36031,0.371947,-2.08901,0.694399,0.256127,0.528438,0.151413,-1.37791,0.496758,-2.43609,1.19152,-2.28512,0.568588,-1.04365,-1.2594,-3.29771,-1.72025,1.23689,1.45411,-1.67842,1.61568,0.84428,0.196495,0.29261,0.473104,0.546047,0.33542,0.552195,0.770783,0.0136073,0.440265,0.408182};
double ANN::weights[] = {0.461708,-0.166251,0.323714,0.615794,1.05799,-0.340752,0.468613,-0.302856,0.315955,-0.31293,-0.900445,0.14835,0.135486,0.437618,0.190976,-0.490667,0.343239,-0.377939,0.152317,-1.17304,-1.35766,-0.703433,-0.382085,0.0809086,-0.0716162,1.43643,-0.435171,0.225044,0.257456,0.297698,1.15291,-1.01809,-0.302551,-0.175683,0.234281,-0.0623609,0.0498178,0.523628,0.73117,-0.20629,-0.595754,-1.40613,0.0991386,-0.62432,-0.301714,0.0969199,-0.469125,-0.246832,0.930711,0.0975191,-0.45042,-0.399235,0.42046,0.141907,0.665867,-0.419869,0.290509,0.300909,-0.175726,-0.24213,-0.228825,0.703318,0.131397,0.388236,-0.404996,0.239354,-0.110087,-1.81182,-0.390788,0.0986904,0.292316,-0.0531684,-0.446819,0.12751,1.80797,-1.16532,1.04521,0.0838538,0.347015,-0.0646875,-0.732507,-0.709697,-0.112686,-0.396117,0.101366,0.0116392,-0.0817449,-0.369278,0.261925,0.275189,-0.088927,-0.198051,-0.348704,0.615886,0.575418,-0.254803,0.184775,0.189136,0.255637,0.363304,0.33502,0.418492,0.749587,0.0152514,-0.298278,-0.345902,0.352173,-1.39834,0.430516,0.0683713,-0.573668,0.616555,-0.42901,0.429668,1.43967,-0.394726,0.36505,-0.139371,0.1828,-0.0532025,0.551571,0.774469,-0.193366,0.525863,0.280452,-0.190297,0.512348,-0.345367,-0.756734,0.145485,-0.70208,0.501433,-0.189139,0.0286131,0.166458,0.190148,0.190714,0.0677784,0.316363,-0.264536,-0.643755,-0.330494,-0.139683,-0.198211,0.542049,0.328364,0.0310987,0.46179,0.489817,0.32588,0.312479,-0.0809953,0.0849148,-0.0347551,-0.0100418,0.668278,-0.616746,0.199655,0.153346,0.147403,0.544409,0.805137,-0.0832346,0.98412,-0.490269,-0.44743,0.268675,0.170752,-0.192704,-0.536857,-1.27191,0.274184,0.312242,-0.745352,0.263152,-0.0992631,-0.178525,-1.07997,0.937006,-0.686258,-1.30115,-0.706643,-0.398604,0.190185,0.38278,1.31323,-0.658424,0.561348,0.280986,0.981408,1.76682,-1.13148,0.421871,0.182642,-0.495338,0.501989,-1.22993,0.309342,0.689559,-0.10421,-0.356358,-0.71058,0.263018,-0.0269607,0.7254,0.121293,0.290524,-0.246148,0.579132,-0.0204257,-0.148559,-0.242197,-0.209592,0.620567,0.204926,-0.569934,0.648396,-0.0666622,-0.0405063,-0.750014,-0.302871,-0.723561,0.249692,-0.022594,-0.199686,0.75068,0.12182,-0.649965,0.55402,0.121627,0.377696,-0.549261,-0.0834855,-0.607883,0.763269,-1.14468,0.449527,0.636563,0.766169,0.372039,-0.649506,-0.687459,0.193864,-0.697386,-0.890084,0.191088,-0.237821,-0.0277732,0.153196,0.577589,-0.0448351,-0.403174,0.0922711,0.0893352,-0.123136,-0.316098,0.171688,-0.26677,0.120532,-0.114838,0.199604,-0.198385,0.541554,0.344546,-0.071828,0.505574,0.0874224,-1.21485,-0.638982,0.207061,0.43927,0.302097,0.388125,-0.123303,0.871907,-0.87387,0.4003,-0.0686526,0.207156,0.213122,0.332966,-0.251388,0.765078,0.025296,0.501829,-0.1096,0.117428,0.139083,0.508668,0.134102,-0.327501,0.253334,0.875674,0.0651462,-0.364246,-0.1101,0.108936,0.0577415,0.246043,-0.754157,-0.942667,0.277846,-0.224729,0.473317,-0.522208,0.738732,-0.183751,-0.719465,-0.709065,0.0175284,0.766574,0.0560275,-0.453182,0.57108,1.3919,0.727844,-0.179145,-0.225763,0.308854,0.125696,-0.107663,-0.220449,0.549307,0.0697661,1.70809,-0.251114,0.589727,0.237457,0.446664,-0.0890714,-0.348409,0.033179,0.45037,1.32176,0.69266,-0.34562,0.899472,-0.332031,0.0931635,-0.753845,-0.208831,-0.21228,0.00450234,0.122922,-0.738665,0.47924,0.269737,-0.734513,0.0650011,-0.130451,0.913447,-0.204499,-0.466113,0.182683,1.28213,-0.423629,0.226132,0.424518,0.762104,0.0190675,0.160552,0.198829,-0.186471,0.438559,0.522456,-0.805038,0.327146,0.00611492,0.0256275,-0.168637,-0.0959066,-0.381971,-0.610124,0.83552,0.245742,-0.494164,0.0561958,-0.420621,0.368548,-0.298475,-0.00311548,-1.02275,-0.360881,-0.0605157,0.047821,0.0729085,-0.218779,0.355696,1.31311,-0.0199883,1.05409,-0.664273,-0.188543,-0.135129,-0.357036,-0.64001,-0.468412,0.686696,0.0706638,-0.0347652,-0.0186268,-0.659104,-0.0997044,-1.09592,-0.159692,-0.346929,-0.354884,-0.124658,0.66904,0.551319,0.725649,-0.386629,0.417033,0.29719,0.146439,0.0593746,0.485969,-0.252129,0.311048,0.421736,0.476309,-0.528351,0.116373,0.702059,-0.647767,0.257558,0.251525,-0.424456,-0.473489,-0.301259,0.559243,0.079655,0.762302,-0.904493,0.446441,-0.98839,0.776404,0.434492,0.19796,0.705407,-0.179042,0.136302,-0.0716029,-0.429865,-1.4654,0.543431,-0.165609,-0.154407,-0.802381,0.797632,-0.74109,0.250477,0.392167,-0.532327,-1.01886,-0.253878,0.135197,-0.52722,0.216437,0.106525,-1.17231,0.251182,0.570006,0.172672,0.458506,0.49418,-0.217331,-0.990187,-0.853106,0.248653,0.25675,0.751925,0.895037,0.323472,0.754551,0.271647,-0.586405,-1.05262,0.000483511,0.264671,0.43628,0.0516458,0.200741,0.26762,0.63755,0.322625,0.169284,-0.436082,0.0192673,-0.0716448,-0.264918,0.66576,0.0269588,0.463522,-0.55533,-0.0276629,-0.153031,0.51675,-0.51398,-0.634517,-1.50176,0.393299,-0.213673,-0.412242,0.155373,0.325772,0.00224986,-0.649455,0.176372,-0.0586733,-0.697985,0.274916,-0.787663,0.681859,0.842296,0.338315,0.188747,0.00363138,0.154776,0.0351616,0.113076,-0.563094,-0.186434,0.203456,1.67582,-0.487866,0.366729,0.112712,0.960936,-0.784185,0.597783,-0.156754,-0.402281,1.39171,0.621266,-0.665093,-0.343476,0.7755,-0.718302,0.137908,0.520989,-0.235754,-0.616002,-0.316677,-1.38021,-0.543317,-0.0596322,-0.402024,0.50785,-0.43253,-0.454078,-0.464181,-1.21072,0.429243,0.49607,-0.640055,0.721113,0.500413,-0.147663,-0.670851,-0.103562,-1.01872,-0.013844,-0.231916,1.83514,-0.672799,-0.00834368,0.043604,1.21967,-0.0055111,1.13951,-0.451902,-0.79327,1.84576,0.448396,-0.733755,0.218213,0.903612,-0.467245,0.134092,0.750102,0.0858115,-0.281154,0.0425514,-1.65362,-0.896569,0.272101,-0.660832,0.994784,-0.833611,-0.748721,0.138134,-0.874792,0.289381,1.16545,-1.33494,1.00449,0.391648,-0.135803,-0.310072,-0.159854,0.0722509,0.138339,-0.866804,-1.15305,-0.678156,-0.852356,0.68045,0.2149,0.538202,0.663011,-0.269824,0.712828,-0.477473,-0.406326,0.730342,0.439187,-1.09915,1.31579,1.07551,0.670807,0.356516,0.125296,0.857815,-0.870044,-0.276675,0.314615,0.276562,-1.49341,-0.353527,0.857195,0.524389,1.2422,-0.441155,0.188808,0.826231,-0.278981,-0.453872,-0.449686,0.324402,-0.108871,0.775218,-0.868843,0.18419,-2.19395,0.100847,-0.481195,0.1829,-0.740362,0.440171,-0.300665,-0.242053,-0.101833,-1.39394,0.255392,0.457692,-0.108279,-1.15998,1.08526,1.19734,0.907638,0.782835,0.632197,0.262198,0.939677,-1.30766,-0.0489305,-0.314876,0.13893,0.737277,0.0424837,0.262018,1.0317,0.72325,0.0469088,0.676654,-1.37914,-0.788138,-0.0172484,-0.156095,-0.583117,0.234646,-0.0215627,0.0446567,0.674538,0.631175,0.146221,-0.339144,-1.08034,0.275305,0.101684,0.0794616,-0.496237,0.0043446,0.0553525,0.0185742,0.276382,-0.215023,-0.211805,-0.364503,0.240654,-0.0552123,0.158043,-0.56043,1.0799,0.0621724,0.499179,0.237292,0.17047,0.0261947,-0.445195,0.198806,-0.175344,-0.656081,-0.51939,0.13305,0.415925,-0.143439,0.337399,0.237069,0.43805,0.0197861,-0.630049,0.112817,-0.119133,-0.0577402,0.0823901,-0.27679,0.436281,-0.618957,0.798509,-0.0745645,0.253132,-0.455029,0.96796,0.296997,-0.50187,0.581014,-0.512179,0.64973,0.98719,-0.171829,-0.26745,0.183422,0.196025,-0.3434,0.0778094,0.0505219,0.701291,0.037271,-0.177964,-0.106426,-0.29216,0.0916325,-0.298279,-1.1058,0.519673,0.235583,0.0418422,0.00888976,0.00486936,-1.78714,-0.394175,-0.755462,1.0814,-0.453552,-0.903506,-0.136659,1.70604,0.151106,1.14966,-0.855283,-0.031872,1.75109,1.2059,-0.444562,0.613675,0.590237,-0.512465,0.350135,1.12034,1.43755,0.110028,-0.0409102,-1.84229,-1.42957,0.481159,-2.21754,0.505062,-0.980734,-1.0747,0.578429,-0.870304,0.897294,2.48716,-1.46448,1.15098,0.0155797,0.314466,-0.381689,-0.000284886,-0.206909,1.81614,-0.443393,-0.636483,-0.46224,-0.0876271,1.77703,0.542123,0.202977,0.467289,-0.188613,0.955004,-0.925635,-0.820477,-0.107081,-0.379399,-0.599706,0.521989,0.266764,1.19444,0.637174,0.13873,0.790448,-1.44886,0.881221,0.456071,1.25836,-2.40168,-0.280514,1.06623,-0.0681627,1.04656,-0.749042,0.0433999,2.0836,-0.279206,-0.334109,-0.275288,0.0675982,-1.23752,-0.272439,-0.14533,-0.325427,-0.830709,0.177235,-0.486436,0.108832,-0.758544,0.192113,0.185852,-0.861772,-0.627821,-0.505522,0.951165,0.0547696,0.323516,-0.627274,0.23229,0.18298,1.65081,-0.0788424,0.618582,-0.188198,0.751774,-0.526086,0.542888,0.214658,0.545998,-0.0829555,-0.074876,0.141504,0.641042,-1.42559,-0.541952,-0.177702,0.0798697,-0.0320999,0.284538,0.429174,-1.21005,0.126693,-0.171014,0.28571,0.509645,0.0560948,0.607792,-0.823519,-1.29985,0.454815,-0.441752,-0.0852731,-0.857269,0.729986,0.680422,-0.123246,0.881913,-0.827346,0.10858,-0.4983,-0.107495,-0.679449,0.788735,-0.942587,1.91128,-0.00783405,0.470792,-0.0418088,1.45226,0.142765,-0.375128,0.449216,-0.0601005,-0.875427,-0.888636,-0.445821,-0.058666,-0.0484533,0.747479,0.513583,0.540993,0.483993,-0.524827,-0.289831,-0.676313,0.216603,-0.376664,-0.392705,-0.278199,-0.118412,0.321637,0.328218,0.757534,-0.904893,0.00638675,0.897218,-0.132947,0.260483,0.103898,0.0350519,-0.264492,-0.28805,-0.371043,0.540493,0.412015,0.108384,-0.126431,0.0720263,-0.24313,0.0411533,-0.00317921,0.315563,0.399351,-0.0695992,-0.521553,0.0404066,-0.261366,-0.0642684,-0.348132,0.262102,0.0195321,-0.310459,0.682758,-0.536229,-0.00279336,-0.309324,-0.492499,0.984502,0.814871,0.226505,0.179593,-0.270272,1.10831,0.020705,-0.589542,0.201806,0.148274,-0.0843142,-0.00105709,0.339324,0.798367,1.20884,0.114923,0.440271,-1.59349,-0.424415,0.299646,-0.803124,-1.61578,-0.514596,-0.0114117,0.483261,0.341899,0.485765,1.27181,0.913772,0.667096,-0.630699,-0.0574442,-0.117126,0.724256,0.449032,0.520072,-0.17197,-1.49369,0.385575,0.924272,1.38488,0.912008,-0.580514,1.23248,0.466495,-0.938573,-1.84455,0.123958,-0.0642167,-2.01703,0.286407,0.3976,1.00921,1.67617,-0.39096,0.111502,0.611452,-0.466838,0.448369,0.431647,2.08667,-0.512192,0.933859,0.0576935,-1.10963,0.62425,0.234079,-1.83321,1.28657,-0.917768,1.18344,-1.45134,-0.617642,0.0889213,0.00927304,-0.606398,0.27838,0.334301,-0.741113,0.103765,0.290262,0.0694351,-0.467686,0.721818,-0.538258,-0.995159,0.41525,0.512986,-0.223746,-0.52146,-1.30324,0.656509,0.938362,1.59489,-0.300432,-0.300184,-0.501609,-0.358159,-1.05759,0.156777,1.05781,0.913948,0.027889,-0.0507223,-0.530965,0.490971,-0.449457,-1.29758,0.432437,-0.687613,0.300192,-0.622588,-0.466233,-0.226657,-0.169756,-0.538724,0.323658,0.43413,-0.611457,-0.435309,-0.666593,0.0142131,0.10137,0.333281,-0.693058,-0.352522,0.976736,1.11284,0.463117,0.730222,-1.53882,0.545353,0.554483,0.70268,0.0928126,-0.0905608,-0.527207,-0.155833,-0.901076,0.314867,-0.370022,0.954645,-0.131141,-0.426748,0.155753,0.467632,-0.368274,0.103645,-0.580192,-0.0895641,0.406998,0.48045,0.242944,0.0608751,0.151188,0.238271,0.134072,-0.102741,0.239357,-0.23364,-0.00609764,-0.33529,-0.305921,0.0641151,0.0492186,0.214446,-0.257768,0.794837,0.560802,0.580499,-0.0269815,-0.415895,-0.5445,-0.131118,-0.161524,0.0739181,-0.344396,0.553489,0.300164,0.16774,0.38307,0.161007,0.157903,-0.352932,-0.085066,0.158205,-0.386793,-0.115213,-0.443411,0.183977,0.352348,0.676253,0.226421,-0.605908,0.172434,1.18708,0.00628514,-0.33038,0.298187,0.153871,1.2544,-0.242551,-0.0942406,-0.580131,-0.0389122,0.692316,-0.633185,-0.136923,-0.465221,0.583444,-0.855348,-0.233207,-0.889449,0.377327,0.357391,0.617472,-0.430324,-0.266217,0.823753,0.0719134,0.12303,-1.30475,0.161837,0.195932,-0.611272,0.738092,-0.401569,-0.368211,1.50203,-0.304048,-0.151917,0.930903,-0.346813,0.76794,0.477894,-0.532663,-0.207688,-1.81599,1.06382,1.17782,0.642341,1.09887,-0.176648,1.51991,0.518469,-1.71455,-2.12777,0.451214,-0.137507,-2.38774,0.724973,0.361971,1.34859,1.62552,-0.603581,0.0919314,0.468187,0.172442,-0.0625802,0.592366,1.4013,0.797953,1.17599,-0.622525,-1.24379,-0.154496,1.27146,-1.77623,-0.115298,-0.737279,1.34714,-1.59819,-0.723773,0.566141,0.478504,-0.788842,0.512556,-0.0175685,-0.604626,0.0483869,0.151596,0.404472,-0.31348,0.0470514,0.187525,-0.874932,0.410537,-0.620813,-0.149581,-1.05256,-0.0791366,0.374064,1.12821,0.397726,-0.0262148,-0.463362,0.00169488,-0.588113,-0.907102,-0.284408,0.770914,0.417829,0.242416,-0.198929,-0.306276,-0.364461,0.87494,-0.556614,0.512873,-0.961456,-0.0667642,-1.41432,-0.672858,0.858562,0.769887,-1.12863,0.717885,-0.083373,-0.545965,-0.330348,-0.309752,0.190442,-0.284356,-0.0129767,-0.0600554,-0.0109177,-0.220651,0.649808,0.903951,0.191829,-1.51101,0.938351,0.36484,0.0284876,-0.0169522,-0.675794,-0.180437,-0.248916,-0.408001,-0.161301,0.298173,0.798339,0.790345,0.317465,-0.353264,0.352477,0.486717,-0.109643,0.346963,-1.39239,0.638678,0.0509518,-0.0291187,-0.773716,0.84096,0.535627,0.647467,-0.993757,0.00346356,0.0590959,0.716738,-0.937712,-0.226205,-0.743059,-0.289645,-0.474243,-0.415271,0.452823,-0.193891,0.588182,-1.29406,-0.458755,-0.643715,0.0683687,-0.148785,0.871413,-1.00935,0.813199,-0.0322415,0.30689,0.865355,0.0218227,0.498701,-0.081168,-0.144094,0.76591,-0.637865,-1.17531,0.87464,-1.347,-0.421547,1.10028,-0.0915013,-0.951135,0.482137,0.993607,0.335551,-0.36671,0.706437,0.357194,0.888595,-1.29271,0.28318,-1.04688,0.0991327,0.548651,-0.56341,0.227181,-0.375562,1.0778,-0.868741,-0.40694,-1.11342,-0.37258,-0.10871,1.12489,-0.846016,1.13564,0.897589,-0.0316685,0.289441,-0.188606,0.1958,-0.249414,-0.243681,0.799553,-0.800237,-0.647341,1.05689,-0.215938,-0.183097,1.48794,-0.118422,-0.108653,-0.591908,-0.269586,-0.368351,-0.801798,0.883347,0.00199825,-0.0732544,0.113985,-0.0546799,0.662606,-0.188683,-0.0259424,-1.07493,0.746609,-0.0129909,-0.740107,0.452655,-0.366123,0.00961248,1.20518,0.131287,0.273135,0.0986135,0.463911,-0.0869969,-0.0658212,0.0209627,0.269086,0.214804,-0.0912651,-0.490189,0.141398,0.0464441,-0.260626,-1.06189,0.495863,0.48784,-0.251784,-0.0304543,0.934259,-0.488963,-0.302249,-0.621954,0.014037,0.493401,0.0636262,-0.434277,0.857721,0.120817,0.71285,0.419213,-0.267798,-0.339541,-0.920085,-0.14284,-1.57762,1.5887,-0.153678,0.798661,-0.232845,-0.0967916,-0.558642,1.18295,-0.59389,0.136305,-0.101622,0.116669,-0.280049,-0.0209815,-0.201182,-0.500417,-0.621749,0.959145,0.40656,-0.784531,0.495983,-0.034623,-1.64291,-0.138115,0.958207,-0.0304648,-0.482408,0.959864,0.92502,-0.376596,-0.616203,0.0955493,0.95591,-0.849439,0.0900452,-0.0227099,1.18126,-0.203299,0.946218,0.282483,-0.33723,-0.913983,0.314826,-0.262789,0.0463682,1.0202,-1.3953,-0.330182,-0.791328,-0.441759,-0.52168,-0.108888,0.0877525,-0.123818,0.564854,-0.67745,-0.617088,0.794145,0.558614,1.24898,-0.237392,0.259201,0.232373,-0.676725,-0.767688,-0.0389036,0.195039,-0.0878986,-0.400273,0.168439,-0.306958,0.306512,-0.669035,-0.229231,-0.271438,-0.254843,0.276836,-0.109861,0.437522,-0.228418,0.594019,-0.549694,-0.947882,-0.656115,0.244471,0.382233,0.284069,-0.997602,-0.027812,-0.525259,-0.139006,-0.104677,-0.419913,-0.152914,-0.384388,0.274801,0.210746,-0.300553,-0.253447,0.676182,-0.269564,-0.641911,0.847978,-0.202943,-0.22352,0.328853,0.0314487,-0.568403,-0.559589,0.978476,0.382177,-0.156509,-0.917408,0.506896,0.0719676,0.371583,-0.566998,-0.657825,-0.0218462,0.171275,0.120995,0.807299,-0.420431,0.0720198,-0.817134,-0.789262,0.600835,0.202279,1.31367,0.544278,0.319593,0.648108,0.540468,0.194064,-0.648991,0.097756,0.396886,-0.793996,-1.38548,-0.976408,0.369336,0.438443,0.0622919,0.62402,-0.550894,-0.196265,0.10782,-0.415944,0.136573,0.391701,-0.268184,-0.630056,-0.301347,0.629903,0.0890501,0.095708,0.708317,-0.0217501,-0.321639,0.678685,0.449628,0.248208,0.22865,0.22444,-0.0229277,0.201466,-0.00676835,0.505891,0.576778,0.24792,0.0398511,-0.322339,-0.273414,-0.548782,-0.0486037,0.560806,0.523741,-0.953729,0.283172,-0.567157,0.853036,0.0905865,0.263606,0.865299,-0.24257,-0.0315221,0.102745,-0.527802,-0.309095,0.272069,0.660365,-0.822994,0.19148,0.95484,-0.230013,0.56566,-0.535368,0.29335,-0.908762,-0.282998,-0.490808,0.844769,0.707732,0.136264,-0.964151,-0.485279,0.651131,1.149,0.212998,0.91842,0.32714,-0.716668,0.0218006,0.664377,0.616992,0.381595,0.35258,0.577173,0.749271,-0.420772,-0.18003,-0.445573,-0.736229,0.431018,0.637485,0.120751,-0.142767,-0.0712699,1.06503,0.0582407,-0.108712,-0.534361,-0.121779,0.0670434,-0.337924,0.618985,0.203769,0.727443,-0.635031,0.1473,-0.259495,0.305771,0.142833,-0.285224,-1.17192,0.0538026,-0.683279,0.216248,-0.0570856,0.222138,-0.279821,-0.227744,0.0745031,-0.300959,0.0217483,0.219137,-0.325177,0.20627,0.275386,0.653031,-0.0211154,-0.405502,-0.555623,0.0610475,-0.0881978,-0.0152281,0.426493,-0.0300335,0.467987,0.454962,-0.14932,0.0735027,-0.287097,0.11788,-0.147141,0.574609,0.501865,0.150821,-0.461747,0.0857116,0.0823443,0.688407,-0.762687,-0.460011,-0.75155,0.499225,0.0815622,-0.525622,-0.228537,-0.156075,-0.00566483,-0.153477,-0.524945,-0.232064,-0.948045,0.58225,-0.642139,0.223778,0.329588,0.513694,0.353942,-0.475949,0.217878,-0.00287984,-0.0833524,0.564936,-0.150609,-0.629028,0.149398,0.00465666,-0.0406401,-0.791949,-0.803674,0.794643,0.297249,0.0794827,-0.312783,0.485631,-1.10484,0.477127,0.121495,0.327403,0.0917072,0.655531,-0.765872,-0.575159,0.00723859,0.60713,0.735929,-0.267103,0.391697,0.318864,0.201575,-0.485528,-0.687914,1.00319,0.00680094,-0.515231,-1.08253,-0.695936,0.0403555,-0.155191,-0.293036,0.868166,0.394757,-0.0624204,0.418136,0.156218,1.3078,0.0714667,0.0892565,-0.759666,0.188657,0.181768,0.074483,0.587076,0.743609,0.825689,-0.867914,0.429939,0.367014,0.758557,0.00668261,0.0493717,-0.894578,0.599629,-0.512339,0.418849,-0.0771373,0.395742,0.106192,-0.258104,0.00219989,-0.374046,-0.453264,0.713012,-0.753019,0.10666,0.647961,-0.143851,0.727607,0.0338554,0.120718,0.511477,-1.20296,-0.264891,0.335505,-0.383072,0.0973337,0.22599,0.353589,-0.98086,-0.458813,0.722314,-0.715623,-0.0559713,0.0922595,0.614327,-0.684976,-0.326051,0.734651,0.101921,0.157132,-0.629848,-1.21805,-0.584819,0.626272,0.0847285,0.568108,1.05922,0.18633,-1.00987,-0.115654,0.0864763,0.19347,0.498184,0.111743,-0.840298,0.479676,-0.378835,0.358684,-0.376893,0.267631,0.929126,-0.352083,-0.133104,0.0165973,-0.787404,-0.730661,0.864627,0.476328,-0.59164,0.0811242,0.522936,0.422988,0.376199,-1.21786,-0.456357,-0.0308132,0.0684333,-0.307504,1.07248,-0.355076,0.266016,-0.200733,-0.786952,0.914368,0.260369,0.665455,0.727538,0.710758,-0.22181,0.656018,0.78366,-0.711412,-0.186311,0.153572,-0.423804,-0.0995019,-0.706985,-0.0334611,0.870132,-0.686406,0.439094,1.28316,1.06003,-0.758851,0.845276,0.243879,0.157833,-0.407433,-0.247717,-0.511092,-0.24698,0.217219,0.900428,0.295641,-0.399294,-0.531008,1.0006,-0.513842,0.471526,-0.23532,0.236735,-0.187825,0.997291,-0.901531,-0.703725,0.445773,-1.08429,-0.0787872,0.916308,0.277785,0.00787629,-1.22376,0.482422,-1.10864,0.958736,-0.532537,1.07858,-0.274709,0.00033967,-0.267343,-0.405748,1.51564,1.34077,-0.577067,0.957053,0.707912,-0.330469,-0.185123,-0.12908,-0.166481,-0.0808447,0.290921,0.966036,0.227798,0.391937,-1.54079,1.0655,-0.433625,0.0755751,0.358774,0.924527,-0.461696,1.40562,-1.2513,-0.0169413,-0.276899,-1.36118,0.0052172,1.03963,-0.032533,-0.414901,-1.04808,0.984462,-1.04181,1.41468,-0.707267,1.69425,-0.643084,-0.512808,-0.95333,-0.495089,-0.574117,-0.230449,0.225108,-0.210106,0.070229,0.479597,0.388625,0.0960195,0.623293,0.701925,0.33067,-0.192377,0.300153,0.188944,0.797495,0.225681,0.663883,0.220267,0.0173436,-0.190649,0.418955,-0.253425,0.96858,0.0959125,0.178424,0.806847,0.765024,-0.0427558,0.757251,0.404826,0.625651,0.107156,0.835666,-0.338101,0.1425,-0.622805,0.759991,0.518088,0.480836,0.419148,-0.483144,0.0663566,2.05375,-2.0797,1.3727,-0.785366,-0.454935,0.50056,-2.01691,-2.80237,-1.69311,1.38622,-1.13734,-1.76744,0.508718,0.00470671,1.53623,-0.931757,-0.284712,-2.3733,0.771234,-0.968471,-1.33358,0.310463,-0.749774,0.0510829,0.716313,-0.403671,-2.91649,0.900262,-0.614495,1.329,-1.86898,-0.759207,1.87873,-0.654219,-0.812638,0.464198,-1.23103,-1.10215,-2.99407,1.18804,0.961008,2.26537,-0.380739,-3.61235,-1.54703,1.01262,-3.44317,0.136441,1.32692,-1.65597,-0.568821,1.12538,-0.504414,0.678394,-0.0762921,-1.72326,-0.949148,-1.21248,0.451135,-1.11257,-1.40386,0.252108,-0.577859,-1.46757,1.09513,0.25568,-0.640561,-1.888,1.1328,-0.130855,-2.40594,-1.58995,1.48763,-0.87238,0.484676,-0.464211,-1.9098,0.618658,1.9808,-2.68616,0.557172,-1.7445,0.0760246,-1.52998,-1.80328,1.46953,-0.499796,-0.144123,-0.467807,-0.658626,-0.110092,0.0375466,-2.63906,0.202746,0.470153,-1.57259,0.681402,-0.660603,0.64143,-2.47924,1.68086,-0.446647,0.502711,-2.39563,-0.133594,-0.869892,0.637731,0.688256,-0.117875,0.248104,0.527055,-0.541757,-0.348859,0.0980292,0.306738,-0.463603,-1.75301,-2.46556,-1.46629,0.423634,0.0944195,-1.78385,-0.748863,2.12331,-2.03099,-0.0738545,-2.32055,1.28693,-3.0708,2.20735,0.591633,1.82261,-1.37287,-2.96237,-1.42002,0.169309,-0.0163021,0.608156,-1.03504,-1.8039,-1.05492,0.326786,0.749278,-1.1803,-3.27766,1.14241,2.5285,0.498334,-1.5045,-0.202116,1.01535,-2.03786,0.430935,0.593008,-0.329185,-1.46887,-0.0450781,-0.926316,-3.01785,0.704421,-1.18524,0.682487,-0.816709,1.43684,-2.30379,-0.593861,0.0625104,1.63678,2.18291,-2.1685,2.57135,1.98757,-1.00188,-1.21809,-0.259945,-0.869465,-1.32539,-2.14856,-1.19723,0.373332,-0.378102,-3.054,-0.900325,-0.634494,0.490873,1.41527,0.943295,-0.666035,0.307555,-0.330202,1.76765,-2.9726,0.0437166,-1.84747,1.16559,-1.5517,2.00151,-0.293362,0.764934,-2.33483,-1.02743,-1.73918,1.553,-3.1539,-0.814972,-1.54585,1.85703,3.2925,0.494741,1.85511,0.149635,-1.36672,0.757071,0.51802,-2.44527,-2.07193,-1.40077,0.739008,0.66136,-1.02006,-2.42726,1.49659,-1.34834,0.331865,0.0983957,-1.6435,1.27962,-0.00492282,0.50449,-1.89699,1.26489,-1.99964,-1.76133,0.32554,1.32219,-0.0365905,0.00520799,-0.627532,-3.49417,0.382598,-1.69392,1.7717,-0.586642,1.43188,0.570221,-1.33504,1.16297,-2.16059,-0.172679,-2.33227,-1.79925,0.947155,-1.23653,1.42655,1.19902,1.62856,-2.40156,-1.54889,0.0881312,-1.66883,-0.609304,-0.290835,-0.657708,-0.87678,0.244813,-1.75428,0.351149,0.191363,-2.20985,-2.23002,-0.107325,-0.806453,2.47878,-2.06714,2.59405,-0.20237,-1.70702,-1.55553,-1.58069,-0.166552,-0.884122,1.07225,0.661575,-2.51444,-1.56557,0.728448,2.60976,-2.47318,0.55124,-1.08003,-2.07138,-0.719967,0.360867,0.418208,-0.0102351,0.259118,0.687691,-2.10201,-0.73915,-1.49843,-1.73616,-1.87495,-0.774629,1.73981,0.356596,3.03545,-0.913737,0.157632,-0.794503,1.35934,1.35595,-0.246914,-2.17304,0.196916,-0.345673,-2.59265,0.301363,0.134607,-1.11562,-1.64826,-1.68848,-2.09552,-0.684572,1.82677,1.4463,-0.647402,0.726505,0.657589,1.67074,1.56355,0.662852,-1.69495,0.0633053,-0.977014,-2.00338,-0.154744,-0.559501,-2.77183,2.44324,2.63397,0.208238,0.0365027,-2.17886,0.560486,-4.17117,0.466546,-1.36291,1.10337,-0.265026,3.06859,-2.24996,-2.48808,0.875969,-0.0799295,0.501856,-0.654545,-4.17852,-0.571618,0.476115,-1.97884,1.76302,1.60799,-1.13374,-0.94328,-1.97365,-0.819648,-1.85266,1.28867,-0.304676,-2.6133,-0.108004,-0.0681948,1.23766,-1.68098,-0.762112,1.50984,0.145564,-0.976397,-1.63921,-0.314282,-2.42198,0.935971,-0.244721,1.38655,-2.69955,0.279647,-0.343701,1.92069,-1.20729,-1.28738,0.29467,0.238484,-2.23148,0.578925,0.535775,-0.43637,0.584434,0.0788159,0.281447,0.426699,0.327813,0.696396,0.454102,0.490757,0.7737,0.394885,0.528298,0.907702};


class Image {
public:
  Image(const vector<string>& text) : image(text) {}

  void Initialize() {
    int slope = FindSlope();
    if (slope) {
      Tilt(slope);
    }
    Cut();
  }

  static void Show(ostream& oss, const vector<string>& image) {
    copy(image.begin(), image.end(), ostream_iterator<string>(oss, "\n"));
  }

  string Classify() const {
    ANN ann(w_cells * h_cells, 40, 10);
    string result;
    for (size_t num = 0; num < numbers.size(); ++num) {
      vector<double> stat;
      CollectStatistics(numbers[num], &stat);
      result += '0' + ann.Classify(stat);
    }
    return result;
  }

private:
  static const int MAX_ANGLE = 45;            // degrees
  static const size_t w_cells = 5;
  static const size_t h_cells = 10;
  static const size_t MAX_BORDER_WIDTH = 10;  // percent 
  enum Color {W = '.', LG = '%', DG = '#', B = '@'};

  vector<string> image;
  vector<vector<string> > numbers;
  
  void MakeBlackAndWhite() {
    size_t h = image.size();
    size_t w = image[0].size();
    for (size_t y = 0; y < h; ++y) {
      for (size_t x = 0; x < w; ++x) {
        if (image[y][x] == DG) {
          image[y][x] = B;
        } else if (image[y][x] == LG) {
          image[y][x] = W;
        }
      }
    }
  }
  
  int FindSlope() {
    size_t h = image.size();
    size_t w = image[0].size();
    double max_variance = 0;
    int slope = 0;
    for (int angle = 0; angle <= MAX_ANGLE; angle += 5) {
      double k = -tan(static_cast<double>(angle) / 180 * PI);
      double current_variance = 0;
      for (int b = 0; b < int(w - k * h); ++b) {
        int dogs_in_column = 0;
        for (size_t y = 0; y < h; ++y) {
          size_t x = static_cast<size_t>(k * y + b);
          if (0 <= x && x < w) {
            dogs_in_column += image[y][x] == B;
          }
        }
        current_variance += pow(double(dogs_in_column), 5./4) * pow(double(MAX_ANGLE - angle), 1./20);
      }
      if (current_variance > max_variance) {
        max_variance = current_variance;
        slope = angle;
      }
    }
    return slope;
  }

  static void FindBestCuttingPoints(const vector<string>& image, bool vertical, vector<size_t>* points) {
    size_t h = image.size();
    size_t w = image[0].size();
    if (vertical) {
      swap(h, w);
    }
    size_t dogs_in_column, prev = 0;
    bool in_gorge = true;
    for (size_t x = 0; x < w; ++x) {
      dogs_in_column = 0;
      for (size_t y = 0; y < h; ++y) {
        dogs_in_column += vertical ? image[x][y] == B : image[y][x] == B;
      }
      if (prev > 0 && dogs_in_column == 0) {
        in_gorge = true;
        points->push_back(x);
      }
      if (in_gorge && dogs_in_column > 0) {
        in_gorge = false;
        points->push_back(x);
      }
      prev = dogs_in_column;
    }
    if (dogs_in_column > 0) {
      points->push_back(w);
    }
  }

  // Tilts on angle slope
  void Tilt(int slope) {
    size_t h = image.size();
    size_t w = image[0].size();
    double k = -tan(static_cast<double>(slope) / 180 * PI);
    for (int y = h - 1; y >= 0; --y) {
      size_t x = static_cast<int>(k * y + w);
      image[y] = string(w - x, W) + image[y];
      image[y].resize(image[h - 1].size(), W);
    }
  }

  // Cuts out numbers
  void Cut() {
    size_t h = image.size();
    size_t w = image[0].size();
    vector<size_t> points;
    FindBestCuttingPoints(image, false, &points);
    numbers.resize(points.size() / 2);
    for (size_t i = 1, j = 0; i < points.size(); i += 2, ++j) {
      size_t start = points[i - 1] - 1;
      size_t width = points[i] - points[i - 1] + 2;
      for (size_t y = 0; y < h; ++y) {
        numbers[j].push_back(image[y].substr(start, width));
      }
    }
    for (size_t i = 0; i < numbers.size(); ++i) {
      points.clear();
      FindBestCuttingPoints(numbers[i], true, &points);
      //numbers[i].swap(vector<string>(numbers[i].begin() + points[0], numbers[i].begin() + points.back()));
      Prune(0, numbers[i][0].size(), points[0], points.back(), &numbers[i]);
      DeleteBorder(&numbers[i]);
    }
  }

  static void Prune(size_t start_x, size_t end_x, size_t start_y, size_t end_y, vector<string>* image) {
    // image->swap(vector<string>(image->begin() + start_y, image->begin() + end_y));
    vector<string>(image->begin() + start_y, image->begin() + end_y).swap(*image);
    for (size_t y = 0; y < image->size(); ++y) {
      //(*image)[y].swap(string((*image)[y].begin() + start_x, (*image)[y].begin() + end_x));
      string((*image)[y].begin() + start_x, (*image)[y].begin() + end_x).swap((*image)[y]);
    }
  }

  // Cuts off border if any
  static void DeleteBorder(vector<string>* image) {
    size_t h = image->size();
    size_t w = (*image)[0].size();
    double max_x = static_cast<double>(w) * MAX_BORDER_WIDTH / 100;
    bool has_border = true;
    for (size_t start_x = 0, start_y = 0, end_x = w, end_y = h; 
      start_x < max_x; ++start_x, --end_x, ++start_y, --end_y) {
        has_border = true;
        for (size_t y = start_y; y < end_y; ++y) {
          if ((*image)[y][start_x] != W || (*image)[y][end_x - 1] != W) {
            has_border = false;
            break;
          }
        }
        for (size_t x = start_x; x < end_x; ++x) {
          if ((*image)[start_y][x] != W || (*image)[end_y - 1][x] != W) {
            has_border = false;
            break;
          }
        }
        if (has_border) {
          Prune(start_x, end_x, start_y, end_y, image);
          vector<size_t> x_points, y_points;
          FindBestCuttingPoints(*image, false, &x_points);
          FindBestCuttingPoints(*image, true, &y_points);
          Prune(x_points[0], x_points.back(), y_points[0], y_points.back(), image);
          return;
        }
    }
  }

  static void CollectStatistics(const vector<string>& image, vector<double>* result) {
    size_t h = image.size(), w = image[0].size();
    vector<size_t> width(w % w_cells, w / w_cells + 1);
    width.resize(w_cells, w / w_cells);
    random_shuffle(width.begin(), width.end());
    vector<size_t> height(h % h_cells, h / h_cells + 1);
    height.resize(h_cells, h / h_cells);
    random_shuffle(height.begin(), height.end());
    for (size_t y_start = 0, i = 0; y_start < h; y_start += height[i++]) {
      for (size_t x_start = 0, j = 0; x_start < w; x_start += width[j++]) {
        double dogs_in_cell = 0;
        for (size_t y = y_start; y < y_start + height[i]; ++y) {
          for (size_t x = x_start; x < x_start + width[j]; ++x) {
            switch (image[y][x]) {
            case B:
              dogs_in_cell += 1;
              break;
            case DG:
              dogs_in_cell += 200./255;
              break;
            case LG:
              dogs_in_cell += 85./255;
            }
          }
        }
        result->push_back(static_cast<double>(dogs_in_cell) / (height[i] * width[j]));
      }
    }
  }

};

void Test() {
  const char* files[] = {"001.txt", "002.txt", "003.txt", "004.txt", "005.txt", "006.txt", "007.txt", "008.txt", "009.txt", "010.txt", "011.txt", "012.txt", "013.txt", "014.txt", "015.txt", "016.txt", "017.txt", "018.txt"};
  const char* ans[] = {"979","484","552","723", "576", "294", "551", "853", "117", "650", "864", "448", "966", "247", "959", "858", "892", "852"};
  for (size_t i = 0; i < sizeof(files) / sizeof(char*); ++i) {
    ifstream file(files[i]);
    vector<string> text;
    string line;
    while (file >> line) {
      text.push_back(line);
    }
    Image image(text);
    image.Initialize();
    string res = image.Classify();
    if (res != string(ans[i])) {
      cout << "Failed " << files[i] << " " << ans[i] << " != " << res << endl;
    }
  }

}


int main() {  
//  ifstream file("image.txt");
  vector<string> text;
  string line;
  while (cin >> line) {
    text.push_back(line);
  }
  Image image(text);
  image.Initialize();
  cout << image.Classify() << endl;
//  Test();
  return 0;
}
