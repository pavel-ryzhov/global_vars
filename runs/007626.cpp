#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{35.8687,58.5161,-1.16458,37.9135,125.709,182.961,189.24,203.647,227.749,94.1675,109.315,41.5432,-52.4389,52.0759,99.5485,103.514,37.8311,71.2272,146.861,171.868,116.496,105.556,27.8259,21.6645,-144.347,-79.0193,10.8326,3.06425,110.898,170.195,64.1103,98.9894,90.4898,147.715,150.294,144.143,6.58971,-37.7738,-160.122,-146.699,-129.077,-120.767,-80.3626,-52.2867,-102.083,-12.6286,41.5035,37.7619,61.5781,186.101,215.148,107.885,-183.14,-98.3175,35.5422,64.7397,72.8399,-22.6647,-59.443,-86.7247,-8.83411,-44.9298,16.7891,-34.0003,30.4094,66.7311,135.134,-45.5554,49.1198,-36.0345,-11.3121,-186.425,-45.1565,-55.2933,-169.757,-234.642,-94.2938,29.169,13.6717,59.9112,65.8891,155.067,185.253,-101.289,-170.188,-25.2275,93.2903,55.7794,-100.604,-42.4368,-98.5781,-126.946,-88.1944,-26.4947,78.1935,98.3007,52.1118,130.135,193.092,-20.0221,-85.1926,-13.1579,87.845,-73.3423,-221.998,-158.908,-29.5441,116.813,161.636,44.1452,70.7595,91.723,57.4497,78.5115,88.5841,-88.5641,28.764,-24.8518,84.1435,-44.2285,16.9855,-41.03,-9.99414,70.5233,118.67,186.236,229.329,97.0691,62.323,53.2366,-54.4175,-6.49922,-2.16366,55.8883,-27.482,36.1263,-73.6931,22.1237,33.3101,-108.657,-46.7213,44.003,-49.6702,-15.3217,15.0787,-140.961,-22.7583,23.6689,-17.4128,38.9984,196.63,-13.2186,-19.1647,19.1244,16.9025,-19.1563,30.9948,107.664,108.807,107.067,-74.9942,-102.467,-100.554,-100.11,-73.4656,52.6042,23.2418,-5.0231,-55.8797,-16.8921,-48.4736,46.9431,33.4216,25.2856,26.6371,-31.8882,-80.7675,-35.3043,-91.4334,-90.687,-30.953,-105.802,-45.7447,-140.621,-99.1478,-92.3152,-18.7895,-5.67115,-27.1182,-9.74588,73.2241,-89.9076,19.5029,135.123,29.9653,-20.1157,-66.1287,9.86601,95.9553,74.3686,-9.54379,19.5092,-85.1787,-311.441,-42.5114,-30.0748,170.561,-6.15401,-7.32917,58.0351,157.135,-12.965,-69.4375,-21.0706,70.6723,112.147,56.4862,-92.9074,-192.379,-72.7904,.457061,141.485,95.7541,11.2093,37.0051,-14.879,39.7572,171.576,130.619,20.5399,159.198,131.252,-23.0767,-15.5122,11.3014,64.0967,154.095,22.2687,13.1087,24.0285,-1.6763,-0.0119614,120.136,165.378,284.369,121.122,58.157,73.2434,-52.4908,15.0223,151.204,-43.8224,-94.1069,-4.04276,2.80168,31.2562,},{79.9148,103.675,118.36,238.741,279.376,361.144,398.086,388.168,274.24,-85.3502,-215.269,-302.009,-50.2411,101.754,118.008,-44.5953,91.8733,253.526,337.251,375.406,197.37,188.987,111.488,24.4781,-86.632,113.864,239.47,130.522,-22.7468,368.757,136.635,32.9782,-93.0458,175.243,557.16,372.599,213.69,73.2269,4.62959,132.718,14.1152,-55.0353,-65.4683,106.853,487.3,450.105,181.553,-8.66588,176.989,114.685,336.652,-29.9117,244.96,-101.93,-304.462,-237.554,-201.466,-139.276,57.749,-157.972,18.4959,368.505,191.36,268.992,119.207,140.578,-56.5767,177.618,-180.002,-2.60565,-69.4928,-80.1917,-202.409,7.82092,66.6364,48.5998,36.4501,150.308,42.4011,167.395,59.0643,-38.6072,-123.379,111.248,69.821,127.467,-147.4,-115.624,-84.5035,-25.9074,66.485,61.8077,206.1,204.435,-123.38,80.5279,20.4282,-162.532,-237.646,-413.585,275.586,423.897,284.598,62.9297,-216.79,-51.398,-85.4335,20.955,101.535,89.9587,-323.602,-165.721,-63.2525,-258.859,-393.62,-47.3593,-59.3887,304.082,281.789,214.974,-131.229,-95.3218,172.772,-123.703,-362.398,-74.7691,-248.909,-255.126,-168.12,-584.312,-475.931,-454.888,-233.903,-136.927,93.6842,365.626,85.4423,18.3818,-102.876,-215.808,-196.427,-159.933,-63.8767,-247.771,-27.3499,-533.486,-549.27,-369.968,-47.0363,-270.32,1.57809,155.818,7.6515,-211.402,-191.913,-140.258,23.418,115.914,53.8392,-57.6354,-19.9293,-301.435,-167.596,-135.651,-342.192,-128.877,23.6496,46.2918,-154.306,-201.452,-147.702,-384.56,-56.3058,-106.473,-10.9291,182.362,72.4931,115.276,-32.2886,-198.833,-142.617,163.109,158.486,113.135,-165.868,-72.9906,-51.3698,-340.539,-122.009,215.223,43.4936,287.224,24.0759,98.7457,47.717,-42.3832,-96.4848,-50.8569,-46.469,93.4324,-38.2542,-69.5818,4.82959,-159.554,-214.619,137.86,.75604,233.843,-14.3538,284.346,107.232,253.841,24.3184,224.347,42.2154,106.355,-104.538,-1.08718,-37.8399,-264.953,-15.4468,126.978,122.631,53.6916,31.0724,352.11,211.893,133.029,289.595,289.541,119.357,6.78907,-213.867,-329.369,-171.599,149.573,-21.849,299.918,186.231,70.6629,189.49,385.281,366,324.119,74.1002,20.2934,-14.5176,75.7113,15.9889,-295.981,-90.9566,175.243,211.951,110.562,13.5015,41.792,},{-228.424,-390.686,-276.679,-35.1487,-16.7989,30.5119,340.908,296.874,-38.8813,14.0974,-289.688,-216.872,108.1,1.3298,55.1532,-156.987,-244.671,-79.2154,25.0411,-161.955,110.815,-104.228,-244.485,-313.66,-323.923,-140.874,-126.134,-236.811,-315.612,-181.197,-264.58,-243.669,86.3944,-300.517,-453.14,-179.066,-89.7645,158.196,187.547,-5.59386,202.321,-133.391,151.349,-144.354,-142.097,-518.311,-25.2548,99.2854,-13.7731,41.1467,-65.8501,19.62,222.577,224.301,528.399,209.726,253.23,193.09,-173.4,298.695,292.14,312.421,482.664,-224.265,-319.461,-78.37,202.559,180.232,260.989,413.15,138.481,-120.309,235.233,18.4731,156.244,447.532,484.682,428.811,811.58,-30.8106,-105.4,-16.2336,-1.60929,280.596,150.211,-3.12761,70.3696,91.3513,-134.518,-65.564,17.4724,172.483,603.289,346.275,609.501,91.7437,-256.61,-195.042,-155.119,106.226,-503.683,-640.791,-246.871,-188.846,-258.01,-758.659,-712.411,-230.397,430.884,106.197,687.471,423.044,83.7522,108.633,-257.167,-560.973,-683.901,-291.152,-127.407,-100.895,43.2797,-188.976,-253.717,204.31,137.81,-198.071,207.246,310.657,181.168,654.662,-217.187,-578.563,-610.959,-389.362,-193.307,-298.317,-264.759,-322.659,-296.063,-270.912,-33.325,-251.93,-151.197,144.763,30.9021,285.259,-49.5135,77.2223,-119.893,117.255,-141.575,-326.84,-178.751,-52.9874,-164.341,-315.137,-73.7583,-274.365,-373.018,-145.344,-91.8042,-255.765,-237.442,140.165,271.662,121.916,88.3479,-268.838,-1.81026,-47.1734,-174.617,29.5905,-61.0724,-497.158,-496.349,-124.318,-218.621,-432.388,-10.6968,513.037,207.331,-73.3362,66.1428,89.6221,43.203,-174.675,-204.129,76.5896,10.812,-651.136,-397.622,-572.255,-102.767,-298.967,85.3401,410.616,220.115,261.821,152.104,-66.9419,-164.131,-166.644,-120.1,-76.9791,-277.522,-345.975,-276.772,-54.6067,-234.389,-236.728,-95.7391,51.2829,295.676,244.289,-51.2837,-215.038,-65.9759,-194.862,21.88,-251.085,82.4452,10.266,-258.458,109.322,126.167,-44.0106,128.797,85.1197,364.416,178.044,161.359,98.9404,184.502,283.238,252.175,327.376,329.341,259.461,404.522,168.028,203.11,-6.20376,-271.838,20.7862,297.838,185.663,10.3846,-46.115,20.7999,326.244,676.166,241.958,366.026,396.324,422.542,363.014,},{-11.8712,-31.516,-50.9761,-19.4467,68.081,-62.4318,108.267,-166.952,-384.474,-156.359,-306.339,-269.83,-167.375,-207.497,-99.4321,-83.096,-11.088,1.82277,-134.624,-165.266,-41.8425,17.7608,23.9637,-22.4665,-193.293,-190.837,-53.9505,-168.702,-231.645,-138.306,-121.862,-102.225,-39.173,-232.086,-171.017,-57.6073,4.24623,192.389,-22.1269,-121.638,-50.4011,18.2757,286.307,-50.8904,-303.792,-435.436,-141.162,-83.607,-231.078,-3.6224,99.3558,34.2858,89.7488,27.1813,76.8585,-25.0791,-94.2682,-18.6195,175.736,277.892,232.773,238.093,173.883,-296.15,-278.296,-22.8209,-21.5799,14.918,108.756,69.1907,80.4798,-31.7231,-29.3716,-43.3588,50.3327,249.114,323.527,265.265,517.415,22.9749,-181.961,-41.1919,-134.298,148.349,98.4901,57.399,35.5461,-64.4688,-196.426,-214.497,-32.4702,155.041,333.33,345.551,514.59,97.997,-69.8765,205.406,99.0978,115.535,-86.7984,-166.851,-192.228,-223.044,-450.522,-684.655,-569.94,-177.508,199.745,265.874,634.272,410.895,150.215,314.277,49.3484,-146.931,-318.039,-239.132,-169.046,-334.492,-344.052,-407.554,-448.823,-270.984,-11.8306,2.80488,449.843,304.335,171.086,663.35,125.447,-118.911,-445.622,-268.041,-97.2358,-153.965,-270.544,-357.908,-544.828,-416.528,-287.854,-29.8212,102.649,212.701,84.2407,541.346,310.909,264.959,-1.51951,-141.149,-301.021,-397.914,-430.773,-303.426,-148.066,-127.393,-81.0532,-269.565,-122.851,103.284,-6.38757,147.958,99.1585,366.569,166.556,77.6785,-75.9955,-212.159,-257.462,-182.909,-78.2804,52.1912,-46.0352,-265.516,-199.729,-19.8137,-116.942,62.2215,203.135,333.535,251.999,99.0196,26.6923,-67.0142,-160.316,-167.432,-36.4132,76.1069,-14.6454,-384.699,-23.6737,-382.595,-65.9204,-114.611,-8.43912,125.171,228.562,171.698,15.6746,-120.596,-189.907,-147.633,65.7131,-101.544,-356.612,-222.935,-47.7079,-312.763,-114.072,-320.805,-156.005,-135.246,110.4,237.104,145.699,-19.4744,-24.7333,72.2949,128.484,-258.141,-95.1452,-48.6788,-281.817,-92.1684,-108.051,-332.723,-155.629,-46.7988,161.984,88.9505,111.757,22.8463,-80.2727,-74.7341,-147.871,-156.768,-150.236,-169.884,-56.3068,-78.2583,-140.217,-306.145,-563.875,-445.593,-261.221,-162.569,-70.1127,19.689,-109.767,-54.6412,-72.9171,-172.318,-235.566,-146.193,-120.528,-70.6239,},{27.6952,26.1393,5.71653,10.7452,32.4188,72.571,73.5632,70.1978,79.6318,72.4088,79.6589,41.5544,16.4407,7.7288,25.1493,18.8419,26.7767,32.0851,33.0881,62.6756,31.2298,59.2347,24.0331,3.99521,-12.3446,10.8872,11.6459,25.8691,80.2827,55.1153,23.377,13.1428,24.1774,30.6985,62.5888,48.0897,26.1196,8.10876,-12.2186,2.14421,8.59476,-27.9066,6.46024,29.7486,42.5775,45.6055,23.2295,9.35876,27.1349,63.9275,61.5859,43.003,-14.3961,-4.31049,20.9514,36.6483,26.7511,15.2052,11.8841,.27515,60.4771,30.8947,52.5543,7.81788,25.9869,51.3103,46.4308,-3.3662,8.86906,32.7598,32.3378,.777165,22.0774,34.4458,9.95168,5.76225,39.6766,55.2057,48.5152,30.7241,31.232,53.5018,30.9691,-1.33296,12.9448,7.80055,32.9508,14.8512,-20.3449,3.31033,2.26763,-10.7903,49.3484,65.4311,50.5205,29.6025,23.1138,11.226,-0.170257,-13.0318,-12.0196,10.0327,-6.0025,-24.9659,-20.3303,29.3345,22.7157,20.3121,51.3507,38.0612,35.2681,19.9503,15.8902,3.47415,-12.1193,-20.4371,28.8562,26.73,40.7756,25.0641,46.3416,61.1644,49.1906,22.9955,47.8516,42.4164,48.5186,23.0694,16.0051,37.2481,38.3626,65.1726,33.0173,29.7715,33.7491,33.9483,24.9287,58.2527,43.3866,17.8574,32.036,29.7885,18.071,4.21467,12.0969,29.476,75.8964,51.536,29.1516,28.1293,60.8783,39.5422,34.1767,41.7439,41.1425,20.5482,57.457,81.3229,50.403,11.2298,11.5081,41.6343,34.866,19.0394,-3.816,18.5144,28.9502,11.7753,-1.50064,29.6893,24.4834,34.6739,43.5288,47.3202,22.8447,-6.60538,18.2394,57.4421,45.6633,16.8492,10.7663,.775887,5.63843,-11.8888,11.3324,30.3851,34.0947,17.1136,33.3754,42.3629,44.4263,-1.89156,31.9497,65.2271,46.3613,18.5218,27.3692,11.0685,1.87554,31.9493,29.1392,47.9946,33.6081,-0.148133,28.4077,34.758,34.431,13.2615,14.9715,39.5211,43.9044,34.5541,12.7689,26.2065,17.3224,48.7407,27.3259,21.8232,28.6226,12.4713,30.1646,21.338,20.7294,7.86708,9.38834,29.2306,74.2773,80.6788,77.2095,22.4962,10.4789,2.3009,5.75887,53.1281,49.6176,17.6381,44.5947,28.0735,15.3602,9.49045,-5.18266,-16.5018,34.8407,64.1979,78.6862,51.2682,24.8384,38.7792,25.0949,31.2514,49.8056,7.94395,4.98331,10.8069,4.66888,16.132,},{24.1114,25.9545,-5.95117,4.96694,34.9892,81.0137,96.9209,84.9746,85.8926,56.8646,59.6395,-11.5445,-28.9499,-4.49857,31.9366,29.08,21.9722,31.9124,39.3125,71.0508,41.7594,67.7771,22.666,-13.5889,-56.1843,-0.770978,-22.4723,-7.52857,70.6169,62.1973,30.0556,18.7975,30.3401,41.2556,72.7551,64.7098,25.546,-0.515731,-47.3081,-17.8893,-13.2696,-70.2873,-33.7446,-10.9878,5.22412,35.2434,19.8039,11.5226,29.8389,72.9364,77.1098,60.739,-48.5251,-32.19,15.3736,44.4888,10.6303,11.7231,-15.0269,-48.155,28.4357,10.5206,46.9043,3.00509,32.1946,58.4487,64.1158,-11.7604,-0.321732,26.9882,37.1571,-38.3165,12.0019,21.8731,-20.4898,-50.1646,6.13883,45.187,43.8699,32.4689,38.8389,65.2343,39.7473,-15.2175,-7.76428,-1.57675,36.332,8.17944,-56.0953,-9.10315,-24.7133,-52.5627,22.8086,55.1071,47.398,36.4008,26.9487,4.38273,-8.32455,-49.3637,-26.2511,27.1926,10.617,-31.5493,-61.3095,14.2881,11.5709,13.2336,40.3009,22.5214,31.5755,26.1218,15.4395,-16.6703,-50.9048,-52.0055,53.3804,45.227,60.6646,19.4865,34.6664,59.2479,44.0311,22.5651,52.0252,49.0408,53.1273,30.1945,15.5255,11.8549,-16.4983,68.6851,29.4146,23.7889,11.8559,15.414,-10.5082,59.5276,42.3286,-14.3751,6.07778,21.0794,-9.4992,-6.39488,1.81772,-11.0625,83.2986,60.0531,32.0918,29.3202,73.3137,17.7056,7.49768,46.2663,41.2732,-7.33989,45.2456,93.7041,72.493,13.0389,-11.8337,5.58569,-1.99164,-3.98466,-28.1089,.728924,-1.41487,-32.0574,-54.2622,1.76308,21.3594,40.9775,26.6264,26.7331,-11.8535,-35.7965,.406717,32.8087,22.1332,.240618,-2.76923,-25.2051,-21.0362,-53.6762,-34.2479,16.2721,39.3183,-0.876591,2.9683,37.2318,43.2042,-17.5338,21.1673,63.5576,33.7136,7.32563,7.87613,-5.70259,-4.75582,23.3064,11.5197,53.6303,27.1941,-56.3516,1.3329,33.5973,52.6679,21.6419,14.8371,51.7057,65.3258,29.5041,-3.09049,12.4549,10.48,46.3515,15.2287,22.7815,13.1148,-14.1151,15.564,36.3484,31.6008,9.61319,17.5572,33.5731,79.9157,99.0734,85.4837,13.5514,11.2485,2.08564,-1.20413,55.9653,47.626,14.4576,37.4941,29.7932,14.9053,12.3492,5.49429,-8.06508,46.4606,80.9149,99.324,53.4357,21.2655,54.5867,22.9766,33.4239,63.3761,-3.0307,-0.0902907,25.3773,15.8889,22.541,},{26.2884,26.4267,12.4191,17.0609,37.9521,76.3147,74.3403,70.1844,74.617,66.5518,70.3865,38.7234,23.5975,19.8782,33.5537,28.4298,26.3361,32.8274,35.2623,62.8964,40.0133,62.6109,34.8076,16.9692,-3.15547,12.7455,16.5394,36.1598,82.6379,63.87,30.2238,20.6961,24.7799,35.0758,64.1959,53.5445,30.4874,18.2381,6.10143,12.6305,7.80049,-19.3,18.0958,36.5458,48.243,49.0213,28.4358,10.5538,27.1442,63.1741,64.1734,53.509,2.69723,10.0822,24.9848,31.2874,23.2702,24.5297,25.6136,14.7282,63.9928,34.5337,47.3102,8.52174,23.7772,55.1615,51.9907,8.16739,15.2695,35.6813,21.5979,-8.6804,24.6273,42.4324,22.9422,16.9503,43.1885,51.905,43.0204,27.2644,32.2721,55.9591,36.1957,6.1945,7.83737,-1.9687,24.6823,24.7815,-2.13272,21.9347,15.5749,5.04942,49.7055,58.46,44.2958,26.3663,20.2208,18.0659,6.23568,-25.3942,-18.3692,19.8843,6.70357,-8.06646,-15.9399,30.7782,21.3245,29.7392,54.8547,38.177,34.6021,18.3411,14.8902,10.1425,-7.59635,-24.7422,18.1621,31.0781,41.4552,30.8125,39.135,58.342,36.9705,26.1604,47.9235,43.4814,51.9001,21.5372,14.5575,28.2639,19.7324,41.3924,23.776,28.1841,34.0413,32.603,20.0041,49.8418,35.5241,15.0393,30.9611,31.9392,23.5694,6.39117,7.53714,13.1687,53.2638,42.7403,28.558,32.2374,57.9992,39.2337,23.4635,33.0614,37.4937,22.5863,55.5851,74.7809,48.8023,12.1326,-2.80518,23.8962,23.0656,21.2569,2.06213,27.4468,32.1947,15.8613,-5.98672,21.7722,23.5109,37.3742,44.6537,45.3815,24.8845,-2.84741,1.39991,36.7075,37.5292,17.1656,12.1842,8.20048,11.4139,-9.23957,-2.30614,16.2392,31.3833,24.539,35.2222,40.88,43.8368,-6.23642,16.3951,46.0133,28.6695,10.2626,16.5042,8.97057,1.23923,16.8747,15.9527,35.2268,23.2945,-4.10733,22.6991,28.3133,30.521,12.1485,13.8902,36.7675,45.3663,37.0323,18.339,31.6892,25.0472,44.5719,21.4739,19.978,29.4586,18.2026,40.1266,25.7596,22.3671,8.57082,16.612,29.5552,72.8152,79.9602,75.8474,33.3163,25.1435,19.5945,12.7958,50.2823,59.4598,32.4135,52.0797,29.9177,20.4698,14.078,3.89475,-4.3657,33.2959,58.087,76.042,55.3651,33.0559,41.3693,20.8544,33.5343,60.3003,18.5346,14.7484,15.706,10.6219,18.8461,},{23.5993,21.9188,5.59928,10.833,33.9835,78.5111,79.3638,75.3766,79.3334,69.1002,74.0105,37.4426,15.0651,9.59316,25.366,20.7475,22.6665,29.4868,32.6738,62.9072,39.1487,64.0496,31.1506,8.25893,-11.862,11.7734,15.2197,30.7865,81.2014,57.5535,22.0418,11.9531,22.5591,33.1232,66.6735,55.8972,32.5037,16.1432,-2.25614,6.66334,9.54435,-23.9275,10.0399,30.9976,46.7203,48.8073,23.8514,8.14418,29.3309,68.0969,67.8564,53.4693,-3.29894,3.49874,23.4933,36.4137,27.2906,18.7909,15.3526,3.60124,62.3657,35.7942,53.1098,7.49792,28.5415,58.4714,53.6173,3.1428,11.7608,33.6554,28.0489,-3.61028,23.543,36.5857,11.8619,6.71558,43.4898,56.6435,49.7669,30.1159,36.6688,59.9889,36.5163,1.03959,6.66746,1.79334,29.5043,20.5351,-11.6073,11.2705,4.82225,-5.68061,52.1775,64.6778,51.5032,29.6826,24.8732,17.2969,4.50909,-23.5134,-20.8013,11.2875,-3.92266,-18.6124,-21.3023,28.4618,20.5096,24.6621,55.918,43.1813,37.4648,20.164,16.3437,9.47584,-11.1495,-27.502,18.0276,23.7078,38.4108,24.7898,40.7694,59.1336,42.437,24.7184,49.6909,47.8169,52.5654,23.3572,15.8601,33.681,28.268,53.5872,27.6771,30.5805,36.3991,33.8595,24.7546,59.6877,40.8094,14.7943,32.0904,32.6317,24.0324,6.07095,9.92768,20.39,64.1347,45.4535,27.7176,31.2766,58.4626,38.6032,31.6165,41.5718,41.7711,21.3737,56.1051,77.5855,50.7044,12.7372,2.65645,29.8873,25.4468,16.5643,-4.37009,22.1253,27.6151,11.159,-1.24617,31.0751,26.2805,36.0782,42.3207,44.2445,21.7554,-5.74651,8.80141,45.5021,37.7897,13.1901,6.68853,-0.431259,5.31975,-11.8254,7.56702,26.4668,34.6925,19.0874,30.5938,37.3459,41.4686,-5.82823,24.3355,54.1719,35.9729,12.3123,17.689,8.93835,1.66629,27.5141,26.0832,44.3641,29.3066,-4.34406,22.815,29.1058,30.488,12.374,11.1158,35.6611,43.9345,32.9307,15.236,30.9663,24.1526,50.6169,28.6355,23.071,25.4549,11.4393,33.7232,20.972,20.2177,8.46102,13.2502,29.5961,74.9892,83.0988,78.7648,29.199,18.6449,10.5349,10.7186,52.959,54.757,25.8144,50.1676,30.1002,20.1381,14.045,1.07668,-7.34904,35.9614,63.2997,79.9768,55.8303,31.0229,41.4552,26.2057,38.8326,59.5133,16.7905,13.6602,17.3056,12.1006,20.1364,},{-4.2142,-14.5378,-107.704,-39.075,88.1295,-59.1689,5.8684,-123.422,-319.566,-72.172,-232.504,-92.616,61.4839,33.8162,56.1459,-55.0534,26.9775,114.745,22.4032,-121.158,-63.4904,18.7291,48.8605,-31.7673,-156.013,-153.412,-130.976,-145.667,-44.0383,24.6126,-10.4715,-31.1062,-35.7903,-224.547,-237.197,-108.323,-57.3902,164.351,-50.0631,-89.4309,-22.7729,-20.9476,314.545,-9.03562,-194.672,-213.297,13.6998,30.6824,-230.363,-54.8068,-13.0275,-2.25472,84.6168,85.7024,200.848,40.4696,-23.1014,68.8777,204.402,377.129,347.258,328.282,301.249,-202.792,-237.2,-24.7573,-74.563,50.5291,160.084,152.807,45.3015,-101.698,-29.7027,-43.3596,125.512,370.821,451.602,458.888,523.842,71.2342,-159.631,-12.5177,-241.297,84.7616,110.683,-87.0598,-116.234,-183.86,-246.88,-261.64,-39.2286,250.805,487.159,496.672,505.065,103.012,-100.003,79.5865,-53.6073,-1.61265,-232.666,-274.827,-257.715,-275.207,-413.562,-557.128,-328.943,53.8619,444.508,339.081,605.906,371.212,152.119,228.278,-106.132,-325.807,-436.924,-323.365,-256.766,-400.396,-293.288,-336.667,-311.342,-168.743,122.233,105.098,485.144,268.126,177.092,661.608,-55.6771,-352.689,-575.039,-395.943,-204.42,-177.483,-261.501,-347.436,-476.393,-386.365,-137.672,72.9563,160.763,221.085,80.9057,449.958,146.461,170.659,-86.4374,-204.628,-332.474,-437.202,-451.948,-279.598,-94.3028,-57.2158,47.5974,-67.7772,-23.1313,111.302,11.7495,-1.74726,-123.892,167.764,5.36364,-89.2088,-250.907,-421.876,-422.069,-279.611,-46.2811,168.692,-1.13229,-227.817,-183.359,-44.0637,-66.6079,-4.8167,77.2456,215.478,131.305,-22.2781,-134.551,-205.377,-243.564,-256.346,-25.7863,138.161,68.976,-303.441,18.7525,-315.918,-35.7739,-62.3113,-75.7502,79.1352,212.237,147.434,-15.8965,-156.725,-190.739,-177.241,95.76,6.10656,-174.712,-87.4612,68.7906,-186.919,-74.7913,-201.275,-183.448,-245.111,50.4515,199.238,41.7387,-98.3921,-98.1508,59.2909,199.914,-129.518,32.7527,175.187,-108.6,-29.8604,-89.4436,-385.191,-200.029,-186.703,50.4927,-66.3346,-49.3358,-134.759,-114.636,-89.2077,-117.075,-104.884,48.2836,28.0127,99.4651,-15.0148,-164.364,-395.919,-654.155,-508.707,-304.175,-138.753,-171.81,-77.1455,-166.491,-186.81,-171.016,-246.686,-165.09,9.24169,18.0134,-47.0805,},{32.0693,26.2071,18.3346,22.5192,45.5483,92.255,90.6558,86.7144,85.4963,78.7667,87.6794,55.256,31.7502,23.18,33.0152,23.7751,33.3234,36.628,39.7572,72.8825,46.2929,69.0848,43.4985,20.3058,4.09564,23.8436,34.9529,53.5392,93.9571,70.2545,28.2918,14.9918,23.2696,30.9665,68.263,55.3297,35.2272,25.9585,17.046,11.5547,17.1671,-3.75662,34.1711,56.9978,76.5707,71.9029,35.5409,6.42135,26.87,67.4256,66.6427,51.2787,10.384,17.2348,23.5591,33.8052,30.222,28.7978,37.3495,34.0873,85.6172,54.8734,59.1453,9.4613,22.622,57.9645,52.4895,8.99911,15.7485,28.5576,22.2494,-2.00551,28.8623,49.6796,36.3549,30.8254,57.6337,66.2354,56.8854,30.2256,34.6209,58.9354,38.6927,2.79826,.600614,-3.62528,22.4569,22.4935,14.3951,36.8829,24.4839,10.9685,60.4798,70.8555,56.4003,28.4813,22.1273,23.8384,14.3449,-27.3022,-29.2998,3.40616,-7.96422,-16.7843,-0.41869,39.5692,21.3007,25.3825,58.7614,54.6742,43.1717,20.3363,16.3234,21.1461,2.32092,-18.7767,5.63797,12.3272,23.6056,27.6537,47.3117,66.1156,32.8167,15.9634,41.3352,51.4628,57.9077,22.7226,16.6759,38.4615,31.3809,45.2655,24.1169,30.6206,49.5334,51.7952,47.1105,63.4674,35.6332,11.4694,28.5667,29.9301,31.4671,8.22031,11.0159,23.4727,54.4468,35.0121,19.6653,29.3962,64.394,53.6353,39.2741,45.3661,41.5363,21.2678,44.7293,62.1443,38.8513,9.86749,2.88012,28.7417,23.755,14.8857,-2.79277,35.0959,44.7364,34.4161,16.4926,43.4832,27.279,29.3255,34.7733,36.0021,18.2408,-8.35624,7.48745,42.3867,33.4177,12.1521,13.1246,18.5194,24.7679,3.41435,22.1486,33.4441,32.0916,19.4679,26.9981,26.4659,29.8746,-13.4446,22.8857,50.2795,35.032,14.9459,29.9875,29.6465,15.714,31.1092,33.5633,45.3785,25.6195,-2.06422,17.5289,21.1162,21.9747,3.94001,.568504,24.8497,39.1211,38.9642,35.7756,53.4926,38.3329,54.5866,36.8556,25.2339,18.8342,6.333,33.5157,10.4595,14.5252,6.91419,6.30056,19.8576,76.7431,91.6767,86.9939,40.4279,28.213,21.9293,20.0347,46.2988,50.9991,24.5036,48.5522,28.1917,21.4626,16.9215,-4.31268,-10.7034,35.4756,66.1274,86.8479,63.6587,37.6225,39.1676,27.0857,40.7406,55.377,20.2985,15.0752,18.2041,15.479,20.04,},{-8.82165,-24.9383,209.769,49.944,-142.438,.358613,220.598,101.418,117.444,-28.9508,2.43351,-413.391,-28.9892,21.7943,-98.6913,-111.136,68.5026,-154.662,-393.469,50.9828,59.8967,-57.7201,89.9097,-142.114,-6.67105,49.8878,-53.1121,-165.599,-259.788,-173.061,-10.0421,-191.779,-74.2659,-55.9729,37.5645,-60.2574,-24.885,-16.0399,25.8534,-76.5573,-23.5427,-70.5386,-40.096,-84.4977,287.273,315.404,-0.742622,-58.1184,-44.3076,-105.245,-27.0196,282.223,631.364,175.714,-98.3506,-177.319,-90.4506,42.2443,121.055,85.9244,175.086,356.607,308.536,128.243,32.883,72.1444,290.238,238.976,-41.6192,-78.8653,-157.735,-34.778,-124.81,-10.9476,-7.24359,-79.225,106.223,149.255,274.33,-7.36103,89.9302,-150.577,105.45,251.885,-1.34107,-164.919,-266.631,-123.48,83.248,-86.352,-94.2951,-68.7633,100.147,268.242,24.2458,-57.9789,-46.893,-327.872,-297.962,-325.167,-103.398,-37.2455,-15.6176,-96.0753,-47.8073,-159.152,-149.946,-64.9673,-315.249,141.263,-159.707,-136.353,-180.801,-373.611,-448.417,-120.011,-187.594,217.738,89.3931,72.0751,-374.944,-50.6108,141.743,-170.749,-373.462,-438.112,-394.604,-174.481,-183.697,-412.779,-99.5074,-86.9304,-29.4031,-163.676,145.467,114.305,321.124,290.067,-23.4669,-28.1799,-96.0656,-182.991,-201.602,-224.806,-31.4185,-28.3892,81.1821,43.634,-57.871,-129.332,-108.294,-67.5697,-34.7107,68.1813,110.852,135.224,-230.734,-195.481,-118.163,-96.9167,13.6538,-43.0429,234.596,23.1911,-61.5896,68.7314,-218.407,-333.731,-88.6869,-32.6221,137.638,-150.14,-229.162,-70.2927,-277.323,133.549,3.25637,45.1459,191.374,105.367,-86.1813,113.402,-41.6023,-32.6859,-206.637,-67.43,-28.8445,-301.771,-188.47,9.86757,-372.019,113.856,-2.23735,17.4133,116.128,-181.133,123.119,-7.72651,-11.3775,-43.7483,-94.347,-360.04,34.5721,158.852,-230.456,191.151,-71.5936,217.96,-128.042,-34.5654,-47.5479,229.607,222.828,136.08,219.134,-153.885,-238.857,-40.2474,166.981,-102.423,-69.8103,-249.665,173.647,228.942,-51.9757,87.8145,189.179,247.576,-6.50883,64.7678,76.5271,67.802,100.582,-46.5805,-104.695,-122.791,-80.1629,307.02,329.282,205.077,104.49,159.44,-4.53064,-55.3575,-114.41,74.1191,317.133,147.148,-44.5437,45.1937,-125.116,139.829,271.146,120.823,203.738,102.863,},{20.2644,7.0137,-61.4763,-42.9732,-6.89519,50.8882,75.8347,64.7175,63.9543,18.6134,9.22581,-46.5708,-76.6678,-41.8798,16.9957,12.685,16.9268,5.35877,-7.36866,43.6771,19.1002,31.988,-5.68221,-29.3074,-87.0798,-55.9518,-53.419,-23.7616,27.2954,22.0547,4.78633,-1.1892,16.9377,18.6337,36.9196,32.6482,20.6111,18.1993,-16.1698,-20.6583,-44.0399,-67.834,-9.44317,30.5704,41.0375,59.0493,33.4958,3.18745,23.0613,56.3905,53.1767,29.4592,-33.2898,10.1225,10.4476,-2.58256,-5.09175,.897882,4.50736,-18.3387,18.9873,36.593,48.8646,-2.79476,27.1384,35.9495,35.8257,5.03225,25.5034,10.9734,-4.82113,-59.8842,2.23815,14.2601,-22.6945,-41.9416,4.41455,62.0363,55.6002,39.4823,38.7794,38.4878,46.1072,-6.01131,-32.7024,-59.4887,-40.1945,-43.2136,-78.7838,-58.9819,-72.0608,-84.2522,3.5933,48.8536,61.3653,47.106,28.1303,-4.65576,6.35337,-89.7047,-87.7933,-0.48113,23.3657,-27.1757,-75.5166,-39.78,-30.8293,-25.8052,-2.0842,-8.69116,33.1884,30.2963,14.6895,-16.3918,-54.1993,-68.8228,9.26024,43.6,52.1816,21.5331,17.087,16.2862,6.98597,13.1952,33.6381,41.8211,21.5806,28.139,21.2278,6.14999,-35.0838,19.5218,17.4103,40.8597,34.4317,48.5382,-5.76168,26.64,43.6403,-13.3783,.372974,-1.71084,-48.8828,-47.7947,-4.1848,-57.316,33.4336,34.6566,8.47755,9.16462,65.6322,20.4283,-8.50406,16.9905,13.2315,.00976896,28.6487,55.4601,21.8391,-30.0156,-37.9371,-23.887,-6.85248,-7.06065,-45.8904,3.17403,-4.78127,-13.3634,-70.5776,-35.5369,-13.2942,26.7437,28.4801,19.0359,-15.579,-68.8086,-26.2938,21.3172,19.7626,-16.418,-20.2884,-28.1189,-19.3107,-69.7605,-65.0627,-30.06,3.23252,-19.5516,8.09292,29.4935,24.5004,-76.9599,5.20521,49.6746,17.1133,-28.3392,-19.9928,-33.2016,-24.0251,-12.3994,-22.139,.591751,-36.4582,-118.884,-32.7963,-17.4721,19.0796,7.56731,1.26495,42.7874,46.5047,6.7764,-7.68306,19.8925,-0.770928,22.7281,-19.0331,-34.0145,-35.9149,-33.5046,-19.6731,14.9509,9.27045,5.7177,-0.218338,14.4633,68.5117,74.5334,60.4771,-15.3774,-18.6767,-35.4146,-75.8511,-25.673,-3.53467,-7.89611,15.4129,20.9703,9.57591,14.3023,-23.9542,-28.8243,46.5245,77.0377,106.02,70.3307,16.4716,21.3251,-34.9498,-43.885,30.2549,-11.032,-17.768,13.2933,12.998,17.5566,},{-12.2623,-31.0401,-61.7106,-13.5481,77.4664,-49.9784,141.462,-177.155,-404.885,-170.634,-300.397,-265.749,-153.493,-213.448,-115.38,-93.9334,-10.0024,-1.20509,-129.277,-141.098,-12.5988,23.6063,18.5208,-12.3005,-174.059,-196.722,-53.6486,-165.51,-222.384,-158.042,-114.283,-105.184,-24.7846,-230.588,-149.276,-53.9105,-9.1153,194.633,-36.7819,-130.612,-44.1819,32.4026,293.735,-56.5526,-313.851,-442.476,-138.593,-76.7488,-234.706,14.5789,94.2159,-3.17192,63.9552,2.264,44.1751,-41.1692,-99.0814,-21.5386,168.298,280.464,212.211,265.12,206.269,-298.201,-283.188,-17.9817,-34.6338,3.74355,84.5435,42.1451,70.6205,-19.0679,-29.5853,-49.3961,65.1015,252.959,316.145,259.57,546.506,14.2294,-198.676,-63.8071,-160.723,128.241,87.9638,63.3782,41.9354,-67.7766,-194.907,-211.753,-22.0758,156.506,330.41,343.8,514.775,93.5274,-66.0052,213.329,97.6563,131.251,-75.3849,-168.269,-189.777,-213.371,-398.61,-676.294,-586.117,-198.143,159.876,247.344,640.85,403.601,145.087,309.095,56.1579,-114.54,-292.36,-239.272,-187.642,-334.355,-325.519,-394.801,-433.036,-283.079,-19.657,2.64867,427.22,295.144,166.741,658.74,137.456,-89.6842,-425.891,-263.962,-93.526,-147.739,-248.6,-338.846,-531.134,-424.013,-289.485,-29.2744,103.37,189.454,82.686,548.476,322.18,258.648,-4.0557,-134.887,-294.834,-385.825,-412.918,-284.622,-151.465,-126.661,-90.1053,-277.066,-122.824,90.4212,9.42987,158.433,95.7999,361.541,172.736,81.1465,-76.1774,-206.658,-248.954,-190.35,-85.2399,36.443,-55.2457,-262.276,-193.59,-30.6492,-106.32,74.8337,197.04,331.467,274.584,123.302,34.731,-49.9567,-147.272,-155.845,-39.9158,58.6626,-17.1752,-372.886,-5.83008,-370.59,-66.9305,-96.7974,3.39918,127.881,247.527,179.871,26.5329,-108.615,-173.346,-153.514,64.1106,-95.4503,-353.281,-193.95,-40.2283,-306.436,-113.863,-316.528,-150.733,-141.021,122.129,250.217,130.352,-28.1021,-30.4533,73.9859,135.302,-252.14,-94.0669,-59.8037,-281.783,-77.3693,-107.516,-340.645,-168.195,-62.7802,160.706,79.3906,100.834,18.8487,-56.1486,-59.6791,-134.488,-149.245,-182.647,-184.317,-57.9815,-72.3862,-147.165,-310.924,-565.629,-434.982,-259.992,-155.052,-64.6625,47.5225,-76.6077,-53.9362,-91.2269,-173.938,-250.964,-149.552,-124.43,-73.4443,},{356.884,595.929,390.639,190.741,279.635,323.591,275.232,-173.355,181.04,81.8595,386.753,-437.458,-139.721,-149.613,39.3971,-117.515,319.002,83.7647,249.741,694.242,41.0381,160.851,332.919,130.382,200.314,581.709,-44.603,-274.857,-345.862,-398.844,403.813,292.69,-143.833,259.783,505.194,-107.337,216.997,-13.2418,186.222,-102.128,146.559,413.569,281.757,269.854,86.5125,651.281,377.738,70.2861,277.52,356.587,-66.5117,8.0296,271.028,-267.547,-644.664,-668.61,80.7844,262.233,55.9954,-353.263,80.532,520.795,235.6,248.921,801.555,92.4155,-47.4257,317.596,67.228,-443.958,-226.789,-228.083,-387.361,188.512,-140.291,240.19,295.989,144.546,133.812,138.242,488.359,72.6554,396.734,51.2942,14.9373,-107.062,-425.636,-581.09,-410.071,-127.28,135.358,14.9234,-136.268,171.546,261.18,69.2875,604.185,307.44,-177.214,-499.41,-31.2983,-312.13,-263.13,-935.214,-788.835,-152.495,-144.429,-521.985,-449.994,162.143,120.807,258.455,39.4563,-213.9,-219.522,369.784,104.093,364.144,141.84,-155.803,-843.93,-488.114,-26.452,-515.058,-345.449,429.663,54.6872,346.887,-168.157,-972.289,-368.76,263.343,639.024,533.261,213.797,162.937,-183.822,-132.55,245.476,-117.831,-1278.4,-173.969,-21.7656,-167.62,84.2636,-772.595,-294.642,724.067,658.039,45.3299,524.519,592.615,239.739,105.179,-394.463,-536.962,-656.507,-358.759,330.013,-68.8636,23.8494,-218.453,-212.979,-50.739,-243.092,262.424,650.369,465.058,113.625,416.746,615.418,-125.491,-272.529,178.875,167.538,108.226,105.802,81.3366,-365.799,-386.864,-182.67,18.9531,92.9722,-305.374,-375.528,138.191,363.385,-382.205,23.4292,336.442,-122.818,116.586,36.277,-38.1019,-146.661,-343.348,118.895,-274.258,-37.5148,-120.01,-215.65,135.975,307.186,-15.6117,438.279,65.3331,-675.032,334.726,-179.099,-64.3055,-39.5332,226.268,67.5765,-148.445,155.138,-284.791,-745.919,-234.291,13.5189,-131.597,-307.839,-960.82,-282.048,147.439,-439.907,-715.412,-272.295,219.45,119.156,685.421,383.747,-38.2685,-275.625,-521.762,-574.695,-564.137,-1061.6,-414.905,-5.59507,121.938,-270.927,-559.386,-293.046,-347.006,94.652,-2.56014,285.876,-176.353,-529.166,-801.417,-1298.31,-919.719,-661.932,-701.118,-459.472,-323.548,},{23.906,21.8842,-8.26246,-8.49262,16.6494,65.0487,67.1242,65.987,73.9936,60.8986,73.3627,38.9346,10.3062,-0.86954,26.1885,18.8706,22.6695,23.0986,15.825,55.8255,25.4199,58.2993,20.2808,.941113,-12.155,.613358,-1.22486,15.0728,72.2278,50.7514,16.0164,11.3542,14.6623,24.415,60.9511,46.9809,28.3294,11.8025,-0.876164,13.2013,15.8359,-29.3595,5.75965,27.8424,38.5437,38.2517,15.6708,1.10461,25.3225,63.5629,61.7679,53.1724,.608894,12.7772,36.3796,48.1826,37.1774,18.7374,15.5323,-7.6814,55.1422,26.4162,47.1781,-0.993727,26.1745,52.2899,47.2243,3.63032,16.289,44.6307,39.5435,11.1661,32.4643,42.7701,4.78705,4.41593,34.0751,50.6269,44.4216,31.8944,34.0252,58.0104,39.0204,7.97883,16.8478,11.9186,34.9838,17.8287,-11.4538,-0.516692,-2.23957,-18.0114,42.3122,64.112,54.7333,30.9113,22.2444,13.4741,6.01233,-7.60856,-14.6733,9.54732,-2.92685,-18.7859,-15.9662,32.6256,18.2411,11.047,42.502,40.7231,36.8827,20.9703,18.4902,8.45018,-7.31525,-21.5754,22.4689,28.7268,42.7561,26.6546,51.4499,59.7378,42.756,16.1377,54.2264,46.6799,50.7342,23.6335,19.5381,47.0696,46.3661,67.5108,36.9252,38.9702,40.7952,38.2711,30.2898,54.8514,37.737,21.0354,46.5463,40.834,26.5939,3.19081,14.586,36.3886,81.1323,52.4617,26.0559,24.7567,57.2233,40.8961,36.5577,34.7484,34.974,23.5531,68.4188,86.9638,53.7033,8.97438,12.7543,44.274,37.6263,17.9882,-9.87876,18.1218,29.241,15.5593,-3.39011,30.4997,20.4109,35.2594,47.9836,51.7003,29.5423,-7.75799,19.4824,60.2688,48.5067,12.3699,5.95661,-1.46823,3.81351,-16.2205,15.0048,36.5548,37.3657,19.4071,37.9603,42.3138,46.1312,-9.71449,32.3417,68.2079,45.5046,13.6856,20.1632,6.25583,-2.94449,33.3883,36.8474,51.3819,34.9914,3.87706,31.034,28.0038,29.5251,7.23575,10.6889,32.3949,35.4772,26.7609,1.42452,24.6312,17.5681,53.7796,33.1655,24.5156,30.5013,13.687,32.6592,18.2373,12.9269,1.55382,2.92119,24.5133,71.1072,75.5131,77.2119,17.0174,1.49064,-9.37614,-0.847051,54.709,53.5999,23.6907,50.2912,30.8759,17.0063,10.2336,-12.3634,-25.6839,28.2296,58.4194,74.9038,46.9392,15.1407,26.3882,20.3886,31.1865,49.5288,9.39377,4.86301,6.13664,-0.0438638,12.8119,},{-62.7376,-107.218,-189.149,-365.35,-516.864,-115.842,-228.167,-252.372,56.8669,31.4772,105.459,-417.518,-415.334,-132.993,-151.181,-59.9692,-109.581,-443.188,-642.726,-379.449,-412.098,-607.562,-229.486,110.568,231.558,100.21,-120.118,-290.238,-843.414,-680.039,-169.565,93.0347,-264.188,-184.245,-326.878,-175.87,-380.508,-419.236,45.2706,-122.134,-359.068,-208.709,-277.242,-6.65979,-343.089,447.598,-96.9171,120.173,50.288,-418.171,-175.978,31.6824,20.515,59.5519,71.193,-381.506,-462.748,-34.5454,48.6174,-53.9806,165.225,-332.83,-252.336,207.749,403.94,79.9866,233.586,401.844,151.5,-43.4803,-60.665,-222.567,-280.802,122.236,157.138,459.985,223.538,104.17,-325.902,88.0472,358.212,86.9266,195.483,718.315,404.829,254.689,-255.914,-636.66,-197.487,-31.2945,422.132,511.623,253.326,504.954,-42.9533,-104.686,373.829,393.672,154.052,329.041,434.958,295.669,29.3115,-487.216,-544.835,44.2406,162.665,669.635,102.612,492.94,-139.54,-133.054,67.0244,63.1028,280.969,374.036,265.282,430.536,-77.4135,-195.849,-192.918,29.0045,124.133,110.432,-115.5,158.024,213.88,51.9774,-10.4783,-405.102,455.378,678.242,757.97,357.77,-147.343,-121.159,86.9351,49.0005,160.992,691.563,-2.4635,297.237,164.755,-0.607127,170.685,156.538,559.886,730.119,677.114,320.606,207.3,366.192,233.831,43.1961,384.226,738.7,279.601,-20.6353,375.332,-142.733,194.971,429.506,539.767,360.275,35.9114,269.888,29.6771,-159.402,-238.628,140.064,221.329,202.096,-32.2439,152.68,165.913,-21.632,130.753,562.941,506.57,116.05,-219.229,154.471,-88.5717,-554.659,-130.009,197.714,222.333,-141.028,-0.590426,434.694,-422.021,83.1158,-142.945,24.1042,-159.229,-649.126,-277.228,-415.237,-325.136,-537.287,-154.951,-79.5868,71.7555,121.624,-138.075,-208.295,-329.612,-21.6732,-239.588,-83.1463,-163.94,-48.3424,-35.3824,-148.589,-153.461,-292.989,-351.01,-31.6578,-77.3024,102.459,-531.64,-386.753,55.4926,-3.89259,-399.133,-366.975,-198.806,63.1265,-350.22,-6.76219,-255.985,-314.077,-254.516,-544.735,-437.593,-312.102,-471.091,-29.1699,-86.6511,-27.5314,-59.0319,-205.555,-267.675,-365.556,-243.191,354.217,581.522,200.708,-18.0911,-251.758,-508.686,-196.588,180.475,-44.8255,-148.796,-156.353,},{26.9107,21.6819,14.0568,15.5331,35.4202,78.368,78.558,78.44,85.4837,82.4138,84.7798,54.2709,28.5178,13.1274,22.5288,15.0228,26.8477,30.0214,32.6124,61.8766,36.9338,54.553,28.5109,14.8177,7.27384,24.7116,36.6979,51.8822,80.0963,54.3077,19.1522,9.75745,16.537,22.2615,56.5419,46.1206,26.5339,18.6295,16.8431,16.5622,18.0747,-1.99991,34.4653,58.3808,78.0876,64.3952,24.4767,2.58229,20.9013,58.6099,56.6114,38.4808,11.4964,22.6407,26.1418,29.7349,30.0931,27.0513,36.4553,34.4783,81.1707,53.4846,53.6067,6.25753,23.9127,52.6307,45.2167,9.67535,17.2268,29.7554,22.7385,6.73482,27.0449,46.3885,29.9208,32.861,58.2301,63.755,54.8516,29.6681,30.6653,53.8977,37.5886,8.42324,10.4373,3.89392,20.0592,14.9977,6.73341,20.7105,18.8352,10.0964,61.4439,67.9324,56.0617,28.1539,22.9585,24.7318,16.6238,-5.45722,-14.3208,.732548,-8.45905,-17.8422,-3.85844,28.9398,17.7719,18.4539,53.4694,53.8694,43.3674,20.188,18.3304,26.1666,18.6807,.791475,14.4258,18.9254,24.6344,24.0215,41.3935,59.4651,40.4659,20.0593,38.4754,46.46,53.1068,22.5351,18.1619,45.6354,54.91,56.5742,33.4042,32.4351,44.4673,45.1881,43.5391,56.7032,40.1563,24.7717,38.1464,31.5402,31.5632,6.60918,15.1483,37.7693,66.6517,47.7322,25.698,25.5863,55.3129,48.915,36.5089,37.9968,41.4575,32.0592,53.6199,65.7775,39.1779,7.51182,13.3291,48.5598,46.9171,27.177,2.58662,28.9109,37.0421,30.4788,16.7336,41.3571,25.8721,31.1175,47.0427,47.1026,30.7043,-3.50663,17.7823,58.8045,51.9244,20.8261,16.6494,16.6665,27.0943,9.29408,25.5643,31.8934,28.3348,19.145,39.6075,39.5768,39.2841,-6.50632,30.9516,59.7014,49.3694,19.6319,32.4671,27.1094,15.2757,34.4192,32.8363,34.6197,25.1633,11.0622,29.5597,31.8038,22.2898,8.32449,10.159,27.205,31.8768,36.791,35.8437,48.8372,32.8056,47.2188,26.8285,18.5261,29.5906,19.9081,35.1256,7.94564,9.52422,8.35705,5.948,27.9817,73.9549,77.1116,78.0466,35.6206,18.525,9.6259,9.31293,49.2774,52.9765,25.6362,38.4537,22.0144,16.24,12.9882,-3.9438,-6.59868,42.122,67.1211,82.1872,64.7579,43.2177,43.383,35.5552,40.8437,48.9989,18.5391,14.0558,16.7978,13.5501,18.3882,},{-6.76153,-21.1814,-62.651,-18.1495,66.4973,-51.2553,124.69,-169.728,-389.226,-152.827,-233.333,-244.054,-174.169,-225.639,-114.948,-90.3074,-6.78043,17.9046,-124.99,-135.699,-43.1036,19.1413,12.4292,12.9631,-144.498,-180.365,-65.5157,-152.117,-135.643,-122.826,-111.528,-106.856,-25.5675,-212.842,-133.337,-49.8833,-2.95734,170.595,-54.9364,-106.441,-13.5449,43.1126,279.192,-26.7272,-295.481,-368.849,-115.646,-85.3385,-233.333,31.8151,67.6771,9.29391,55.784,-17.9899,.142173,-32.4049,-94.9632,-43.9664,145.799,279.918,222.976,214.335,225.21,-281.652,-265.697,-2.2624,-40.8338,5.83688,71.3071,21.4079,29.7087,-14.0979,-26.8199,-61.9192,36.3367,226.211,299.037,233.281,481.07,3.51487,-177.794,-34.7919,-171.466,106.353,64.4344,34.0448,4.19053,-51.5458,-163.821,-218.91,-65.0762,120.292,305.714,311.585,469.595,83.8904,-48.9778,218.861,102.232,113.325,-86.1809,-153.417,-186.054,-176.002,-362.093,-636.351,-547.704,-167.823,180.919,228.653,591.603,351.006,129.527,295.545,59.5549,-74.1997,-265.848,-248.88,-207.799,-296.956,-302.97,-381.622,-452.962,-281.918,12.4562,8.22653,411.997,251.358,146.802,633.109,135.294,-99.7129,-419.375,-271.507,-127.766,-145.111,-242.504,-336.821,-516.845,-397.66,-276.475,-23.0311,100.25,188.733,71.3616,512.108,284.694,228.302,-27.4397,-142.549,-310.069,-367.398,-407.588,-301.611,-177.032,-139.794,-79.3717,-261.492,-125.312,92.691,13.8483,150.417,80.2724,344.812,161.113,62.3782,-106.013,-199.064,-247.449,-206.007,-120.235,13.0261,-41.4281,-238.174,-169.75,-20.9594,-101.915,93.6172,199.267,334.651,270.933,119.913,19.3329,-33.058,-148.879,-174.591,-59.5276,53.1594,-3.64783,-337.101,-15.3613,-330.874,-55.7156,-87.9639,.673571,123.114,234.246,169.617,-0.809426,-95.827,-174.174,-161.439,48.9423,-93.9786,-332.789,-218.596,-36.8225,-281.472,-98.6946,-281.176,-119.425,-136.138,132.224,244.77,117.977,-20.1282,-24.3339,74.9403,149.451,-218.548,-102.435,-85.2704,-263.793,-91.593,-105.596,-311.424,-135.797,-50.0405,148.491,75.6345,91.6622,47.3801,-24.136,-45.7693,-125.481,-169.717,-186.684,-170.925,-65.2691,-86.8005,-133.607,-303.642,-539.399,-402.572,-227.374,-123.398,-56.0314,62.9363,-67.1552,-87.6031,-88.8869,-127.92,-230.402,-156.688,-127.553,-68.452,},{62.0471,37.6064,43.7021,110.389,214.69,-306.048,-268.918,393.438,80.9709,537.115,1.57345,212.344,148.919,-57.4107,-66.0349,-14.5801,139.79,495.311,330.294,-0.280837,290.676,271.938,139.637,-64.9346,-132.039,-77.9089,-35.3061,93.472,43.0038,102.623,-345.338,-159.357,364.267,115.762,11.5339,-132.746,124.752,128.745,261.333,198.876,87.9607,172.044,713.189,282.099,281.38,-98.7746,67.3881,-167.884,-101.331,186.021,177.092,-215.663,-104.037,341.047,421.147,277.164,-40.7436,290.347,666.021,716.969,357.458,871.438,411.915,-227.958,-615.326,-235.042,-433.895,-365.266,-17.4332,209.925,177.294,-205.074,175.557,358.433,444.168,408.981,699.359,775.8,776.691,131.559,-383.369,-96.2732,-432.898,-302.543,-355.04,-400.648,-468.024,201.49,152.528,74.6459,-171.741,175.755,454.789,226.565,722.843,262.54,-383.735,-183.117,-321.501,-280.51,-687.782,-596.333,-105.289,85.2306,-96.6214,-401.75,-290.371,-659.053,115.288,.204537,664.95,313.666,83.5853,225.946,-290.187,-545.794,-983.866,-503.183,-136.199,-116.134,403.976,223.651,-63.9001,113.636,-19.1871,-315.688,-1.97576,135.669,275.727,705.614,-610.702,-942.901,-895.82,-376.846,-11.4304,315.697,75.5327,-297.901,-558.909,-463.474,159.565,-158.155,-372.358,-78.3941,26.6201,218.125,-487.414,-455.935,-435.562,-86.8945,-66.964,-186.597,-532.106,-461.442,-448.726,-502.513,-144.739,47.5464,-214.375,-25.82,-261.634,-213.516,-384.766,-252.321,30.2189,152.56,63.957,-132.375,-407.873,-325.868,-346.571,-232.14,-176.86,-313.985,-128.402,-287.256,-387.097,-472.292,-223.392,98.1839,241.862,337.301,516.019,99.3621,-142.102,-202.366,-184.15,9.39634,-92.4001,-523.446,17.2047,-845.965,-156.824,-341.543,-8.42841,243.536,291.369,627.248,631.57,116.955,-37.0998,5.79338,-94.2791,-133.864,-57.886,-244.431,-199.284,-502.463,166.608,-283.191,-391.996,-83.0881,230.396,553.09,641.409,275.925,-6.2031,-168.332,216.833,-231.741,250.274,232.355,-607.373,-25.3158,214.902,41.6581,-43.4539,-72.5712,445.235,142.115,462.295,249.453,8.66262,-166.178,13.1012,210.255,320.242,2.99388,101.245,57.5855,-45.8972,-95.4761,-117.078,65.618,172.544,198.035,214.128,-24.1773,58.6701,286.933,496.416,-146.085,-110.702,228.594,136.245,135.612,},{-105.456,-168.353,-209.169,-213.158,-165.168,-353.549,-236.046,-119.894,52.0052,323.584,-145.138,142.497,253.674,-58.018,108.965,-25.4146,-97.4731,-147.911,-394.095,-304.083,-62.7279,239.992,-140.691,-228.236,-566.732,-748.618,236.358,171.089,-460.149,-121.648,-183.314,-106.723,-2.56881,-362.471,-448.524,-370.845,-383.538,206.422,592.157,-8.11488,168.514,218.046,271.809,-6.90004,-71.646,-1043.15,-469.01,-126.392,-49.6875,25.4967,2.09415,-184.941,187.565,475.884,680.925,164.175,526.076,195.65,207.344,462.963,400.125,86.4898,108.496,-435.462,-475.431,-58.4329,-129.388,-364.115,234.214,292.069,319.307,292.937,427.015,109.158,449.034,108.915,135.16,552.24,524.499,-116.844,-155.951,155.017,37.7976,19.8361,43.7543,93.4203,381.858,369.601,262.856,10.0648,-112.88,-110.46,7.49942,122.393,643.789,4.47044,-338.284,-169.235,-36.1346,-3.9405,-321.084,-387.893,-163.489,-62.3924,-248.88,-739.737,-838.266,-470.119,-298.083,-177.97,657.691,507.16,48.9424,67.1009,61.9042,-635.718,-573.324,-247.746,63.2343,-64.711,286.73,-70.7036,-366.102,-457.015,-481.792,-447.918,207.176,290.496,172.625,485.944,268.656,52.7123,-266.823,117.458,203.732,-257.726,-250.74,-355.53,-224.316,-533.85,-428.289,-14.7896,211.875,336.818,54.0991,565.267,679.718,241.857,-272.263,-17.4335,-216.826,-169.3,5.59985,92.5067,203.432,-265.476,-201.037,-334.934,-258.089,-221.09,-95.6469,637.149,510.294,491.745,127.059,132.911,35.4758,225.901,414.959,496.968,269.943,166.921,-67.1593,-103.068,-342.486,-176.204,34.2659,-64.5427,320.508,475.324,215.007,-175.207,-102.804,-67.0244,423.397,204.931,299.512,192.429,-198.149,-590.939,-258.146,-639.089,92.6949,45.4775,80.4229,106.387,57.2343,-17.6985,-125.064,-420.403,91.298,339.203,354.24,38.1275,-389.641,-495.707,-238.515,-602.7,-226.943,-383.864,-468.837,-444.004,-242.858,-93.6091,-189.361,-157.725,376.014,267.117,333.639,163.8,-139.14,-668.76,-967.767,-345.992,7.68907,-164.188,106.984,-12.7777,-54.4951,-315.162,-128.644,-211.172,-126.465,386.512,509.617,426.606,221.81,-436.744,-25.2669,-34.9973,-121.817,-385.49,-323.027,113.886,316.65,-51.8403,-304.088,-407.072,-186.269,429.157,559.91,-84.4279,-130.115,-117.054,-76.2691,41.6364,}},weight[]={-688.588,1971.73,-2265.12,-2702.97,-184.873,-233.325,-145.297,-165.898,-2625.97,-146.488,1362.19,-184.636,-2630.3,5216.52,-179.688,3002.36,-124.794,-2446.24,-3213.15,-3082.83};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 512, MAXSZ = 1024;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv);

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}