#include <iostream>
#include <fstream>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <set>

using namespace std;

char image[200][1000];
bool c[200][1000];
int width = 0;
int height;

struct pixel_set{
    set<pair<int, int> > s;
    double xc, yc;
    int left, top, right, bottom;
    pixel_set()
    {
        xc = yc = right = bottom = 0;
        left = top = 1e9;
    }
    void add_pixel(int x, int y)
    {
        s.insert( make_pair(x, y) );
    }
    void merge(pixel_set &b)
    {
        for(set<pair<int, int> >::iterator it = b.s.begin(); it != b.s.end(); it++)
            s.insert(*it);
        calculate_info();
    }
    pixel_set split_half()
    {
        int mid = (top + bottom) / 2;
        pixel_set second;

        for(set<pair<int, int> >::iterator it = s.begin(); it != s.end(); it++)
        {
            if(it->second > mid)
                second.add_pixel(it->first, it->second);
        }

        for(set<pair<int, int> >::iterator it = s.begin(); it != s.end(); )
        {
            if(it->second > mid)
                s.erase(it++);
            else
                it++;
        }
        second.calculate_info();
        calculate_info();
        return second;
    }
    void calculate_info()
    {
        xc = yc = 0;
        for(set<pair<int, int> >::iterator i = s.begin(); i != s.end(); i++)
        {
            xc += i->first;
            yc += i->second;
            left = min(left, i->first);
            right = max(right, i->first);
            top = min(top, i->second);
            bottom = max(bottom, i->second);
        }
        xc /= s.size();
        yc /= s.size();
    }
};

struct digit{
    char mat[100][100];
    int width, height;

    digit(){memset(mat, 0, 100*100);}
    digit(pixel_set s)
    {
        memset(mat, 0, 100*100);
        width = s.right - s.left + 1;
        height = s.bottom - s.top + 1;
        for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
        {
            mat[it->first - s.left][it->second - s.top] = image[it->first][it->second];
        }
    }
    void print()
    {
        for(int i = 0; i < width; i++)
        {
            for(int j = 0; j < height; j++)
            {
                switch(mat[i][j])
                {
                    case 0: cout << '.'; break;
                    case 1: cout << '%'; break;
                    case 2: cout << '#'; break;
                    case 3: cout << '@'; break;
                }
            }
            cout << "\n";
        }
        cout << endl;
    }
};

int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dy[] = {1, -1, 0, 0, 1, 1, -1, -1};

bool check(int i, int j)
{
    return i >= 0 && i <= height && j >= 0 && j <= width;
}

void dfs(int i, int j, int min_color, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1 ;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(check(ni, nj) && image[ni][nj] >= min_color)
                dfs(ni, nj, min_color, cur_set);
        }
    }
}

bool inside(pixel_set s, double x, double y)
{
    return y >= s.top && y <= s.bottom;
}

bool can_merge(const pixel_set &a, const pixel_set &b)
{
    return inside(b, a.xc, a.yc) || inside(a, b.xc, b.yc);
}

void bfs_add(pixel_set &s, int len)
{
    queue<pair<int, int> > q;
    int dist[200][1000];
    memset(dist, 0x0f, 200*1000*4);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        dist[it->first][it->second] = 0;
        q.push(*it);
    }

    while(!q.empty())
    {
        pair<int, int> p = q.front();
        q.pop();
        if(dist[p.first][p.second] < len)
        {
            if(image[p.first][p.second] == 1)
            {
                bool bad = 0;
                for(int k = 0; k < 8; k++)
                {
                    int ni = p.first + dx[k];
                    int nj = p.second + dy[k];
                    if(check(ni, nj) && image[ni][nj] > 2)
                        if(s.s.find(make_pair(ni, nj)) == s.s.end())
                        {
                            bad = 1;
                            break;
                        }
                }

                if(!bad)
                    s.add_pixel(p.first, p.second);
            }
            for(int k = 0; k < 8; k++)
            {
                int ni = p.first + dx[k];
                int nj = p.second + dy[k];
                if(check(ni, nj) && image[ni][nj] == 1 && dist[ni][nj] > 100)
                {
                    q.push(make_pair(ni, nj));
                    dist[ni][nj] = dist[p.first][p.second] + 1;
                }
            }
        }
    }
    s.calculate_info();
}

void dfs_set(int i, int j, pixel_set &s, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(s.s.find( make_pair(ni, nj)) != s.s.end() )
                dfs_set(ni, nj, s, cur_set);
        }
    }
}

pixel_set make_one_component(pixel_set &s, bool bad)
{
    if(bad)
        return s;
    vector<pixel_set> sets;
    pixel_set cur;
    memset(c, 0, 200*1000);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        int x = it->first;
        int y = it->second;
        if(!c[x][y])
        {
            dfs_set(x, y, s, cur);
            cur.calculate_info();
            if(cur.s.size() > 10)
                sets.push_back(cur);
            cur = pixel_set();
        }
    }
    if(sets.size() == 1)
        return sets[0];
    return sets[1];
}

int between(int xl, int xr, int xm)
{
    return xm >= xl && xm <= xr;
}

int dist(pixel_set a, pixel_set b)
{
    if( between(a.left, a.right, b.left) || between(a.left, a.right, b.right))
        return 0;

    if( between(b.left, b.right, a.left) || between(b.left, b.right, a.right))
        return 0;

    return 1000;
}

vector<digit> split_image()
{
    vector<pixel_set> sets;
    vector<digit> res;

    pixel_set cur;

    for(int j = 0; j < width; j++)
        for(int i = 0; i < height; i++)
            if(image[i][j] >= 2 && !c[i][j])
            {
                dfs(i, j, 2, cur);
                cur.calculate_info();

                sets.push_back(cur);
                cur = pixel_set();
            }

    bool *merged = new bool[sets.size()];
    memset(merged, 0, sets.size());

    vector<pixel_set> blacks;
    int cnt = 0;
    for(size_t i = 0; i < sets.size(); i++)
        if(!merged[i])
        {
            cnt++;
            cur = sets[i];
            for(size_t j = i+1; j < sets.size(); j++)
            {
                if(can_merge(cur, sets[j]))
                {
                    cur.merge(sets[j]);
                    merged[j] = 1;
                }
            }

            if(cur.s.size() > 10)
                blacks.push_back(cur);
            merged[i] = 1;
        }

    bool bad = 0;
    while(blacks.size() > 3)
    {
        bad = 1;
        int mi=0, mj=1;
        int mdist = 1000;
        for(size_t i = 0; i < blacks.size(); i++)
            for(size_t j = i+1; j < blacks.size(); j++)
            {
                if(dist(blacks[i], blacks[j]) < mdist)
                {
                    mi = i;
                    mj = j;
                }
            }
        pixel_set a = blacks[mi], b = blacks[mj];

        blacks.erase(blacks.begin() + mj);
        blacks.erase(blacks.begin() + mi);

        a.merge(b);
        blacks.push_back(a);

        cnt--;
    }

    if(blacks.size() == 1)
    {
        pixel_set a = blacks[0];
        pixel_set b = a.split_half();

        blacks.clear();
        blacks.push_back(a);
        blacks.push_back(b);
    }

    delete[] merged;

    for(size_t i = 0; i < blacks.size(); i++)
    {
        memset(c, 0, 200*1000);
        pixel_set s = blacks[i];
        bfs_add(s, 5);
        res.push_back(digit( make_one_component(s, bad)));
    }

    return res;
}
digit scale(digit d, int w, int h)
{
    digit res;
    res.width = w;
    res.height = h;

    for(int i = 0; i < w; i++)
        for(int j = 0; j < h; j++)
        {
            res.mat[i][j] = (d.mat[i*d.width/w][j*d.height/h] > 0 ? 3 : 0);
        }

  	for(int i = 0; i < d.width; i++)
        for(int j = 0; j < d.height; j++)
        {
            int ii = (double)i * w / d.width;
            int jj = (double)j * h / d.height;
            if(d.mat[i][j] == 3)
	            res.mat[ii][jj] = 3;
        }
    return res;
}

#define SIGMOID(x) (1.7159*tanh(0.66666667*x))
double a1[]={-0.0804,
0.0196,-0.181,-0.187,-0.196,0.736,0.453,0.164,-0.0438,-0.0439,0.316,0.412,-0.144,0.0576,-0.119,0.0738,0.36,0.365,0.478,0.264,-0.0268,0.145,-0.0525,-0.0865,-0.114,0.228,0.647,0.316,0.491,0.019,0.0608,0.204,0.352,0.131,0.195,-0.0599,-0.163,0.137,0.0216,-0.0176,-0.295,-0.301,-0.216,-0.162,0.175,-0.382,-0.63,-0.378,-0.622,-0.464,0.78,0.517,-0.0829,-0.145,-0.353,0.309,0.852,0.594,0.181,-0.072,0.339,0.19,0.356,0.0458,0.0467,-0.0754,-0.172,-0.117,-0.0802,-0.4,0.187,-0.174,-0.215,-0.363,-0.308,-0.23,0.298,0.364,0.444,0.423,-0.504,0.171,0.614,0.579,0.328,-0.432,-0.337,0.139,0.382,0.305,-0.402,-0.279,-0.101,0.0115,0.361,-0.265,0.0249,0.123,0.00302,0.141};
double a2[]={0.421,
0.211,0.265,-0.135,0.0897,-0.293,0.341,0.191,0.0568,0.0395,-0.26,0.0274,-0.0793,-0.146,-0.102,-0.233,0.0899,-0.209,-0.147,-0.288,-0.327,-0.152,-0.0562,0.011,-0.0322,-0.168,0.0776,-0.0438,-0.0304,0.0479,0.0249,0.188,0.033,0.0745,-0.0776,-0.00745,0.0421,0.2,0.159,0.0816,-0.0563,0.0641,-0.0901,-0.165,-0.175,-0.0229,-0.192,0.142,-0.178,-0.212,0.258,0.242,0.121,-0.00599,-0.0378,-0.146,0.54,0.166,0.234,-0.0823,0.0361,0.188,0.228,0.102,-0.0216,-0.359,0.055,-0.205,-0.171,-0.344,-0.375,-0.0299,0.0517,-0.0981,-0.00821,0.0989,0.224,0.0831,0.0271,-0.0535,-0.0166,0.282,0.244,0.0364,-0.0205,-0.0427,0.0781,0.0995,0.0199,-0.108,0.0782,-0.0456,-0.284,-0.282,-0.256,0.0409,-0.199,-0.0373,-0.169,-0.223,-0.134,-0.122,-0.122,-0.159,-0.0407,-0.223,0.152,0.0156,0.128,0.167,-0.129,0.172,0.0973,-0.0021,0.151,0.112,0.181,0.0115,0.000625,-0.024,-0.0603,0.211,-0.202,-0.136,-0.126,-0.285,-0.0885,-0.101,-0.0231,0.129,0.19,-0.192,-0.103,-0.107,-0.262,-0.189,-0.16,-0.00507,0.109,0.031,-0.0642,-0.0713,-0.0437,0.0355,0.17,0.214,-0.123,0.0518,0.178,0.306,-0.287,-0.282,-0.265,-0.0669,0.0835,0.0134,0.0503,0.0901,0.103,-0.126,-0.137,0.203,0.00867,0.085,0.199,0.0259,0.28,0.0636,-0.0335,0.101,0.0568,0.0853,0.0245,0.0276,-0.0944,-0.335,-0.149,-0.0788,0.0913,0.18,0.059,-0.0568,0.00271,-0.112,-0.273,-0.137,-0.0598,0.229,0.188,0.0586,-0.0611,0.153,0.0394,0.0971,0.0778,0.141,-0.0318,0.0785,-0.068,-0.0933,-0.0818,-0.201,-0.11,0.0249,0.0568,0.000298,0.00252,-0.0769,-0.0781,-0.045,0.198,-0.108,-0.0816,-0.0293,0.164,0.181,-0.204,-0.0625,0.0636,0.0789,0.181,0.277,-0.0557,0.184,0.137,-0.132,-0.0747,-0.102,-0.0814,-0.00241,-0.0711,-0.0345,-0.0277,-0.0425,-0.0759,-0.0941,-0.046,0.0136,-0.0144,-0.134,0.0554,-0.06,0.00683,-0.0257,-0.0562,0.0252,-0.219,-0.187,-0.233,-0.0449,-0.196,-0.0743,-0.183,-0.0739,0.0083,0.139,-0.0272,-0.211,-0.0318,0.0736,0.189,-0.112,-0.0605,0.0308,0.059,0.167,-0.153,-0.0737,-0.00311,0.166,0.279,-0.122,-0.14,0.238,0.139,-0.274,-0.126,-0.0537,0.0233,0.257,0.457,-0.317,-0.0542,0.0616,0.232,0.0347,-0.105,-0.103,0.0906,0.0627,0.338,-0.0641,-0.00221,0.0605,0.19,0.157,-0.0354,0.00798,0.0525,0.0766,-0.167,0.0107,0.177,0.179,-0.0447,0.159,-0.0643,0.0132,0.161,0.0833,0.101,-0.0487,-0.0469,0.0272,0.194,0.172,0.0382,-0.231,-0.176,0.0311,0.159,0.186,-0.0692,-0.251,-0.313,-0.0433,-0.0622,0.0293,-0.0929,-0.039,-0.0554,-0.0474,0.0766,0.181,-0.0231,-0.155,-0.118,0.102,0.1,-0.036,-0.101,-0.322,-0.0233,0.0924,0.172,-0.0659,0.139,-0.299,-0.154,0.129,-0.108,0.0483,-0.0295,0.21,-0.00856,0.0445,-0.135,-0.00545,0.147,0.109,0.0371,-0.0355,-0.0508,0.00988,0.0383,0.0262,-0.129,-0.182,-0.0895,0.189,0.153,0.174,-0.18,-0.137,-0.0383,0.136,0.149,0.219,-0.048,0.0128,0.073,-0.0297,0.145,0.232,-0.0878,0.00424,-0.132,0.143,0.181,0.0603,0.0681,-0.195,-0.00319,0.24,0.26,-0.0511,0.114,-0.16,-0.0658,0.184,-0.409,-0.29,0.161,0.219,0.122,0.0354,-0.000354,-0.223,-0.076,0.122,0.151,0.116,0.042,-0.0743,-0.301,0.0564,-0.0237,-0.0821,0.0667,-0.107,-0.357,-0.0627,-0.00752,0.142,0.036,-0.326,0.127,0.0283,-0.0546,-0.0793,-0.0817,-0.245,0.0341,0.0858,0.0784,0.0214,0.069,-0.162,-0.241,-0.109,0.282,0.0914,0.0595,-0.0215,-0.0713,0.0181,-0.0672,-0.102,-0.136,-0.14,-0.673,-0.0474,0.126,0.0941,0.0309,0.187,0.0359,-0.256,0.177,0.317,0.0437,0.131,-0.122,-0.242,-0.195,0.193,0.00665,0.0247,0.0208,-0.164,-0.159,-0.11,-0.0361,0.0497,-0.0238,-0.0337,0.159,0.0772,0.204,0.121,0.144,-0.256,0.152,0.263,0.111,0.111,-0.0272,-0.251,-0.105,0.0827,0.21,0.168,0.118,-0.172,-0.167,-0.165,0.0204,0.119,0.00151,-0.315,0.144,
0.029,0.068,-0.0342,-0.0332,0.133,0.045,0.0258,0.083,0.281,0.138,-0.0585,-0.15,0.00371,-0.00581,0.115,-0.0369,-0.227,-0.0693,-0.094,-0.164,0.2,-0.153,-0.189,-0.0623,-0.122,-0.0858,-0.182,-0.322,-0.223,-0.0753,0.00905,0.0824,0.0571,-0.035,-0.0685,-0.0699,0.211,0.0981,0.362,0.148,-0.206,0.0218,-0.0375,-0.0657,0.144,0.0289,-0.145,-0.151,-0.00894,0.0356,0.11,-0.0953,-0.111,-0.107,-0.0309,0.0597,-0.0108,0.0788,-0.00785,-0.0128,0.00394,0.0285,-0.0124,0.286,0.296,0.0476,-0.0865,-0.0719,-0.0819,-0.118,0.0494,-0.179,-0.0411,-0.0406,-0.0727,-0.115,-0.186,-0.174,-0.0915,-0.0199,-0.0703,0.007,0.0253,-0.0717,0.0394,-0.0511,0.0378,0.157,0.259,0.139,-0.0626,-0.125,-0.0667,-0.136,0.192,-0.173,-0.112,-0.0904,-0.07,-0.00457,0.204,0.129,-0.0332,0.015,0.203,0.155,-0.116,-0.188,-0.0118,0.0179,0.287,0.0486,-0.0385,-0.0598,-0.0697,0.158,0.0331,-0.0911,-0.0803,-0.06,-0.282,0.14,-0.0867,-0.152,0.312,0.263,0.0571,-0.0924,0.128,0.0681,-0.0591,0.0695,0.00596,-0.00452,0.0849,0.0726,-0.0381,-0.0233,0.0162,0.0185,0.0397,-0.057,0.018,0.0257,0.00458,0.213,0.241,0.0907,-0.129,0.336,0.459,0.0956,-0.00762,0.0977,0.235,0.0404,-0.0124,-0.0354,-0.0685,-0.0267,0.176,0.123,-0.13,-0.054,-0.000601,0.179,-0.0928,-0.0155,-0.103,0.0395,0.106,0.0769,-0.102,-0.0272,0.399,0.14,-0.108,0.163,0.12,0.216,-0.0442,-0.114,-0.0446,-0.0665,0.21,0.0846,-0.0768,-0.00257,0.0529,-0.0388,0.0499,-0.0399,-0.107,-0.12,-0.00797,0.0908,0.00901,0.0486,-0.201,0.3,0.131,0.11,-0.0511,0.0535,0.0222,0.0185,0.0868,-0.0237,0.00396,-0.0473,-0.19,-0.00135,-0.0681,-0.029,-0.0647,-0.209,-0.131,0.0475,-0.1,0.00175,-0.341,-0.0982,-0.0622,0.127,0.193,0.11,0.107,-0.113,-0.187,-0.211,0.214,-0.0426,0.056,0.0976,0.165,0.00586,0.0782,0.0769,0.105,-0.0252,-0.0598,-0.0311,-0.0946,-0.139,-0.107,0.193,0.0801,-0.0201,0.047,0.537,0.368,0.00464,-0.042,-0.142,-0.0868,0.251,0.0805,0.0278,-0.154,-0.107,0.00918,0.0301,0.0011,0.043,-0.0358,-0.228,0.0227,-0.13,-0.0605,0.00774,-0.171,-0.196,-0.0707,-0.028,0.233,0.173,0.154,-0.106,-0.413,-0.559,0.257,0.035,0.0714,0.0625,-0.0312,0.161,0.127,0.119,-0.128,-0.233,0.022,0.0255,-0.0595,-0.0373,-0.378,0.12,-0.0952,0.0335,0.0332,-0.16,-0.245,-0.0426,0.0282,0.152,0.222,0.0945,-0.0534,0.00192,-0.0241,-0.0753,0.107,0.119,-0.0442,-0.039,-0.148,0.088,0.151,0.0342,-0.041,-0.132,0.44,0.0519,-0.00408,0.0791,-0.197,-0.00342,-0.00438,0.156,0.247,0.164,-0.179,0.0081,0.0439,-0.0457,0.142,0.0139,-0.124,0.0548,0.11,-0.0806,-0.116,0.104,0.00382,0.0949,0.0649,0.0247,-0.0744,0.0642,-0.068,-0.588,-0.326,0.0557,0.104,0.193,0.172,0.029,-0.112,0.0512,0.0649,-0.0103,0.0722,-0.0403,-0.0883,0.0656,-0.0213,0.161,0.158,0.0835,-0.0568,-0.0248,0.205,0.112,0.0771,-0.0916,-0.0822,0.12,0.139,0.135,0.438,0.4,-0.229,-0.0342,0.00471,0.0233,0.138,-0.107,-0.0439,0.0871,0.0343,0.0317,0.0624,0.0139,-0.0546,-0.0361,0.0955,-0.049,-0.0564,-0.0643,-0.136,-0.255,-0.065,-0.0882,0.0379,0.125,0.201,-0.286,-0.202,-0.0413,-0.000881,-0.105,-0.166,-0.129,0.0234,0.0234,0.0285,-0.0157,-0.0222,0.173,0.261,-0.00771,-0.0647,0.179,0.127,0.104,0.258,0.0862,-0.0806,0.0111,0.122,0.0937,0.0332,0.129,-0.0932,-0.171,0.123,-0.0442,-0.163,-0.151,-0.183,-0.061,-0.117,0.093,-0.00889,-0.164,-0.275,0.391,-0.0214,0.235,0.0425,-0.192,-0.037,0.05,0.153,0.298,0.285,-0.299,-0.0448,-0.0554,-0.0361,-0.0376,-0.235,-0.336,-0.141,-0.0874,-0.0267,-0.154,-0.112,0.16,-0.06,-0.0139,0.0275,0.0117,0.0259,0.365,0.169,0.00741,0.0548,0.16,0.313,0.135,-0.178,-0.0163,0.0281,0.0362,0.152,-0.258,-0.141,0.00698,-0.0249,-0.244,-0.00779,0.119,-0.0956,0.124,-0.0144,0.179,0.00142,0.343,0.0534,0.299,
0.102,0.0945,0.0881,0.133,-0.107,0.211,0.244,0.045,-0.0639,0.215,0.0642,-0.0106,0.0723,-0.0261,-0.054,-0.0356,-0.102,-0.148,-0.166,-0.0177,0.16,-0.324,-0.262,-0.316,-0.121,-0.105,0.00818,0.0359,-0.0874,-0.0172,0.111,-0.021,-0.0263,0.067,0.125,0.201,0.155,0.2,0.136,-0.107,-0.016,0.0569,-0.0918,0.103,0.0255,-0.0969,-0.0733,-0.149,-0.0427,0.283,0.308,0.0397,0.0629,0.000776,-0.0068,0.342,0.123,0.141,0.0466,0.176,0.24,0.129,0.149,0.0671,-0.149,-0.0252,-0.0165,-0.0494,-0.0767,-0.028,0.125,-0.17,-0.154,-0.214,0.019,0.0463,-0.0311,-0.0104,-0.0358,0.0472,0.226,0.0284,-0.146,0.215,0.269,0.148,-0.0112,0.0953,0.0336,-0.0492,-0.0324,-0.234,-0.116,0.0508,-0.153,-0.154,-0.175,-0.254,-0.0318,-0.241,-0.0252,0.0703,0.122,0.079,0.176,-0.0953,-0.109,0.0983,0.0679,0.219,0.0286,0.0421,-0.0409,0.0811,-0.0873,-0.104,0.152,-0.0164,-0.101,0.0761,0.0333,0.0377,0.00892,-0.0275,-0.0624,0.0812,0.0329,0.145,-0.0677,-0.0994,-0.00581,-0.00468,0.141,0.0499,0.224,0.0552,-0.0878,-0.0283,0.0939,0.031,0.132,0.0221,-0.0119,-0.0827,-0.0937,0.146,0.0138,-0.137,-0.159,-0.32,0.062,0.192,0.162,0.258,0.175,-0.11,-0.0426,0.0784,0.122,0.192,-0.0243,-0.0762,-0.0112,0.0534,0.0205,0.0202,0.138,-0.0676,0.0687,-0.0746,-0.0524,0.0506,0.0578,-0.0249,0.147,0.142,0.0877,0.27,0.233,0.0696,-0.157,0.115,0.167,0.152,0.244,0.0279,-0.0352,0.0528,0.0181,-0.0367,0.14,0.0546,0.0309,-0.0669,-0.236,0.192,0.0981,0.082,-0.097,-0.0945,0.0387,-0.0208,-0.075,-0.264,-0.339,-0.242,-0.0139,0.029,0.128,-0.0697,-0.0342,-0.0441,0.00282,0.00994,-0.0315,0.106,0.101,0.0232,0.164,-0.145,0.64,0.301,0.153,-0.0109,-0.0556,0.0646,-0.0722,-0.0948,0.16,0.319,0.0328,0.277,0.0667,-0.0228,-0.335,-0.0477,0.0652,0.121,0.0406,-0.0555,-0.134,0.0508,0.131,0.0616,0.0902,0.0412,-0.156,-0.0652,0.116,-0.128,-0.362,-0.28,-0.152,-0.0425,0.0435,-0.0693,0.0626,0.0828,-0.0711,-0.175,-0.223,-0.0608,-0.0546,-0.00989,0.0248,0.0708,0.0706,0.0575,0.0358,-0.119,0.256,-0.00756,0.0767,0.00613,-0.246,-0.0975,-0.157,-0.0672,0.0934,0.0833,0.00855,0.106,0.0557,-0.16,-0.353,-0.197,-0.0907,-0.0244,-0.0312,0.0529,-0.0225,-0.02,-0.176,-0.0148,0.202,0.0833,-0.0811,-0.122,-0.175,-0.0761,-0.0714,-0.0293,0.073,-0.185,0.0425,-0.0612,-0.0243,0.0874,0.0878,0.149,-0.0898,0.0386,-0.0623,0.0532,0.119,-0.0709,0.0275,0.0117,0.11,0.0796,0.377,0.112,0.309,0.361,0.106,0.109,-0.093,-0.12,-0.0659,-0.0556,0.118,0.0309,0.0572,0.0985,-0.0595,0.118,0.12,-0.000751,0.0213,0.23,-0.0458,-0.0255,0.00676,0.0205,-0.173,-0.206,-0.285,-0.315,-0.428,-0.112,-0.0935,-0.0881,-0.184,-0.147,-0.023,-0.0902,-0.212,0.0424,0.268,0.113,0.0152,0.00154,0.0173,-0.0214,0.221,0.0223,0.0637,0.0823,-0.106,-0.091,0.0273,0.00313,0.0388,0.00816,-0.087,-0.0799,-0.1,-0.193,-0.218,-0.0852,-0.186,-0.281,0.0411,0.155,0.0459,-0.0487,-0.169,-0.0995,0.0134,0.171,-0.134,0.0147,0.0442,-0.0189,0.0646,0.00524,0.0344,0.129,0.356,-0.0874,-0.242,-0.167,0.00885,-0.0867,0.031,-0.118,-0.0308,-0.12,0.148,0.00419,-0.2,0.0146,-0.0573,0.00012,0.0429,0.0028,0.103,0.288,0.121,0.0098,0.394,0.31,0.11,0.117,-0.0765,-0.032,0.0578,0.0216,0.0565,0.165,0.0345,0.0374,0.0904,-0.0161,-0.0948,0.0107,0.0106,0.0595,-0.089,-0.118,-0.278,-0.0467,0.0451,0.0118,-0.0012,0.0731,-0.14,0.0232,0.0554,-0.288,-0.377,-0.138,-0.0363,0.0503,-0.0782,-0.212,-0.166,-0.198,-0.0148,0.0399,-0.339,0.00316,-0.0629,0.0511,0.014,-0.124,0.0416,0.173,0.0181,0.0517,0.14,0.0309,0.16,0.247,-0.305,-0.11,-0.0094,-0.106,0.176,0.441,-0.0927,-0.027,0.147,-0.201,-0.00824,0.027,-0.0723,0.203,-0.0963,-0.0156,-0.11,0.0716,0.0191,0.0792,-0.0572,0.113,0.12,0.115,0.0557,0.323,
0.237,0.149,0.166,0.129,-0.0438,0.0622,0.0908,-0.108,-0.00322,-0.0252,0.155,0.0445,-0.0394,-0.0239,-0.064,-0.0854,-0.0374,-0.058,-0.0909,-0.0162,0.167,0.125,0.0909,0.00591,0.396,0.221,0.0976,0.166,0.0967,-0.0105,0.134,-0.0484,0.136,-0.016,-0.0653,0.155,0.00644,-0.056,-0.00192,-0.0763,-0.115,-0.0492,0.0229,0.0277,0.167,-0.0187,-0.113,-0.242,-0.232,0.53,0.52,0.211,0.328,0.224,0.00568,0.189,-0.0354,0.0264,-0.129,-0.191,-0.00674,-0.0619,-0.212,0.0544,-0.0905,-0.00848,-0.0132,-0.123,-0.0872,0.165,-0.039,-0.138,-0.0598,-0.0633,0.319,0.145,0.196,0.0936,0.0547,-0.0793,0.0391,-0.0675,-0.107,-0.094,-0.2,0.121,-0.228,-0.141,0.0161,0.0425,-0.153,-0.0976,-0.146,-0.00505,0.0541,-0.0898,-0.0882,-0.122,-0.117,-0.0901,0.071,0.176,0.183,0.00225,-0.071,-0.0957,-0.109,0.12,0.05,0.106,-0.0419,-0.0397,0.0854,0.0929,0.034,-0.0719,0.154,0.0782,0.187,0.147,-0.144,0.0529,-0.0226,0.0311,0.0695,-0.0193,0.0623,-0.00852,-0.209,-0.289,-0.00834,0.0687,-0.00703,0.0789,0.101,-0.0395,-0.0583,-0.0628,0.032,0.163,0.0569,-0.161,0.0707,0.0237,0.111,0.0639,0.103,0.017,0.0172,-0.134,0.0929,0.0631,0.124,-0.0369,-0.123,-0.0593,0.0805,0.224,0.12,0.147,-0.0457,0.0421,0.0134,0.0264,0.136,-0.0177,0.0443,0.133,0.168,0.0595,-0.0504,0.189,0.158,0.0294,0.0763,0.103,0.125,0.0295,-0.251,-0.257,-0.0911,0.104,0.0298,0.0452,0.0495,0.0318,-0.00369,-0.0172,0.0865,0.0942,0.115,0.106,0.14,0.0478,-0.0383,0.219,0.226,0.0955,-0.0569,0.00896,-0.0703,-0.0138,0.128,0.216,0.171,0.0372,-0.0365,0.0472,-0.0412,0.0218,-0.052,0.184,0.12,-0.0251,-0.0233,0.00796,0.0706,0.0317,0.00695,-0.147,0.138,-0.042,-0.11,-0.265,-0.0231,-0.106,-0.142,0.0771,0.0285,-0.0684,0.161,-0.0764,-0.0863,-0.103,0.146,0.101,0.141,0.0786,0.026,-0.133,-0.109,0.0894,0.118,0.0789,-0.0901,0.142,0.12,0.206,0.23,-0.0777,0.0382,-0.0929,0.0517,0.342,0.178,-0.0626,0.0658,0.0703,0.147,0.0519,-0.0183,0.0886,0.088,0.0344,0.0127,-0.0289,0.0911,0.0279,-0.00488,-0.141,0.256,0.177,-0.0543,-0.00723,0.039,-0.0982,0.0756,0.255,0.295,0.174,0.195,-0.0441,0.0816,0.0223,0.226,0.168,0.206,0.0304,-0.106,-0.2,0.0433,-0.00857,0.00258,-0.0822,-0.159,0.0987,-0.0278,-0.0647,-0.156,0.234,0.117,0.175,-0.098,-0.0613,-0.267,-0.068,0.0245,0.0784,0.0494,-0.0321,-0.0544,-0.00454,0.16,0.0354,0.0148,-0.0916,-0.0562,0.0374,0.256,0.0419,0.0633,0.258,0.252,0.302,0.315,0.222,0.00613,-0.0638,-0.0792,-0.161,0.239,0.089,-0.0319,0.0471,0.0103,0.0108,0.0579,0.133,-0.0677,0.00376,-0.0767,-0.0566,-0.0526,-0.11,-0.144,0.0468,0.0644,-0.102,-0.154,0.436,0.207,0.0853,-0.126,-0.208,-0.376,-0.0672,-0.0293,-0.0233,-0.0853,-0.143,-0.167,-0.0432,0.0694,-0.00583,-0.108,-0.0326,-0.0181,0.103,0.088,0.0827,0.0841,-0.0672,-0.0353,0.287,0.212,0.128,-0.0727,-0.192,-0.0905,-0.229,0.077,-0.135,0.056,-0.126,0.0854,-0.136,-0.0596,-0.069,-0.0323,-0.0177,-0.0596,0.0246,-0.082,0.00497,-0.0808,0.152,0.0318,0.145,0.1,-0.295,-0.0464,0.063,0.119,-0.012,0.0753,-0.00919,-0.243,0.00381,-0.0015,0.19,-0.0603,-0.154,-0.109,-0.051,0.0184,0.08,-0.0712,-0.103,0.0783,-0.00758,0.234,0.147,-0.194,-0.0956,-0.0596,0.149,-0.111,-0.138,0.0649,0.111,-0.108,0.1,0.153,0.119,0.0556,-0.108,0.0266,0.0377,-0.0368,0.101,-0.173,-0.0323,0.0538,0.103,-0.0926,0.112,-0.0629,-0.0491,0.105,-0.152,0.0244,0.195,0.0677,0.115,0.201,-0.201,-0.0994,-0.0161,0.217,0.154,0.0104,-0.174,0.0342,-0.0468,0.23,-0.133,0.00124,-0.133,0.0416,0.00918,0.132,-0.067,-0.0156,0.0221,0.0692,0.102,0.111,0.123,0.204,0.0526,-0.18,0.0799,0.174,0.179,0.0949,-0.234,-0.12,0.143,0.178,0.146,0.0333,-0.109,-0.115,0.12,0.0751,-0.0474,-0.0775,0.082,-0.0151};
double a3[]={-0.00551,
-0.135,-0.0395,-0.101,-0.0734,0.135,0.0773,-0.144,-0.0203,0.208,0.136,-0.187,-0.0628,0.0265,-0.133,0.0594,0.058,0.233,-0.0449,0.172,-0.137,0.159,-0.157,-0.0902,-0.052,0.215,0.0753,-0.13,-0.0277,-0.0998,0.193,-0.0116,-0.0227,-0.104,0.251,0.211,0.0426,-0.128,0.126,-0.0374,0.241,0.141,0.227,-0.0253,0.193,0.154,0.159,0.0908,0.356,0.184,0.12,-0.0198,0.0829,-0.0255,0.178,0.0146,0.112,0.305,0.0907,0.0527,0.0394,0.122,-0.0279,-0.204,0.0378,-0.0503,0.0378,-0.22,0.104,-0.0328,-0.12,-0.137,-0.279,-0.141,-0.195,-0.117,0.078,-0.0474,-0.163,0.0203,-0.104,0.0944,-0.0381,-0.106,-0.436,-0.219,0.309,-0.0456,-0.0724,0.0809,-0.00787,0.158,-0.0726,0.0122,0.0523,0.122,0.589,0.172,-0.000951,-0.0272,0.0588,-0.0587,-0.0411,-0.145,0.0565,0.0363,-0.217,-0.154,0.179,0.0151,-0.18,-0.147,0.098,-0.0475,-0.152,0.0881,0.147,-0.105,-0.159,-0.0598,-0.428,-0.0806,0.123,-0.101,0.0674,-0.0107,-0.0466,0.0633,0.185,0.0028,0.0999,0.0741,-0.258,0.0908,0.109,-0.0929,0.118,-0.0134,0.0797,-0.0101,0.159,-0.0074,0.0108,-0.058,0.187,-0.00339,-0.368,-0.00873,0.155,-0.0203,-0.0404,-0.0803,-0.0193,-0.0163,0.238,-0.0406,-0.0665,-0.137,0.0284,0.114,0.042,-0.0169,0.129,-0.00544,0.0426,0.181,0.341,0.18,0.0955,0.167,-0.435,0.187,0.0339,0.0595,0.193,0.0122,0.0841,-0.027,0.215,-0.0593,-0.478,-0.0912,-0.088,-0.194,-0.0527,0.0716,-0.0947,-0.074,0.11,0.139,0.0717,0.176,0.00475,0.0351,0.0398,0.00489,0.097,0.188,-0.129,0.0331,0.233,-0.0662,-0.106,0.0962,0.0257,0.0876,-0.21,-0.0833,0.0702,-0.109,-0.0374,0.0482,0.0294,0.0388,-0.202,-0.208,-0.514,0.0407,0.234,-0.176,0.115,-0.0473,-0.00718,0.0369,-0.0338,0.102,0.0929,0.189,0.0471,0.014,0.089,0.0376,0.184,0.0668,0.092,-0.00556,-0.0484,0.255,0.0488,-0.282,0.0958,-0.0846,-0.0141,-0.0915,0.181,-0.0414,0.0146,0.0756,-0.402,-0.141,0.374,-0.127,-0.0729,0.00909,0.34,-0.0854,0.0144,-0.056,-0.196,-0.0423,0.0575,-0.152,0.0949,-0.0956,0.0386,-0.0188,0.0297,0.0353,-0.0912,0.156,0.0497,0.208,0.142,0.22,-0.138,0.106,0.0749,0.256,0.0108,-0.039,0.193,0.0656,0.313,-0.158,0.209,0.019,0.107,-0.166,0.338,0.0112,0.23,0.108,0.232,0.016,0.0132,0.0274,0.21,-0.0285,0.0805,-0.0365,0.13,-0.0628,0.0151,-0.121,-0.113,0.0836,-0.1,0.0299,-0.0206,-0.0659,0.0117,-0.00699,-0.133,-0.0307,-0.093,-0.183,0.0516,-0.0557,0.134,-0.0959,0.0503,-0.00845,0.244,-0.0964,-0.248,0.0647,-0.0231,-0.264,0.101,0.17,0.271,-0.0955,0.0757,0.101,0.21,-0.00102,0.274,-0.0162,0.0807,0.15,-0.0102,-0.13,-0.241,-0.0298,0.144,-0.0248,-0.094,0.036,-0.0974,0.195,0.174,0.149,0.126,-0.036,0.134,-0.133,0.285,0.203,0.0347,0.00101,0.0701,0.0288,-0.283,-0.166,0.0293,-0.104,-0.128,-0.0861,-0.0612,0.239,0.0537,-0.09,0.159,0.119,-0.0587,0.0551,-0.00779,0.0243,-0.0741,-0.0353,-0.0693,0.0886,0.257,0.0824,-0.105,-0.0467,-0.386,0.0686,0.128,0.157,0.0592,0.00654,0.0501,0.0509,0.115,-0.235,-0.116,-0.124,-0.0519,0.149,-0.165,0.00203,-0.0358,0.000301,-0.0323,0.139,-0.0175,0.386,0.0423,0.00253,-0.0654,-0.0155,-0.162,-0.0705,0.147,0.0848,-0.0418,-0.111,-0.125,-0.0511,0.0331,0.121,-0.129,-0.0427,-0.334,0.00735,0.0624,-0.0892,-0.112,0.237,-0.123,-0.403,0.0408,0.00103,0.119,0.144,-0.334,-0.061,-0.0907,0.0638,-0.0456,-0.0154,-0.0303,-0.0869,0.00455,-0.0124,-0.0423,0.0464,-0.0509,0.0135,-0.0642,0.074,-0.00124,0.159,-0.0981,-0.223,-0.208,-0.0897,-0.286,-0.0451,0.00762,-0.137,0.022,-0.0286,-0.171,0.0912,0.13,0.289,0.233,0.156,0.217,0.0535,0.202,0.276,0.00347,-0.07,0.111,0.161,-0.154,0.0749,0.00475,0.0323,-0.0381,0.026,0.127,0.0105,0.0862,0.0762,0.263,0.0158,0.161,-0.00717,-0.0952,0.0462,0.233,0.11,-0.085,0.00497,-0.155,0.0519,-0.0676,
-0.208,-0.0784,0.0502,-0.182,-0.0026,0.193,-0.0232,0.0331,-0.0679,-0.0217,-0.0853,-0.149,0.309,-0.497,-0.18,-0.157,0.0296,0.102,0.0691,-0.0465,-0.143,-0.153,-0.0977,-0.0334,0.00382,-0.272,-0.248,-0.154,-0.0596,-0.0223,-0.051,0.034,0.0548,0.0547,-0.0339,-0.124,-0.0817,-0.0885,0.00968,0.124,-0.13,-0.0203,0.159,0.135,0.0836,-0.0487,0.25,0.00689,-0.00936,-0.0922,-0.0798,0.179,0.049,0.0724,0.078,0.063,0.106,0.106,-0.104,0.045,-0.28,0.111,0.0187,0.0576,-0.107,-0.158,-0.0586,-0.0301,-0.0239,0.0469,0.0569,-0.152,0.0198,-0.043,0.0319,-0.138,-0.0774,-0.0196,-0.0342,0.0349,0.0302,-0.0577,0.0803,0.0167,0.0519,0.0295,0.0209,-0.0595,-0.127,-0.0747,-0.0496,0.0821,-0.0644,-0.0687,-0.00561,-0.0945,-0.0289,-0.0778,-0.00067,0.152,0.101,-0.0328,0.0688,0.107,0.107,-0.104,0.048,0.0818,0.0449,-0.0393,-0.247,0.025,0.0374,-0.0916,0.0345,0.0135,-0.00321,0.06,-0.109,-0.242,0.0165,-0.127,-0.102,0.0727,0.025,0.0784,-0.0855,-0.111,-0.0368,0.017,0.102,-0.0955,-0.125,-0.0954,0.046,-0.0809,-0.0359,-0.131,-0.224,-0.00289,-0.144,-0.0651,-0.0506,-0.0744,-0.0389,-0.128,-0.0286,-0.0876,-0.152,0.0776,-0.0358,0.0172,-0.113,0.0476,0.0505,-0.119,0.0389,-0.129,0.0774,0.219,-0.0452,-0.079,-0.0261,0.00467,0.00614,-0.0403,-0.0188,0.0619,0.0314,-0.013,0.0226,-0.0445,-0.0777,-0.0693,-0.00263,0.0872,-0.0386,0.0846,0.00696,-0.0964,-0.012,0.0887,-0.147,-0.158,0.0704,-0.00246,-0.0816,0.0497,0.15,-0.0262,0.0689,0.0359,-0.11,-0.0282,-0.131,0.101,-0.0245,-0.0563,-0.173,0.13,-0.088,0.0802,0.0931,0.0117,-0.166,-0.0805,0.0725,-0.0518,0.0918,0.212,-0.00736,-0.0178,0.199,0.0734,-0.0406,-0.183,-0.169,-0.187,0.0378,0.293,-0.11,-0.142,-0.0318,-0.23,-0.0225,-0.113,-0.0901,-0.00965,-0.154,-0.00642,-0.0097,-0.155,-0.131,0.0858,-0.101,-0.0484,0.142,-0.155,-0.00327,-0.0772,-0.012,0.102,0.163,0.299,0.263,-0.0394,0.066,0.00754,0.0178,0.067,0.0594,-0.12,-0.0688,0.195,-0.0742,-0.212,-0.288,-0.26,0.0354,-0.0501,-0.0478,-0.0736,0.104,-0.14,0.0877,-0.0109,0.112,-0.322,-0.164,-0.168,-0.05,-0.275,-0.0431,-0.0137,0.034,-0.177,-0.0187,0.0722,-0.0657,0.158,-0.0712,-0.102,0.113,0.0345,-0.18,0.0681,0.0108,0.0219,0.0676,0.0527,0.0532,0.107,-0.038,0.0315,-0.0607,0.0811,-0.0199,0.0509,-0.0814,0.0878,0.0274,-0.0942,-0.0208,0.0732,-0.188,-0.294,-0.111,-0.109,0.0594,-0.0488,0.0169,0.0614,-0.0644,-0.0409,0.0152,-0.169,-0.111,-0.0677,0.182,-0.132,-0.0609,-0.0409,0.0505,0.0294,0.0485,-0.122,0.0254,-0.143,0.0667,0.141,0.0416,-0.0219,-0.041,0.0207,0.0723,0.00155,0.0873,-0.0658,-0.0107,0.0793,0.185,0.0462,-0.109,-0.0821,0.0779,0.0257,-0.127,0.0246,-0.16,-0.0401,-0.182,0.000893,-0.109,-0.161,-0.0388,0.06,0.00107,-0.00782,0.0931,0.0881,0.0752,-0.0529,-0.137,-0.0651,0.0459,0.222,-0.0235,0.0869,0.0208,0.00788,0.0931,0.0313,0.0763,0.0414,0.194,0.0144,0.0786,0.0831,-0.0236,0.113,0.0206,-0.00221,-0.0212,0.0935,0.276,0.0458,-0.228,-0.0851,-0.013,-0.0175,0.125,-0.0213,-0.0901,-0.0719,0.0248,-0.122,0.157,-0.0621,0.12,0.193,0.18,0.00297,0.0419,-0.081,-0.0797,0.0705,-0.0575,0.0948,-0.0458,0.0301,0.043,-0.12,-0.125,-0.175,0.016,0.111,-0.0818,0.0307,0.0349,-0.07,-0.043,0.14,-0.0338,-0.0132,-0.163,0.186,-0.0944,0.0013,-0.0619,-0.0374,-0.0571,0.121,0.0059,0.0413,-0.00119,0.0324,-0.018,-0.0243,-0.145,0.0362,0.156,-0.138,0.0598,0.129,0.0787,0.012,0.077,-0.00492,-0.23,-0.0273,-0.101,0.00742,-0.0585,-0.142,-0.0071,-0.0266,0.00211,-0.00376,-0.128,0.134,0.18,0.0093,-0.0601,0.182,0.249,0.328,0.0413,0.166,0.0743,0.178,0.135,-0.14,0.0672,-0.0494,0.207,0.0618,0.0574,0.182,-0.134,0.0254,0.0413,-0.0659,0.275,-0.0866,0.0682,-0.152,0.00336,-0.0446,-0.00209,-0.0716,-0.134,0.0165,0.176,-0.0329,-0.227,0.121,0.0649,0.0245,0.132,0.0477,
0.229,0.147,-0.111,-0.142,0.0769,-0.14,-0.303,0.219,-0.104,0.116,-0.412,0.234,0.115,0.129,-0.116,0.329,-0.0068,0.0395,-0.141,0.0415,0.257,0.286,-0.235,-0.0548,-0.00552,-0.369,-0.077,0.111,0.237,0.027,-0.00796,0.0856,0.165,0.121,0.0117,-0.0697,-0.194,0.0168,0.162,-0.0736,0.0203,0.0625,-0.239,-0.177,0.181,0.105,-0.0958,-0.111,0.0504,0.199,0.0143,-0.00136,-0.00264,0.0442,0.0767,0.209,-0.0464,-0.0176,0.0936,0.0659,0.0876,-0.287,-0.00247,0.312,0.0393,-0.161,-0.00822,0.348,-0.0508,-0.0325,-0.0944,-0.112,-0.223,-0.0318,-0.0961,0.202,-0.0607,-0.245,-0.071,0.0105,0.343,-0.00725,-0.124,0.0596,-0.0869,-0.0504,0.0913,0.0132,0.0461,0.201,-0.214,0.0618,-0.173,0.214,0.0819,-0.0879,-0.077,-0.121,-0.121,0.0741,-0.0464,0.126,-0.212,-0.166,-0.118,-0.251,0.0612,-0.0591,0.00218,0.0284,0.0188,0.029,-0.192,-0.442,0.297,-0.0477,-0.168,-0.0525,0.0459,-0.0718,-0.154,-0.146,-0.063,-0.043,-0.112,-0.0494,-0.367,-0.0869,-0.125,-0.244,0.112,0.00957,-0.162,-0.066,-0.055,-0.0628,0.0245,-0.105,0.0512,-0.0795,0.0935,0.0309,-0.327,0.0199,-0.19,-0.00422,0.0451,-0.231,0.0685,-0.137,-0.254,0.0482,0.0158,0.129,0.206,-0.0514,0.000348,0.171,-0.069,0.107,-0.103,0.0339,-0.0616,-0.000962,0.0976,0.118,-0.0602,-0.0629,0.127,-0.0783,0.126,0.126,0.0974,0.0304,-0.0455,-0.127,0.0622,-0.000987,-0.121,-0.0728,0.0935,0.0494,-0.0846,-0.0412,0.195,-0.108,-0.137,0.308,0.0524,0.348,0.0716,-0.0784,0.0546,-0.0422,-0.051,0.101,0.321,-0.068,-0.264,0.193,0.106,-0.229,-0.0733,-0.124,-0.0605,0.0276,-0.1,-0.267,-0.108,-0.267,-0.223,-0.394,0.0491,0.327,-0.0194,-0.000666,-0.1,0.147,-0.0289,0.114,-0.00925,0.121,0.173,-0.302,0.0488,0.272,0.00346,0.0776,-0.0655,-0.0758,0.054,0.0879,-0.021,-0.194,-0.0353,-0.326,-0.273,-0.218,0.158,-0.12,-0.199,-0.142,0.248,0.0436,0.0664,-0.305,0.269,-0.74,-0.0923,-0.501,-0.0417,-0.434,0.0956,0.118,0.0618,-0.544,-0.252,-0.00232,-0.0621,-0.0496,-0.104,-0.223,0.135,-0.141,-0.277,-0.0465,0.0686,0.0505,-0.0391,-0.195,0.0798,0.268,-0.112,-0.219,-0.00427,0.0576,0.0322,0.00601,-0.0372,-0.0442,-0.0546,-0.151,0.0706,0.701,-0.371,-0.477,0.0126,-0.0581,-0.138,0.0307,-0.159,0.145,-0.217,-0.111,-0.0634,-0.501,-0.228,0.258,0.126,-0.133,0.0474,0.121,0.08,-0.151,0.229,0.0446,0.132,-0.325,-0.249,0.0451,0.0252,-0.0285,0.0359,-0.0908,0.081,-0.0701,-0.0983,0.245,0.107,0.159,-0.202,-0.271,0.0257,0.105,0.0711,-0.0161,-0.21,0.0899,0.00346,-0.174,0.0166,-0.31,-0.341,-0.483,-0.0591,-0.12,0.0292,0.0791,0.0385,-0.204,0.0396,0.0297,0.308,-0.0508,0.448,0.754,-0.0727,-0.106,-0.149,-0.148,-0.0421,0.00993,0.111,-0.192,-0.158,-0.172,0.165,-0.113,0.0875,-0.0668,-0.000459,0.00428,0.0746,-0.105,0.0306,-0.171,-0.15,-0.359,-0.0314,0.399,0.0477,0.0167,-0.138,-0.0328,0.0328,-0.0152,0.177,0.0149,0.0433,0.466,-0.00229,-0.0369,0.125,0.0614,-0.12,0.00154,-0.0234,0.0535,0.133,-0.127,-0.0521,-0.00286,-0.00631,-0.309,0.103,0.0689,0.205,0.0408,0.0343,-0.0582,0.165,0.307,0.125,-0.0747,-0.208,0.0385,-0.125,0.0792,-0.0581,0.174,-0.104,-0.0244,-0.0753,0.275,0.087,0.517,-0.103,-0.165,0.139,0.073,0.123,-0.0491,0.0803,0.17,-0.0646,0.00656,-0.115,-0.407,-0.21,-0.132,0.0544,-0.0491,-0.095,-0.0219,0.0984,-0.0952,-0.00518,0.0433,0.269,0.239,-0.0395,0.0528,0.0976,-0.126,0.0552,0.316,-0.0344,-0.204,0.254,0.133,0.175,0.0339,-0.0274,-0.0191,-0.143,0.0948,0.152,0.124,0.0582,0.0179,0.0345,-0.129,0.243,-0.024,0.206,0.111,0.0892,0.0225,-0.0499,0.0274,-0.0697,-0.0537,0.0171,0.141,-0.00535,0.0565,0.05,0.0364,-0.0866,0.224,0.241,0.0602,0.189,0.155,0.0519,0.404,0.373,0.346,0.14,0.0531,0.156,0.0463,0.0397,-0.0598,-0.00323,0.0263,0.00955,0.0102,0.108,-0.0409,
0.101,0.00694,0.00542,0.0617,-0.158,0.0461,-0.134,-0.115,0.281,-0.0908,0.051,-0.249,-0.265,-0.308,-0.0898,-0.0647,-0.0993,-0.128,0.0209,-0.00582,0.165,-0.0392,-0.111,-0.44,-0.244,0.113,-0.0837,0.0425,0.0721,-0.122,0.0166,0.11,0.0138,0.105,0.251,0.588,0.0805,0.107,0.0381,0.0303,-0.0354,0.129,-0.188,-0.013,0.0601,-0.127,-0.346,-0.103,0.0213,-0.194,-0.154,-0.031,-0.0304,-0.00757,0.0316,0.251,-0.0465,-0.178,-0.128,-0.251,0.106,0.183,-0.00146,-0.0529,-0.0984,0.0303,-0.0686,0.0961,0.139,0.0533,-0.0483,-0.0718,-0.0245,0.206,0.052,0.127,0.0408,-0.239,0.13,0.225,-0.0957,0.229,0.136,-0.00672,0.0682,-0.283,-0.163,0.0949,0.0127,-0.0842,-0.258,0.0559,0.0785,-0.1,-0.0567,-0.0452,-0.0107,0.168,0.169,0.117,-0.0573,0.0469,0.0979,0.149,-0.124,0.0292,-0.0124,0.145,0.101,-0.368,0.0647,0.134,0.0337,-0.119,0.145,0.15,-0.0648,0.263,0.138,-0.265,-0.0399,0.0627,-0.0402,-0.146,0.00992,0.139,0.0186,0.112,0.0449,-0.033,-0.0789,0.0524,0.0486,0.0887,-0.0316,-0.146,0.248,-0.151,-0.0992,0.272,-0.00549,-0.146,0.174,-0.0353,0.148,-0.0225,0.128,0.121,-0.0621,-0.0977,0.0212,0.097,0.0198,-0.202,-0.00575,-0.234,0.0725,0.256,-0.222,-0.0132,0.031,-0.0354,0.113,0.118,-0.186,0.0723,-0.37,0.0618,-0.0159,0.0113,0.061,0.0566,-0.0224,0.019,-0.0332,0.196,0.205,0.263,-0.126,0.255,-0.378,-0.297,-0.0193,-0.164,-0.0511,0.0422,0.0332,-0.177,0.0944,-0.0206,-0.03,-0.0431,-0.252,0.0124,-0.0777,0.0582,0.144,-0.0912,-0.0348,0.0961,0.202,0.0201,0.0362,0.223,0.243,0.0362,0.0888,0.00246,-0.0871,0.254,0.00246,-0.094,-0.179,0.252,0.0797,-0.0468,-0.196,-0.0652,-0.238,-0.0833,-0.105,0.114,0.0839,0.0383,0.184,0.0467,0.0128,-0.19,-0.0221,0.0612,0.302,-0.195,0.0245,-0.101,0.153,-0.0591,0.0193,-0.00759,0.0617,0.144,0.0743,-0.0204,-0.184,0.000787,0.0474,0.21,-0.062,0.0495,0.0218,0.158,-0.00135,0.0345,-0.0907,-0.0705,-0.227,0.0551,-0.258,-0.0101,-0.181,0.0882,0.0965,0.152,-0.0614,-0.147,-0.248,-0.233,-0.0836,0.124,0.164,0.102,-0.0168,0.139,-0.0841,0.0314,0.0278,0.0139,-0.0105,0.0289,0.251,-0.134,-0.0026,-0.257,-0.134,0.0952,-0.0353,0.017,-0.062,-0.394,0.18,0.0927,-0.159,0.0229,-0.176,-0.129,-0.0694,0.21,0.0527,0.198,0.0966,0.248,0.0182,-0.0534,-0.147,-0.0801,-0.0159,-0.182,-0.112,-0.0538,0.0343,0.198,-0.0102,0.00921,0.0257,-0.127,0.0751,-0.096,-0.0363,0.00306,0.115,0.107,0.111,0.0507,0.137,-0.174,0.127,0.0541,0.13,0.265,0.195,0.0703,0.22,0.0656,0.0849,-0.0582,0.215,0.181,0.163,0.148,0.135,0.0679,0.214,0.0812,0.108,-0.0224,0.045,-0.0566,-0.135,-0.0162,-0.0386,0.109,0.0529,0.0701,0.0375,0.199,0.124,-0.123,0.0903,-0.0445,0.119,0.239,0.0382,-0.117,0.0128,-0.231,-0.111,0.138,-0.0559,-0.0623,-0.01,0.0647,0.0419,-0.174,0.147,-0.0482,0.0191,-0.0205,0.0131,-0.0029,0.0235,0.0852,-0.0525,-0.00348,0.123,-0.113,-0.131,-0.0857,0.0601,-0.105,-0.0587,-0.239,0.0588,-0.0203,-0.0533,0.0753,0.0366,-0.0604,0.0112,0.00156,-0.166,0.0483,0.102,0.134,0.172,0.164,-0.263,0.0355,0.0592,0.111,-0.112,-0.0903,0.142,0.265,-0.118,0.209,-0.0465,0.0912,-0.113,-0.175,0.0521,0.0393,-0.0724,0.071,0.0168,-0.118,0.0633,0.0446,-0.0536,0.212,0.0207,-0.0608,-0.0394,-0.024,0.00166,-0.103,-0.0334,-0.146,0.0869,-0.0822,0.0152,0.0286,-0.0666,-0.0135,0.0279,0.101,-0.16,-0.151,0.0269,-0.0874,-0.0436,0.0954,0.0223,-0.02,-0.131,0.154,0.109,0.00841,0.043,-0.0538,-0.119,-0.116,-0.0715,-0.00863,-0.0211,-0.101,-0.129,0.106,-0.0399,0.195,0.0282,0.104,-0.0463,-0.0702,-0.09,-0.0347,-0.151,0.104,0.107,-0.0734,0.0169,0.074,0.0102,-0.0802,-0.0553,0.00707,-0.11,0.0372,0.0845,-0.0774,-0.218,0.154,-0.0563,-0.0405,0.0888,0.105,0.0928,-0.0367,0.0997,-0.0766,0.0227,0.0868,
0.0924,-0.0274,0.0946,-0.0248,0.166,0.23,0.0224,0.0491,-0.0608,-0.181,-0.0277,0.000224,0.0819,-0.0208,-0.0765,0.101,0.0466,-0.0262,-0.0439,-0.0489,-0.065,0.0717,-0.0166,-0.0226,-0.196,0.0673,0.0306,0.106,0.0818,0.203,0.0464,-0.102,0.00907,-0.0126,0.0292,-0.0721,0.0753,0.128,-0.0124,0.0366,0.00976,0.0498,-0.0951,-0.0721,0.082,0.0255,0.103,0.0659,-0.239,-0.0337,0.0614,0.167,0.044,0.189,-0.03,-0.057,-0.151,-0.0141,0.0138,-0.0629,0.157,-0.0778,-0.0786,-0.047,-0.132,-0.168,0.0664,-0.0336,0.104,-0.0356,-0.0968,-0.131,-0.128,0.244,0.0578,-0.07,-0.219,-0.0247,0.00547,-0.0342,0.0416,-0.0142,0.0732,-0.0369,0.0336,0.132,0.119,-0.0697,-0.0495,-0.0484,-0.146,0.0311,0.0663,0.00481,-0.0459,-0.013,0.0114,0.0748,0.0321,0.152,0.0899,0.0805,0.085,-0.0152,0.0272,-0.0499,0.0218,0.0733,-0.122,0.225,0.12,0.101,-0.0176,0.00966,0.0402,0.0557,-0.0821,0.0257,-0.0357,0.0762,0.186,-0.0257,0.0382,0.00294,-0.0848,0.0867,-0.00762,-0.0914,-0.0679,0.0502,-0.0883,-0.0621,-0.0587,-0.0394,0.0708,-0.0155,0.0663,0.0884,0.00241,-0.0817,0.0362,0.0786,0.0512,0.0927,0.15,0.166,0.038,-0.00254,-0.0268,0.00228,-0.0443,0.0756,-0.093,-0.0339,0.0999,0.0669,-0.00521,0.0994,-0.00671,0.324,-0.17,-0.17,-0.0875,0.0386,-0.144,0.0436,-0.0883,-0.175,-0.108,-0.0706,-0.279,-0.0159,-0.168,-0.0233,-0.205,-0.027,0.0918,-0.174,0.0035,0.164,-0.0117,-0.000436,-0.106,0.283,0.206,-0.146,-0.0523,0.0713,0.0457,0.0257,-0.0456,0.0858,-0.126,0.296,-0.0457,-0.0758,-0.253,-0.247,-0.0668,0.0307,-0.105,-0.108,0.252,0.245,-0.349,0.189,0.142,-0.0569,0.173,-0.0494,0.151,-0.139,-0.201,-0.228,-0.169,-0.288,0.0286,0.0973,0.147,0.0287,-0.0899,-0.0231,-0.0264,0.0345,-0.156,0.237,0.0559,-0.141,-0.0933,0.0334,-0.0406,-0.172,-0.0487,-0.0749,-0.113,0.0143,-0.158,0.112,0.0332,0.0768,0.112,-0.115,-0.089,-0.0143,-0.0685,-0.169,-0.121,-0.161,0.0529,-0.282,-0.0542,0.0528,-0.00111,-0.0587,-0.0223,-0.134,0.023,0.0146,0.114,-0.114,0.0949,0.0293,0.191,-0.117,0.203,0.139,-0.038,-0.151,0.252,0.352,-0.106,0.0395,-0.205,-0.0718,0.206,-0.0465,0.0287,0.288,-0.109,0.0398,0.0619,0.259,-0.0948,0.101,0.0563,0.189,-0.136,-0.156,0.162,-0.0446,0.127,-0.0872,-0.0207,0.0677,-0.116,0.0449,-0.102,-0.032,0.0389,0.0761,0.127,0.156,0.185,0.13,-0.0317,0.0543,-0.0384,0.0851,-0.0749,0.246,-0.0204,-0.0741,0.304,0.303,-0.236,0.105,0.014,0.0271,-0.0539,0.277,0.0255,0.127,-0.121,0.0108,0.331,0.297,0.218,-0.0816,0.111,-0.0166,0.0281,-0.0632,-0.0294,0.0603,0.0147,-0.0453,0.124,0.151,-0.0745,0.119,0.0683,-0.0359,0.16,-0.074,0.247,0.0307,0.119,0.208,0.0386,0.255,-0.00235,-0.0351,0.0781,-0.0684,-0.0922,0.0188,-0.0195,0.0234,-0.0291,0.118,0.0208,-0.0663,-0.087,-0.00989,-0.152,0.379,0.0155,0.0523,-0.417,0.182,-0.000925,-0.0827,-0.0106,0.00138,0.0238,-0.00561,0.114,0.23,0.0184,0.00302,0.0598,-0.0607,0.102,-0.0149,0.0355,0.199,-0.117,-0.245,-0.204,-0.259,-0.0835,0.182,-0.286,-0.0916,-0.0239,0.0882,-0.353,0.0338,0.117,0.268,0.0212,0.13,-0.0138,-0.128,-0.0707,0.125,0.131,0.227,0.0695,0.0102,0.34,-0.195,0.0578,0.173,-0.121,-0.156,0.243,0.0622,0.0394,-0.063,-0.13,-0.0259,0.129,0.0813,0.0825,0.0531,0.179,-0.0831,0.108,0.042,-0.0206,-0.238,-0.0247,0.0301,-0.2,0.132,0.144,0.18,-0.114,-0.272,-0.00278,0.0429,0.0113,-0.0914,0.277,-0.0123,0.0217,-0.082,-0.153,0.0233,-0.109,-0.0254,0.0676,0.101,-0.0882,0.123,0.0192,-0.0854,0.0544,0.0916,-0.177,0.0669,0.155,0.0115,0.101,-0.287,-0.144,0.158,-0.0455,0.0896,0.0982,0.0787,0.0196,0.132,-0.0903,0.156,0.111,-0.191,-0.0435,0.127,-0.23,-0.162,0.146,0.0507,-0.214,0.022,-0.047,0.0131,0.0478,0.213,-0.06,-0.0163,-0.109,-0.074,0.0537,-0.0105,0.00941,-0.0549,0.161,-0.0826,
0.145,-0.246,0.0261,0.0513,-0.0417,0.15,0.159,-0.0779,-0.0483,-0.117,-0.00929,0.0699,0.233,-0.0802,-0.0508,0.231,0.0925,-0.238,0.0124,0.0632,0.191,0.312,0.204,-0.035,0.151,-0.161,0.0886,0.191,-0.351,0.0214,-0.109,0.103,0.0879,0.0967,0.153,-0.0795,-0.0216,0.104,0.0383,-0.114,-0.0659,-0.181,-0.271,-0.177,-0.0607,-0.195,-0.146,-0.103,0.0261,-0.284,0.0251,0.0483,-0.103,-0.185,0.342,-0.0615,-0.107,-0.162,0.0997,-0.262,-0.0891,-0.156,-0.193,0.188,0.0293,0.106,-0.45,-0.14,-0.0448,-0.218,0.0224,0.18,-0.0564,-0.119,0.128,-0.0259,-0.0341,0.0906,0.0858,0.18,0.0472,0.0229,-0.0725,-0.0884,-0.0685,-0.0622,-0.0957,-0.0191,0.0735,0.0945,0.0485,0.0832,-0.0655,0.00596,0.139,0.227,-0.0222,0.0632,-0.201,-0.256,-0.0915,0.123,-0.114,0.0609,0.164,0.118,-0.0397,0.184,0.0452,-0.138,-0.0838,0.0289,-0.0111,0.0222,0.0182,-0.0462,0.0491,-0.253,-0.0442,-0.00583,0.00333,-0.0407,0.121,0.0569,-0.0118,-0.136,0.288,0.12,0.0595,0.116,0.0109,0.0156,0.11,0.0868,0.0041,-0.113,0.148,0.0515,-0.22,0.0843,0.0932,-0.0323,0.276,0.0578,-0.106,0.162,0.0635,-0.152,0.0941,0.176,0.0992,0.027,-0.0108,0.298,0.0673,0.0894,-0.0327,0.0436,0.0411,-0.0069,-0.0931,-0.0171,0.013,-0.034,0.151,0.0835,-0.173,0.0147,0.103,-0.131,-0.102,0.00817,0.353,-0.319,-0.187,-0.155,-0.133,0.124,0.0438,0.244,0.00508,-0.0443,-0.0337,0.131,0.22,-0.0195,0.0475,-0.29,-0.0941,-0.187,0.105,0.0831,0.173,-0.00244,0.107,0.0125,-0.232,0.0104,0.107,0.0638,-0.0191,0.125,0.00278,0.114,0.0416,0.0801,-0.117,0.0525,0.298,-0.0948,-0.0585,-0.0258,-0.196,-0.29,-0.0285,0.0333,-0.121,-0.0267,-0.0354,-0.0654,-0.116,-0.0536,-0.181,-0.0425,-0.305,-0.17,-0.137,0.0657,0.0832,0.163,-0.105,0.204,0.028,-0.174,0.142,-0.0682,-0.112,0.0579,-0.00287,-0.0711,-0.0433,-0.0449,-0.0433,-0.0699,0.0509,-0.0163,-0.034,-0.101,-0.192,-0.253,-0.21,0.157,0.0106,-0.0891,-0.0176,0.0341,-0.216,-0.117,0.0445,-0.191,-0.0854,-0.142,0.15,0.101,-0.0212,-0.18,-0.014,0.0957,0.267,-0.0955,-0.12,-0.0718,0.0653,-0.0737,0.098,-0.00427,0.213,-0.0527,-0.0735,0.106,-0.109,-0.0123,0.0389,0.0438,0.124,0.308,-0.0558,-0.0684,0.0112,0.0745,0.0768,-0.0881,0.0438,-0.317,-0.198,0.0736,0.0544,-0.115,0.0967,0.0554,-0.099,0.00152,0.161,0.0729,-0.0159,-0.246,-0.138,0.0782,0.0509,0.045,0.0341,-0.0472,0.0409,0.0323,0.129,0.00552,0.000382,-0.0672,-0.00934,-0.134,-0.118,-0.102,-0.161,0.0632,-0.0975,0.0133,-0.0749,-0.0202,0.11,-0.143,-0.28,-0.0915,-0.06,0.0114,-0.0621,-0.0882,0.206,0.0729,-0.0811,-0.041,-0.346,0.0918,0.0275,-0.0969,-0.103,-0.0641,0.0619,0.0817,0.0551,-0.0163,0.0196,-0.0738,0.146,-0.0127,-0.0681,-0.0282,-0.158,-0.071,-0.127,0.0601,-0.0542,-0.0823,-0.0619,-0.00527,-0.349,-0.295,0.00283,-0.0398,0.0206,0.0392,0.0995,-0.0583,0.0624,0.00169,-0.108,-0.0222,0.123,-0.177,0.0299,0.153,0.102,0.113,0.107,0.365,-0.118,0.242,0.224,-0.414,-0.1,0.312,-0.108,-0.111,-0.08,0.294,-0.144,0.0847,-0.00923,-0.0906,-0.057,-0.0661,-0.289,-0.0372,0.203,0.0477,0.0256,0.0216,0.0575,0.0704,0.136,-0.019,0.0806,0.0483,0.0614,-0.0409,-0.138,-0.164,0.121,-0.0186,-0.135,0.13,-0.154,-0.0323,0.262,0.132,-0.245,0.335,0.275,-0.135,0.0858,0.149,0.0297,0.066,0.0554,-0.341,0.00896,0.125,-0.0373,0.254,0.151,0.184,-0.158,-0.0708,-0.175,-0.0144,0.077,0.0568,-0.0645,0.0777,0.196,-0.00351,0.01,-0.0641,-0.104,0.0413,0.0849,0.0939,-0.0358,-0.108,-0.141,0.221,0.163,-0.0863,-0.0267,0.123,0.0435,-0.17,-0.164,0.0656,0.0369,-0.115,-0.0373,0.141,-0.045,-0.171,0.00905,0.0444,0.0699,0.0057,0.174,-0.0427,-0.144,0.048,-0.0603,0.171,0.182,0.211,-0.0919,-0.0905,0.147,0.092,0.107,0.145,0.0456,0.0897,-0.0807,0.186,0.0381,-0.0385,-0.147,0.4,
0.121,-0.113,0.00556,0.0193,0.0673,0.013,-0.0429,-0.0999,0.176,-0.0815,-0.00795,-0.0176,0.22,0.158,0.0376,0.0379,-0.0223,-0.0856,-0.0562,-0.145,0.12,0.213,-0.0601,-0.0142,0.0465,-0.0265,0.0577,0.101,0.0323,0.0037,-0.195,-0.0616,0.104,-0.076,-0.0152,-0.241,-0.0688,-0.159,0.277,-0.0164,-0.0175,0.0645,0.0532,0.14,0.179,-0.00906,0.208,-0.147,0.0727,0.135,-0.151,0.062,0.00462,0.0659,0.0197,0.259,-0.268,0.21,0.254,0.117,-0.0146,0.14,0.063,-0.0255,0.0316,0.0292,-0.185,0.0628,0.176,0.181,-0.186,0.00934,0.0408,-0.0141,-0.0134,-0.165,0.00244,-0.0494,-0.261,0.0279,0.0149,0.143,-0.118,0.0147,0.0249,0.325,0.0811,0.0849,-0.0276,0.0547,-0.00727,0.0205,0.074,-0.311,-0.194,0.057,-0.0781,0.031,0.103,0.0145,-0.0767,0.000441,-0.0738,0.0187,0.313,0.217,-0.0898,-0.0161,0.0983,0.153,-0.188,0.0767,0.0202,0.08,0.0631,0.104,-0.00975,0.142,0.145,-0.161,-0.0465,0.0179,-0.13,-0.0661,0.0873,-0.357,-0.191,-0.017,-0.0866,-0.00961,0.0388,0.0652,0.0842,-0.103,0.00462,-0.135,0.0536,0.0712,-0.115,-0.0704,0.0324,-0.04,-0.133,0.0442,-0.151,-0.115,0.041,-0.0431,0.0315,0.0982,0.169,0.0964,-0.221,0.198,0.0679,0.0908,0.192,0.0602,0.0257,-0.13,0.108,0.292,-0.144,-0.0579,-0.136,0.0677,-0.000434,0.123,-0.0634,0.0332,-0.144,0.112,-0.111,0.0825,-0.0727,-0.138,0.122,0.106,-0.0131,-0.00809,0.0698,-0.0892,-0.0058,-0.03,-0.00852,0.0876,-0.0128,-0.0507,-0.286,0.0864,0.0377,-0.0595,0.139,0.101,0.0114,0.00491,0.0191,0.0185,0.106,-0.0816,0.112,-0.0803,0.0439,-0.0626,0.131,0.0192,0.0863,0.0424,0.128,-0.0482,-0.00543,-0.0177,0.0653,0.0951,-0.0911,-0.012,0.0205,-0.0381,-0.0242,0.0987,0.0836,0.232,-0.0761,0.0664,-0.0989,-0.0547,-0.0562,0.135,0.0218,0.0273,0.129,-0.0526,0.00764,0.0899,0.0691,-0.157,0.113,0.0623,-0.0945,-0.0373,-0.0976,-0.0309,-0.166,-0.0695,-0.0477,0.2,0.00082,-0.0699,-0.0724,0.0896,0.034,0.07,-0.00507,-0.0341,-0.0459,-0.0217,-0.0596,0.203,0.0143,0.044,-0.119,-0.0892,0.112,-0.0574,-0.0702,-0.162,0.134,-0.136,0.0725,-0.115,-0.0264,0.0318,0.0521,0.256,-0.127,0.0132,0.12,0.151,-0.0884,0.106,-0.0257,0.0447,-0.064,-0.186,0.0333,0.13,0.107,0.0165,-0.00088,-0.0203,0.109,0.0999,-0.137,-0.125,-0.184,-0.0889,-0.0652,-0.0358,-0.0591,-0.026,0.0786,0.166,0.04,-0.00957,-0.00222,0.0828,0.107,0.00723,-0.0414,0.0116,0.0733,0.021,-0.0834,0.0491,0.0867,-0.0358,0.0799,-0.171,0.0934,0.0657,0.107,-0.0707,-0.0096,0.0312,0.117,-0.0235,-0.137,-0.0257,-0.0601,0.145,-0.0532,0.0735,-0.0286,0.0403,-0.00903,0.00973,0.0837,0.0526,0.0237,-0.0167,0.00367,-0.0445,0.0698,-0.121,0.124,0.0476,-0.0091,0.0563,0.121,-0.0813,0.124,-0.156,0.0714,-0.0519,-0.0136,0.106,-0.0141,0.0737,0.175,0.174,0.157,0.0713,0.0198,-0.0971,0.182,0.0163,0.0417,0.374,-0.127,0.115,0.237,-0.0519,0.128,0.0526,0.356,-0.0802,0.178,0.0153,0.0309,-0.135,-0.0578,0.028,0.329,0.125,0.0183,-0.17,-0.0339,-0.0738,-0.0509,0.0759,-0.0405,-0.124,0.0947,0.0496,-0.218,0.0232,-0.0196,0.00799,0.184,-0.143,0.143,-0.11,-0.0309,-0.134,-0.0984,0.0836,-0.0947,0.109,0.0332,0.268,-0.352,0.111,0.000969,0.159,-0.34,0.236,0.019,0.049,0.184,0.0635,0.0406,0.11,0.133,0.144,-0.0988,-0.155,0.0524,-0.0248,-0.0956,-0.101,0.00373,0.0206,0.273,0.184,0.00458,0.156,0.18,-0.0759,0.241,-0.0552,0.153,-0.112,0.0373,-0.0827,0.225,0.203,0.0259,-0.055,-0.0972,0.0151,-0.0543,-0.1,0.164,-0.0932,0.128,0.0736,-0.228,0.0438,0.0404,-0.0109,0.0975,-0.0364,0.148,0.153,-0.0469,0.02,-0.00856,0.375,0.0156,0.0688,0.195,-0.122,0.11,0.107,0.1,-0.119,0.0583,-0.229,-0.0805,-0.277,0.106,0.236,-0.0535,-0.0855,0.054,-0.0252,0.00914,0.153,-0.322,0.0641,-0.262,0.211,0.00168,0.214,0.0284,-0.219,0.0398,0.061,-0.0725,0.0577,
0.116,-0.0258,-0.337,-0.127,-0.206,-0.303,-0.0812,-0.229,-0.0693,-0.202,-0.0385,-0.15,0.0338,0.298,0.139,-0.0856,-0.146,-0.195,-0.0755,-0.0361,-0.172,-0.109,-0.0406,0.191,0.137,0.235,-0.201,0.0854,0.00717,-0.189,0.0975,0.0696,-0.0915,-0.12,0.0576,-0.0403,0.0584,0.162,0.0805,-0.112,0.159,0.0706,-0.102,-0.0313,0.127,0.0328,0.193,0.133,-0.1,0.111,0.0903,0.0776,-0.149,0.037,0.102,-0.00519,-0.0256,-0.0233,-0.0851,-0.201,0.0516,-0.144,-0.224,-0.0505,0.116,0.232,-0.0371,0.156,-0.0508,-0.0123,-0.0094,0.204,-0.123,-0.0752,-0.225,-0.406,0.236,-0.0577,-0.15,-0.0103,0.0298,-0.196,0.0564,-0.115,0.15,-0.0563,0.117,-0.0208,-0.0423,0.144,-0.161,0.0729,0.195,-0.0949,-0.0298,-0.0772,0.156,0.134,-0.125,0.0639,-0.108,-0.101,0.084,-0.0735,-0.098,-0.0143,-0.0684,-0.0179,-0.056,-0.143,-0.175,0.0639,-0.0846,-0.0536,0.0622,0.0658,-0.153,-0.0283,-0.053,0.0799,0.0833,0.0468,-0.0625,0.00251,0.12,0.085,-0.0425,0.0149,-0.0474,0.0561,0.0923,-0.000652,0.159,0.123,0.0477,0.00249,-0.0508,-0.149,-0.0213,0.0958,-0.0504,-0.00809,0.0615,0.14,0.0203,0.0969,0.00523,0.0989,0.045,-0.0459,0.0128,-0.0411,-0.0094,-0.109,0.0254,0.0331,-0.00771,0.078,-0.0474,0.0505,0.108,0.0626,0.027,-0.1,-0.0723,0.128,0.111,-0.104,0.0248,0.0865,-0.0288,-0.147,-0.0772,-0.128,0.0404,-0.067,-0.107,-0.0228,-0.0206,-0.00163,0.0242,-0.0262,-0.0343,0.03,0.0688,0.0115,0.00652,0.0156,0.0844,-0.0565,-0.104,0.0627,-0.0446,-0.0324,-0.0564,0.0256,0.055,0.0273,0.0591,-0.0182,-0.0773,0.0649,0.00631,-0.144,-0.028,-0.00707,-0.0131,-0.0344,0.0806,0.15,-0.0894,-0.0119,-0.0645,-0.0451,-0.0292,-0.14,-0.0115,0.126,-0.0936,0.0741,-0.0756,-0.133,-0.00695,-0.0285,0.0201,-0.00842,-0.0485,0.0353,0.147,-0.0536,0.0382,-0.0895,-0.0584,-0.0217,-0.0381,-0.0152,0.0506,-0.0983,0.0253,0.0706,-0.027,0.0765,0.238,-0.0848,0.0407,0.112,0.0749,0.0358,0.119,0.158,0.0241,-0.0331,0.0803,0.0521,-0.201,0.00843,0.0642,0.0639,0.0585,0.0963,0.128,0.17,0.0625,-0.117,-0.044,-0.0349,0.173,0.147,0.1,0.098,0.000958,-0.00681,0.12,0.173,0.0688,0.0354,0.0843,0.021,-0.0273,-0.14,-0.114,-0.103,0.0551,-0.00395,-0.041,0.1,-0.0364,-0.0316,0.00578,-0.0671,0.0315,-0.0459,0.127,-0.0157,-0.0798,-0.0419,0.0883,-0.0271,0.115,0.163,-0.0652,0.00258,0.14,0.00672,-0.0686,-0.04,0.0588,-0.0266,-0.0209,0.0839,0.0142,-0.0544,0.0331,0.0762,0.0948,0.00352,0.0656,0.122,-0.0111,-0.0832,-0.0631,0.0384,0.108,-0.00197,-0.0413,-0.0192,-0.00362,0.0387,-0.0792,-0.0743,0.0756,-0.0721,-0.069,-0.0703,-0.0211,-0.0402,-0.102,-0.0716,0.051,0.0836,0.00296,0.0331,0.0101,0.0048,-0.0373,0.0665,-0.021,-0.265,-0.276,-0.045,-0.0569,0.0692,-0.0347,0.0281,-0.051,-0.0691,0.0605,-0.0961,0.0602,0.0261,-0.0523,-0.115,-0.127,0.0431,-0.0409,-0.047,0.0163,-0.0149,0.0379,0.0914,0.0903,0.0844,0.00975,-0.0511,0.0376,0.105,0.0818,0.115,-0.106,0.149,0.0528,0.102,-0.0558,0.0206,-0.0175,-0.0471,0.0243,0.283,-0.0302,0.153,0.0314,0.132,0.039,-0.107,-0.0467,0.126,0.113,-0.00773,0.0656,0.0762,-0.0243,-0.0425,-0.0541,-0.1,0.0183,0.0623,-0.00129,-0.108,-0.166,-0.111,0.00307,-0.0194,-0.0351,0.0454,0.0423,-0.0154,-0.0292,-0.0333,-0.00932,-0.00707,-0.0565,0.0567,-0.0262,-0.181,0.127,0.169,-0.0616,0.146,0.111,0.0908,-0.058,0.0182,-0.042,0.0634,0.0466,0.147,0.0763,0.0838,-0.0299,0.0585,-0.0304,0.0257,0.0135,-0.00319,-0.0546,-0.0489,-0.0644,0.0218,0.0642,0.138,0.0334,0.0593,0.00652,0.0614,-0.031,0.185,0.0226,0.027,-0.0744,0.0975,-0.0673,-0.0435,-0.0329,-0.0122,-0.101,0.116,0.0519,-0.0868,0.0408,-0.0173,-0.0072,0.0888,0.0534,0.134,0.0824,0.0339,0.0295,0.0554,0.0183,0.0683,0.0661,-0.0104,0.0837,-0.0587,-0.0896,-0.252,-0.0345,0.122,0.0512,0.0229,0.0795,0.0291,-0.00802,0.091,-0.168,-0.0968,-0.0301,-0.139,0.0867,-0.00572,
0.0767,-0.0819,-0.0555,-0.0583,0.153,-0.00829,0.283,0.021,-0.00451,-0.087,-0.0302,-0.0918,-0.0537,-0.0127,0.0223,0.0575,-0.0355,-0.122,-0.0768,0.00394,0.0114,-0.0669,-0.0474,-0.0788,0.00555,0.014,0.0879,-0.0278,-0.00829,0.00384,-0.234,-0.0902,-0.0161,0.0438,0.000712,-0.0902,-0.0278,-0.154,0.0848,-0.0897,0.0213,-0.0551,0.116,0.0524,0.0728,0.0655,0.0986,0.0423,-0.114,0.0183,0.048,0.0241,0.0821,-0.0446,-0.157,-0.0932,0.0261,-0.0124,0.00901,0.0264,-0.0817,0.03,-0.0966,0.00895,-0.117,-0.00399,0.125,0.0941,0.11,0.116,0.078,0.0783,0.0919,0.0557,-0.0222,0.172,-0.0679,-0.0752,0.0633,-0.171,-0.125,-0.0935,-0.125,0.0998,-0.12,-0.12,-0.187,0.0842,0.0576,-0.164,-0.195,0.0417,0.0747,-0.0325,0.0391,0.0116,0.0405,-0.22,0.182,0.0191,-0.186,0.109,-0.238,-0.0606,-0.152,-0.0382,0.0485,-0.00303,-0.0523,0.0132,-0.0468,0.153,-0.125,0.136,-0.0147,0.0969,-0.0811,-0.00382,0.114,-0.0235,-0.087,0.0995,-0.0292,0.189,-0.0112,-0.0643,-0.226,0.0948,0.151,0.0316,-0.0211,-0.0505,0.0125,-0.0459,-0.137,-0.15,0.123,-0.11,-0.095,-0.0804,0.00652,-0.147,-9.91e-005,0.023,0.0593,-0.128,-0.0366,-0.121,-0.0224,-0.03,-0.0304,-0.131,0.0034,0.147,-0.138,0.0328,-0.0884,0.081,-0.00304,-0.0572,-0.0653,0.00546,0.104,-0.114,0.101,0.102,0.149,-0.205,-0.0387,-0.217,0.092,-0.0606,0.0624,0.0751,-0.00248,0.000934,0.052,0.00743,0.0495,-0.00754,-0.0348,0.185,-0.0339,-0.0988,-0.111,-0.0147,0.0573,0.098,-0.0277,0.07,0.142,0.0498,0.129,0.0128,-0.00425,-0.359,-0.0278,0.116,0.0774,-0.153,-0.162,0.0509,-0.0349,0.17,-0.00814,-0.0102,0.0698,0.0376,0.0268,0.132,0.154,-0.191,0.0951,0.0403,-0.0882,-0.0325,-0.0549,0.351,-0.0107,-0.0761,0.16,0.045,0.0195,0.231,0.0749,-0.0743,-0.088,-0.00857,-0.0309,0.0566,0.098,-0.0185,0.044,0.174,-0.244,0.108,-0.162,0.0845,-0.154,0.0532,0.0212,0.104,-0.104,0.0302,0.0288,0.0956,0.29,-0.0338,0.0191,0.0434,0.0431,-0.00572,0.0227,0.0621,-0.038,-0.0106,0.173,0.0862,-0.248,-0.0723,-0.0594,0.0659,0.102,0.171,0.0967,0.0186,-0.0592,0.0609,0.0899,0.148,0.217,0.208,-0.0778,0.106,-0.221,0.0682,-0.0308,-0.0448,0.097,0.0852,0.0705,-0.00488,-0.0635,0.00519,-0.137,-0.15,0.0313,-0.132,-0.0889,0.207,-0.0256,-0.127,-0.0387,-0.0613,0.0558,0.103,0.102,0.163,0.064,0.0748,-0.0485,-0.032,-0.01,-0.00772,0.117,0.0847,0.0394,0.0103,0.119,-0.114,0.0476,-0.00573,-0.123,-0.182,-0.191,-0.00606,-0.301,-0.109,0.0874,0.0357,0.102,-0.0431,0.123,0.0798,-0.0653,0.134,0.157,-0.0984,-0.0561,0.185,0.0839,0.0508,-0.057,0.308,-0.031,0.158,-0.245,0.107,-0.013,0.0753,-0.1,-0.0418,0.275,-0.114,0.0427,0.199,0.0142,0.126,0.0513,-0.0228,-0.0419,-0.0587,0.254,-0.416,-0.0459,-0.237,-0.0157,0.224,-0.0924,0.0871,-0.0886,-0.142,-0.0303,0.0911,0.0833,-0.0934,0.0204,-0.0975,-0.155,0.0459,0.0957,0.0681,0.0258,-0.194,0.0595,0.118,-0.343,-0.00896,0.311,0.0704,-0.22,0.0497,0.0226,0.0796,0.128,0.104,0.229,0.0567,0.153,-0.0192,0.0507,-0.0142,-0.22,-0.0866,-0.0101,0.0491,-0.094,0.0683,0.0113,-0.0638,-0.277,0.0547,-0.0486,0.221,-0.118,0.0699,-0.147,0.22,0.048,0.184,-0.173,0.101,-0.073,-0.24,-0.0288,-0.101,0.0172,0.0204,-0.136,-0.0129,0.0025,-0.165,0.0899,0.0242,3.15e-005,0.0502,-0.00494,-0.0943,-0.102,-0.179,-0.0676,0.141,-0.103,-0.101,-0.00426,0.169,-0.0605,-0.0753,-0.0311,0.261,0.0135,-0.198,0.0207,-0.128,0.0623,-0.0104,-0.0957,-0.0968,0.238,-0.0679,-0.174,-0.0418,-0.0156,0.0227,0.176,-0.0502,0.0142,-0.145,-0.203,-0.112,-0.0164,-0.00183,-0.163,-0.169,-0.0919,0.0907,-0.0418,-0.112,0.0881,0.0296,0.111,0.0235,-0.0681,-0.354,-0.297,-0.127,0.223,-0.0111,-0.0566,-0.0737,-0.0806,-0.204,0.0335,-0.127,-0.319,-0.343,-0.147,-0.0436,-0.156,-0.213,-0.105,-0.018,0.0949,-0.035,0.0561,0.0673,-0.176,-0.0757,-0.00771,0.00493,
-0.137,-0.101,-0.0674,-0.197,-0.103,0.00323,-0.0187,-0.133,-0.00234,-0.19,-0.239,-0.0326,0.0379,-0.194,-0.0383,-0.0089,0.0204,0.161,0.0542,-0.033,-0.194,-0.0439,0.0915,-0.0733,0.117,-0.104,0.244,0.0473,0.0724,-0.0161,-0.0344,0.0359,0.064,0.14,0.0255,0.175,-0.178,-0.0854,-0.248,-0.146,0.0443,0.0314,0.0302,0.133,-0.351,-0.142,-0.186,-0.0227,0.209,0.103,0.0276,-0.0924,0.0665,0.155,-0.0367,0.0551,0.0903,0.105,0.0183,-0.0259,0.0324,0.0244,0.0798,-0.104,-0.000807,-0.326,-0.108,0.0478,-0.243,-0.307,0.0232,-0.0904,0.0362,-0.0765,0.108,0.00834,0.111,0.0469,0.00931,-0.00537,0.107,0.0239,-0.204,-0.0328,-0.0517,0.0821,-0.0378,0.0921,-0.0488,0.0972,0.0155,0.026,-0.31,-0.105,-0.0384,-0.166,-0.196,-0.0762,0.0466,0.014,-0.184,-0.132,0.112,-0.0221,-0.197,-0.112,0.111,-0.339,0.0148,-0.249,-0.0936,-0.256,-0.209,-0.04,-0.0364,-0.24,-0.0957,-0.0246,0.231,-0.252,0.0653,-0.148,0.171,0.0448,-0.0845,0.284,0.00132,-0.0431,-0.24,-0.113,-0.0364,0.167,-0.0196,-0.172,0.111,-0.086,0.0875,-0.0827,0.161,-0.0457,0.00281,-0.119,0.13,0.233,-0.0713,-0.142,0.143,0.00689,-0.125,-0.138,-0.00864,0.0303,-0.104,-0.0982,-0.12,-0.304,-0.115,-0.0548,-0.0833,0.0281,0.1,0.142,0.0563,-0.0503,0.0305,0.165,0.0122,0.0468,-0.268,-0.0773,0.0144,0.0456,0.2,0.0228,0.159,-0.396,-0.0452,0.0853,-0.129,-0.154,-0.0267,0.0435,0.204,0.0811,0.0684,0.186,0.0243,0.172,-0.166,-0.048,0.0546,-0.0435,-0.0527,-0.165,-0.111,-0.094,0.0663,0.0566,0.161,0.0804,0.0317,-0.0885,0.092,-0.0505,0.159,0.274,-0.0873,-0.0594,-0.0217,0.13,0.0141,-0.0881,0.174,0.0373,-0.0656,-0.0835,0.107,-0.0819,-0.294,0.0328,-0.0792,0.192,0.0685,-0.0423,0.109,-0.035,0.0957,-0.0399,0.0465,-0.011,0.000215,0.0917,0.00851,0.0708,-0.0384,-0.0343,0.0596,0.000104,-0.14,0.0187,0.0443,-0.0847,0.0114,0.0437,0.173,0.233,0.178,0.122,-0.1,0.016,-0.0227,0.0403,-0.00636,-0.124,-0.142,0.0331,0.0543,0.00629,0.164,0.00663,0.0308,0.0489,0.0322,0.00493,-0.172,-0.012,-0.0855,0.132,0.00773,0.0887,-0.207,0.0291,-0.0987,0.0594,0.0444,0.186,0.0673,0.0749,0.0533,0.00585,0.0424,-0.0776,0.037,0.0203,-0.0495,-0.0867,-0.0525,-0.227,-0.202,-0.309,-0.0719,-0.0641,-0.0992,-0.0983,0.0711,-0.0745,-0.214,0.0818,0.204};
double a4[]={0.00509,
-0.0101,-0.0316,-0.0303,-0.0393,0.0925,-0.00178,0.0206,0.137,-0.000635,-0.00675,0.122,-0.0352,-0.0203,0.0356,-0.0325,0.0366,-0.0217,0.00722,0.537,0.32,0.00773,0.308,0.0222,-0.0977,0.575,0.235,-0.00148,0.0479,-0.00201,0.106,0.0985,0.123,0.0123,0.112,0.0207,-0.0642,0.111,0.308,0.0341,0.533,0.0151,0.0187,0.0487,0.0112,0.568,-0.539,-0.0457,0.102,0.00222,0.00927,0.113,-0.0168,-0.0288,-0.0419,0.0281,0.00904,-0.000363,-0.0427,-0.00712,-0.146,0.462,-0.29,-0.0824,-0.107,0.808,0.113,-0.123,0.0811,-0.43,0.116,0.109,0.053,0.0594,0.0698,0.061,-0.0691,-0.118,-0.277,0.339,-0.0295,0.102,-0.0614,0.0363,0.492,0.0648,0.0905,-0.121,0.135,0.0777,0.0293,0.063,-0.0835,-0.0203,-0.624,-0.0165,0.0239,0.000767,0.0249,0.474,-0.0686,0.0949,-0.0123,0.0374,0.108,0.389,0.0924,0.404,0.138,0.159,0.113,0.107,-0.031,0.000782,0.284,-0.0227,0.0112,0.0173,-0.0603,0.128,-0.051,0.0407,0.0143,-0.061,-0.484,0.493,0.0622,-0.104,0.114,0.126,0.0999,0.105,-0.00223,-0.0124,-0.21,-0.00346,0.0185,0.0182,-0.0852,-0.465,-0.46,0.0446,-0.185,-0.0251,-0.289,0.448,-0.0752,0.00359,0.126,-0.00601,-0.0184,0.0494,-0.156,0.0127,0.303,-0.0153,0.0084,-0.0539,0.256,-0.393,-0.241,0.0499,0.149,0.0944,0.268,0.812,0.153,-0.142,0.0734,0.0802,-0.413,0.158,-0.0572,-0.07,0.142,-0.0357,-0.065,0.00408,-0.136,-0.206,-0.00616,-0.667,0.0383,-0.0419,0.0618,0.637,0.0417,-0.0237,-0.101,0.0378,0.0292,-0.126,-0.000841,0.0107,-0.0582,0.011,0.0695,-0.0154,-0.0481,-0.625};
struct NConnection{
    int nIndex;
    int wIndex;
    NConnection(int n=0, int w=0) : nIndex(n), wIndex(w){}
};

struct NLayer{
    NLayer *prev;
    size_t n;
    vector<vector<NConnection> > cons;
    vector<double> w;
    vector<double> out;

    void calculate();
    size_t size(){return n;}

    NLayer(){}
    NLayer(int size, NLayer *prev = NULL) : prev(prev), n(size)
    {
        cons.resize(n);
        out.resize(n);
    }
    void createFullConnections()
    {
        w.clear();
        if(prev != NULL)
            for(size_t i = 0; i < n; i++)
            {
                cons[i].resize(prev->size());
                for(size_t k = 0; k < prev->size(); k++)
                {
                    cons[i][k].nIndex = k;
                    cons[i][k].wIndex = w.size();
                    w.push_back(0.0);
                }
            }
    }

};

void NLayer::calculate()
{
    if(prev == NULL)
        return;
    for(size_t i = 0; i < n; i++)
    {
        double sum = 0;
        for(size_t j = 0; j < cons[i].size(); j++)
            sum += prev->out[ cons[i][j].nIndex ] * w[cons[i][j].wIndex];
        out[i] = SIGMOID(sum);
    }
}

struct NNet{
    vector<NLayer*> layers;

    void calculate(vector<double> &in, vector<double> &out);

    void addLayer(int n)
    {
        NLayer *prev = 0;
        if(layers.size() !=  0)
            prev = *(layers.end() - 1);
        layers.push_back(new NLayer(n, prev));
        cerr << "added layer " << (*(layers.end()-1))->n << " " << (*(layers.end()-1))->prev << endl;
    }

    void read()
    {
        //random_init();
        for(size_t j = 0; j < layers[1]->w.size(); j++)
            layers[1]->w[j] = a1[j];
        for(size_t j = 0; j < layers[2]->w.size(); j++)
            layers[2]->w[j] = a2[j];
        for(size_t j = 0; j < layers[3]->w.size(); j++)
            layers[3]->w[j] = a3[j];
        for(size_t j = 0; j < layers[4]->w.size(); j++)
            layers[4]->w[j] = a4[j];

        cerr << "readed\n";
    }
};

void NNet::calculate(vector<double> &in, vector<double> &out)
{
    for(size_t i = 0; i < layers[0]->size(); i++)
        layers[0]->out[i] = in[i];

    for(size_t i = 1; i < layers.size(); i++)
        layers[i]->calculate();

    out.resize(layers[layers.size()-1]->size());

    for(size_t i = 0; i < out.size(); i++)
        out[i] = layers[layers.size()-1]->out[i];
}


void createNet(NNet &net)
{
    net.addLayer(19*25);

    int lay1_mc = 4;
    int lay2_mc = 20;

    net.addLayer(9*11 * lay1_mc);


    int kernel1[] = {
        0, 1, 2, 3, 4,
        18, 19, 20, 21, 22,
        36, 37, 38, 39, 40,
        54, 55, 56, 57, 58,
        72, 73, 74, 75, 76
    };

    NLayer *lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc * 25);
    for(int map = 0; map < lay1_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 9*11; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/9)*18*2 + (ney%9) * 2;
            for(int c = 0; c < 25; c++)
                lay->cons[map * 9*11 + ney].push_back(NConnection(base + kernel1[c], map*25 + c));
        }
        //cerr << endl;
    }

    int kernel2[]={
        0, 1, 2, 3, 4, 5,
        9, 10, 11, 12, 13,
        18, 19, 20, 21, 22,
        27, 28, 29, 30, 31,
        36, 37, 38, 39, 40
    };

    net.addLayer(3*4 * lay2_mc);
    lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc*lay2_mc * 25);

    for(int map = 0; map < lay2_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 3*4; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/3)*9*2 + (ney%3) * 2;
            for(int f_map = 0; f_map < lay1_mc; f_map++)
                for(int c = 0; c < 25; c++)
                    lay->cons[map * 3*4 + ney].push_back(NConnection(f_map *9*11 + base + kernel2[c], map*25*lay1_mc + f_map*25 + c));
        }
        //cerr << endl;
    }

    net.addLayer(20);
    net.layers[net.layers.size()-1]->createFullConnections();

    net.addLayer(10);
    net.layers[net.layers.size()-1]->createFullConnections();
}

int main()
{
    char str[100];
    NNet net;
    createNet(net);
    //ifstream fin("perceptron");
    net.read();

    while(cin.getline(image[height], 1000))
        height++;
    width = strlen(image[0]);

    for(int i = 0; i < height; i++)
        for(int j = 0; j < width; j++)
            switch(image[i][j])
            {
                case '.': image[i][j] = 0; break;
                case '%': image[i][j] = 1; break;
                case '#': image[i][j] = 2; break;
                case '@': image[i][j] = 3; break;
            }

    vector<digit> digits = split_image();
    //cerr << "splited";
    for(size_t j = 0; j < digits.size(); j++)
    {
        //digits[j].print();
        digit d = scale(digits[j], 25, 19);
        //d.print();
        vector<double> x;
        for(int i = 0; i < 25; i++)
            for(int j = 0; j < 19; j++)
                x.push_back( (d.mat[i][j]>0) ? 1 : -1 );
        vector<double> y;
        net.calculate(x, y);

        int jm = 0;
        for(int j = 0; j < 10; j++)
        {
            //cerr << y[j] << " ";
            if(y[j] > y[jm])
                jm = j;
        }
        //cerr << endl;
        cout << jm;
    }
    return 0;
}
