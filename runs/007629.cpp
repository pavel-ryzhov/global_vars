#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{35.366,56.139,4.27201,38.8574,131.474,197.137,233.71,260.126,291.065,139.161,144.037,58.6151,-44.4134,69.6188,136.516,149.902,44.9624,58.714,137.094,174.025,132.507,104.085,11.5383,49.9801,-117.31,-86.1024,25.2168,-0.628075,111.203,188.059,88.0315,147.251,147.15,200.734,196.019,176.835,6.18477,-43.2677,-173.638,-152.672,-150.043,-132.147,-63.7254,-24.5661,-102.782,-10.4837,72.0093,77.4209,90.5758,208.897,257.464,133.957,-179.982,-56.6985,35.558,64.2671,84.2446,-7.35979,-50.0246,-80.4139,.0930401,-62.7298,6.49774,-20.5839,21.0593,65.2382,133.696,-56.8734,32.2198,-47.7363,-18.6019,-192.032,-26.9006,-66.5852,-188.764,-215.358,-83.5937,19.9703,9.2867,75.0394,73.0929,145.352,188.256,-87.7766,-174.681,4.67406,122.862,43.9664,-91.9032,-42.9155,-85.6411,-105.914,-95.4866,-62.9568,74.1666,112.342,53.6491,106.382,199.711,-14.6792,-63.3416,1.84394,114.723,-64.9874,-231.028,-167.134,-15.1617,120.982,135.869,17.991,50.4941,106.274,56.7181,57.4339,84.8776,-95.5169,56.518,1.85302,115.205,-41.9769,34.933,-36.8962,13.4621,63.4901,83.7607,149.623,216.435,113.059,58.9745,19.8983,-73.3477,2.54293,-2.88118,55.5373,-36.2013,61.4797,-39.6697,33.2845,33.88,-117.142,-40.7125,12.7184,-76.9435,-36.6883,9.24172,-190.919,-11.4143,11.0969,-50.9659,17.48,208.371,-7.77403,2.81231,29.9646,-20.4171,-15.7972,45.6278,93.0256,122.962,110.936,-76.0482,-101.341,-76.9893,-88.9433,-77.1463,79.0234,16.3181,10.2575,-45.3448,-22.391,-62.5735,42.85,60.5131,40.3473,22.1111,-39.8728,-85.8195,-31.7742,-94.1819,-109.839,-38.8958,-128.03,-38.4567,-147.523,-105.906,-87.2336,-18.0064,-25.2009,-27.1497,-2.0312,64.0721,-102.175,21.4826,161.997,38.9761,-53.4004,-101.181,-23.5783,71.1486,67.765,9.7003,-4.09967,-113.66,-339.192,-27.8502,-39.5551,165.145,-13.4963,1.53417,87.5084,153.614,-34.4892,-113.069,-43.1503,54.5046,93.3478,44.9869,-110.085,-199.938,-72.2813,5.87214,137.271,83.6466,26.9049,37.2482,-17.9951,20.8705,186.117,119.361,-2.022,154.064,142.413,-13.8722,-29.6655,5.38484,95.2423,156.494,29.7876,22.309,44.5387,7.04284,11.7921,142.175,205.068,295.383,113.404,70.5907,112.658,-24.479,14.7474,160.236,-33.3001,-75.3937,28.6691,21.6242,58.008,},{79.7652,107.558,125.699,261.967,284.93,365.583,363.45,339.508,222.809,-106.726,-262.411,-363.666,-98.3172,41.5332,78.7701,-113.787,73.3052,283.096,378.153,369.411,178.018,203.863,135.851,38.72,-97.9074,131.866,258.602,130.404,-37.3952,380.677,112.779,-56.0244,-206.496,88.8067,510.207,353.48,248.551,49.6404,3.71443,144.44,10.6316,-39.1396,-66.7801,103.551,531.429,460.401,172.312,-82.3532,119.7,60.5762,302.113,-41.6679,237.011,-146.756,-305.584,-206.498,-213.219,-128.932,88.0114,-157.896,28.2918,418.034,241.294,252.302,135.978,186.66,-6.79885,284.644,-104.33,16.1123,-75.4104,-86.8945,-257.081,77.3027,78.2644,4.53083,1.0186,132.545,52.5937,162.894,59.5196,14.7635,-62.2058,174.874,129.324,128.753,-173.952,-97.2483,-64.2171,-24.2723,25.6401,-4.63595,173.237,184.311,-136.528,81.5716,11.959,-145.278,-205.632,-399.522,308.021,431.165,271.385,102.299,-194.354,-20.0599,-100.912,-17.7441,89.0787,63.9458,-353.468,-175.401,-69.3224,-232.298,-373.431,-17.8054,-41.1887,314.16,298.996,270.959,-179.65,-110.503,142.255,-144.026,-369.573,-85.8023,-269.845,-290.419,-184.879,-583.147,-469.669,-457.297,-209.364,-127.807,121.276,404.378,64.3174,20.7105,-147.753,-259.338,-169.047,-156.696,-64.7049,-288.374,-28.7314,-543.177,-558.623,-330.377,16.1743,-280.5,-16.1794,175.582,15.6462,-193.073,-185.043,-135.075,39.6737,127.046,66.9084,-106.829,-26.81,-301.409,-173.066,-129.684,-329.279,-145.213,35.2642,83.8157,-140.594,-159.522,-134.402,-411.225,-43.6378,-100.877,-19.6626,139.561,76.799,115.328,-8.6961,-189.195,-134.197,155.355,122.731,125.662,-131.42,-40.1491,-42.8939,-339.589,-116.175,224.559,70.4392,287.329,28.4074,86.9529,55.5413,-6.65285,-82.4257,-63.836,-97.7222,95.6181,-36.6554,-48.2251,10.9221,-152.848,-238.435,149.879,-6.96415,226.004,-36.5471,251.644,85.6191,254.48,20.7702,199.25,8.89571,122.176,-138.673,9.39019,-42.8116,-282.02,-26.6639,120.934,119.203,29.1713,20.233,374.482,214.175,118.68,285.897,303.496,125.911,-33.4745,-264.403,-320.765,-182.301,119.888,-41.8382,259.469,179.698,41.0653,175.082,415.812,383.12,308.533,65.1822,49.5396,-40.4121,18.2784,-1.97969,-285.625,-72.2764,187.221,202.847,73.8905,6.36278,2.73608,},{-225.612,-403.062,-297.289,-48.063,-28.6406,27.485,352.608,325.534,-34.2921,21.1198,-333.183,-246.685,112.592,6.79873,66.5893,-146.206,-246.917,-103.365,3.88255,-175.282,141.779,-106.483,-250.892,-300.145,-305.93,-144.856,-153.516,-263.891,-351.014,-211.411,-287.703,-237.023,109.77,-282.959,-465.589,-153.379,-123.105,130.136,167.266,-51.1891,171.855,-137.918,143.671,-170.726,-161.383,-536.439,-52.4179,105.907,-14.2969,6.38987,-24.7629,41.4617,239.687,231.903,536.471,187.15,270.599,227.034,-197.127,310.008,323.162,309.357,479.658,-226.98,-319.531,-60.4329,236.909,197.714,255.603,413.462,141.721,-134.169,254.583,45.5534,177.721,492.697,543.663,442.057,833.713,-47.291,-101.401,5.4528,31.2576,313.896,168.728,-12.649,81.8838,61.3534,-154.898,-40.1255,15.3694,177.079,624.182,331.755,643.106,91.8795,-257.475,-170.294,-132.37,113.57,-499.444,-658.38,-250.871,-228.119,-272.95,-742.75,-722.941,-227.097,439.094,107.633,712.678,463.4,79.3525,135.473,-251.49,-569.876,-679.483,-298.785,-129.034,-143.784,39.0525,-165.264,-242.905,213.175,182.613,-194.249,224.185,348.05,202.836,708.833,-231.877,-578.337,-623.722,-401.731,-186.487,-301.351,-247.106,-295.754,-287.712,-254.626,-49.1186,-267.754,-132.367,178.584,24.7946,305.176,-24.6713,85.5727,-140.538,103.034,-123.183,-333.316,-192.16,-27.1718,-169.335,-346.136,-88.8671,-290.625,-394.64,-145.164,-93.6822,-229.738,-229.007,152.771,288.19,125.129,93.7676,-303.671,-36.584,-38.1322,-170.383,29.3133,-76.0121,-506.15,-511.517,-132.651,-224.736,-424.435,-22.3584,510.971,206.787,-79.9898,87.5708,60.8104,34.5614,-147.952,-209.511,50.3562,-1.24039,-663.713,-414.219,-612.124,-105.971,-311.9,75.2733,415.527,227.491,274.313,168.72,-77.5317,-157.039,-149.942,-132.443,-107.546,-267.227,-354.889,-257.535,-53.3157,-237.457,-243.094,-69.8675,63.9122,308.941,260.435,-49.7642,-250.52,-78.6936,-191.11,21.5631,-288.364,99.4825,61.9297,-267.946,114.505,119.988,-94.2441,82.3537,86.5037,367.436,162.898,187.37,87.0439,162.12,270.62,239.769,335.126,366.585,260.203,405.058,167.505,198.826,-67.9735,-329.743,-7.22686,323.794,189.985,11.7607,-36.8928,6.12051,302.553,697.397,261.758,361.099,400.071,424.377,368.646,},{-11.7818,-31.8502,-55.5055,-19.3104,67.8324,-75.9012,93.0026,-181.087,-415.82,-164.977,-367.997,-322.276,-186.298,-231.957,-110.983,-86.2723,-11.3895,.911256,-150.112,-190.549,-25.8167,14.0299,32.5304,-9.94835,-167.277,-169.341,-54.7726,-193,-276.328,-159.114,-135.844,-111.677,-38.3711,-237.415,-195.128,-49.1738,-3.33997,207.587,-14.0989,-175.574,-90.3647,47.2559,316.744,-54.3307,-346.316,-463.201,-168.628,-87.0972,-246.65,-31.7332,131.453,22.3033,92.3857,36.3618,99.4059,-63.3492,-120.154,34.0133,208.965,308.981,253.493,245.036,195.83,-313.818,-290.826,-11.1651,-18.4583,5.73416,112.535,84.3267,100.443,-58.0365,-39.168,15.5309,94.616,282.458,351.483,291.379,556.638,-6.7044,-187.29,-32.5339,-142.725,141.136,109.581,76.8424,69.0312,-91.9242,-217.227,-160.905,11.0196,182.479,361.08,374.653,558.231,92.7124,-72.0424,222.284,92.8028,108.965,-84.2122,-157.23,-171.414,-256.672,-486.197,-672.19,-577.322,-173.232,220.63,288.258,674.106,456.934,136.305,330.103,39.5379,-150.563,-305.905,-238.007,-146.311,-381.252,-378.102,-365.231,-437.195,-268.142,17.1726,12.5873,472.426,353.38,187.407,704.503,102.918,-129.037,-449.098,-246.308,-64.0394,-174.582,-294.378,-326.929,-538.54,-407.909,-304.446,-16.0877,119.873,263.833,73.0491,569.708,322.91,261.761,-8.46081,-132.048,-285.025,-449.655,-475.225,-256.963,-120.785,-130.081,-82.2995,-275.35,-123.644,114.893,-15.3139,147.73,86.2882,373.883,181.26,92.543,-70.1489,-263.012,-300.36,-151.915,-52.1939,67.9856,-61.8453,-273.22,-200.878,-30.6116,-128.351,78.1994,203.894,351.38,281.67,130.021,59.8408,-98.4889,-181.313,-112.792,-7.01258,77.7919,-21.1892,-378.571,-9.62126,-413.203,-71.2028,-108.724,-0.459529,133.838,251.948,201.68,46.6724,-150.209,-215.567,-113.019,85.9608,-104.882,-347.27,-217.131,-24.6288,-330.766,-113.971,-325.183,-126.23,-153.163,130.491,271.097,169.455,-69.5422,-64.9267,118.128,160.333,-266.625,-84.5947,-27.5982,-299.811,-97.5925,-109.317,-355.783,-177.308,-11.6875,162.939,83.6983,124.082,-21.5602,-121.511,-43.1856,-137.101,-147.62,-129.77,-180.984,-61.8926,-82.1355,-149.864,-344.874,-605.904,-472.993,-252.384,-130.58,-52.8491,37.8579,-90.3576,-38.8846,-61.8433,-149.543,-265.218,-160.051,-132.778,-77.1544,},{27.2628,24.5435,4.83002,11.0013,31.7108,71.8667,75.5629,69.7883,78.38,68.7899,77.6208,29.7002,5.8595,1.08255,25.2039,18.6708,25.9393,29.174,29.37,60.8332,26.659,53.6739,14.515,-1.87347,-18.5204,6.55961,2.22462,15.1832,74.8708,51.9262,22.3229,13.2429,24.0249,28.889,62.3984,46.5963,22.8245,4.42005,-19.4644,-2.44589,5.19394,-36.224,.58551,21.7659,33.4343,43.196,23.9361,9.31336,25.7318,62.7813,61.6392,41.8024,-18.0095,-5.5882,19.9721,36.904,24.2075,14.7414,7.6964,-6.6329,56.247,26.4673,51.186,8.30637,26.2761,54.5873,47.3287,-3.97772,7.17659,32.7884,33.3199,.444786,22.3829,32.5936,6.12431,.922393,36.0484,52.7963,47.4997,31.8227,31.8673,52.9875,29.6065,-0.887216,12.7244,7.35037,32.3409,6.73936,-27.5882,.694303,-1.02942,-16.589,43.2221,64.515,49.8921,30.7704,23.6692,9.04992,-1.1768,-14.0368,-9.69928,13.4451,-8.23453,-31.8697,-25.3687,30.5099,21.7484,13.4788,46.2222,34.5636,33.6647,20.3464,16.0193,.956653,-15.3573,-23.4021,37.9945,29.3393,41.6194,22.9611,46.615,64.9005,50.805,18.0638,43.1883,39.2967,46.2104,22.9869,16.3144,37.1685,34.5113,73.8014,37.2427,31.107,32.4685,34.0058,26.3413,63.2952,45.4228,15.3797,28.9308,28.2781,18.2661,4.11835,11.6688,26.6711,81.1721,54.6842,29.9394,26.9178,60.6235,36.4697,33.7824,44.9302,38.9639,16.498,56.4473,80.7806,51.9496,11.4949,11.5907,42.3394,34.4853,19.4972,-4.26467,18.2363,26.1558,9.11724,-4.69652,26.2498,22.763,34.5204,43.5444,45.7692,20.3556,-9.06937,20.2763,62.222,47.7401,16.4922,12.6602,.860461,5.28096,-16.7418,6.23313,29.039,33.9303,12.3543,31.7995,42.0138,43.8449,-0.240693,32.8353,68.2853,47.1125,17.7505,28.2538,7.59082,-2.1832,28.6989,28.4355,47.1482,33.345,-5.10625,26.7825,32.9925,36.9757,15.0659,16.6191,43.7349,45.8085,33.6843,9.3687,25.3268,14.1362,45.2561,24.9769,21.6051,30.359,8.40465,26.2448,21.6227,23.4795,8.08983,9.02512,29.1551,73.5345,79.2676,74.03,17.6539,6.16581,-4.23689,-0.701223,50.162,47.8572,13.1926,40.8791,29.0898,14.9519,9.01212,-4.69187,-18.805,33.3414,63.9488,76.9444,46.8196,20.6888,38.8641,23.0425,29.0804,46.6971,4.53714,4.9762,10.7475,4.66911,17.1771,},{22.9132,21.9176,-5.48249,5.3072,34.2205,82.5234,108.268,91.7526,88.8349,54.6137,60.4702,-35.9059,-54.2715,-17.3967,36.5395,34.5613,21.1954,24.949,31.6377,70.3896,38.0357,59.6443,6.69987,-19.8669,-62.056,-3.88822,-38.8223,-29.073,54.7459,58.3735,33.1938,27.3605,37.0127,43.5443,77.7193,68.0388,22.8206,-3.67153,-56.8492,-22.7219,-20.1731,-86.4755,-42.8765,-22.7593,-13.8661,34.8116,28.7502,16.3334,30.0251,74.5912,81.1873,64.9058,-54.2349,-25.9088,14.6459,47.3864,.8935,12.6905,-22.4649,-60.4013,19.3953,3.11121,42.9123,5.34329,32.1466,65.29,66.7587,-12.7583,-3.55181,26.072,40.2342,-41.2047,10.7966,17.7802,-24.9764,-53.9725,-1.48093,39.7044,42.0174,36.648,41.2305,63.0451,38.2008,-11.0927,-6.60442,.799341,34.4323,-13.9922,-68.593,-8.69358,-25.8704,-59.7146,6.54631,49.4583,46.305,40.6539,28.2487,-1.1434,-8.19943,-50.2941,-17.6357,35.1728,7.54491,-40.4525,-66.396,23.5132,17.9441,3.63747,23.2121,11.398,27.3631,28.81,16.0797,-21.972,-57.5367,-53.3432,78.9885,50.4111,63.1856,16.0998,37.3782,72.4944,51.9872,13.4959,38.0323,38.9067,46.4627,31.9924,16.751,10.7507,-23.2028,93.2949,36.0864,24.5807,9.82359,19.7384,-1.35361,75.508,48.8127,-19.0303,-1.94392,17.6591,-9.52992,-5.18598,2.11047,-16.2596,101.916,65.5385,28.3915,25.4536,77.0753,16.338,9.55356,58.5549,37.0498,-14.0471,43.7571,92.5957,79.2153,13.7672,-12.8397,6.97802,-1.90754,-4.30472,-31.4632,2.65621,-7.51968,-34.7828,-60.9542,-3.04684,19.4188,42.2189,27.3047,23.2929,-20.746,-43.1305,4.56552,44.7207,28.5217,.714878,-0.506338,-26.4823,-18.1729,-61.6811,-42.5989,18.0865,41.7743,-11.0914,-0.99494,36.0629,39.5865,-15.7673,21.6972,68.8938,33.6333,2.81271,3.88084,-18.7946,-15.6299,15.5106,12.7237,52.7952,27.0357,-68.0401,-3.42675,28.2453,55.3061,22.5531,18.815,63.0456,68.0672,27.1039,-11.5262,11.4556,6.3104,41.767,13.2533,25.4302,18.9845,-20.6398,5.37368,35.3397,36.0231,11.7718,16.1431,32.4543,75.1005,94.4319,75.6175,3.84518,4.16458,-6.2914,-10.1378,50.9919,44.1598,6.52245,27.1343,31.9689,14.2977,13.8372,6.8185,-11.4256,44.5758,81.9242,95.9664,45.8761,18.7662,63.1151,28.7576,31.8721,59.3006,-8.92405,.48893,29.1999,19.2916,27.3787,},{26.0232,25.4198,11.7726,17.3156,37.6915,76.2144,76.1012,70.485,74.4558,64.942,69.972,30.9438,16.6085,15.3878,33.2949,28.2288,25.7715,30.9755,33.0429,61.9198,37.334,59.1611,28.9325,13.8869,-6.16007,11.2879,11.6756,29.7762,79.4876,61.8681,29.3282,20.5729,24.5784,33.9677,64.5282,52.9864,28.1968,15.7369,1.59788,9.90296,6.25326,-24.1069,15.0094,31.5577,42.201,47.4525,28.9861,10.4523,26.382,62.5636,64.6939,52.7903,.632926,9.5897,24.8716,32.3557,22.1006,25.1333,23.8968,10.6021,61.6585,31.6669,46.6876,8.87193,23.9967,57.3,52.8796,8.31839,14.5901,36.2175,23.2993,-8.26999,25.0144,41.8212,21.1423,14.2062,41.188,50.4966,42.4354,27.9328,32.6879,55.8541,35.763,6.97828,7.98542,-0.997719,25.4675,19.9847,-6.15494,21.5793,14.6931,2.21371,45.9629,57.96,43.8571,27.102,20.6642,17.0144,6.15554,-25.4731,-15.7452,22.9433,5.72526,-12.5677,-19.1228,32.375,20.95,25.3842,52.0496,36.3306,33.6349,18.6003,14.9685,8.97829,-8.80952,-25.6749,25.4713,33.4464,42.5382,29.9055,39.8787,62.2885,38.9169,23.0877,44.6864,41.6991,50.7081,21.5002,14.707,28.2718,17.3493,48.0076,27.1536,29.2725,33.1427,32.6987,21.2013,54.0632,37.953,14.1081,29.0687,30.8313,23.9041,6.68261,7.20523,11.3299,57.502,45.2268,29.3028,31.5407,58.0093,37.1266,23.0673,35.6285,36.934,20.5424,55.0829,74.6569,50.1762,12.3803,-2.50729,25.1966,23.4916,22.3392,2.3067,28.2639,30.9797,14.7788,-7.44726,20.266,23.1436,37.8353,45.5608,45.3645,24.2448,-4.3341,2.74513,40.152,39.3012,17.005,13.6511,8.95005,11.9263,-12.1803,-5.59599,16.1398,32.2173,21.5562,34.0551,41.0212,44.0997,-5.01628,17.1179,48.5933,29.4303,9.7291,17.0005,7.15148,-0.957123,14.8181,15.6366,35.381,23.8599,-7.0886,21.8564,27.5134,32.7243,13.4999,15.038,39.7987,47.1596,36.5601,16.3253,31.2925,22.9798,41.8348,19.9347,20.6877,31.2263,15.6238,37.6716,26.0577,24.5827,8.73441,16.5923,29.7487,72.985,79.9677,74.6896,30.9037,22.93,15.742,9.4216,49.5009,59.703,30.3437,50.189,31.1359,20.4424,13.7674,4.30983,-5.72143,32.5758,58.2719,75.2438,52.7682,30.8981,42.0719,20.6379,33.298,58.9329,17.1614,15.3625,15.9174,10.7792,19.5511,},{23.234,20.6932,4.93305,11.1247,33.6014,78.3444,81.5202,75.6458,79.091,66.8662,72.7913,27.2768,6.11505,3.98774,25.2254,20.5272,21.951,27.2403,29.9702,61.5949,36.0368,60.0696,24.0036,4.38906,-15.8923,9.4752,8.54697,22.4595,76.9141,54.9946,21.1469,11.8626,22.3558,31.822,66.937,55.2196,30.0097,13.2139,-7.87309,3.27468,7.33785,-30.3621,5.6406,24.3553,39.1368,46.8451,24.3191,8.01643,28.3968,67.3577,68.3449,52.6721,-5.97582,2.63115,23.2173,37.4388,25.5388,19.1366,12.4469,-2.09072,58.9724,32.2642,52.1582,7.78433,28.8014,61.0073,54.4921,2.91647,10.592,34.0218,29.6781,-3.28284,23.9634,35.4754,8.9829,2.73975,40.4434,54.7637,49.0985,30.8568,37.1722,59.6379,35.495,1.56874,6.57213,2.27556,30.0256,14.3957,-16.9961,10.1306,2.91388,-9.98034,47.1832,63.9159,51.0245,30.5344,25.3694,15.6846,3.95503,-24.116,-18.292,14.6207,-5.53967,-24.3091,-25.4593,29.9449,19.6142,18.932,51.9421,40.6846,36.2731,20.4712,16.4326,7.71752,-13.3076,-29.4794,26.5246,26.2651,39.4965,23.5009,41.4621,63.1808,44.2634,20.5808,45.4927,45.476,50.9613,23.319,16.0465,33.5471,24.9631,61.4419,31.5753,31.838,35.3073,34.0988,26.0757,64.513,43.152,12.9351,29.5373,31.1983,24.3875,6.26709,9.54602,18.0097,69.0497,48.4505,28.5774,30.392,58.5702,36.1788,31.3752,44.6275,40.5924,18.3571,55.1531,77.3274,52.319,13.0253,2.78624,30.7841,25.2611,17.0676,-4.70246,22.358,25.5647,9.18505,-3.54535,28.8514,25.4218,36.0527,42.6086,43.3362,20.1083,-7.86105,10.517,49.6766,39.7356,12.816,8.36566,-0.0187497,5.33348,-15.5533,3.65536,26.0355,35.0813,15.0142,29.0402,37.2608,41.3711,-4.43224,25.1522,57.0606,36.7847,11.4806,18.1758,6.37434,-1.33227,25.0743,25.7718,44.4095,29.5772,-8.45124,21.4361,27.9464,32.9607,13.8835,12.5276,39.2951,45.8553,32.2399,12.6436,30.3723,21.6373,47.7187,26.9142,23.6578,27.2601,7.96999,30.4717,21.2739,22.755,8.69122,13.1775,29.6963,74.9498,82.9212,76.9742,25.7866,15.6466,5.73665,6.39479,51.8691,54.4503,22.7345,47.4842,31.448,20.0882,13.7314,1.50605,-8.87406,35.14,63.4769,78.9201,52.6697,28.2472,42.3077,25.7962,38.3262,57.5192,14.5448,14.0972,17.6297,12.4138,20.9636,},{-4.00913,-13.727,-117.692,-44.874,88.2447,-63.6588,3.16202,-97.8907,-323.154,-69.8712,-274.356,-138.098,43.3522,18.4141,54.6867,-55.5809,29.102,123.505,20.2282,-131.519,-48.9754,21.0912,56.1569,-27.1889,-156.007,-160.453,-156.455,-171.063,-58.125,1.19978,-38.3557,-36.3607,-37.6716,-230.117,-249.139,-87.9824,-70.1757,178.667,-40.3979,-113.693,-54.4998,-28.3431,318.607,-35.3418,-225.544,-225.505,-8.09392,30.3105,-243.981,-81.8516,8.83528,-2.44837,101.061,100.074,223.601,28.8791,-30.8558,94.6539,206.783,383.265,353.503,325.54,302.665,-210.537,-237.628,-0.30319,-68.1495,51.6322,169.051,176.819,61.532,-105.267,-32.3652,-19.6079,153.464,387.582,464.388,476.98,536.796,57.1665,-154.452,4.32385,-248.256,83.9178,123.805,-78.9312,-96.2981,-196.467,-266.38,-245.604,-22.783,259.233,499.314,517.878,524.164,104.385,-104.662,91.1871,-50.7839,2.16538,-229.762,-256.314,-236.311,-287.014,-430.359,-545.634,-324.138,60.7857,481.598,354.564,628.697,399.249,152.965,252.163,-92.7353,-320.017,-413.628,-301.635,-235.945,-428.417,-316.204,-310.218,-297.855,-178.97,143.827,114.931,501.363,293.605,196.027,717.214,-64.079,-355.67,-564.923,-373.326,-182.479,-165.929,-264.493,-340.535,-488.582,-382.175,-139.008,76.7486,177.855,243.797,79.8828,473.486,151.221,179.437,-88.6111,-193.675,-319.46,-464.837,-496.002,-277.31,-82.2192,-63.1372,50.0134,-65.0178,-30.7788,108.512,14.7222,6.95166,-131.521,185.677,31.6238,-67.1716,-245.528,-461.273,-462.516,-277.951,-37.1981,181.9,-14.8753,-240.958,-181.334,-46.4999,-70.7302,.807489,79.5081,235.004,157.329,2.79591,-113.365,-223.937,-263.966,-242.98,-9.54535,130.935,56.37,-313.928,23.1063,-336.639,-38.0269,-56.1684,-70.5853,99.7063,238.821,172.733,11.4536,-158.264,-200.951,-167.895,112.82,-4.92326,-174.429,-92.64,90.9669,-202.088,-69.7313,-187.456,-164.213,-260.79,70.1568,238.779,72.2856,-113.428,-112.426,91.1982,226.719,-147.943,31.6987,201.681,-110.81,-44.2846,-85.7688,-408.018,-225.088,-186.941,58.8825,-59.7219,-24.6517,-147.697,-139.389,-79.8136,-116.517,-125.797,70.6554,22.3908,91.8334,-27.3419,-174.47,-437.941,-697.933,-543.682,-298.815,-104.701,-152.162,-56.0792,-163.903,-202.356,-162.283,-252.704,-197.534,-8.88097,2.24191,-63.0428,},{31.9658,25.702,17.8245,22.7562,45.5047,92.4902,92.1844,87.2193,85.9124,78.2069,87.4178,48.8758,26.1835,19.4687,32.7219,23.4317,32.9812,35.6928,38.7079,72.4997,44.8362,67.2578,39.8836,18.9238,2.69258,23.5989,32.4508,49.4804,92.2287,68.6667,27.5588,14.6886,23.1305,30.5748,69.0085,55.3379,33.7265,24.4471,14.2169,9.64364,16.3921,-6.73241,32.6665,53.4274,72.5616,71.0243,35.989,6.28951,26.5385,67.1538,67.3161,50.5653,9.24567,16.7254,23.8295,34.8581,29.8478,30.1236,36.8374,31.2053,84.2482,53.1242,58.916,9.61993,22.7582,59.2161,52.9909,9.39238,15.2474,29.0212,23.694,-1.16203,29.5344,49.8286,35.4437,28.8349,56.2898,65.5316,56.6768,30.5933,34.939,58.8652,38.3262,3.43219,.35432,-2.9219,23.5476,19.4938,11.8531,37.1486,24.2835,9.12368,58.166,70.6397,56.1658,28.9013,22.4883,23.1517,14.4754,-27.5644,-27.2907,6.24901,-8.34887,-20.2538,-3.12474,40.8212,20.702,21.7858,56.9516,53.6091,42.556,20.478,16.3035,20.4301,1.79382,-19.5621,11.5715,14.5947,25.1283,27.7855,48.4737,69.9395,34.7597,13.793,38.5599,50.3378,57.1834,22.6788,16.6727,38.3075,29.118,50.284,27.0227,31.6381,48.8826,52.0503,48.1282,67.1584,38.0373,10.8991,27.4868,28.7158,31.7602,8.42618,10.5545,21.6679,57.2999,37.0557,20.4578,28.858,64.4094,52.1434,38.8691,47.4995,41.6539,19.9846,44.2963,62.1224,39.7369,10.0802,3.18361,29.8164,23.8019,15.5678,-2.61205,35.7615,43.8956,33.7,15.5844,42.8735,27.4802,29.5253,35.6464,36.1047,18.0568,-9.2814,8.5879,45.1918,34.5624,11.5012,14.1872,19.1033,25.0242,1.45531,19.9402,33.7203,32.9445,17.0497,26.1586,26.5552,30.2654,-12.293,23.6242,52.6281,35.7087,14.1307,30.1244,28.5558,14.4094,29.8481,33.431,46.1694,26.4307,-4.39843,17.045,20.4822,23.9494,5.09855,1.62155,27.4309,40.7712,38.442,34.3778,53.3729,37.0923,52.7905,36.0352,26.4986,20.4962,4.31372,31.7786,10.7142,16.5614,7.06559,6.4014,19.8912,77.2474,92.4589,86.6647,38.8945,27.0045,19.6577,18.3835,46.8138,51.9786,23.06,47.3124,29.4937,21.5782,16.6952,-4.23154,-11.7674,35.0733,66.4101,86.6639,62.6206,36.4561,40.0536,27.5375,41.2698,54.6175,19.5154,15.6137,18.3986,15.5873,20.336,},{0.0278533,-4.67662,178.34,17.0631,-168.325,23.3798,245.509,132.74,133.283,-26.8123,-0.221923,-469.363,-35.9142,22.8969,-124.337,-116.725,75.8225,-128.575,-400.455,82.696,86.6889,-37.4694,124.463,-138.992,-21.2807,14.1474,-66.1865,-184.431,-317.573,-226.382,-38.8846,-230.409,-71.7249,-28.258,42.6996,-64.891,18.875,-32.6341,30.3332,-102.159,-50.7042,-116.649,-61.3792,-94.6815,315.013,280.673,-78.6982,-48.2635,-17.6097,-110.56,-7.10247,317.395,662.888,134.861,-75.6369,-173.987,-117.293,26.0565,125.3,107.828,194.478,356.371,298.296,119.583,33.6239,67.027,307.284,264.621,11.0655,-73.6902,-134.491,-23.5136,-131.097,-9.98603,-4.47072,-69.0708,84.0412,141.113,272.949,-20.2935,88.5806,-113.421,151.069,276.309,-2.02885,-140.271,-214.895,-38.6356,120.48,-80.5867,-103.806,-89.3293,109.28,255.137,10.8765,-74.9006,-51.1936,-321.912,-261.68,-314.523,-118.059,-37.1211,17.4859,-58.3744,-26.2177,-153.436,-155.423,-68.6677,-354.774,121.26,-167.574,-138.205,-187.354,-383.278,-425.769,-96.9895,-213.053,237.245,94.9881,86.7284,-387.815,-63.4041,138.747,-131.798,-356.058,-454.895,-406.536,-176.96,-189.447,-424.874,-97.1199,-111.441,-25.2429,-138.123,192.107,137.873,325.902,319.758,-12.9382,-46.2827,-92.1553,-183.866,-215.581,-229.673,-25.3365,7.43608,107.273,74.6165,-57.1073,-146.693,-63.9515,-56.3475,-10.1157,90.505,165.278,144.024,-249.481,-191.792,-114.594,-103.186,18.9025,-9.45793,254.537,-14.8172,-103.051,80.5103,-225.713,-362.151,-93.8346,-20.1606,174.544,-156.316,-233.533,-76.6972,-314.921,127.864,8.66675,64.2016,210.91,93.9775,-116.675,132.926,-41.4808,-22.7225,-223.082,-86.7305,-40.0023,-278.921,-211.72,2.34093,-405.572,115.229,9.87848,11.3691,118.814,-191.863,113.282,23.6311,15.2694,-38.8504,-131.655,-374.529,38.6802,187.785,-239.618,204.235,-94.8956,242.324,-155.365,-106.786,-66.7408,259.919,247.474,126.906,224.808,-173.018,-247.844,-48.1712,154.562,-110.763,-65.8802,-241.451,149.079,219.081,-54.4904,53.6447,182.609,281.906,40.2767,39.7828,45.5266,50.9019,119.015,-9.58618,-109.983,-117.602,-65.0678,307.99,347.199,215.135,111.177,145.42,-21.5622,-70.1671,-92.2276,108.733,318.532,114.944,-35.1632,84.73,-105.256,143.807,282.184,117.548,209.431,108.546,},{16.8868,-3.45572,-74.4922,-56.7486,-20.3628,32.7429,75.5802,71.3609,68.5818,25.4524,10.9912,-52.054,-95.9194,-56.2794,31.0048,26.6232,17.2549,-1.77861,-26.2573,32.3057,13.0431,20.1524,-23.7942,-33.044,-87.0282,-58.3147,-57.1077,-34.6888,22.8097,17.109,14.3447,21.5972,44.6505,37.6264,46.1198,40.1596,20.2441,26.8614,-8.53506,-17.6206,-48.2926,-60.1765,7.26344,44.2328,43.5984,79.005,63.5771,20.7492,28.8525,56.8323,51.1132,19.4798,-45.091,31.1362,15.8403,1.56804,-1.02622,20.1694,18.9444,-14.643,19.9045,38.5923,46.6592,5.07378,19.6898,33.4014,18.1013,-14.5042,8.64002,5.70455,.574959,-50.2765,23.0575,31.7081,-7.71839,-27.856,18.9336,75.3367,65.2608,52.7913,39.445,24.8222,28.7979,-11.5926,-30.8563,-65.5668,-54.6779,-70.8524,-96.372,-63.9817,-73.8058,-83.8938,5.05921,55.1269,71.6061,61.0094,27.0246,-23.4989,-12.3178,-104.1,-83.3016,6.5573,29.6136,-27.7667,-76.167,-25.4836,-12.1543,-33.5401,-17.7431,-25.0686,31.5334,41.9419,13.0532,-36.3462,-79.7978,-85.0027,22.493,51.4371,62.3332,31.724,32.7196,38.5515,27.8686,21.1181,21.939,23.8464,2.82217,37.3882,24.1229,-3.03304,-46.0304,28.4447,13.9577,35.2651,33.8784,66.0018,15.8288,50.8594,61.9396,-1.69063,.343903,-13.2697,-68.0598,-55.2027,-6.19683,-71.6896,45.4226,26.8689,-9.82753,.868992,67.0693,32.6098,6.55201,44.5231,16.0786,4.81052,32.6376,45.3278,14.0489,-35.6494,-40.2653,-27.6267,-3.0512,-1.99103,-46.6774,6.61317,1.82244,7.30945,-57.6182,-24.8722,-11.7531,38.2751,39.7825,16.4692,-27.3949,-79.2288,-24.8179,29.8112,20.6245,-23.2081,-27.9043,-36.155,-5.3024,-62.406,-59.2243,-8.53133,17.7179,-25.2046,11.1962,25.2306,14.3459,-88.413,7.39372,50.9525,11.1336,-44.2567,-35.9449,-60.2129,-34.6519,-8.18735,-7.93765,17.5119,-31.7631,-129.044,-29.8792,-31.1943,18.8322,3.59525,6.56805,56.6619,42.6116,-13.147,-33.0651,13.5554,-9.81359,20.181,-19.978,-21.3638,-24.7385,-28.32,-26.2643,13.9055,7.0193,12.9762,-8.48724,10.1128,54.7982,55.8777,33.1589,-40.2137,-41.9926,-50.4203,-94.8159,-40.2846,-8.27246,-12.7261,10.3335,24.3528,7.2798,20.9455,-28.5956,-42.4611,34.6195,66.8311,90.0692,60.5759,13.8998,39.2925,-20.1559,-46.2372,43.1865,1.47825,-8.26888,28.8146,20.5566,28.738,},{-12.1656,-31.413,-66.5579,-14.0271,75.6811,-65.1239,124.13,-191.006,-435.615,-179.771,-361.954,-318.488,-172.911,-236.869,-125.653,-96.6693,-10.3034,-2.21517,-145.025,-168.414,.5982,18.7851,25.2417,-1.50539,-151.005,-178.166,-56.3235,-189.688,-265.667,-177.225,-126.493,-114.07,-24.0619,-235.963,-174.699,-46.3891,-16.4282,209.34,-29.5407,-184.29,-83.2132,61.19,324.759,-59.1543,-356.106,-467.742,-165.027,-79.673,-249.979,-14.9757,125.042,-12.9642,66.8371,12.0438,68.0248,-76.5129,-122.489,32.5087,202.709,312.914,233.625,271.611,227.212,-315.313,-295.061,-6.67509,-30.3248,-3.66959,89.8615,57.5584,92.6365,-42.4468,-38.4653,8.82003,109.624,287.942,344.696,285.044,584.24,-15.3774,-203.267,-53.5995,-167.408,121.821,98.8204,82.7344,77.0959,-94.1317,-216.201,-159.601,21.2579,184.131,358.481,372.583,557.338,87.7289,-67.8896,230.799,93.5888,125.073,-73.0147,-159.256,-169.658,-247.893,-436.013,-664.372,-593.256,-192.86,181.81,269.876,679.238,448.584,132.228,325.296,46.6998,-119.17,-280.415,-238.288,-165.341,-381.446,-361.612,-355.665,-421.353,-278.744,9.17615,11.0557,449.418,342.789,183.121,699.489,116.087,-97.4741,-428.54,-242.917,-61.0453,-168.27,-274.341,-310.745,-525.484,-415.175,-304.93,-16.1122,119.52,239.203,71.8529,575.58,335.492,255.989,-10.169,-123.461,-277.377,-435.816,-456.475,-237.879,-123.871,-129.553,-91.4923,-282.703,-124.309,101.641,.00157455,155.823,82.606,369.327,187.351,95.591,-70.4474,-256.453,-291.344,-159.893,-58.7876,54.2199,-69.2972,-269.884,-195.944,-42.3492,-118.377,88.7535,197.812,349.403,303.925,153.811,68.3675,-79.9952,-167.775,-101.342,-9.93585,62.2492,-22.0784,-367.835,6.09976,-400.969,-72.7205,-93.6303,9.74709,135.664,269.842,208.042,55.5379,-137.803,-198.907,-119.78,84.7905,-97.6493,-343.962,-190.444,-17.3753,-323.783,-113.7,-321.368,-123.355,-159.314,141.177,281.965,152.23,-77.9411,-71.4044,117.936,167.28,-260.525,-86.9111,-37.3562,-296.902,-82.0184,-108.541,-363.575,-190.624,-30.5001,160.11,71.8896,111.185,-26.8462,-98.6455,-30.7151,-125.687,-142.311,-160.47,-193.222,-62.0798,-75.6635,-156.403,-349.083,-607.219,-462.633,-253.11,-126.364,-50.0704,63.7738,-60.9246,-42.1065,-80.841,-149.564,-278.719,-161.417,-134.801,-79.2121,},{356.127,602.64,397.393,183.602,274.651,348.313,304.51,-195.146,186.744,82.6426,389.188,-420.986,-117.453,-132.831,57.5774,-107.915,313.384,91.1403,266.245,704.223,49.7694,181.34,328.32,119.483,197.268,589.087,-2.04256,-246.16,-339.955,-389.032,440.145,313.533,-147.832,263.31,527.736,-97.0408,252.269,-3.44666,213.018,-67.0743,156.27,431.1,292.072,281.718,108.872,652.943,402.217,64.2005,287.073,385.396,-79.7666,17.5508,296.776,-261.906,-635.683,-670.057,72.6071,235.827,55.996,-357.515,119.188,516.892,216.566,239.047,807.428,62.0766,-85.4731,319.176,97.7754,-425.312,-224.858,-219.332,-391.003,171.435,-126.378,278.776,342.084,125.795,107.128,133.143,486.574,48.536,365.89,57.7193,36.9594,-96.5311,-398.459,-576.221,-410.488,-101.399,168.179,26.4772,-99.7013,155.888,232.1,59.8654,604.149,301.527,-200.503,-522.851,-4.06444,-307.673,-256.664,-952.581,-788.213,-153.434,-140.625,-531.81,-456.906,132.796,92.8325,255.674,27.8075,-220.067,-257.918,334.985,116.23,376.732,150.781,-130.606,-851.186,-492.756,-28.9876,-526.929,-360.906,397.955,31.2266,354.748,-181.614,-998.289,-371.801,247.578,601.029,540.427,225.967,154.386,-190.364,-135.393,261.201,-134.987,-1318.8,-223.049,-35.8014,-160.09,80.7768,-776.534,-297.134,739.312,693.017,22.3691,529.419,604.789,243.996,60.7085,-425.592,-526.884,-652.386,-404.192,304.197,-71.5725,29.832,-208.209,-218.994,-37.0705,-228.23,259.101,674.786,478.689,123.244,417.999,615.475,-124.278,-238.185,162.464,148.414,114.675,111.684,88.0353,-344.472,-367.666,-211.825,-5.60975,96.4508,-280.76,-376.617,139.265,361.413,-368.933,27.8842,319.22,-117.051,128.775,33.9299,-57.5103,-135.704,-347.947,103.86,-282.67,-37.2662,-118.011,-206.618,140.642,308.609,-0.935454,442.258,54.0527,-668.381,349.566,-201.965,-111.878,-70.5654,228.213,52.579,-175.64,153.719,-289.032,-766.51,-261.601,.0418433,-153.893,-280.135,-970.393,-282.581,150.545,-452.51,-740.613,-294.465,211.229,111.253,702.144,392.256,-38.8714,-272.507,-505.295,-566.994,-550.931,-1070.39,-421.784,-1.69831,124.901,-284.07,-541.32,-298.045,-368.978,80.1494,4.01206,285.028,-177.948,-525.277,-779.717,-1304.64,-929.047,-673.096,-709.968,-464.751,-324.86,},{23.3002,19.7847,-9.49609,-8.52267,15.5505,63.7963,68.153,64.703,71.7174,56.5413,70.8965,26.8633,-0.812381,-8.19036,26.2321,18.5204,21.6423,20.146,11.5566,53.2385,19.7978,52.0247,9.8823,-6.09122,-19.4826,-4.54271,-11.5867,3.67336,66.2545,47.144,15.0112,11.5162,14.1351,21.9029,60.2997,44.9133,25.0497,8.38635,-7.94631,8.63794,12.54,-37.4166,.00778021,20.0173,29.3974,36.3218,16.9848,.984915,23.6754,62.1993,61.3519,51.8462,-2.97882,11.6434,35.3409,48.332,34.8064,18.2694,11.4066,-14.3777,50.7068,21.9542,45.927,-0.312462,26.5448,56.0715,47.8785,2.95846,14.4119,44.5569,40.4427,11.2559,32.898,41.1473,1.54992,-0.448718,30.4326,48.0205,43.4089,33.2376,34.5954,57.2863,37.5241,8.31612,16.5996,10.6991,33.8308,9.35522,-19.3201,-3.94179,-6.17858,-24.4412,35.763,63.5503,54.3081,32.3492,22.808,11.0917,4.5188,-9.23953,-12.9637,13.0732,-4.74525,-25.05,-20.6139,34.1434,18.1676,4.15852,37.0685,36.7499,35.2822,21.4292,18.6133,5.50348,-11.5172,-25.1145,31.1209,31.3326,43.5384,24.5292,51.3256,63.1771,44.0896,11.4347,49.8443,42.9653,47.989,23.5055,19.9269,47.0955,42.6297,76.0597,41.0343,40.5144,39.8234,38.5488,32.2204,59.7903,39.5203,18.8295,43.4102,39.4035,26.1699,2.62952,14.1377,33.5851,86.3558,55.6594,26.9243,23.7339,57.0438,38.6819,36.496,37.8153,32.7818,19.5028,67.5171,86.3869,54.8862,8.89558,12.7909,44.8517,37.259,18.4238,-10.358,17.4577,26.9428,13.7547,-6.60203,26.8443,18.5824,35.3779,48.0126,49.97,26.7136,-10.4998,21.7173,65.2917,50.6455,12.2211,7.957,-1.12912,4.21106,-20.613,9.7386,34.8584,37.0548,14.9341,37.0137,42.0409,45.3082,-8.14879,33.3671,70.9314,45.9436,13.1968,21.5805,2.83607,-6.76749,30.5433,36.0991,50.0466,34.7821,-0.624214,29.5054,25.9631,31.7638,9.18244,12.3848,36.773,37.1774,25.6884,-2.24972,24.2631,14.8963,50.7165,30.5111,24.2798,32.7248,10.053,28.5713,18.5061,15.6224,1.75236,2.6843,25.1281,70.6728,73.2146,73.1093,11.7911,-3.25032,-16.4241,-8.44951,50.9047,51.3053,18.5916,46.1668,31.5475,16.7841,9.89848,-11.5221,-27.8138,26.5813,57.7373,72.6901,42.5741,10.7647,26.4461,17.5968,28.3393,46.6397,5.93705,5.07283,6.1982,.230692,14.199,},{-63.2199,-103.813,-186.143,-364.512,-522.886,-102.199,-202.856,-244.391,53.6544,13.8159,95.9765,-397.705,-372.685,-86.1834,-144.676,-79.9426,-109.926,-440.039,-648.494,-380.59,-440.716,-647.399,-237.486,110.503,218.645,88.7922,-107.493,-301.506,-885.847,-709.767,-167.515,91.5843,-262.261,-169.045,-331.125,-200.921,-393.844,-432.546,36.5467,-137.095,-367.608,-196.952,-283.802,-25.4212,-342.736,469.081,-98.3715,123.288,54.9459,-431.037,-195.617,-6.21776,-4.73883,69.1535,72.968,-381.016,-461.523,-19.3828,70.6353,-51.253,172.103,-302.591,-241.639,199.507,413.671,68.2911,206.144,379.473,159.739,-33.7899,-17.6467,-169.211,-270.624,142.91,194.814,484.386,260.279,130.094,-313.914,75.1777,357.278,80.5429,160.527,699.406,422.323,258.621,-236.382,-614.57,-177.546,-25.6432,440.301,534.406,277.41,530.053,-29.1898,-107.258,382.408,393.221,124.857,323.759,432.827,303.927,25.8389,-500.042,-561.538,27.7304,166.113,683.103,108.791,515.164,-136.361,-136.593,62.3351,59.1579,270.905,387.697,237.384,416.058,-95.9827,-208.124,-188,13.5606,117.191,89.6482,-128.394,153.214,220.965,53.0458,-10.0988,-420.085,444.998,688.195,768.875,387.732,-145.113,-122.076,105.532,66.9112,180.817,686.381,-7.43518,315.717,173.894,2.2602,180.057,171.429,555.26,733.594,692.956,309.626,207.558,380.386,246.793,37.3201,399.184,755.502,261.74,-34.4042,396.766,-139.191,198.37,444.949,559.563,380.56,36.5073,268.086,34.9415,-162.818,-239.63,146.25,234.935,203.877,-30.45,150.443,170.819,-32.731,139.416,603.213,530.996,142.415,-199.185,191.943,-65.2353,-537.018,-112.162,219.257,238.905,-136.311,-8.65242,452.806,-404.554,100.256,-134.67,53.7309,-134.653,-640.566,-251.1,-393.167,-306.746,-515.951,-137.827,-81.3569,75.5525,130.632,-160.302,-188.187,-306.565,-3.0799,-248,-89.6073,-164.586,-57.1094,-51.464,-178.681,-182.954,-322.76,-365.33,-35.5362,-77.1874,92.4582,-546.569,-351.658,68.5051,-7.58641,-407.052,-377.67,-212.21,39.6133,-387.916,-38.0448,-303.138,-345.983,-276.191,-576.623,-463.058,-317.334,-454.673,-14.129,-73.732,-23.6283,-59.4773,-218.12,-299.934,-394.201,-268.787,352.653,579.581,205.95,2.16426,-242.077,-466.218,-170.45,210.661,.540524,-122.638,-150.422,},{26.7742,21.0824,13.3936,15.5918,35.1132,78.1534,79.3616,78.3091,85.1432,81.2121,84.1734,49.4885,24.1986,10.27,22.426,14.7629,26.48,28.9218,31.207,61.121,35.1265,52.3804,24.7465,12.6982,5.08333,23.3389,33.7196,48.1439,78.4044,52.769,18.4585,9.52747,16.3668,21.5954,56.7307,45.5933,24.9696,17.0429,13.9334,14.4536,16.9856,-4.80918,32.7814,55.4081,74.7316,63.5509,24.8176,2.46647,20.4515,58.1106,56.7911,37.6863,10.3351,22.0578,26.0012,30.1388,29.7465,27.4295,35.6013,32.186,79.9746,51.9175,53.3856,6.45834,24.0095,53.7931,45.5483,9.68308,16.4944,29.936,23.6253,7.06583,27.4834,46.0805,28.9923,31.2718,57.1793,63.0131,54.6208,30.0399,30.8751,53.7808,37.1917,8.66882,10.0795,3.89416,20.1972,12.1864,4.20637,20.1158,18.2102,8.3945,59.3404,67.7081,55.8716,28.5319,23.2114,24.0898,16.4174,-5.95189,-13.0525,2.8306,-8.92675,-20.6539,-6.03962,29.6287,17.5661,15.7299,51.8605,52.7383,42.7707,20.2766,18.3226,25.3466,17.8218,-0.284901,18.4093,20.4049,25.3743,23.5289,41.7678,61.6222,41.4999,18.2634,36.4722,45.3737,52.3244,22.4377,18.1868,45.5638,53.1901,59.8562,35.2742,33.1665,43.9861,45.2077,44.2889,59.109,41.4542,24.0246,37.0723,30.5856,31.643,6.58193,14.7743,36.3403,68.4408,48.8825,26.2025,25.1198,55.0806,47.6797,36.1742,39.1913,41.0161,30.7512,53.161,65.4865,39.6336,7.6389,13.5716,49.4093,47.0294,27.8574,3.02247,29.4204,36.6436,30.1196,16.0002,40.438,25.744,31.3752,47.6521,47.0655,30.4921,-4.05559,18.6684,60.8119,52.599,20.3189,17.5109,17.028,27.1797,7.50296,23.3634,31.4339,28.7372,17.4326,39.0054,39.4435,39.311,-5.58313,31.4564,61.2086,49.6488,19.0897,32.8598,26.2033,14.0678,33.1714,32.4037,34.5517,25.5853,9.31856,29.0545,31.0238,23.678,9.32999,10.9101,29.0336,32.8364,36.3035,34.5363,48.7541,31.7264,45.6094,25.8113,18.7919,30.7521,18.2846,33.658,8.17826,10.9752,8.46439,5.91415,27.9073,74.0075,76.9479,77.2546,34.0117,17.181,7.24055,7.12887,48.5899,53.0115,24.2205,37.3845,22.7338,16.2584,12.7802,-3.82194,-7.56639,41.5646,67.0101,81.6517,63.2879,41.5135,43.2607,34.6527,40.1287,48.1191,17.6619,14.4189,16.7266,13.4875,18.6894,},{-6.66998,-21.8714,-69.4904,-20.2998,66.5662,-60.7394,110.721,-178.116,-414.037,-159.65,-279.537,-287.892,-195.61,-250.692,-124.835,-93.034,-7.0687,16.3355,-140.902,-156.684,-32.6076,17.9493,20.1485,23.3798,-125.957,-167.479,-71.6734,-175.068,-167.461,-135.098,-123.71,-115.458,-25.1088,-216.702,-153.409,-41.0167,-4.96278,190.189,-45.3136,-145.867,-43.1167,70.7929,309.076,-27.6787,-333.925,-386.633,-134.03,-87.9704,-246.931,10.7815,96.9742,6.14418,63.4585,-4.88812,22.6613,-56.8269,-110.518,.994723,178.865,312.13,242.15,219.36,245.621,-291.396,-274.399,11.1449,-31.8859,3.0299,81.0294,41.0855,51.9287,-30.4203,-32.5314,-13.0651,75.5582,255.98,324.633,255.84,516.306,-16.488,-178.955,-24.3737,-175.887,99.6443,73.6036,52.7247,36.2067,-72.0908,-183.124,-179.894,-29.2587,144.538,331.128,339.223,509.074,83.8158,-47.4966,236.202,100.488,107.815,-85.2505,-141.582,-163.822,-201.115,-390.155,-624.826,-552.424,-161.726,204.054,250.514,627.741,388.639,121.345,309.546,52.5389,-76.7784,-252.241,-240.319,-182.681,-331.855,-332.454,-348.932,-438.206,-273.107,41.1513,16.9463,436.174,290.939,161.62,671.002,118.747,-103.98,-417.058,-244.788,-92.4302,-153.411,-259.502,-313.73,-509.415,-384.573,-287.354,-9.12036,118.805,229.531,62.945,535.011,297.487,226.768,-30.7074,-125.455,-289.666,-404.45,-441.233,-260.612,-152.141,-141.434,-78.4433,-264.31,-124.769,106.382,5.87377,149.065,71.0951,357.448,182.627,82.2342,-99.7099,-237.663,-280.934,-181.887,-97.4631,29.5183,-52.8396,-242.657,-171.401,-24.9197,-114.485,104.22,201.579,353.343,301.902,149.941,46.3557,-56.7877,-164.156,-129.064,-27.781,60.9802,-5.99958,-332.691,-6.34332,-352.382,-61.6013,-88.0853,7.53799,132.959,257.739,195.502,24.3315,-112.996,-189.107,-130.095,72.1766,-91.9099,-322.943,-218.357,-14.2095,-296.07,-97.8328,-283.718,-100.076,-151.349,151.82,274.473,140.71,-54.9335,-52.6568,116.095,183.125,-223.8,-101.398,-69.5284,-273.935,-95.9564,-106.067,-331.567,-156.144,-31.8482,149.911,70.8497,103.762,13.3585,-56.9043,-21.6193,-117.768,-167.749,-170.368,-177.473,-69.3304,-89.7237,-142.072,-340.716,-579.395,-429.714,-224.807,-98.8532,-41.8097,78.5214,-59.3725,-82.4901,-80.1911,-109.261,-254.644,-169.121,-138.07,-73.6394,},{70.4313,46.802,80.1547,156.975,252.694,-316.179,-301.494,417.172,101.687,526.106,-71.7106,217.456,118.273,-87.5155,-47.608,9.52026,154.908,491.243,278.751,-34.6,300.509,291.528,164.203,-35.477,-122.253,-84.155,-61.9818,68.1564,-6.4637,77.5601,-326.659,-155.309,385.057,115.833,-56.1399,-113.799,133.267,156.529,285.552,157.776,20.9373,173.595,707.983,256.658,229.668,-127.489,67.607,-176.532,-114.002,162.167,175.775,-185.299,-80.2983,393.433,467.57,257.927,-52.4294,316.549,625.353,713.473,369.219,855.428,414.77,-221.894,-621.148,-201.482,-391.514,-357.285,-3.61486,234.238,178.636,-220.382,179.541,402.544,506.814,433.361,708.505,777.82,813.791,116.172,-375.742,-56.9992,-428.549,-312.545,-362.37,-420.457,-479.016,202.534,153.816,125.669,-155.902,150.205,462.14,224.268,749.169,262.085,-394.116,-148.62,-324.473,-281.193,-680.202,-565.861,-89.3479,52.364,-143.495,-376.82,-290.177,-696.288,132.664,-19.5292,693.555,339.375,77.6153,275.629,-274.209,-550.15,-1008,-550.07,-150.813,-175.131,379.964,275.446,-15.7242,100.651,-43.4354,-366.949,-28.5068,169.726,306.18,759.804,-651.5,-996.579,-933.793,-366.867,24.3393,350.932,61.6315,-282.389,-617.846,-468.769,165.943,-166.67,-390.916,-46.0488,26.1764,259.259,-459.476,-449.263,-473.985,-108.291,-55.7903,-221.51,-575.373,-406.669,-429.687,-541.546,-157.915,56.2314,-225.785,-50.8779,-274.211,-187.287,-361.073,-246.445,42.4064,154.832,78.2394,-136.183,-426.115,-298.436,-324.003,-228.912,-206.527,-342.465,-105.553,-335.046,-382.618,-418.444,-187.429,116.04,241.005,362.144,578.17,71.7614,-169.945,-192.365,-163.734,-2.33929,-96.0536,-547.633,31.8192,-879.642,-180.72,-364.768,-20.4681,275.294,326.849,632.79,690.168,112.2,-67.668,47.8765,-73.0373,-137.984,-53.1627,-255.576,-189.186,-546.688,206.997,-296.656,-378.266,-53.3299,260.755,611.741,673.76,254.422,-42.3505,-165.812,238.942,-229.516,240.418,226.857,-613.763,-19.2567,229.283,27.4034,-86.2029,-67.9328,476.755,167.111,548.65,246.705,-39.7243,-132.536,40.5583,167.525,358.921,-6.89892,94.3829,74.2823,-28.6216,-115.387,-109.817,62.8126,188.618,223.224,278.172,16.927,60.0984,274.388,521.829,-134.235,-186.782,211.142,144.608,139.516,},{-104.144,-177.709,-250.98,-314.087,-268.049,-462.362,-256.152,-39.8307,132.571,414.961,-124.427,203.191,352.737,30.6539,240.422,136.811,-77.5735,-138.716,-457.518,-340.948,-6.33235,343.665,-82.1114,-191.306,-540.119,-753.241,256.692,153.433,-514.428,-118.595,-77.7025,115.915,269.855,-110.68,-284.29,-220.608,-321.656,240.123,620.592,-59.0482,100.293,199.825,270.142,-69.0984,-161.851,-1044.94,-378.622,52.1074,79.4579,44.5252,46.448,-215.913,129.4,436.162,678.179,100.766,510.154,228.533,224.187,423.595,417.626,43.557,89.4639,-419.936,-567.048,-176.399,-219.587,-518.905,91.9284,230.951,333.532,405.991,533.969,112.786,460.565,109.91,179.169,572.042,540.299,-98.214,-186.396,159.177,42.602,2.14557,61.4401,146.644,545.135,550.379,306.104,76.2525,-92.0719,-93.4798,24.0629,102.903,675.386,44.0123,-356.771,-156.906,-41.8787,-9.14509,-321.428,-347.811,-1.05265,68.696,-227.039,-727.12,-809.981,-465.249,-268.105,-167.736,711.062,603.416,44.0773,69.1771,56.6115,-683.511,-579.052,-195.5,159.639,3.76979,319.846,-42.1457,-354.904,-475.067,-506.943,-450.11,228.671,399.649,195.45,471.437,237.926,16.2146,-300.528,84.4778,256.332,-210.081,-259.755,-373.321,-294.287,-624.143,-462.812,-75.5115,206.992,417.124,51.9116,549.432,702.84,163.307,-419.793,-108.347,-153.544,-179.446,-5.798,85.8332,175.491,-264.36,-187.758,-366.377,-333.776,-181.112,-101.774,683.088,522.897,501.503,127.134,221.994,99.9853,242.621,413.64,531.292,346.8,227.955,-22.0433,-103.726,-381.399,-146.087,23.6975,-111.277,309.064,492.259,223.135,-174.183,11.4561,8.01881,404.097,225.66,339.894,229.047,-179.562,-613.633,-294.283,-648.88,69.7859,22.5052,88.6882,49.3915,-33.7845,-29.3788,-43.3991,-380.257,41.9315,300.687,317.904,3.05516,-398.024,-579.146,-311.959,-626.337,-231.321,-417.987,-559.753,-526.585,-320.202,-80.4858,-107.13,-148.81,335.642,246.044,336.096,169.848,-122.608,-684.82,-1027.92,-305.592,-22.9914,-267.613,-33.0085,-75.5602,-101.254,-328.388,-130.248,-210.673,-157.971,374.07,509.828,452.977,298.429,-421.728,1.17489,30.4738,-154.854,-483.083,-439.875,-37.7737,211.929,-114.785,-289.508,-336.819,-151.146,472.376,687.426,30.6779,-62.8122,-58.799,-63.1856,95.9105,}},weight[]={-730.564,1974.54,-2266.94,-2783.86,-182.222,-258.535,-136.41,-159.869,-2686.15,-133.168,1392.23,-236.26,-2710.84,5220.64,-178.25,3017.41,-112.433,-2517.82,-3218.04,-3086.56};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv && i < right);

			if(i >= right) {
				bound = 0;
				nright = right;
				for(i = top; i < bottom; i++)	{
					path[bound].x = right;
					path[bound++].y = i;
					data[i][right] |= F_PATH;
				}
			}

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}