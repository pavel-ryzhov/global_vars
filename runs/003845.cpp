#include<iostream>
#include<vector>
#include<string>
#include<fstream>
#include<set>
const int N=9; //resolution of pattern of each number
const int NumberOfFonts=36;
const char F[NumberOfFonts][10*N*N+1]={
	".#@@%....%#..@....@%..##...@...%#...@...%#...@...%#...@%..##...%#..@.....#@@%......#%......#@%.....@#@%.......@%.......@%.......@%.......@%.......@%.......@%......#@@#....%@..##...%%..%@.......##......%@......#@......#@......#@.......@@@@@@....#@@%....##..@....%...@%......#@......%#@........##...#...%#...##..@%....#@@%........@.......@@......##@.....%#.@.....@..@....#%..@....@@@@@@.......@........@.....@@@@%....@.......%#.......#@@@#....#%..##.......%@...#...%@...##..@%....#@@#.....%@@#....%@..##...@%.......@%#@#....@@..@%...@%..%@...@%..%@...%@..#%....#@@#....@@@@@@.......@%......##.......@.......##.......@.......%@.......##.......#%.......#@@#....##..@%...#%..##...%@%%@....%@##@....@%..##...@...%@...##..##....#@@#.....#@@%....##..@....@...##...@...##...##.%@#....#@#%#.......##...##..@.....@@@%....",
	".#@@%....%#..@....@%..##...@...%#...@...%#...@...%#...@%..##...%#..@.....#@@%......#%......#@%.....@#@%.......@%.......@%.......@%.......@%.......@%.......@%......#@@#....%@..##...%%...@.......##......%@......%@......#@......%@.......@@@@@@....#@@%....##..@....%...@%......#@......#@#........##...#...%#...##..@%....#@@%.......%@.......@@......#%@.....%#.@.....@..@....#%..@....@@@@@@.......@........@.....@@@@#...%@.......%#.......#@@@#....%%..##.......%@...#...%@...##..@%....#@@#.....%@@#....%@..@%...@%.......@%#@%....@@..@%...@%..%@...@%..%@...%@..@%....#@@#....@@@@@@.......@%......##.......@.......##.......@.......%@.......##.......#%.......#@@%....##..@....#%..#%....@%#@....%@##@....@%..##...@...%#...##..@%....#@@#.....#@@%....##..@....@...%#...@...##...##..@@....#@#%#.......##...##..@.....@@@%....",
	".%###....%#..%@...@#...@%..@%...@#..@%...@#..@#...@#..##...@%...@%.##.....##%......@......##@........@........@........@........@........@........@%......%##......####....##..##...@#..%@...%@#.##......##%.....##......#%......##%%#@%..######%...####....##..@#...%#..@#.....###.......%@%.......%@...@%..%@...%#..@#....%##%......#@.......@#.......@%#%....%#.@%....#%.@%...##%%@#...%%%%@%@......@%......%##%......%%...%@@@#%...%%.......%#%#%.....%..@#.......##...#%..##...##..@%....%##%.....%###.....#..##...##.......@##%@....@#..%@...@%...@...##..%@....@%.@%.....##%.....@@@@@%...%...#%..#%...#.......@%......##.......@%......%@.......#@.......%#%.......#......%%%.....%#%%#....%#..%.....#@@.....#%.%@....@...#%...#%..#%....%##%.....###.....@%..@....@...@%...@%.%@%....##%@%.......@.......##......##......#%......",
	".%@@@#...%@@#@@#..@@#.%@@..@@%.%@@..@@%.%@@..@@%.%@@..@@#.%@@..%@@#@@#...%@@@#.....%@@.....%@@@....@@@@@....@@#@@......%@@......%@@......%@@......%@@......%@@.....#@@@@...%@@@@@@..#@#..@@%.....#@@.....#@@%....@@@%....@@@.....#@@@@@@%.@@@@@@@%..#@@@#...#@@#@@#..%#%.#@#.....#@@......@@@%......%@@..%#%.%@@..#@@%@@@...#@@@#.......@@#.....@@@#....#@@@#...%@##@#..%@@.#@#..@@##@@@%.@@@@@@@#.%%%%#@#......#@#...@@@@@@...@@@@@@..%@@......%@@@@@%..#@@#@@@.......@@%.%#%..@@..#@@#@@@...#@@@#....%@@@#...%@@#@@#..#@#..%...@@#@@#...@@@#@@#..@@#.%@@..@@#.%@@..%@@#@@#...%@@@#...@@@@@@@%.@@@@@@@......@@%.....#@#......@@......#@#......@@%......@@......%@@......#@@@#...#@@%@@#..#@#.#@@..%@@#@@%...@@@@@%..@@#.#@@..@@%.%@@..#@@#@@@...#@@@#....#@@@%...#@@#@@%..@@%.%@@..@@%.%@@..#@@#@@@...#@@#@@...%..%@@..#@@#@@%...#@@@%...",
	".@@#.....#%.#%....@..%#....@...#....@...#....@...#....@..%#....#%.#%.....@@#.......#.......@#......@##........#........#........#........#........#........#.......@@@.....#%.%#....#...@.......%#.......@.......@%......@%......##.......@@@@@.....@@#.....#%.#%....%..#%......%@.......#@........%#....%...#....@%.#%.....@@#........@.......%@.......#@......#.@......#.@.....@..@.....@@@@@.......@........@......@@@#....%%.......#%.......#@@@.....#..%#........@....#...@....@%.##.....@@#......#@#.....%#.#%....@........@%@#.....@#.#%....@...#....@...#....##.#%.....#@#.....@@@@@.......#%.......@.......#%.......@.......%#.......#%.......@........@........@@#.....#%.#%....#..%%....%@%@.....%@#@.....@..%#....@...#....@%.#%.....@@#......@@#.....#%.#%....@..%#....@..%#....##.@#.....#@%#.......%#....#%.@......@@%.....",
	".%###....%@...@...#%...#%..@%...##..@....##..@%...##..#%...@%..%@..%@....%@##....%##......%##.......%#.......%#.......%#.......%#.......%#.......%#......#@@#......###@....%%..%@...#....@...%....@.......##......##......#%......@%..#...#####@....%@@@%...%#..%@........@.......#%.....%##%........@%..#....#%..@%...@....####%.......@%......#@%.....#.@%....#..@%...#...@%...@@@@@@#......@%.......@%.......@%....#####...%#%%%....%%.......%#@#%........@#........@...%....@...@%..%@....####......%##%....@%......%#.......@%##@%...@@...@...@%...##..@%...##..%#...@....%###%...%#####%..#%...#...%...%%.......@.......#%.......@.......##.......@%.......@.......%###....%#...@...%#...@....@#%#%....%#@@%...##..%@%..@....#%..@%...@....####%....####....##...@...@%...@%..@%...@#..##..%@#...#@#%@%.......@.......#%....###.....",
	".%##%....%#..#%...#%..%#...@%..%@...@...%@...@%..%@...@%..%#...%#..#%....%##%.....%@......%%@........@........@........@........@........@........@......%#@#%.....%%##....%...##...#@..%@....#..##......%@.......#.......#..%....#...#...@@@@@@....#%#%....#%..@....%%..@.......%#......%#%........@%...@%..##...@...@%...%%%#%........#.......#@......%#@......%%@.....#.%@....%..%@....####@#......%@......%#@%....@###.....%%%.....%........%###%....#...@........##...@%..##...@...@.....%%#%......#%#.....@..@#...##.......@%.%%....@#%.@%...@#..%@...@%..%@...%#..%#....%###....#@@@@#...#...%....%...%.......%........#.......%#.......##.......@%.......@%......%%%#....%%..%%...#%..%%....@#%#.....%@@@....#%..#@...@....@...@....#....#%%#.....###%....##..#%...@%..%#...@%..%@...#@..#@....%#%%@.......##...##..@....%#%#.....",
	"..#@#@#...@#...@@.#@....%@#@@.....@@@@.....@@@@.....@##@%...%@%.@@...@#...#@@@%..%#@@.......@@.......@@.......@@.......@@.......@@.......@@.......@@.....%#@@#%....%@@@#...%%.%@@#.......@@.......@#......%@......%@......##...#..@#%%%#@.@@@@@@@@.%#@@%.......%@.......%@......%#.......%#@........@%.......@%......#@....%##%.........@.......#@......#%@.....%..@....%%..@....@###@#%......@........@........@....%@@@@....#........#........##@@%.......%@........@........@.......@%....%##.........%#%.....@.......@.......##%#%....@@..@#...@%..%@...@%...@...%#..%@....####....@@@@@@...#....#.......#........#.......#%.......@.......#%.......@.......##.......###@....%@..#@...#@..##....@@%#.....%#@@....##..#@...@%...@%..@#...@....####.....####....##..##...@%...@...@%...@...%@..#@....%#%#@.......@.......@%.....##......",
	"..#%%%....@...%%..##....@..@%....@%.@%....@%.@%....@%.##....@...@...%%....#%%%...%##.......#@.......%@.......%#.......%#.......%#.......%#.......%@.......#@%.......%%##....#...@%..#....@%..@....@...#%%.##......%%......%%......%%..%%..#@@@@@.....%%##....#...@....#..%#....#%.#......%%%#........@%..%....@...@%..##...%#%%#........#%......%@%.....%.@%....%..@........@..%.#%%%@##%.....@%.%.....@%......%@#........%.....@@%.....%........%.%......#..#%.......%@...%...##...@...@....%%%%.......%%%#....#%..##..%#.......@%%%#....@#...@...@%...@%..@....@%..%#...@....%%%#....##%%%%...@####%.......%........%.......%........#........#.......##.......#%......%%%%....%%...#...#%...#...%@#.%.....%@@#....%%..##...@....@...#....#....%%%%.....%%%%....%#...@...#%...#%..##...##..%@...@#....%%.@%.......@...@%..#%...%#%%%....",
	"%%%......@%@......@%@......@%@......@%@......@%@......@%@......@%@......%%%......%#.......%#.......%#.......%#.......%#.......%#.......%#.......%#.......#@........%%........@......@%@......#%@.......%#.......%.........................@@@.......%%......#%@......#%@.......%%.......%%.......%@......@#@......#%@.......%%........%.......%%.......@%.......#%.......#%.......#%.......##.......#%.......##......###......%%................%%%.......%@.......%@......#%@......@%#.......%%......%%.......@#@......@%%......@%.......@%@......@%@......@%@......@%@......%#%......@@@..................................%........#.......%#.......#@.......##.......%........@.%......#%%......%@........@........##......%%@......%.@......%%%......%%%......@%@......@%@......@%@......@%@.......%@......%%@......@%@.......%%......",
	"..#@%%....@@@..%..#@@@...%.@@@@...%.@@@@...%.@@@@...%.#@@@...%..@@@..#....#@%%.....%#@....%#@@@.....%@@@.....%@@@.....%@@@.....%@@@.....#@@@.....#@@@.....#@@@......%%%@#...%...@@#.%...%@@@.%...@@@@....#@@@%...%@@@@....@@@@....@@@@%...#@@@@%%%..%%#@@%.....%@@@.....%@@@.....%@@%....%#@#......%@@@%....%@@@#.#..%@@@%..%%#@#%........%.......@%......@@%.....@@@%....%@@@%...%.@@@%..%..@@@#..%%%@@@#%....@@@%....#%%%%...%........#%#@#......%@@@..%..%@@@#.%..%@@@#.%..%@@@%.%..%@@@...%%#@#.....#@%%....@@@..%..#@@@.....@@@@%%%..@@@@...%.@@@@...%.#@@@...%..@@@..%....#@%%...#%%%#@@@.....@@@#....%@@@.....@@@@.....@@@#....#@@@%....@@@@....#@@@#....@@@@%....%%%%%...%@%...#..#@@#..%..#@@@@@....@@@@@@..%%@@@@@%.%..#@@@%.%....@@...%%%%#....%%%@#...%...@@@..%...@@@%.%...@@@#.%...@@@#..%%%@@@#.....@@@...%..@@#...%%%@%...",
	"..%@@@.....%#@@@....%.%@@%..@...#@#.@@...%@%.@@%..%@..@@@..#%..%@@@@%....%@@%.....%@%.....#@@%......@@%......#@%......#@%......#@%......#@%......#@%......%%.......%@@#....%#@@@%......@@#......%@%......##.......@.......@%......@@@@@...####@.....#@#.....%#@@.......@#......%@%......#@@%......%@#......%@%......@%......#..........%.......%%.......#.#%....@.%@%...#@.%@#%..@@@@@@#..%###@%......%@%......%%......@@@#....#@@@.....@%......#@@#......#@@%......#@%......%@.......@.......#..........%%......#%......##.......@.%@%...#@.#@@...@@..#@%..@@#.%@...%@@#@%....#@@......@#%%%...@@@@@#...%###@.......#%.......@.......#%.......@.......#@.......%.........%.@@....@.%@@...#@%.@%...%@@@#.....%@@@@....@..@@...@@..#@...@@#%#....%@@%.......%@@.....#%@@@...@@..@@%..@@..#@%..#@@%#@....#%.@#......##......##......#.......",
	".#@......%@%......##..#....@...%....#....%...#........#.........%..%.....%#%......%@.......@@......#%@......%.@........#........#........%........%........%........#@@.....##..#........#.......#.......#.......%........%.......#.......%#%%.....#@@@##....%..%.......%.......%.......%@@%........#........%........#.......%......%@.......#%.......@%......%%#......@#@#%......%........%........%........%......@@%%%%...@@##%....#........#%........%##........%.........%.......#.....%%#........#%......%#.......@.......%%.......#........#%@@%....#%.@#....@..@%....%@@#.....@#####....%..#........%.......%........%.......%........%........%..................@%......@..#.....@..%%....@%.%....@##@#....@%..%%...@%..%%...@#.##.....@@#%....%@@%.....@%.@.....@.@@%....%@##........#.......%%.......#.......%........%......",
	"..#@@@%...@@@@@@%.#@@##@@@.@@@%.@@@%@@@%.@@@#@@@#.@@@##@@@%@@@..@@@@@@#...#@@@%....#@@@@..%@@@@@%...%@@@@.....@@@@.....@@@@.....@@@@.....@@@@...##@@@@@#.%#@@@@@#...#@@@#..%@@@@@@#.@@#@@@@@....#@@@%....@@@#....@@@#.%..#@@@@@@%@@@@@@@@.%%%%%%@#..#@@@#...@@@@@@#.....@@@%....#@@@%...#@@@@@#....%@@@@.....@@@#.###@@@@..#@@@@#.......#@%.....#@@%....%@@@%...%@%@@%...@..@@%..@@%#@@@..@@@@@@@%.%%%#@@@......@@#...#@@@@@%..@@@@@@..%@@%%%%..@@@@#%...@@@@@@@...%#@@@@%....@@@@%.###@@@#..#@@@@%.....#@#.....#@@%....%@@#.....#@@@@@@..@@@@@@@@.@@@.%@@@.#@@#.@@#..@@@@@@....#@@@...#@#####..@@@@@@@..@@##@@#......#@.......@@......#@#......@@%.....#@@......#@#.....%@@@@#..%@@@%@@@.@@@@.#@@.#@@@@@@%..@@@@@@#.@@##@@@@.@@%.%@@@.#@@%#@@#..%@@@@#...%@@@#...#@@@@@@..@@@.#@@%.@@@.%@@%.#@@@@@@...#@@@@@.....#@@.....%@@%.....#@%....",
	"..%@@@@#..#@@@@@@@%@@@%.@@@@@@....@@@@@....@@@@@....@@#@@@%.@@@.@@@@@@@@..#@@@@%....##.....#@@#....@@@@#....%%@@#......@@#......@@#......@@#......@@#......@@#.....@@#.....%@@@@%.....%@@@......#@@%.....#@@......@@#.....@@#.....@@@@@@..#@@@@@@..#@@#.....#@@@@......#@@%.....@@@....%@@@%......#@@#.....#@@#...@@@@@....@@#%..........@%......@@#.....@@@#....#@@@#...%@##@#...@@.@@#..@@@@@@@@.%###@@@#.....@@#...@@@@@...%@@@@@...%@#......#@@@#....%#@@@@......@@@.....#@@#...@@@@#....#@#.........##......#@@.....#@@%.....@@@%....#@@@@@%..@@#.@@@..@@#.#@@..#@@#@@#...#@@@#...@@@@@@#..@@@@@@%.....#@@......@@%.....%@@......@@#.....%@@%.....@@@.......#%......#@@@@%..#@@%#@@..@@#.%@@..#@@%@@#...@@@@@%..#@@.#@@..@@#.%@@%.@@@%@@@...#@@@#....%@@@#...%@@#@@#..@@#.#@@..@@@.#@@..%@@@@@#....#@@@.....%@@#.....@@#......##.....",
	".%@@#.....@@%##...#@..#@...@@.%.#%..@#.@.@%..@#...#%..#@%.%@....@#%%#....%@@#....%#@......%@@.......@#.......##.......%@.......%@.......%@.......%@.......%@.......#%@%....#..%@....#####%......##......@#......#@......%@.......###@@#...##@@@@...%@@@@#....##%@%......##......%@#.......%@#.......##...#%..@@....@#@@......#%%......#.......%##......@%%......@%.#....%@%#@....#@@@@#....%%##.......#%.......#......@@@#.....##..#....#%.......@#%%.....%#@@#.......#@...#...#@...#%.#@#....#@@#.......@.......@@%.....@@......#@.......@%#@#....@%%.@#...@%#%##...#%..@%....##@#....#@##%%...@@####.......@%....#.%@.....%.@@.......##......##%......@@.......##......###%....%@..@....%@.%@.....@#@#....%#%#@%...@%..@@...@%..@@...#@##@#....#@@#.....%%#%%...%@##@#...%#..##...##..##....@##@#.....%.#@.......#@.......#@.......##...",
	"..####%...#...%%%.#...%..#.#...#..%.#...%...%#..%...%%#..%...#..#%...%%...####%...##%......#%%......#%%......#%%......#%%......#%%......#%%......#%%.....#@##......####....#...##...%...#%%......#%.......%#......##......##......#%..%...@#####....#%@#....#...%#...%...#%......%##......@#........%#.......%%...#..%%#...%#@@#.......%##......@.#.....##.#....#.#.#...%%.#.#...@##@.@%.....#.#......#.#.....%@#@%....###%....%.#......#.%......###%.........#........%........%...%....#...%####......%@##....#%%.....%%#......#.###%...#.#...#..#.%...#..#.%...#..%%#...#...%#@@#...####@#%.....%.#......#.#......%%%.....#.#......#.#.....%%%%.....#.#......@##......%#@##...%%%%..#..%..%..#...#.%##....##..#%..#..%%.#..#...%..%.#...%%%...#%#@%....##@%%...#...#%%..#...%.#..#....%#..#...#%#...%###.#......#%%.....%##...%##@%....",
	"..#@......##@%.....@.#@....#%.%@....#..#@....#..##....#..@.....#.#%.....%@%.........@......#@#.......@.......%%.......#........@.......%#.......##.......#%.............%##....%@#@.....#.#%......#.......#.......#.......@#....%%@#@@#.#@@....%##...#@@@#....%%@%......@#%.....@##@%.......@......%#......#%.....%@.......@%............%#......%@%.....%@@.....%%%#....#@.%%.#%#@@@@@#%.....@........@.......#%.......@@@@....%@%%.....#@%......@#@%.......@.......#.......#......%@.......@%.........%#.......@%.......@.......%%.......#........%.%%....##%%@....@..#.....#@%......%@###@...%%##@#......%#.......#.......%........#.......%%.......##.......#.........##@@@#..#@#.%@...#@..#....%@##......@@......%#@#....%#.##....@.%#.....#@#........#@......#%@@....%%.@#....@%#@.....%.%%.......#.......%%.......##.......##......",
	".###%....%#..@....@%..#%...@%..##...@...##...@%..##...@%..#%...##..@.....###%......#%.....%#@%.......@%.......@%.......@%.......@%.......@%.......@%.....%#@@#....%##@#....@...@........@%......%@.......@.......@%......#%......%#..%%...@@@@@%...%##@%....@...@........@.......#%.....%#@%........@........@%...@...@....####%.......%@.......@@......#%@.....%%%@.....#.%@....@%%#@%%..%%%#@%......%@.......#@....%####....##%%%....#........#........%##@%........@........@....#...@....####.......%##.....%#.......@.......#%%%.....@#%%@%...@%..%@...@%..%@...##..##....####....@@@@@#...@...#........@.......#%.......@.......#%.......@.......%#.......@........####....#%..#@...@%..%@...##..#%....@##@....#%..##...@...%@...@%..##....####.....####....#%..#%...@...%#...@%..%@...#@%%@@....%%.##.......@.......##.....%#%.....",
	".#@@#....%@..@#...@%..%@...@....@...@....@...@....@...@%..%@...#@..@%....#@@#.....%@%.....@#@%.......@%.......@%.......@%.......@%.......@%.......@%.....@@@@@....%@@@%....#..%@........@........@.......@#......#@......#@......%@.......@@@@@#...%@@@%....%..%@........@.......##.....@@@%........@%.......#%...%...@....#@@@%.......@@......%#@......@.@.....##.@.....@..@....#%..@....@@@@@@%......@........@....#@@@@....##.......##.......#@#%.....%%%#@........@#.......##...%..%@....#@@@%.....%@@@.....@.......#%.......@%%%.....@@%%@%...@...%#...@%..%#...##..@%....#@@#....@@@@@@.......##.......@.......##.......@%......%@.......@%......%@.......##.......#@@#....##..@%...##..##....@%%@.....%@@%....%@..@#...@...%@...@%..##....@@@#.....#@@#....##..@%...@...##...@%..%@...#@%#@@....%%%##.......#%......%@....#@@#.....",
	".%%#%....%%..@....@...@%...@...#%...@...#%...@...#%...@...@....#%..@.....#%#.......#%.....#%#%.......#%.......#%.......#%.......#%.......#%.......#%......%@#%.....#@@%....#..%@....%...@%.......@.......%#.......#.......#.......#.......@@@@@@....@@@%....#..%@........@.......%.......%#@........##.......#%...#...#....%##%........%#.......@#......%%#.....%.%#.....%.%#....%..##....###@@#......%#......%#@%....@@@@%....%........%........#@@#.....%..@%.......%#.......%#...#...#....%@##........#%.....%#.......@.......#%%%.....@#%#@....@...#%...@...#%...#%..@.....#%%.....@@@@@#...#...%....%...#.......#........#.......#.......%#.......@.......%@........#%#%....#%..@....#%..@....%@#%......##@#....#...@%...@...#%...@...#.....#%%%.....#%#%....#%..@....@...#%...@...##...#@%%@%....%%.@.......%#.......#......#%......",
	".#@@%....%#..@....@...%#...@....@...@....@...@....@...@...%#...%#..#.....#@@%....#@%.......#%.......#%.......#%.......#%.......#%.......#%.......#%.......#%.......%@@#....%#..##...#....@........#.......@.......#%......#%......##......#@@@@@....#@@%....%#..@........#%......#@......%#@........%#...%....@...#%..#%....#@@#........%........@.......@@......#%@.....%#.@.....@..@....#@@@@@.......@........@.....%@@@%....#%.......#........@@@%........#%........#...%....#...#%..@%....#@@%.......#.......%#.......@.......@%......%@#@#....@...@....@...#%...#%..@.....#@@%....@@@@@%.......@.......#%.......#.......#........#.......@.......%#.......#.........#@@%....%#..#%...#%..%%....@%%@.....@###....@...%#...@....@...#%..##....#@@#.....#@@%....#%..@....@...#%...@...@....%@#@#......%@.......#%......%#.......#.......",
	".%@@#....%@%.##...#%...@...@....@...@....@%..@....@...#%...@...%@..@#....#@@#.....##......#@#......%%#.......%#.......##.......##.......#%.......##......@@@#......#@@#....@#.%@%.......@%......%@......#@%.....@#......@#.......@%.%%....@@@@@%....@@@%....%%.%@........@......#@#......#@#........@........@%...@%.%@.....@@@%.......%@.......@@......@#@.....%@.@.....@..@....@@@#@@....%%%@%.......@........@....#@@@@%...##.......#%%#.....@@##@....@%..##.......%#.......##...@%.%@....%@@@%......%#......%@.......@.......#@##.....@@%#@....@...#%...@...#%...##..@.....#@@%....@@@@@@%......#@......%@.......@%......%@.......##.......@.......%@.......#%.......#@@#....##..@....#%..@%...%@%#@.....@@@@....@%..@#...@...##...@#..@#....@@@#.....#@@%....##..@%...@...%#...@...%#...#@##@#....%#%@%......#@......#@.....%@%......",
	".###.....#...#....#...%....#...%....#...%%...#...%....#...%....%...#.....###......#@......%.#........#........#........#........#........#........#......##@##.....###%....%....%........#.......%%.......#.......#......%#......%#.......@#####....###%....%...%.........%......%#......%%#.........%........#...%...%%...%###%.......##......%.#......#.#.....#..#.....%..#....#...#....%###@%.......#.......#@%...%####....%%.......%%.......%####.........%........#........#...%...%%....###%......###.....#.......#........#.%%.....##%%#....@...%....#...%%...%%..#.....%##%....@####%...%...%%.......#........#........%.......#........#........%.......%.......###.....#...#....#...#....%%..#.....@#@.....#...#....#...%....#...#.....###......###.....#...#....#...#....#...#....%%.%#%....%#.%........#.......%%....###%.....",
	".%@@@.....@#.#@...#@...@%..@#...@#..@#...@#..@#...@#..#@...@%..%@%.#@....%@@@.......@%.....%@@%....#@#@%....%.%@%......%@%......%@%......%@%....%%#@%%...@@@@@@@...%@@@%...%@#%@@...@@..%@#......%@%......@@......@@%....#@#.....@@#%%%...@@@@@@#...%@@@%...%@#%#@%..%%...@%......#@.....#@@#.......%@#..%%...@@..#@%.%@%...#@@@%......%@#......@@#.....@#@#....%@.@#....@%.@#...@@%%@#%..@@@@@@@......@#.......@#....@@@@@%..%@%%%%...%@.......#@#@@#...#@%.%@#.......@@..%%...@@..#@#%#@%...#@@@%....%@@@%....@#.#@...#@...%...@#%##....@@@%@@%..@@...@#..#@...@#..%@#.%@%...%@@@%...@@@@@@#..%%%%%@%......@#......#@.......@%......%@.......@@.......@@.......@#......#@@@#...%@%.%@%..#@...@#..%@@%#@....#@@@#...#@%%#@#..@#...#@..@@%.%@#...#@@@#....#@@#....#@%.#@...@#...@%..@#..%@#..#@##@@#...%##.@#.......@%..%@%%@@....#@@#....",
	"..####%...@%...@%.#@....#@.@@....%@.@#....%@%@@....%@.#@....#@..@%...@%...####%....##.....##@#.......@#.......@#.......@#.......@#.......@#.......@#.....#@@@#%....%##@#...#@...@@..@@...#@..%%...#@.......@#.....%@%....%#%.....#@%%%%%%.@@@@@@@#..####....##..@%...%%..@%......%#......###........#@...%...%@...@%..##...%####........@.......#@......#.@.....#..@....%%..@....@###@#......%@%.......@........@.....@@@@#....#........%.......%##@%.....%..@#.......#@...%...#@...@%..@%...%###%.......#%.....%#.......@.......####%....@#..@%...@%..%@...@%..%@...##..##....####....@@@@@@...#...%%.......#.......%%.......#.......#%.......#.......#........#........####....%#..##...##..%@....@#.#%....#@@#....#%..@@...@....@...@%...@....####.....####....##..@%...@%..%@...@%..%@...#@..#@....%####.......@.......#%.....%#......",
	".@@@%....@@#@@....@@.@@....@@.@@....@@.@@....@@.@@....@@.@@....@@#@@.....@@@%......@@.....#@@@.....#@@@......%@@......%@@......%@@......%@@......%@@......%@@.....%@@@.....@@%@@....@@.@@......%@@......@@%.....#@@......@@......@@@%%....@@@@@....%@@@%....@@#@@....@@.@@......#@#.....%@@@....##.@@....@@.@@....@@#@@....%@@@%......@@@.....#@@@.....@@@@.....@#@@....#@%@@....@@%@@....@@@@@#...%%#@@......%@@....@@@@@....@@%%%....@@%#%....@@@@@....%%.@@....%%.@@....@@.@@....@@#@@.....@@@%.....@@@%....@@%@@....@@.%%....@@@@#....@@#@@....@@.@@....@@.@@....@@#@@.....@@@%....@@@@%....##@@%......@@.......@@......%@#......#@#......@@%......@@......%@@......%@@@%....@@#@@....@@%@@....#@@@#....#@@@@....@@.@@....@@.@@....@@#@@....%@@@%....%@@@%....@@#@@....@@.@@....@@.@@....@@#@@....%@@@@....%%.@@....@@%@@....%@@@%....",
	".#@@%....%@..@....@%..##...@%..%@...@...%@...@%..%@...@%..##...%@..@.....#@@%.....%#%.....#%@#.......##.......##.......##.......##.......##.......##.....@@@@@@...#@@@.....%..#@........@.......#@.......@.......@.......@.......##.......@@@@@....#@@#........@%.......#%.....%##......#@#........##.......%#.......@#....@@@#........#@......%@@......@%@.....#%%@....%@.%@....@%%%@%...####@#......%@.......%@....@@@@%....@........@........@#%.......%#@........@%.......@%.......@.....@@@%......%@@@.....@.......##.......@%##%....@@.%@....@%..##...@%..##...%@..@%....#@@%....@@@@@%.......@.......%#.......@.......#%.......@.......##.......@.......%@........#@@%....%#..@....##..@.....@##%.....@@@%....#%.%@....@...#%...@#..@%....@@@%.....#@@%....##.%@....@...@%...@...@#...#@.%@#....%#%##.......@%......#@....%@@#.....",
	".%@@%....%@..@%...#%..%@...@%...@...@....@...@%...@...#%..%@...%@..@%....%@@%....@@#.......##.......##.......##.......##.......##.......##.......##.......##......%@@@%....%..%@........@%......%@.......@%......@%......@%......##.......@@@@@....#@@@........##.......%#......%@......#@#........#@.......%@.......#@....@@@#........%@.......@@......@%@.....%#.@.....@..@....@###@#...%%%%@#.......@........@....@@@@#....@........@........@##.......%#@........##.......#@.......@#....@@@#......%@@@%....@.......#%.......@%##%....@@..@%...@%..%@...@%..%@...%@..#%....#@@#....@@@@@@.......##.......@.......@%......%#.......@.......##.......@%......%@........#@@#....%#..@%...##..@%....@###.....#@@%....#%.%@%...@...%#...@#..##....@@@#.....#@@%....##..@....@...##...@...#@...##..@@....#@###.......#%......%@....%@@@.....",
	".#@@%....%#..@....@%..#%...@...##...@...%#...@...##...@%..##...%#..@.....#@@%......@......%@@......%%@........@........@........@........@........@........@.......#@@#....%@..##...%...%@.......##......%@......%@......#@......%@.......@@@@@@....#@@%....##..@........@.......#@......#@#........##...%...%#...@#..@%....#@@#.......%@.......@@......##@.....%#.@.....@..@....#%.%@....@@@@@@.......@........@....%@@@@%...%#.......%#.......#@@@#....%%..@#.......%@...%...%@...##..@%....#@@#.....#@@#....%@..@%...@%.......@%##%....@#.%@%...@...##...@%..##...%@..@%....#@@#....@@@@@@.......##.......@.......%@.......@%.......@.......##.......@.......%@.......#@@%....##..@....##..@%....@%#@.....#@@%....##..@%...@...##...@#..@%....#@@#.....#@@%....##..@....@...##...@...%#...#@.%@#....#@###.......#%...##..@.....@@@%....",
	".%%#%....%%..@....@...#%...@...##...@...##...@...#%...@...#%...#%..@.....#%%......%@......#.@........@........@........@........@........@........@.......%@%......@@@%....#..%@....%...@%.......@.......%#.......#.......#.......#.......@@@@@@....#@@%....%...@........@.......%%......%#@........##.......##...#...#....%##%........%#.......@#......#%#.....%.%#.....%.%#....#..##....###@@#......%#......%#@%....@@@@%....%........%........#@@#.....%..@%.......%#.......%#...%...#....%##%........#%.....%#.......@.......#%.%.....@#%#@....@...#%...@...#%...#%..#.....#%%%....@@@@@#...#...%%...%...#.......#........#.......#.......%#.......@.......##........#%##....#%..@....#%..#....%@#%%.....##@#....#...@%...@...%#...@...#.....#%%%.....#%#%....#%..@....@...#%...@...##...#@.%@%....%%.@.......%#.......#......%%......",
	".##@%....%#..@....#%..##...@%..##...@...##...@%..##...@%..#%...%@..@.....###%....%##......%##.......%#.......%#.......%#.......%#.......%#.......%#......%#@%.....%##@#....#..%@%.......@%.......@.......%#.......@.......@.......#.......@@@@@#...###@%....#..#@.......%#......%@......%#@#........@%...%...@%...@...@....@###.........#.......#@......%#@......#%@.....#.%@....%#%#@%...####@#......%@.......#@%...%@@@@....%%.......%........%@@@%.......#@........@#.......@%.......@....####........##.....%@.......@.......#@%#.....@#.%@%...@%..##...@%..##...##..#%....####....@@@@@#...#...%%.......@.......%%.......@.......##.......@.......##.......@%.......##@%....##..@....##..@....%@#%#.....#@@%....##.%@%...@%..@#...@%..@%....@###.....##@%....##..@%...@%..##...@%..##...#@%%@#....%#%@.......%#......%@......##......",
	".#@@%....##..@....@%..@%...@...#%...@...#%...@...#%...@%..@%...##..@.....#@@%.....%@......@@@.......%@.......%@.......%@.......%@.......%@.......%@......@@@@%....#@@@%....%..#@........@.......%@.......@%......##......##......##.......@@@@@%...%@@@%....%..%@........@......%#%......#@%........@........@....%..%@....#@@@........%@......%@@......@.@.....@..@....@%..@....@@@@@@.......@........@........@....#@@@@....#%.......#%.......#@##.....%%%#@........@........@....#..#@....#@@@.......@@@.....@%......##.......@###%....@#.%@%...@...##...@%..##...#@..@%....#@@%....@@@@@#.......##.......@.......##.......@.......##.......@.......##.......@........#@@#....##..@%...@%..#%...%@%%@.....@#@#....@%..@%...@...##...@#..@%....#@@%.....#@@%....##..@....@...#%...@...##...#@%%@#....####%.......@.......##.....@@#.....",
	".%%#.....%#..@....#%..@%...@%..#%...@...##...@...#%...#%..@%...%#..@.....%%#......#%.......@%.......#%.......#%.......#%.......#%.......#%.......#%.......@#.......#@@%....%..%@........@%.......@.......%%.......#.......%.......%...%...#@@@@%....#@@.....%..@%.......#%.......#.......#@%.......%@........@........#....@@%%........%@.......#@......#%@.....%.%@.....%.%@....#%%%@%...####@#......%@.......%@......@@@.....#........@%......%#@@........#@........@........#........%....@@#%........#%.....%#.......@.......##%#.....@#.%@....@...@%...@%..#%...%#..@.....#%%%....%@@@@%...%...#........#.......%%.......#........#.......%%.......#........#.......#%#.....@...@....@%..#....%@%#......#@#.....%%.@#....@...@....@...@.....#%%......#%#.....#%..@....@...@%...@%..@%...##..@%....##%@.......##......%#......%%......",
	".#@@%....%@..@....@%..##...@...##...@...##...@...##...@%..#%...#@.%@.....#@@%......#.......@@......@%@........@........@........@........@........@........@......%@@@.....#%.#@.......%@.......##.......@.......@#......#@.......@%......@@@@@%...%@@#........@#.......##......%@.......@@........#@.......%@....%..#@....#@@#.........#.......%@......%@@......@.@.....@%.@....#@%%@#...####@#.......@........@....@@@@#....@%.......@%.......@@@@%....%..#@.......%@.......%@....%..@#....#@@#.......%@......#@.......@.......#@##.....@@%#@....@%..@%...@%..@%...##.%@.....#@@%....@@@@@@.......@%......%@.......@%......%@.......@%......%@.......##.......@%.......#@@%....##.%@....##..@.....@#@%.....@#@%....@%..@....@...@%...@#.%@.....@@@%.....@@@%....##.%@....@...@%...@%..@%...#@%#@%....%##@.......@#......#@......%#......",
	".#@@#....%@..@%...@%..%@...@...%@...@....@...@...%@...@%..%@...%@..@%....#@@#......@......@@@........@........@........@........@........@........@......@@@@@....%@@@#....%...@%.......##.......@%......#@......%@......#@......##.......@@@@@@...%@@@#....%...@%.......@%.....%##......###........##.......##...#...@%...#@@@%........@%......@@%.....#%#%....##.#%...%#..#%...@###@@%..%%%%@#%......#%.......#%...#@@@@#...#%.......#%.......#@##.....%%%#@%.......##.......%#...#...@%...#@@@%......#@@%....@%......##.......@####....@#%%##...@....@...@%...@...%@..##....#@@#....@@@@@@........@.......##.......@.......@%......%@.......@%......%@.......@%.......#@@#....##..%#...##..%@...%@#.#%....@#@@....@%..#@...@....@...##..%@....#@@#.....#@@#....##..##...@....@...@%...@...#@%%#@....%##%@.......%#......%@.....@@#....."
};

using namespace std;

vector<string> s, s1, s2, s3; //s - all numbers, s1 - first number, s2 - second number, s3 - third number in ascii graphics in original resolution
bool filled1=false, filled2=false, filled3=false; //filled1 = true, if corresponding number was written in its array s1
char ch1[N][N], ch2[N][N], ch3[N][N]; //all numbers in ascii graphic, resolution N*N
bool trash=false;

//TRIM----------------------------------------------------------------------------------------------------------------------------------------------
void trim(vector<string> &s, bool make_square=false, bool sssp=false) {  
	//if (!make_square) trim all sides; else (if only one number) trim left, up, down and make a square.
	//sssp = s4itat svetlo-seroe pustim
	bool flag=true;

	while(flag) { //trim bottom
		for (int i=0; i<s.back().size();i++) 
			if (s.back()[i]!='.') {
				if (!((s.back()[i]=='%')&&sssp)) {
					flag=false;
					break;
				}
			}
			if(flag) s.pop_back();
			if (s.size()==0) return;
	}

	int count=0; //trim top
	flag=true;
	int w=s[0].size(), h=s.size();

	for (int i=0; i<s.size(); i++) {
		for (int j=0; j<s[i].size(); j++)
			if (s[i][j]!='.') {
				if (!((s[i][j]=='%')&&sssp)) {
					flag=false;
					break;
				}
			}
			if (flag) count++;
			else break;
	}	
	s.erase(s.begin(),s.begin()+count);

	h=s.size();
	//------------------------------------------------
	count=0;  //trim left side
	flag=true;
	for (int j=0; j<w;j++) {
		for (int i=0; i<h; i++) {
			if (s[i][j]!='.') {				
				if (!((s[i][j]=='%')&&sssp)) {
					flag=false;
					break;
				}
			}
		}
		if (flag) count++;
		else break;
	}

	if(count) { 
		for (int i=0; i<s.size(); i++) {
			s[i].erase(s[i].begin(), s[i].begin()+count);
		}
		w=s[0].size();
	}

	//------------------------------------------------
	if (!make_square) {//trim right side
		count=0;  
		flag=true;

		for (int j=w-1; j>0;j--) {
			for (int i=0; i<h; i++) {
				if (s[i][j]!='.') {
					if (!((s[i][j]=='%')&&sssp)) {
						flag=false;
						break;
					}
				}
			}
			if (flag) count++;
			else break;
		}

		if(count) 
			for (int i=0; i<s.size(); i++) {
				s[i].erase(s[i].end()-count, s[i].end());
			}
	}
	//----------------------------------------------------------
	else { //make vector<vector<char>> s squared
		for (int i=0; i<h; i++) {
			s[i].resize(h,'.');
		}
	}
}
//DIVIDE BY LINES and related functions------------------------------------------------------------------------------------------------------

void delete_border(vector<string> &sn) { //1/4 left and right, 1/8 up, down
	int horiz,vert;
	horiz=sn[0].size()/4;
	vert=sn.size()/8;
	sn.erase(sn.end()-vert, sn.end());
	sn.erase(sn.begin(), sn.begin()+vert);
	for(int i=0; i<sn.size(); i++) {
		sn[i].erase(sn[i].end()-horiz,sn[i].end());
		sn[i].erase(sn[i].begin(),sn[i].begin()+horiz);
	}
}

void check_for_border() { 
	trim(s1);
	int w=s1[0].size(), h=s1.size();

	for (int i=(h/4); i<((3*h)/4); i++) { //let it be border conditions
		if (s1[i][0]=='.') 
			return;
		if (s1[i][w-1]=='.') 
			return;
	}

	//if program is here, s1 has a border
	delete_border(s1);

	//if s1 has a border, s2, s3 are bordered too
	trim(s2);
	delete_border(s2);

	if (filled3) {
		trim(s3);
		delete_border(s3);
	}
}

void fill_sn(vector<string> &sn, vector<int> lines) { //fill s1, s2, s3 using lines[] - array with coords of empty vertical lines
	int l, r;
	if(&sn==&s1) {
		l=0;
		r=lines[0];
		filled1=true;
	}
	else if(&sn==&s2) {
		l=lines[0]+1;
		r=lines[1];
		filled2=true;
	}
	else if (&sn==&s3) {
		l=lines[1]+1;
		r=s[0].size();
		filled3=true;
	}
	for (int i=0; i<sn.size(); i++) {
		for (int j=l; j<r; j++){
			sn[i][j]=s[i][j];
			s[i][j]='.';
		}
	}
}

void find_vertical_lines (const bool sssp=false) { ///sssp = s4itat svetlo-seroe pustim

	vector<int> lines;

	bool flag;
	int w=s[0].size(), h=s.size(), j=0;

	while (j<w) {
		flag=true;
		for (int i=0; i<h; i++)
			if (s[i][j]!='.') {
				if (!((s[i][j]=='%')&&sssp)) {
					flag=false;
					break;
				}
			}	

			if (!flag) j++;
			else {
				lines.push_back(j); //one empty verticle line was found

				while (j<w) { //if verticle line is wide j++
					for (int i=0; i<h; i++) {
						if (s[i][j]!='.') {
							if (!((s[i][j]=='%')&&sssp)) {
								flag=false;
								break;
							}
						}
					}	
					j++;
					if (!flag) break;
				}	
			}
	}

	int n=lines.size();
	if (n>2) {
		cout<<"Error: more than 2 empty vertical lines"<<endl;
		return;
	}
	if (!n) return;

	if (n==2) {
		fill_sn(s1, lines);
		fill_sn(s2, lines);
		fill_sn(s3, lines);

		check_for_border();

		trim(s1,true);
		trim(s2,true); 
		trim(s3,true);

		return;
	}

	//if (n==1) - only one verlical line was found:

	if(!(filled1||filled2||filled3)) {
		if(lines[0]<(s[0].size()/2)) {
			fill_sn(s1,lines);
			trim(s1, true);
		}
		else {
			lines.push_back(lines[0]);
			fill_sn(s3,lines);
			trim(s3, true);
		}
		return;
	}

	if (filled3){
		lines.push_back(s[0].size());
		fill_sn(s1,lines);
		fill_sn(s2,lines);
		trim(s1, true);
		trim(s2, true);
		return;
	}

	//if filled1
	lines.push_back(lines[0]);
	lines[0]=0;
	fill_sn(s2,lines);
	fill_sn(s3, lines);
	trim(s2,true);
	trim(s3,true);
}
//FIND CONNECTED REGIONS and related functions--------------------------------------------------------------------------------------------------------------------
vector< vector<int> > array_of_labels;
vector<int>labels_id; //sperva dlya i-oi metki labels[i] = i. Kogda nahodim, chto metka i  ekvivalentna metke j, stavim label[i]=j (ili label[j]=i).
set<int>actual_labels;//zapolnyaetsya posle zameni ekvivalentnih metok

int up(int i,int j);
int left(int i,int j) ;
int new_label(int i, int j) ;
int get_label(int label) ;
void add_equiv (int m1, int m2) ;
void set_label(int i, int j) ;
void resolve_equiv() ;
void copy_labeled_items(vector<string> &sn, int label) ;

void init_labels() {
	int h=s.size(), w=s[0].size();
	array_of_labels.resize(h);
	for(int i=0; i<h; i++)
		array_of_labels[i].resize(w,0);
	labels_id.resize(1,0);
}

int up(int i,int j) {
	if (i==0) return 0;
	return array_of_labels[i-1][j];
}

int left(int i,int j) {
	if (j==0) return 0;
	return array_of_labels[i][j-1];
}

int new_label(int i, int j) {
	int t=labels_id.size();
	labels_id.push_back(t); //labels_id[t]=t; 
	return t;
}

int get_label(int label) {
	if (label==labels_id[label]) return label;
	return (get_label(labels_id[label]));
}

void add_equiv (int m1, int m2) {
	int a, b;
	a=get_label(m1);
	b=get_label(m2);
	if(a<b)
		labels_id[b]=a;
	else labels_id[a]=b;
}

void set_label(int i, int j) {
	int m1=up(i,j);
	if(m1) {
		array_of_labels[i][j]=m1;
		int m2=left(i,j);
		if ( m2 && (m2!=m1) )
			add_equiv(m1, m2);
		return;
	}
	m1=left(i,j);
	if (m1) { 
		array_of_labels[i][j]=m1;
		return;
	}
	m1=new_label(i,j);
	array_of_labels[i][j]=m1;
}

void resolve_equiv() { //prohodit po razmechennomu massivu i pomechaet elementi s ekvivalentnimi metkami odnoi metkoi; mnojestvo ostavshihsya metok zapisivaet v aktual_labels
	for (int i=0; i<array_of_labels.size(); i++)
		for (int j=0; j<array_of_labels[i].size(); j++) {
			if (array_of_labels[i][j]) {
				int t=get_label(array_of_labels[i][j]);
				array_of_labels[i][j]=t;
				actual_labels.insert(t);
			}

		}
}

void copy_labeled_items(vector<string> &sn, int label) {
	for(int i=0; i<s.size(); i++) {
		for (int j=0; j<s[0].size(); j++){
			if(array_of_labels[i][j]==label) {
				sn[i][j]=s[i][j];
				s[i][j]='.';
			}
		}
	}

	if (&sn==&s1) filled1=true; 
	if (&sn==&s2) filled2=true; 
	if (&sn==&s3) filled3=true; 
}

void init_s123() {
	s1.resize(s.size());
	for(int i=0; i<s.size();i++)
		s1[i].resize(s[0].size(),'.');
	s2=s1;
	s3=s1;
}

void reinit_s123() {
	s2.resize(s.size());
	for(int i=0; i<s.size();i++) {
		s2[i].clear();
		s2[i].resize(s[0].size(),'.');
	}
	if(!filled1) s1=s2;
	if(!filled3) s3=s2;
}


inline int mass(vector<string> &a) {
	int h=a.size(), w=a[0].size(), m=0;
	for(int i=0; i<h; i++)
		for (int j=0; j<w; j++)
			if (a[i][j]!='.') m++;
	return m;
}

void find_connected_regions() { 

	init_labels();
	//find connected regions----------------------------------
	for (int j=0; j<s[0].size(); j++) {
		for(int i=0; i<s.size(); i++) {
			if (s[i][j]!='.')
				set_label(i,j);
		}
	}

	resolve_equiv();
	//--------------------------------------------------------

	//int number_of_connected_regions= actual_labels.size();


	if (actual_labels.size()==1) return;

	vector< vector<string> > crs; //cr - connected regions

	vector<string> cr=s2;
	for (set<int>::iterator iter=actual_labels.begin(); iter!=actual_labels.end(); iter++) {
		copy_labeled_items(cr, *iter);
		crs.push_back(cr);
		cr=s2;
	}

	//now each connected region is an item of vector crs;

	int hmin=s.size(), hmax=0, h;
	for (int i=0; i<crs.size(); i++) {
		trim(crs[i]);
		h=crs[i].size();
		if (h>=hmax) hmax=h;
		if (h<=hmin) hmin=h;
	}

	if ((3*hmin)<hmax) trash=true;

	if (trash) {
		for (int i=0; i<crs.size(); i++) {
			if (crs[i].size()<(hmax/3)) {
				crs.erase(crs.begin()+i);
				i--;
			}
		}
	}

	if (crs.size()==3) {
		s1=crs[0], s2=crs[1], s3=crs[2];
		filled1=true, filled2=true, filled3=true;
		return;
	}

	if (crs.size()==1) {
		s=crs[0];
		if (trash) find_vertical_lines();
		return;
	}

	if (crs.size()==2) {
		if (!trash) {//check_for_border
			//border begins before digit=>it's in crs[0]
			int h=crs[0].size(), w=crs[0][0].size();
			bool border=true;
			for (int i=h/4; i<(3*h/4); i++) {
				if ((crs[0][i][0]=='.')||(crs[0][i][w-1]=='.')) {
					border=false;
					break;
				}
			}

			if ((h<5)||(w<5)) border=false;

			if (border){
				s2=crs[1];
				filled2=true;
				return;
			}
		}

		if (filled1) {
			s2=crs[0], s3=crs[1];
			filled2=true, filled3=true;
			return;
		}
		if (filled3) {
			s1=crs[0], s2=crs[1];
			filled1=true, filled2=true;
			return;
		}
		//if !(filled1||filled2||filled3)
		if (mass(crs[0])>mass(crs[1])){
			s3=crs[1], s=crs[0];
			filled3=true;
			if (trash) find_vertical_lines();
			return;
		}
		else {
			s1=crs[0], s=crs[1];
			filled1=true;
			if (trash) find_vertical_lines();
			return;
		}	
	}
}

//DIVIDE---------------------------------------------------------------------------------

bool divide() {
	init_s123();
	find_vertical_lines();
	if (filled2) return true;

	find_connected_regions();
	if (filled2) return true;

	trim(s,false,true);
	if (s.size()==0) {
		if(filled1||filled3) return true;
		return false;
	}

	reinit_s123();
	find_vertical_lines(true);
	if (filled2) return true;

	s2=s;
	filled2=true;
	return true;
}

//RESIZE--------------------------------------------------------------------------------------------

int CharToInt (char c) {
	if (c=='@') return 0;
	if (c=='#') return 85;
	if (c=='%') return 170;
	return 255;
}

char IntToChar (int i) {
	int b1=64,b2=127,b3=191;
	if (i<b1) return '@';
	if (i<b2) return '#';
	if (i<b3) return '%';
	return '.';
} 

inline int roundup(double i) {
	if (((double)((int)i))==i) return i;
	return (int)i+1;
}

void resize(vector<string> &L, char S[N][N]) { //first do Trim(L)  
	trim(L,true);	

	if (L.size()!=N) {
		double setka[N+1];
		double sum=0;
		double d=((double)L.size()/N);

		for (int i=0; i<N; i++){
			setka[i]=sum;
			sum+=d;
		}

		setka[N]=L.size();

		double area;
		double summ;

		int l,r,up,down;
		double dl, dr, dup, ddown;
		int t;

		for (int row=0; row<N; row++) {
			up=roundup(setka[row]);
			down=setka[row+1];
			dup=(double) up-setka[row];
			ddown=setka[row+1]- (double) down;

			for (int column=0; column<N; column++) {
				l=roundup(setka[column]);
				r=setka[column+1];
				dl=(double)l-setka[column];
				dr=setka[column+1]-(double)r;

				area=(setka[column+1]-setka[column])*(setka[row+1]-setka[row]);
				if(area) {
					summ=0;
					for (int i=up; i<down; i++)
						for (int j=l; j<r; j++)
							summ+=CharToInt(L[i][j]);
					if (dl!=0) {
						t=0;
						for (int i=up; i<down; i++)
							t+=CharToInt(L[i][l-1]);
						summ+=dl*t;
					}
					if (dr!=0) {
						t=0;
						for (int i=up; i<down; i++)
							t+=CharToInt(L[i][r]);
						summ+=dr*t;
					}
					if (dup!=0) {
						t=0;
						for (int j=l; j<r; j++)
							t+=CharToInt(L[up-1][j]);
						summ+=dup*t;
					}
					if (ddown!=0) {
						t=0;
						for (int j=l; j<r; j++)
							t+=CharToInt(L[down][j]);
						summ+=ddown*t;
					}
					S[row][column]=IntToChar((int)(summ/area));
				}
				else S[row][column]='.';
			}
		}
	}
	else 
		for (int i=0; i<N; i++)
			for (int j=0; j<N; j++)
				S[i][j]=L[i][j];
}

//COMPARE--------------------------------------------------------------------------------------------
char ch[N][N];
vector<int> result;

int compare(char A[N][N], char B[N][N]) {
	int sum=0;
	for (int i=0; i<N; i++)
		for (int j=0; j<N; j++) 
			if (A[i][j]!=B[i][j]) 
				sum++;
	return sum;
}

void get_letter_to_ch(int font, int number) {
	for (int i=0; i<N; i++)
		for (int j=0; j<N; j++) 
			ch[i][j]=F[font][number*N*N+i*N+j];
}

void move_right(char ch[N][N]) {
	for(int i=0; i<N; i++) {
		for (int j=N-1; j>0; j--)
			ch[i][j]=ch[i][j-1];
		ch[i][0]='.';
	}
}

inline void copych (char ch1[N][N], char ch2[N][N]) { //copy content of ch1 to ch2
	for (int i=0; i<N; i++)
		for (int j=0; j<N; j++)
			ch2[i][j]=ch1[i][j];
}

void compare_with_patterns(char chn[N][N]) {

	int min=1000;
	int minnum=10;
	int t;

	int beginfont=0, endfont=NumberOfFonts-1;
	if(trash) beginfont=12, endfont=12;


	for (int font=beginfont; font<=endfont; font++){
		for (int n=0; n<10; n++) {
			get_letter_to_ch(font,n);
			t=compare(chn,ch);
			if(t<min) {  
				min=t;
				minnum=n;
			}
		}
	}
	int best=0; //esli pomojet sdvig, best=1, esli trim - best=2
	if (min>13) {
		char chn_trimmedhard[N][N], chn_shifted[N][N];

		copych(chn, chn_shifted);
		move_right(chn_shifted);
		
		if (chn==ch1) {
			trim(s1,true,true);
			resize(s1,chn_trimmedhard);
		}
		else if(chn==ch2) {
			trim(s2,true,true);
			resize(s2,chn_trimmedhard);
		}
		else if(chn==ch3) {
			trim(s3,true, true);
			resize(s3,chn_trimmedhard);
		}

		int t2;
		for (int font=beginfont; font<=endfont; font++){
			for (int n=0; n<10; n++) {
				get_letter_to_ch(font,n);
				t=compare(chn_trimmedhard,ch);
				t2=compare(chn_shifted,ch);
				if(t<min) {  
					min=t;
					minnum=n;
					best=1;
				}
				if (t2<min) {
					min=t2;
					minnum=n;
					best=2;
				}
			}
		}
		if (chn==ch1) {
			if (best==2) {
				if (filled2){
				trim(s2, true, true);
				resize(s2,ch2);
				}

				if (filled3){
					trim(s3, true, true);
					resize(s3,ch3);
				}
			}
			if (best==1) {
				if (filled2) move_right(ch2);
				if(filled3)	move_right(ch3);
			}
		}
	}
	result.push_back(minnum);
}

//MAIN-----------------------------------------------------------------------------------
int main() {
	string a;
	while(!cin.eof()) {
		if(cin>>a)
			s.push_back(a);
	}

	trim(s);

	if (!divide()) {
		cout<<"Error: couldn't separate digits"<<endl;
		return -1;
	}

	if (filled1) {
		resize(s1,ch1);
		compare_with_patterns(ch1);
	}
	if (filled2) {
		resize(s2,ch2);
		compare_with_patterns(ch2);
	}
	if (filled3) {
		resize(s3,ch3);
		compare_with_patterns(ch3);
	}

	for (int i=0; i<result.size();i++)
		cout<<result[i];

	result.clear();
	s.clear();
	s1.clear();
	s2.clear();
	s3.clear();
	filled1=false;
	filled2=false;
	filled3=false;
	array_of_labels.clear();
	labels_id.clear();
	actual_labels.clear();	
	trash=false;
	//system("pause");
}
