#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{35.2961,58.6046,-1.13347,37.8325,126.947,192.54,218.739,245.911,272.793,131.136,145.025,58.4806,-41.612,75.3183,134.389,144.812,42.5122,64.4754,138.135,174.518,129.485,104.852,15.948,42.4812,-123.764,-86.5389,20.7144,2.72953,114.514,191.946,90.0284,139.454,141.52,196.405,190.153,170.234,5.67207,-44.7179,-167.749,-145.754,-145.173,-125.694,-65.1226,-32.9579,-105.982,-3.22392,68.7206,73.1587,89.7519,206.114,245.948,123.721,-185.193,-70.1419,42.2826,66.9543,81.6247,-7.0708,-52.9478,-88.1109,-1.56493,-58.7173,9.33729,-22.5535,22.1587,60.2623,125.939,-65.4555,33.2419,-43.1681,-15.5943,-189.877,-27.0645,-61.5046,-179.188,-221.084,-91.5189,17.5149,9.70111,72.2359,71.1408,150.519,183.865,-98.7923,-175.211,-2.7198,117.63,56.1123,-91.7361,-35.5326,-86.0748,-116.548,-103.143,-53.6854,72.8916,109.395,53.5064,114.478,191.606,-17.3199,-70.7365,-4.00954,111.721,-69.6465,-232.181,-162.714,-21.3086,117.34,142.605,25.8374,58.8633,104.231,57.0224,61.3264,87.7165,-96.8372,44.1635,-4.92394,106.68,-46.9974,32.3542,-43.3997,-0.070415,64.5098,92.9398,165.438,226.944,114.055,59.2267,29.8779,-72.7184,-8.67814,-5.10781,52.9011,-39.4578,53.2556,-53.8424,23.7422,26.6373,-119.788,-45.62,23.0604,-66.8608,-21.999,10.3898,-177.221,-19.3564,9.25297,-41.7699,20.3817,214.014,-6.22523,-1.44802,18.1162,-17.7576,-15.5695,40.5345,100.677,121.375,115.02,-75.9787,-97.446,-85.4659,-90.9344,-73.3397,76.6778,23.0281,2.51273,-50.1268,-22.1779,-54.8795,47.5587,52.8019,39.1884,24.6854,-39.016,-86.4078,-38.2314,-98.2048,-107.4,-33.971,-119.738,-34.0298,-143.201,-101.714,-83.8451,-11.8083,-16.0621,-25.8891,1.74201,69.3255,-97.2472,19.6998,149.596,31.1312,-51.4297,-97.7259,-13.043,81.1,72.3682,3.41368,4.26838,-106.193,-336.965,-32.789,-37.5823,165.157,-12.9347,-0.610935,75.0682,146.537,-37.5162,-110.7,-43.4639,56.2568,98.8497,55.0929,-102.842,-202.557,-71.6585,7.43623,138.638,83.4374,21.7678,35.529,-18.2377,27.8527,178.378,120.043,-1.01216,153.439,140.828,-11.9816,-27.4812,6.02893,90.2746,161.025,32.0021,24.6411,42.5559,5.35111,9.57864,132.487,191.898,293.267,111.18,64.0576,101.223,-28.4824,16.4713,160.74,-35.9813,-80.257,23.1272,17.9035,52.682,},{80.1484,107.227,127.458,264.024,289.108,357.475,369.59,351.748,234.938,-106.693,-255.302,-345.501,-82.951,58.6583,87.3736,-99.7796,81.212,276.861,371.268,367.04,180.934,200.434,123.481,30.3135,-104.251,117.987,246.445,132.627,-14.9274,378.714,110.247,-39.5197,-183.315,102.876,514.394,356.869,236.852,62.0673,11.8553,148.108,19.1041,-38.9352,-65.7109,98.1053,521.21,465.482,173.023,-71.1235,131.218,73.145,307.269,-33.2897,245.155,-125.927,-300.706,-210.432,-201.058,-122.823,93.7831,-159.537,21.725,402.72,233.54,258.756,136.016,169.22,-15.7414,259.536,-128.467,13.1972,-64.2781,-81.3632,-243.455,70.9491,87.0725,13.8916,4.93504,138.033,54.8719,167.667,62.6334,.0301034,-70.7774,160.441,111.801,123.204,-174.568,-114.339,-68.3033,-25.9815,36.8334,.347825,177.341,191.255,-129.826,84.4052,16.2239,-145.529,-212.392,-409.112,293.052,428.262,276.11,86.4417,-207.495,-39.9993,-103.653,-12.9876,101.317,74.3814,-345.75,-172.607,-65.4226,-227.789,-375.356,-28.4382,-46.2823,313.538,303.173,261,-176.545,-114.68,157.439,-134.189,-369.419,-83.0406,-266.032,-285.029,-180.047,-572.121,-453.199,-455.809,-220.886,-134.985,115.632,389.991,61.8462,12.3783,-135.754,-243.1,-172.654,-155.063,-63.347,-282.589,-26.5254,-534.726,-557.869,-339.532,9.43704,-265.737,-16.9818,163.587,-1.54172,-207.986,-189.564,-142.697,34.0387,126.372,68.2449,-96.4698,-26.2352,-308.334,-173.037,-128.618,-323.734,-131.855,44.6863,84.2962,-146.18,-177.398,-150.277,-414.64,-51.0785,-99.8928,-15.4603,155.94,72.2335,109.409,-11.6984,-188.451,-133.076,162.861,138.127,126.171,-132.196,-42.5548,-43.8907,-350.708,-120.081,217.991,70.436,294.343,22.7146,72.6594,48.359,-18.4126,-80.9133,-56.5592,-83.2819,99.6265,-33.037,-55.1131,12.7453,-158.931,-236.575,146.739,-2.08563,227.139,-31.9366,253.584,82.2,259.011,27.5761,213.091,26.1061,124.806,-129.275,5.60432,-41.747,-277.025,-26.5454,123.026,122.699,38.0138,24.114,369.745,204.497,118.373,285.35,302.606,127.048,-24.6312,-252.06,-329.269,-177.294,128.399,-33.5454,271.343,180.435,46.4122,179.737,410.315,385.547,315.469,64.4053,39.1188,-34.4082,25.7524,-9.17813,-294.042,-81.5672,188.437,208.161,86.813,7.62243,11.3641,},{-226.173,-399.616,-293.817,-46.0087,-29.2345,23.3331,347.485,324.21,-28.0752,30.0524,-318.069,-239.085,112.142,8.07159,64.7668,-147.396,-245.369,-96.0024,7.88407,-178.296,138.071,-101.143,-246.797,-305.417,-309.501,-138.895,-139.307,-256.136,-343.064,-209.144,-283.248,-238.861,104.622,-285.382,-463.659,-155.988,-110.803,132.907,172.809,-45.7875,174.38,-134.892,144.841,-166.87,-155.902,-533.374,-47.628,104.214,-9.38186,13.6023,-30.5851,40.4355,237.951,229.319,537.678,188.346,260.894,218.66,-191.257,301.768,317.389,310.025,480.001,-223.897,-319.194,-63.6729,227.265,197.397,259.295,414.023,145.277,-138.477,239.802,38.1534,176.039,485.211,533.566,437.4,831.694,-44.5144,-103.434,5.0114,24.5745,312.723,174.354,-6.79396,78.7471,57.6764,-159.553,-45.1606,18.4128,172.912,621.144,333.067,637.293,89.4362,-259.751,-173.919,-140.027,119.792,-492.926,-651.445,-255.092,-234.297,-283.121,-748.041,-716.142,-232.473,432.201,109.199,707.139,456.801,78.1612,129.982,-251.351,-567.621,-674.706,-296.87,-131.252,-138.046,37.7569,-165.215,-243.102,202.554,167.102,-199.362,221.873,344.116,197.877,701.185,-231.543,-578.446,-620.663,-399.513,-190.269,-308.816,-258.92,-297.757,-289.233,-269.443,-52.6606,-272.279,-137.203,175.601,24.5907,306.952,-26.7494,87.2497,-136.722,103.94,-124.756,-342.389,-197.832,-36.1929,-173.429,-347.268,-88.1904,-288.976,-389.959,-142.975,-90.6406,-221.13,-221.641,158.01,293.085,134.771,102.078,-299.561,-32.8859,-36.6354,-167.458,29.7799,-67.5265,-503.146,-498.594,-124.858,-220.831,-422.832,-19.9384,512.525,212.356,-75.3121,84.9172,58.6443,29.1563,-155.953,-209.599,56.5206,.410312,-662.508,-411.382,-604.77,-102.978,-310.108,80.5921,416.145,231.904,278.312,170.931,-79.2183,-164.13,-156.214,-127.305,-101.926,-271.033,-351.007,-253.505,-49.1141,-239.764,-245.25,-72.9398,61.4325,306.888,264.306,-41.6802,-243.136,-77.9582,-188.6,21.9232,-283.773,99.503,56.7963,-258.746,116.786,120.8,-85.8616,84.8855,93.3368,367.822,168.557,181.598,78.9312,161.19,273.208,244.665,329.021,362.271,264.368,409.648,168.467,199.101,-53.6163,-323.509,-10.1768,310.099,189.269,12.5457,-35.521,11.5241,302.997,694.156,257.567,355.181,395.608,423.605,366.713,},{-11.9187,-31.8639,-54.5259,-19.8651,65.2005,-79.0541,91.4954,-182.883,-412.351,-162.789,-362.211,-314.655,-181.82,-225.126,-107.937,-85.724,-11.3337,.696775,-148.74,-189.505,-29.9383,12.8178,32.2724,-10.8377,-167.639,-168.791,-50.3223,-184.696,-271.16,-160.346,-134,-110.19,-38.4986,-237.493,-193.762,-55.3564,-3.99219,204.852,-12.6269,-166.795,-81.3953,46.4614,316.839,-49.3464,-336.632,-459.689,-165.299,-86.5645,-243.766,-29.4631,123.757,19.8406,92.3218,37.9153,101.629,-56.1676,-115.17,29.9058,209.106,305.421,252.056,247.959,193.167,-312.571,-289.502,-12.4647,-21.0813,5.83448,112.635,86.9942,102.323,-56.3159,-39.1123,9.40062,93.6396,280.033,348.14,290.019,552.624,-4.22069,-187.779,-32.7034,-143.547,140.39,111.329,77.6281,65.6774,-89.1818,-212.911,-165.007,9.39243,179.414,355.746,370.231,553.013,92.72,-73.6551,219.256,89.9962,110.763,-81.426,-157.594,-172.921,-253.232,-480.79,-671.504,-570.915,-172.009,214.834,285.296,669.649,450.959,135.615,326.363,42.4309,-148.471,-308.686,-239.029,-148.606,-375.757,-371.586,-367.312,-434.933,-267.123,13.517,14.8081,469.974,347.866,182.859,697.159,104.88,-128.372,-447.691,-248.906,-69.203,-175.736,-291.332,-327.947,-534.032,-406.711,-300.054,-15.7527,120.448,257.981,73.2444,564.824,314.678,259.182,-6.22004,-131.261,-283.445,-441.35,-466.504,-260.578,-119.064,-125.542,-79.8644,-271.257,-120.061,114.29,-14.8558,150.152,86.6671,370.715,180.857,95.2222,-63.0001,-252.566,-290.66,-150.17,-49.5573,67.2924,-54.9025,-265.166,-193.46,-26.347,-126.687,74.7721,198.34,342.92,275.722,125.996,57.2505,-95.6834,-178.868,-118.833,-7.81506,79.6243,-19.1784,-375.312,-9.59792,-409.268,-70.2461,-110.164,-4.05722,127.898,247.64,199.674,45.7676,-147.474,-212.59,-115.703,87.554,-100.492,-346.572,-214.521,-29.2231,-327.847,-114.106,-325.513,-130.022,-152.294,126.68,268.153,169.258,-63.1933,-58.7993,112.989,160.207,-259.216,-80.3707,-30.5987,-296.357,-96.3292,-109.347,-350.963,-174.125,-14.3275,161.129,84.854,122.617,-16.1964,-115.025,-46.8914,-134.31,-144.108,-131.509,-178.335,-60.1985,-81.3931,-147.857,-335.509,-595.325,-466.627,-253.074,-134.914,-57.6021,31.485,-92.9838,-38.3472,-60.8566,-149.412,-260.762,-156.752,-130.017,-75.9111,},{27.3888,25.2897,3.99763,10.5987,31.4045,71.4445,74.0704,68.8194,78.0516,69.7383,78.1465,32.4352,8.40023,2.73991,24.9605,18.5581,26.1488,30.281,29.8719,60.8539,27.4522,54.291,16.3587,-1.05287,-17.2806,7.21024,4.5608,17.6441,75.9503,52.7931,22.2076,12.6911,24.4888,29.8288,62.0114,46.2353,22.9643,4.70627,-17.7719,-1.02136,6.0893,-34.1181,2.54348,23.4893,35.7527,43.9862,23.678,9.50579,26.9218,62.7593,61.3017,41.6767,-17.1904,-5.36043,20.7888,36.7296,24.923,14.9965,9.01434,-5.44926,58.108,27.5085,51.9123,8.25772,26.2334,52.6633,46.6579,-4.52173,7.10726,33.4078,32.7952,-0.624562,22.0225,32.9986,7.36658,2.02265,36.7348,53.4461,48.0721,31.5448,31.6665,53.1257,29.1475,-2.15169,12.8868,7.1955,31.7915,8.3693,-26.3839,.756016,.240702,-15.6783,44.394,64.4288,50.0554,30.4196,23.5641,9.58815,-1.61198,-13.6856,-10.4553,11.6978,-8.40442,-31.0672,-25.3164,29.3139,21.1513,13.724,47.1246,35.5032,33.9949,20.1905,15.8669,1.372,-13.9426,-22.5669,34.9514,27.9129,40.8361,22.6241,46.5737,62.746,48.9246,18.2817,43.863,39.8031,46.9405,23.0677,16.0373,37.474,35.1336,69.9632,35.3474,30.1563,31.7727,33.5028,25.0462,60.8903,43.6821,14.5116,28.4425,27.9558,18.2073,4.04943,11.7766,27.4054,78.5761,52.9307,29.6041,27.2432,61.3241,37.3598,33.9623,43.1966,39.0318,16.8634,55.9301,80.6213,51.298,11.3623,11.7078,42.5774,34.5631,19.9409,-2.97095,19.5567,28.0199,10.2479,-3.18253,27.6553,23.2501,33.9802,43.4969,46.5506,21.8947,-7.89083,19.2626,59.3658,45.5385,15.3643,11.6395,.31344,4.23914,-16.4747,6.96287,28.9729,33.4662,12.9302,30.745,41.1135,43.1187,-1.48337,32.3513,66.9716,46.3705,17.2411,27.62,8.88364,-1.2268,29.4088,28.1912,47.144,32.9445,-4.79026,26.2956,33.0514,35.932,14.2226,16.1666,42.4656,45.0871,33.4314,10.1764,25.6372,15.2101,46.4198,26.2531,21.7207,29.3124,8.81331,27.0664,21.142,22.7049,8.1608,9.08798,29.304,73.8904,79.3822,74.6622,18.4924,7.25561,-2.36447,1.92429,50.7505,48.0858,14.2054,41.7694,29.2177,15.5083,9.33302,-4.66795,-17.8876,33.7345,63.941,77.2575,46.931,20.3261,37.516,23.4054,29.0689,47.5286,4.99808,4.70806,10.7457,4.66391,16.9301,},{23.4707,24.1757,-8.04355,4.64754,33.3889,81.2662,103.154,87.5841,86.4675,56.2511,62.0749,-28.3469,-46.0548,-12.1726,35.3484,33.472,21.4439,27.902,32.5018,69.8767,38.6226,60.5337,10.0647,-19.4966,-61.0664,-3.43727,-33.3294,-22.2071,59.6436,61.048,32.3623,24.3047,37.1263,45.2477,76.3803,66.3101,22.6272,-4.15568,-54.6925,-20.1943,-17.4787,-81.1912,-38.4679,-19.4845,-8.55002,36.5081,26.7969,16.2015,32.5204,73.6105,79.573,62.7747,-53.3631,-28.6421,16.7451,47.1983,4.40927,13.5615,-19.0676,-57.6097,24.6132,5.42212,45.1953,5.13026,31.9462,60.5515,64.7822,-14.8763,-4.0732,28.1058,38.9921,-42.3557,11.7965,19.2027,-22.2617,-52.6289,.496885,41.7849,43.222,35.654,40.4946,63.9076,36.7211,-15.3174,-6.59451,.854666,34.9626,-6.9466,-66.561,-9.33519,-23.6602,-58.3732,10.5934,51.2923,46.4969,39.4857,27.9568,.193008,-10.2404,-49.2848,-19.478,31.561,8.18565,-40.4572,-68.0908,19.1599,14.3567,3.83663,28.295,15.5043,28.7045,28.1136,15.6348,-21.3906,-53.6699,-52.3127,70.1689,48.6266,61.767,14.8293,37.4104,66.0682,47.2001,15.0368,41.4363,42.1486,49.1971,32.0197,15.9214,12.2853,-21.9199,82.3041,33.2339,23.4312,7.72267,17.7794,-5.96745,69.0482,45.3795,-19.682,-1.74662,17.8304,-9.49312,-5.20195,2.08909,-14.0951,93.9414,62.5085,29.5964,26.0563,78.0722,17.1503,10.2757,53.7224,37.9453,-12.029,43.4082,93.3939,77.3987,14.6193,-12.269,8.49046,-0.900758,-1.6016,-27.4449,5.17901,-3.20989,-33.6657,-56.73,.434459,21.4615,42.4617,28.0349,25.9088,-16.3524,-39.8276,2.10844,37.5726,23.2519,-2.04997,-2.06532,-27.3277,-21.3161,-61.3326,-41.2077,17.754,41.6027,-8.12539,-2.83481,34.6549,38.8108,-17.5696,21.148,66.8435,33.0252,2.92407,4.70443,-13.3463,-11.9497,18.6473,12.2273,53.4353,27.0019,-66.1265,-3.73037,29.154,54.0511,22.015,17.5679,58.7041,65.5374,25.7803,-10.3607,10.9365,7.15966,43.4558,16.2368,25.5298,16.644,-19.3957,8.3096,34.9478,33.9927,11.0349,16.3281,32.5933,76.8404,94.7954,78.1017,5.15859,5.69853,-3.5905,-4.78858,52.5833,45.1957,9.46773,31.157,33.1415,15.9184,14.1559,6.87611,-9.94717,44.6396,81.0988,96.2686,44.38,15.1857,57.939,27.3701,32.2879,61.7919,-6.81023,.934116,29.1388,18.3982,26.2883,},{26.0891,25.8598,11.3352,17.0498,37.4569,75.8279,75.053,69.7257,74.06,65.3085,69.9371,32.5386,18.2293,16.5275,33.2691,28.1899,25.9108,31.6433,33.3582,61.9001,37.75,59.487,30.0182,14.1887,-5.71935,11.184,12.7209,31.1392,80.098,62.4586,29.368,20.3206,24.8564,34.5142,64.1406,52.6073,28.2965,15.9629,2.57991,10.7182,6.49903,-23.1145,16.0716,32.6177,43.7496,47.9377,28.7601,10.5704,27.0336,62.53,64.3368,52.6281,.973019,9.5718,25.2047,31.8127,22.2322,25.0109,24.4797,11.2107,62.625,32.3394,47.0343,8.81621,23.9758,56.1657,52.3307,7.7316,14.3905,36.4887,22.5189,-9.33841,24.6954,41.916,21.7379,14.7175,41.4991,50.8544,42.7578,27.7618,32.5615,55.8666,35.2543,5.95856,8.04417,-1.6108,24.665,20.848,-5.63113,21.2251,15.0919,2.46973,46.6081,57.8684,43.9542,26.8772,20.5774,17.2146,5.58492,-25.4996,-16.739,21.476,5.42946,-12.1084,-19.1563,31.2675,20.4525,25.399,52.3809,36.789,33.8088,18.4953,14.8535,9.00273,-8.2719,-25.5843,23.0275,32.1641,41.8227,29.4717,39.6369,60.3763,37.3398,22.9598,45.1271,41.9529,51.1035,21.5476,14.5194,28.4111,17.6025,45.1269,25.6414,28.5352,32.6537,32.2905,20.2812,52.1316,36.3554,13.197,28.6703,30.642,23.8336,6.48736,7.2747,11.7249,55.4383,43.8004,28.9854,31.7222,58.4356,37.7192,23.1845,34.2933,36.5906,20.4693,54.6987,74.5448,49.7167,12.2687,-2.52672,25.0082,23.189,22.3212,3.00186,28.8675,32.0266,15.3465,-6.62755,20.8367,23.0645,37.2275,45.29,45.6467,25.0093,-3.59916,2.05415,38.0595,37.5561,16.1357,12.8962,8.3653,11.0221,-12.1955,-5.22454,15.6659,31.4547,21.7368,33.3575,40.3554,43.4258,-5.89397,16.6986,47.5097,28.7453,9.26123,16.4877,7.67254,-0.601089,15.103,15.3451,35.0012,23.2183,-7.17247,21.4049,27.3548,31.786,12.8188,14.7386,38.9513,46.6067,36.3555,16.7453,31.4117,23.6211,42.654,20.6264,20.302,30.2329,15.8544,38.215,25.7043,23.9455,8.74836,16.5709,29.8242,73.0413,79.7922,74.7551,31.1791,23.4316,16.8039,10.7045,49.3294,59.28,30.6843,50.4699,31.0354,20.6803,13.9494,4.28483,-5.19684,32.7583,58.2025,75.3771,52.8293,30.5174,41.0497,20.4212,32.7249,59.1004,17.1323,14.9784,15.8073,10.6971,19.368,},{23.3302,21.2322,4.30808,10.7759,33.2851,77.8466,80.156,74.6565,78.5574,67.3814,73.0137,29.5211,8.21075,5.38121,25.1053,20.4608,22.1317,28.06,30.3137,61.5599,36.4703,60.3801,25.3064,4.77507,-15.2141,9.56222,10.0854,24.3009,77.7398,55.7218,21.1124,11.5239,22.7086,32.4972,66.481,54.7495,30.0498,13.4677,-6.56118,4.37824,7.88057,-28.84,7.17941,25.8358,41.0661,47.4719,24.145,8.18181,29.227,67.3034,67.9067,52.4568,-5.45917,2.74965,23.7512,37.0041,25.9228,19.1116,13.4055,-1.15013,60.3593,33.1079,52.6494,7.76231,28.7731,59.5837,53.8718,2.35572,10.4852,34.4941,28.9721,-4.44631,23.5985,35.6728,9.92718,3.60179,41.0202,55.244,49.4755,30.6649,37.0138,59.7168,35.043,.455746,6.7638,1.85428,29.2078,15.5562,-16.2129,9.85602,3.70148,-9.37383,48.0973,63.8429,51.13,30.2681,25.2736,16.0484,3.4599,-23.9062,-19.1674,12.9728,-5.76665,-23.686,-25.4506,28.749,19.2022,19.1584,52.5369,41.3003,36.4859,20.3448,16.3023,7.91486,-12.3075,-28.9945,23.6772,24.8765,38.7037,23.0395,41.2505,61.1095,42.5853,20.6623,46.1018,45.804,51.4724,23.3746,15.829,33.8562,25.5068,58.0023,29.8625,30.9982,34.7301,33.596,25.0198,62.3173,41.4978,12.0911,29.0951,31.0079,24.3126,6.10232,9.64448,18.6252,66.6709,46.8057,28.2349,30.6303,59.0582,36.8989,31.5094,43.0665,40.4096,18.4719,54.7677,77.2076,51.7592,12.908,2.85176,30.853,25.2291,17.3737,-3.62475,23.3445,27.0473,10.1364,-2.3311,29.7729,25.5605,35.5331,42.5259,43.954,21.3345,-6.82625,9.64127,47.1584,37.706,11.8046,7.43549,-0.633582,4.37042,-15.5048,4.08815,25.6229,34.4451,15.4487,28.1937,36.4649,40.6435,-5.50316,24.6948,55.8367,36.044,11.0214,17.6476,7.21363,-0.712327,25.5181,25.47,44.0715,29.0435,-8.28623,21.0205,27.8696,31.9497,13.1335,12.155,38.2353,45.197,32.0149,13.1882,30.5576,22.4763,48.6639,27.806,23.3951,26.2583,8.37707,31.1831,20.8657,22.0191,8.71363,13.1578,29.7971,75.0708,82.6888,77.1442,26.2739,16.356,7.09028,8.11167,51.7889,54.2101,23.3422,47.9917,31.3689,20.4064,13.9389,1.49915,-8.27395,35.3166,63.3675,79.047,52.6731,27.7842,41.0207,25.6162,37.7823,57.9384,14.7069,13.7016,17.462,12.2618,20.7401,},{-4.29472,-14.3808,-115.143,-42.9551,87.9249,-62.0133,3.86289,-104.806,-322.178,-69.3816,-260.642,-127.281,48.6964,23.189,55.7107,-56.129,28.7277,120.815,21.5034,-128.142,-53.6786,21.6095,58.1011,-24.7463,-151.474,-156.77,-148.441,-166.114,-53.3336,7.48988,-30.9103,-35.2183,-37.1474,-227.504,-246.028,-98.1775,-68.3779,173.463,-41.7406,-105.034,-43.7498,-26.4054,318.987,-31.1658,-218.671,-221.338,-0.878125,29.9172,-240.163,-74.1033,3.46289,-5.83557,96.7894,96.6876,219.243,31.9265,-27.8516,86.8629,205.199,376.41,352.27,327.342,304.413,-209.65,-238.109,-5.35573,-69.0691,51.6336,166.507,172.3,58.7734,-104.233,-32.7145,-28.7402,144.397,379.61,461.032,472.998,536.465,59.5508,-155.766,2.05263,-244.827,85.7294,123.709,-81.1498,-101.101,-193.153,-262.577,-252.483,-27.8923,251.697,492.072,511.063,521.922,104.482,-102.23,91.3238,-51.0918,4.57324,-229.051,-261.764,-242.104,-284.778,-427.287,-549.436,-324.671,55.2778,469.91,351.916,625.961,392.98,152.366,248.01,-93.5642,-320.136,-419.49,-310.393,-241.855,-421.861,-309.852,-318.883,-304.878,-182.147,137.676,116.092,501.319,288.341,190.401,704.237,-62.4065,-351.602,-566.976,-379.179,-189.211,-168.528,-262.807,-342.967,-487.48,-386.306,-138.376,76.2936,177.212,238.709,79.9197,466.365,146.287,174.022,-90.3318,-197.957,-320.62,-455.804,-483.091,-281.125,-87.2286,-65.9053,47.7924,-66.1476,-26.4241,109.094,14.4184,7.71556,-131.445,177.72,25.0873,-69.317,-241.599,-447.652,-450.502,-279.736,-40.3264,172.61,-10.3562,-233.554,-175.253,-42.7679,-69.5573,-2.29444,73.8504,224.756,149.35,-4.45064,-118.672,-220.497,-258.196,-249.075,-16.3706,127.884,57.5603,-308.812,24.4098,-331.555,-37.7774,-56.6611,-72.953,91.9735,231.041,166.782,6.70241,-155.315,-197.397,-173.167,106.93,-5.87898,-174.845,-87.9541,88.3317,-197.56,-71.4789,-191.218,-165.694,-258.511,62.7229,230.125,68.5631,-106.023,-106.641,81.6299,219.102,-146.838,34.6971,197.043,-105.517,-38.8215,-86.8767,-400.648,-217.724,-181.685,57.259,-59.4846,-30.1652,-142.336,-130.293,-83.8215,-115.521,-119.661,66.093,27.374,95.5724,-24.4511,-170.522,-423.758,-684.352,-533.622,-298.83,-111.082,-158.475,-62.8793,-164.097,-198.499,-162.378,-250.691,-188.571,-4.59444,4.67555,-59.5701,},{31.9766,25.9074,17.6418,22.5489,45.2818,92.0941,91.3341,86.562,85.4354,78.2278,87.2951,50.0446,27.3743,20.3421,32.7517,23.4692,33.068,36.0194,38.835,72.4211,44.9807,67.3058,40.5197,18.9356,2.77539,23.2073,32.7726,50.1282,92.4582,69.1412,27.6511,14.6367,23.2543,30.7778,68.5842,54.9344,33.7254,24.6068,14.9022,10.3165,16.5283,-6.24116,33.205,54.1255,73.5619,71.2508,35.8202,6.36103,26.831,67.1247,66.9225,50.3998,9.31319,16.7623,24.0049,34.3429,29.7332,29.6766,36.9773,31.5025,84.6932,53.5132,59.0666,9.58759,22.7453,58.6265,52.5547,8.82486,15.0947,29.2419,23.0609,-2.1293,29.1689,49.6585,35.7163,29.0654,56.4707,65.658,56.8161,30.4961,34.8358,58.8305,37.8453,2.57258,.531866,-3.43844,22.7789,19.9311,12.1028,36.6954,24.3592,9.16935,58.4917,70.5038,56.2023,28.7626,22.4115,23.2496,13.9292,-27.592,-28.1519,4.94107,-8.75265,-19.9058,-3.03033,39.9074,20.4276,21.8702,57.0519,53.8353,42.6443,20.4152,16.2363,20.3862,2.01488,-19.636,9.60386,13.439,24.3694,27.2585,48.1021,68.2657,33.4013,13.4611,38.9483,50.4378,57.4141,22.7005,16.5641,38.4531,29.333,48.104,25.8079,31.0298,48.5509,51.6871,47.4916,65.5484,36.6537,10.029,27.0351,28.7081,31.731,8.2739,10.6579,21.9731,55.7742,35.879,20.1183,28.9742,64.6972,52.5696,38.9902,46.4592,41.1783,19.6619,43.9529,61.9863,39.4093,9.94216,3.13707,29.5912,23.565,15.5081,-2.11786,36.2015,44.6899,34.2166,16.2376,43.1108,27.196,28.9593,35.3515,36.2831,18.5893,-8.78888,8.04389,43.5422,33.2286,10.9232,13.6053,18.6539,24.4407,1.38205,20.1469,33.1538,32.2082,17.1018,25.5971,26.0721,29.7284,-13.0474,23.2665,51.6962,35.1193,13.8264,29.7735,28.7956,14.5896,29.9624,33.2213,45.5989,25.7816,-4.53452,16.6608,20.3569,23.1313,4.52272,1.37996,26.7556,40.3041,38.2989,34.632,53.4284,37.5205,53.3199,36.3709,25.8903,19.6213,4.48035,32.1602,10.4012,15.9633,7.05418,6.36046,20.0241,77.2012,92.0514,86.4074,38.9923,27.241,20.2479,18.9194,46.2341,51.3577,23.1598,47.3436,29.2353,21.6693,16.8037,-4.20194,-11.3931,35.1696,66.3503,86.6359,62.497,36.0949,39.2375,27.1463,40.5515,54.5232,19.2888,15.2422,18.2582,15.4962,20.2446,},{-6.73257,-19.9527,203.801,31.2415,-154.586,-3.62966,232.476,124.363,125.402,-42.8463,-22.5987,-446.437,-32.3973,18.7797,-118.326,-115.706,72.407,-139.44,-385.235,71.0135,73.5567,-39.5571,114.394,-143.928,-22.453,25.9506,-54.5697,-177.988,-283.076,-198.585,-17.3326,-210.072,-77.5166,-45.7218,32.4337,-63.556,-3.47002,-8.92941,50.0272,-75.06,-13.9931,-78.8259,-44.1442,-88.4624,313.43,313.487,-37.2076,-57.5299,-35.3369,-104.494,-28.5262,293.005,649.22,156.185,-76.8314,-165.353,-101.495,41.9185,148.485,101.813,171.173,365.724,310.837,121.882,37.5705,62.1641,287.765,240.146,-33.3383,-76.5553,-123.347,-12.8272,-118.498,2.6384,10.6746,-78.7388,88.8474,149.763,287.584,-14.8773,91.6164,-144.898,120.259,254.403,-24.7967,-175.572,-260.324,-88.4733,109.738,-78.6154,-88.9262,-83.7215,107.556,275.261,22.2904,-69.4598,-48.994,-325.749,-291.764,-337.835,-135.751,-53.9077,-9.90197,-86.8119,-50.1431,-167.017,-156.064,-64.8291,-325.283,138.971,-162.215,-137.439,-183.388,-375.245,-446.423,-126.33,-215.98,225.464,84.6527,77.7635,-392.142,-53.2716,146.612,-149.884,-372.688,-454.67,-399.59,-175.746,-185.6,-411.516,-73.9226,-102.9,-37.0525,-161.513,164.364,106.733,316.95,303.713,-13.6936,-38.0276,-95.4809,-183.116,-199.92,-223.568,-22.8074,.016671,83.5348,52.1281,-50.4211,-129.542,-106.079,-75.3357,-39.6417,67.5705,142.599,134.905,-245.384,-198.518,-109.175,-93.2756,17.0539,-45.58,238.664,1.08285,-82.7503,77.4176,-214.616,-335.017,-93.625,-41.8321,139.254,-164.271,-237.694,-78.6396,-294.449,149.114,3.5294,41.0209,200.263,108.611,-99.5033,129.252,-31.6202,-20.0519,-213.01,-79.2582,-35.5125,-296.604,-204.775,.350404,-385.031,126.664,5.89165,5.31563,112.208,-181.799,131.905,20.4934,20.1264,-36.3556,-117.922,-363.029,55.3641,177.396,-234.318,197.672,-77.6024,239.123,-139.653,-76.2973,-77.9193,241.549,243.488,145.595,239.295,-162.432,-248.465,-36.8542,159.831,-108.874,-71.3437,-246.106,166.148,228.003,-49.2895,71.5083,182.44,263.034,5.00486,53.5682,61.4057,61.6598,98.7799,-32.3575,-111.216,-126.705,-72.4817,315.179,343.972,211.981,106.9,153.249,-5.11488,-61.6055,-107.487,99.1864,324.115,124.795,-56.8196,68.2396,-111.99,158.934,287.626,127.99,210.789,106.736,},{18.9684,2.22277,-73.3385,-56.04,-19.6884,39.9911,76.2995,70.999,69.1409,27.5061,15.2831,-49.5222,-87.0974,-47.6923,28.426,25.4503,17.9136,2.2489,-22.7747,36.7616,18.3992,25.8081,-15.919,-29.8858,-84.8367,-56.6979,-53.3324,-27.8928,23.7451,21.328,14.5563,18.0949,42.7001,40.1723,48.8074,41.8346,25,24.5544,-9.71491,-16.6468,-46.6521,-60.0759,7.30466,45.9214,47.5637,76.488,56.4872,20.4289,32.7585,59.198,54.7297,24.7025,-40.891,24.7781,18.0383,1.854,-0.567392,17.5113,17.0255,-11.3151,28.1645,41.9681,48.7258,4.08807,20.7643,33.9871,22.0582,-11.1757,14.777,8.76768,-1.15974,-51.3793,21.683,28.7777,-8.01466,-25.0419,20.4995,74.8276,63.7077,49.8539,38.6326,30.9353,31.8737,-13.2572,-31.8287,-60.0268,-43.4831,-54.2208,-89.1468,-59.3663,-69.2578,-78.1672,9.07951,55.8412,69.8907,57.9824,27.09,-18.3308,-8.14014,-100.381,-84.3989,5.57087,31.9509,-26.0406,-74.6126,-27.0373,-16.1046,-28.7101,-11.9925,-17.0521,34.7914,40.3602,13.0082,-32.1578,-70.5441,-78.4014,17.6734,51.2485,61.2864,28.6065,32.4824,32.427,21.0039,21.5821,28.4348,31.7345,10.3327,37.4979,22.7661,-1.22851,-45.9745,23.665,16.7398,39.0774,35.4544,65.9815,13.614,47.6149,58.9353,-3.74828,1.25106,-10.6166,-63.6317,-51.6856,-5.94141,-66.5442,41.7903,29.3049,-5.35872,1.86639,74.9851,35.1249,10.2435,41.2214,19.6274,8.90761,33.199,49.484,13.5358,-33.1142,-39.3291,-21.5823,-2.16018,-1.58668,-44.4295,9.995,3.19473,.701966,-56.4427,-20.7272,-3.40838,40.9341,38.9098,17.4909,-27.6689,-79.254,-25.8922,26.7192,19.6411,-21.0891,-23.575,-29.9068,-5.48701,-59.901,-56.5093,-10.2972,18.3682,-16.8422,11.6401,26.8198,13.6928,-86.5228,6.62882,50.7315,13.0193,-39.9872,-30.3408,-46.8004,-25.287,-3.63066,-8.08747,15.5899,-31.195,-122.542,-29.5931,-27.5218,16.2608,5.17228,4.61483,49.7531,42.3376,-8.57919,-26.2791,14.6951,-5.79314,23.3984,-14.0926,-22.4197,-26.2425,-26.8167,-21.7818,14.29,4.80154,10.4983,-5.6504,11.4121,60.3123,62.3746,43.6381,-33.1095,-33.593,-42.9614,-82.6824,-31.1754,-4.19495,-6.44174,16.3176,26.723,11.4684,21.859,-25.3255,-36.9347,37.3408,69.3426,96.1195,61.8308,11.5922,34.1115,-20.0379,-40.9674,44.659,2.22127,-5.71035,29.0545,20.8959,27.8396,},{-12.3036,-31.3956,-65.492,-14.4036,73.2992,-67.7695,123.382,-192.226,-431.69,-177.332,-356.174,-310.891,-168.541,-230.497,-123.035,-96.2516,-10.2463,-2.37148,-143.477,-166.827,-2.70423,18.0886,25.5938,-1.83045,-150.834,-177.373,-51.6964,-181.543,-260.546,-178.709,-125.077,-112.657,-24.1948,-235.985,-172.895,-51.9645,-16.8572,206.943,-27.8334,-175.293,-74.4614,59.9217,324.204,-54.7446,-346.127,-464.253,-161.79,-79.2606,-247.025,-11.9862,117.888,-15.6331,66.7239,13.2891,69.9243,-69.863,-118.064,27.7519,201.949,308.449,231.666,274.866,224.749,-314.184,-293.786,-7.77575,-33.0424,-4.07652,89.5193,59.9472,93.8232,-41.3261,-38.4685,2.65457,108.18,284.833,341.004,283.898,580.631,-12.8449,-203.863,-53.731,-168.196,120.954,100.671,83.5588,73.3504,-91.22,-211.548,-163.625,19.3848,180.613,352.934,368.241,552.345,87.8132,-69.423,228.173,90.7743,126.939,-70.3055,-159.481,-170.942,-244.18,-430.469,-663.895,-587.142,-192.144,175.892,267.036,675.097,442.807,131.43,321.831,50.0534,-116.813,-283.094,-239.09,-167.437,-375.499,-354.438,-357.249,-419.551,-278.607,5.09966,13.6515,447.447,337.564,178.54,692.352,118.07,-97.345,-427.1,-245.298,-65.9983,-169.196,-270.646,-311.242,-521.346,-414.668,-301.063,-15.8325,120.531,233.851,72.0026,570.995,326.994,253.347,-7.86529,-122.781,-275.616,-427.072,-447.358,-241.656,-122.451,-125.642,-89.5251,-278.67,-120.448,101.045,.53461,158.665,83.0258,365.805,186.839,98.2673,-63.228,-245.81,-281.528,-158.272,-56.7111,52.4919,-63.3839,-261.994,-188.283,-37.96,-116.634,85.7788,192.243,340.538,297.807,149.718,65.7437,-77.1663,-165.373,-107.73,-11.4796,62.9619,-21.0986,-364.463,6.54401,-397.095,-71.6292,-94.27,6.70984,129.841,265.756,206.435,55.1458,-134.809,-195.786,-122.51,85.7434,-94.3012,-343.817,-187.218,-21.7737,-320.984,-113.851,-321.476,-126.179,-157.927,137.669,279.55,152.692,-71.051,-64.814,113.021,166.457,-253.658,-82.1871,-40.5105,-294.022,-80.9187,-108.588,-358.562,-187.084,-32.4026,158.879,73.725,110.352,-20.7879,-91.6929,-34.1693,-123.022,-138.71,-162.467,-190.987,-60.7594,-75.0397,-154.392,-339.651,-596.726,-456.199,-253.291,-129.776,-54.0064,57.9669,-62.8056,-40.8393,-79.6554,-149.89,-274.593,-158.655,-132.524,-78.11,},{356.404,601.096,395.992,188.316,278.651,341.904,295.292,-194.114,186.145,85.6391,394.255,-417.826,-115.97,-131.323,60.8475,-107.571,315.509,91.4124,262.325,695.7,45.9357,172.55,331.892,128.685,204.964,591.516,-19.1418,-258.816,-338.833,-389.33,437.467,313.968,-145.665,262.06,518.4,-100.946,243.033,.696756,211.056,-68.1036,158.413,430.246,290.939,269.317,93.9776,657.767,399.688,65.5905,279.783,378.317,-77.5026,12.3445,290.265,-258.66,-634.23,-666.55,76.332,240.242,56.9974,-362.79,105.614,522.089,220.783,236.149,802.768,71.7683,-79.0945,313.139,90.9285,-422.633,-221.516,-218.866,-389.397,174.548,-125.769,270.986,325.905,129.842,112.843,130.165,487.225,56.6147,368.008,45.3017,32.5998,-92.3363,-401.22,-576.938,-410.393,-102.425,168.849,17.0363,-117.878,158.738,242.344,60.8694,604.189,303.96,-197.827,-523.548,-11.4187,-308.366,-253.279,-946.385,-780.605,-154.811,-143.604,-528.432,-454.334,140.193,100.603,255.501,31.1142,-221.306,-246.576,345.206,110.121,374.903,151.787,-141.02,-854.426,-495.787,-26.05,-520.451,-352.982,407.767,37.4599,351.865,-177.849,-991.519,-374.497,247.676,607.7,538.904,226.305,167.154,-179.903,-141.164,254.254,-133.592,-1309.73,-206.474,-30.7217,-162.275,82.2185,-776.712,-303.03,724.797,686.785,37.4346,537.837,608.681,249.276,76.9389,-413.699,-537.037,-659.856,-393.128,315.618,-69.9925,26.4978,-214.496,-224.773,-44.2506,-230.865,260.309,673.097,481.556,125.837,419.505,613.015,-130.899,-255.081,172.703,159.073,111.803,106.731,79.6412,-353.613,-376.64,-209.137,1.46033,96.3509,-282.825,-374.105,143.956,361.256,-380.826,24.5079,329.57,-116.978,123.815,33.3837,-46.7904,-132.735,-355.419,105.105,-278.681,-40.6668,-121.349,-206.872,140.336,310.083,-9.17663,439.848,62.2583,-669.185,342.813,-193.233,-89.3672,-60.6106,216.596,53.362,-169.017,155.47,-285.409,-760.619,-252.214,12.9197,-147.849,-293.146,-968.076,-281.256,151.103,-446.387,-725.51,-278.97,215.479,117.255,697.215,388.662,-41.0716,-272.949,-511.543,-566.43,-550.94,-1063.47,-419.114,.21222,126.072,-281.832,-544.307,-292.529,-356.873,90.9138,10.5859,285.79,-178.003,-527.279,-787.825,-1300.87,-926.233,-670.257,-706.994,-460.851,-324.543,},{23.4989,20.7472,-10.3943,-8.8564,15.3258,63.5215,66.959,64.0502,71.7511,57.7171,71.518,29.6433,1.91061,-6.30744,25.9133,18.3761,21.9266,21.3317,12.1623,53.4256,20.9044,52.8894,11.9871,-4.89231,-17.8806,-3.7003,-9.07572,6.27418,67.4899,48.1027,14.7527,10.7978,14.8021,23.1661,60.0129,44.674,25.2318,8.55634,-6.32131,10.0285,13.3375,-35.4544,1.80328,21.5627,31.6808,36.9205,16.4599,1.24985,25.0907,62.1575,61.1418,51.8364,-2.05244,11.8741,36.1891,48.2096,35.4963,18.4723,12.5605,-13.3923,52.7465,22.9127,46.7008,-0.382801,26.4798,53.7841,47.3705,2.51941,14.4305,45.1496,39.9301,10.1619,32.5007,41.4161,2.45799,.608219,31.0699,48.8048,44.0723,32.9128,34.4091,57.5038,37.2033,7.15401,16.7556,10.7461,33.446,11.1744,-17.869,-3.70686,-4.74589,-23.3991,37.1263,63.4246,54.4657,31.9397,22.6977,11.7217,4.34877,-8.60581,-13.5261,11.2066,-5.09021,-24.4212,-20.7622,32.7333,17.1038,4.28134,38.1727,37.9375,35.6717,21.2689,18.4783,6.16093,-9.70899,-24.04,28.1897,29.8359,42.776,24.2136,51.4276,60.9799,42.2249,11.6332,50.4731,43.6938,48.8743,23.6031,19.6496,47.408,43.2741,72.313,39.1957,39.5495,39.0716,38.0732,30.6418,57.4196,37.8798,17.953,42.9815,39.0726,26.3064,2.72416,14.2643,34.3527,83.8143,53.8873,26.5609,23.9933,57.7002,39.2628,36.5697,36.0859,32.8621,19.9109,66.9006,86.1656,54.243,8.80987,12.9134,45.0632,37.2933,18.8378,-9.09902,18.8188,28.5652,14.5044,-5.14352,28.3329,19.1379,34.7424,47.9019,50.6976,28.2669,-9.3002,20.6439,62.3563,48.4629,11.0858,6.93571,-1.72655,2.84736,-20.3981,10.6361,34.9926,36.6674,15.408,35.73,41.0628,44.6246,-9.35822,32.8189,69.6705,45.3083,12.6662,20.8424,4.18138,-5.91,31.2356,35.9003,50.255,34.378,-0.464863,28.9186,26.1161,30.8254,8.30956,11.8886,35.4276,36.5468,25.5682,-1.27142,24.3999,15.8157,51.9083,32.054,24.4849,31.5178,10.2176,29.3733,18.0339,14.9353,1.87743,2.69987,25.0319,70.8982,73.647,74.1451,12.7416,-1.97025,-14.3224,-5.19186,51.8942,51.7373,19.8292,47.2684,31.8515,17.3331,10.1826,-11.5641,-26.9126,27.0188,57.867,73.1539,42.4897,10.3755,25.0246,18.3248,28.596,47.4547,6.44196,4.78327,6.19727,.165181,13.8594,},{-62.4827,-102.778,-183.2,-359.997,-513.497,-97.5209,-200.168,-239.758,60.6681,17.5909,91.7432,-404.576,-391.032,-106.577,-144.485,-77.1954,-109.828,-439.126,-646.137,-379.25,-430.912,-635.238,-237.02,109.44,218.489,85.4815,-117.791,-300.638,-875.682,-711.624,-169.741,92.9749,-262.095,-173.959,-326.31,-189.331,-384.476,-425.478,38.7834,-140.627,-368.665,-204.518,-279.55,-28.2057,-348.09,455.619,-93.6681,123.68,53.7489,-426.436,-185.157,9.05833,9.34377,73.1088,69.5692,-386.23,-472.078,-26.2526,66.1133,-49.8933,169.656,-314.486,-240.546,205.342,409.001,72.0639,219.396,392.332,164.316,-30.2126,-25.7308,-183.647,-277.669,138.278,188.561,484.396,254.824,119.407,-314.849,81.1148,353.311,82.4551,168.641,709.744,427.455,263.276,-243.954,-622.096,-180.929,-26.6952,439.971,530.481,275.173,517.593,-31.2514,-104.942,376.163,392.975,132.865,329.663,437.169,292.713,13.9656,-491.488,-553.398,31.1026,164.247,673.479,107.154,502.587,-136.294,-135.829,62.4849,58.2626,269.9,382.062,237.782,411.27,-84.8255,-187.338,-188.824,18.3337,123.52,95.5624,-129.002,142.991,217.012,52.6957,-9.97061,-416.899,451.479,680.54,756.949,374.71,-129.121,-113.948,100.401,64.5236,183.484,688.62,-5.45828,309.799,173.314,3.19418,178.493,171.755,560.646,727.941,677.665,321.283,202.451,371.079,234.453,36.2046,397.509,750.481,271.935,-34.7721,396.291,-137.451,199.115,438.241,551.047,369.967,41.9084,280.182,47.2265,-150.325,-240.834,140.641,235.027,203.494,-27.7854,155.279,184.255,-16.6761,137.729,591.285,518.996,132.2,-210.118,178.163,-77.2625,-547.94,-125.678,208.112,231.186,-141.371,-8.17345,439.847,-408.42,97.7972,-141.442,34.4584,-147.427,-649.405,-262.248,-406.406,-321.271,-528.663,-150.327,-85.7236,73.9726,129.668,-153.231,-196.182,-317.727,-14.3735,-245.836,-81.1013,-157.403,-39.2524,-33.8006,-158.11,-164.64,-300.798,-360.334,-36.0209,-74.8759,93.8892,-543.19,-361,79.0919,1.15673,-404.558,-373.17,-206.366,43.7485,-378.407,-31.7247,-295.744,-343.006,-278.351,-571.23,-451.194,-314.799,-456.804,-26.0326,-76.956,-23.796,-59.6473,-212.968,-288.832,-384.167,-262.49,353.144,588.712,210.618,.885668,-241.383,-476.152,-177.389,199.843,-18.3903,-126.996,-150.213,},{26.7997,21.3276,13.2275,15.4493,34.993,77.9335,78.7753,77.9255,84.9594,81.4223,84.1559,50.3104,25.113,10.9162,22.3755,14.7615,26.5728,29.3116,31.4323,61.1471,35.4168,52.5858,25.4173,12.9195,5.39183,23.3453,34.2273,48.7579,78.68,53.2097,18.523,9.43628,16.5255,21.8997,56.4876,45.4099,25.0638,17.2107,14.5969,15.0647,17.1672,-4.27836,33.2773,55.9135,75.5648,63.7986,24.6806,2.54426,20.8155,58.1394,56.5964,37.6608,10.5173,22.1514,26.1997,29.8161,29.7323,27.3096,35.7692,32.3558,80.4628,52.2676,53.5413,6.42016,24.0131,53.1834,45.2466,9.34708,16.4506,30.0738,23.162,6.45321,27.236,46.0848,29.2019,31.4638,57.3356,63.1819,54.7871,29.9493,30.8079,53.781,36.8783,8.09366,10.1742,3.57064,19.7833,12.61,4.51592,19.9491,18.3806,8.453,59.6845,67.6175,55.922,28.42,23.1647,24.2078,16.1172,-5.91508,-13.6703,1.86553,-9.22204,-20.3912,-5.99616,29.0406,17.2008,15.6635,52.0054,53.0027,42.8766,20.2377,18.2746,25.4166,18.0949,-0.215953,17.1236,19.6301,24.918,23.2609,41.6569,60.564,40.5255,18.0391,36.7316,45.4962,52.5641,22.4814,18.1055,45.6138,53.3199,58.4153,34.4706,32.7269,43.6946,44.97,43.7593,58.0179,40.4726,23.3918,36.7708,30.5546,31.6576,6.51965,14.8512,36.5592,67.4435,48.1505,25.9938,25.2269,55.3775,48.0029,36.2712,38.5016,40.754,30.5805,52.9161,65.4115,39.4014,7.49254,13.5363,49.2197,46.8278,27.7788,3.29514,29.7111,37.1204,30.3534,16.4192,40.7383,25.5921,30.8897,47.3913,47.1425,30.851,-3.79538,18.2575,59.6362,51.7177,19.9623,17.1172,16.7502,26.7429,7.54033,23.7147,31.2615,28.2261,17.4096,38.5775,39.1249,38.9759,-6.15298,31.1949,60.5857,49.3143,18.9051,32.5641,26.4743,14.282,33.3788,32.3529,34.3514,25.1077,9.17342,28.7935,31.0423,23.1455,8.88797,10.7244,28.5508,32.5673,36.2414,34.8243,48.806,32.1129,46.1355,26.2664,18.608,30.067,18.3193,33.9603,7.96156,10.6088,8.49504,5.90954,28.0275,74.0495,76.87,77.2746,34.2169,17.4886,7.86426,7.89812,48.524,52.7288,24.3589,37.5114,22.6757,16.4004,12.8899,-3.7973,-7.21158,41.6916,67.0214,81.7136,63.2991,41.4008,42.7984,34.7286,39.9129,48.1243,17.4935,14.1334,16.6857,13.4764,18.6103,},{-6.77204,-21.6266,-67.4955,-19.8413,65.5525,-60.4998,113.246,-177.673,-408.834,-157.164,-270.861,-278.073,-189.352,-242.939,-121.923,-92.52,-7.00381,16.5585,-137.699,-152.374,-35.4899,17.4385,20.1974,22.7604,-126.551,-166.924,-66.2694,-166.12,-160.505,-134.468,-121.428,-113.747,-25.2238,-216.002,-148.984,-46.207,-5.85219,185.968,-45.2028,-135.678,-33.5852,67.6936,306.672,-24.573,-323.024,-382.182,-128.947,-87.482,-243.536,16.0889,90.2053,3.76505,62.4695,-5.4346,22.005,-50.0568,-106.061,-6.26028,175.299,305.731,240.511,222.943,243.175,-290.155,-272.619,9.9632,-34.242,3.37443,79.6554,40.7403,50.234,-28.9849,-32.3464,-22.0226,70.5601,251.057,321.01,254.641,511.814,-13.0966,-179.011,-25.2427,-176.221,99.6564,74.0462,51.0681,29.7668,-68.6482,-177.642,-186.119,-33.5694,140.021,325.36,334.472,502.949,84.258,-48.0811,233.749,99.0654,109.918,-83.2137,-143.295,-167.379,-196.607,-384.611,-626.152,-547.299,-160.911,198.742,247.888,622.568,381.581,121.344,306.878,56.934,-74.1187,-256.126,-243.889,-187.411,-324.827,-324.097,-352.382,-439.417,-274.867,36.7783,19.8206,433.981,284.194,156.849,663.099,121.536,-103.252,-417.014,-249.702,-100.205,-153.825,-254.445,-315.185,-507.237,-385.509,-283.311,-9.25221,119.091,222.724,63.9563,529.762,289.484,224.113,-29.4624,-127.985,-291.072,-395.145,-431.409,-267.401,-153.695,-138.177,-76.7457,-260.753,-121.319,105.016,7.27281,151.308,71.223,352.666,179.573,82.0887,-95.3978,-226.563,-271.034,-183.22,-98.2632,25.8689,-47.2357,-235.574,-164.698,-21.1728,-111.873,101.653,196.596,344.357,294.016,143.722,41.7679,-52.9165,-161.013,-138.067,-32.3455,59.8312,-5.18399,-329.642,-6.39782,-347.91,-59.9936,-86.8117,4.88865,127.316,252.254,192.271,22.6175,-109.103,-185.468,-134.665,70.6289,-91.0445,-323.967,-215.119,-18.8056,-293.011,-98.0947,-283.074,-102.366,-149.438,147.406,270.666,139.792,-46.2632,-44.1436,109.724,179.439,-219.185,-96.9934,-73.234,-270.712,-94.5438,-106.17,-326.089,-150.643,-32.6015,149.534,74.0719,103.168,22.3641,-47.2988,-25.3381,-115.957,-164.36,-173.402,-174.873,-67.7482,-89.0127,-139.729,-329.886,-567.458,-421.55,-223.419,-101.663,-44.8357,74.069,-59.4429,-80.5102,-79.6075,-111.054,-249.177,-165.649,-135.247,-72.3742,},{75.0302,50.3727,81.2721,147.808,243.214,-322.089,-304.837,410.451,95.0256,534.782,-58.1939,210.109,121.961,-85.2017,-52.5509,8.99799,157.603,498.517,292.561,-35.6814,299.817,291.774,165.178,-37.5331,-119.463,-82.5283,-64.2515,68.7152,1.90766,80.8295,-329.081,-152.523,385.084,119.307,-44.804,-117.517,133.529,147.311,286.01,166.241,30.4777,171.977,704.406,252.161,236.062,-117.781,62.4171,-175.322,-112.499,158.223,175.996,-190.572,-86.4263,382.936,468.306,258.683,-54.0517,315.941,631.092,708.207,363.501,853.454,416.22,-225.58,-622.437,-205.282,-402.103,-353.213,-5.10554,235.294,183.018,-213.821,181.046,399.91,497.122,425.015,705.124,776.386,817.073,116.749,-378.403,-60.7441,-429.243,-303.925,-359.424,-415.483,-469.376,211.41,153.514,122.056,-158.813,156.323,461.811,222.395,752.701,261.635,-394.59,-157.223,-330.433,-279.839,-677.071,-571.864,-88.8395,53.7638,-145.718,-385.807,-295.025,-687.804,126.716,-20.3142,690.984,339.555,75.3024,269.948,-276.631,-551.135,-1004.62,-541.023,-148.761,-170.633,381.167,267.52,-31.798,103.384,-45.8334,-365.869,-21.2921,168.91,300.716,751.885,-639.218,-982.99,-930.172,-377.61,10.7602,339.708,67.027,-274.676,-601.077,-471.941,158.572,-174.03,-382.728,-49.3662,25.0929,258.452,-464.157,-447.055,-465.603,-107.126,-55.7987,-223.272,-575.658,-418.305,-431.163,-537.853,-161.554,48.7245,-219.711,-45.7496,-272.507,-184.816,-362.601,-244.621,45.4585,165.875,86.9516,-137.894,-426.544,-298.205,-321.048,-236.743,-205.09,-338.943,-106.332,-327.848,-383.881,-425.302,-196.023,111.178,243.043,362.814,569.291,74.2775,-167.56,-188.686,-168.085,-7.96311,-100.883,-544.11,28.3596,-875.116,-178.863,-364.908,-18.5965,265.497,321.692,636.925,689.102,115.88,-60.6421,40.0441,-75.1751,-138.249,-57.0688,-253.495,-189.838,-540.89,202.77,-299.339,-376.942,-61.2307,252.62,604.652,672.257,259.19,-37.3878,-158.873,237.672,-231.368,244.687,223.143,-616.9,-22.5844,229.53,29.4816,-83.1474,-62.2184,467.34,160.665,529.53,246.402,-27.9579,-138.337,34.8376,171.024,345.841,-12.5952,94.9271,69.1923,-27.9445,-109.402,-112.655,60.1934,185.065,224.063,261.74,8.63351,66.2918,279.375,514.79,-138.075,-180.959,207.319,138.333,136.092,},{-104.965,-178.304,-250.101,-314.715,-269.75,-465.435,-267.396,-50.8197,122.689,412.088,-120.869,200.29,353.363,34.214,227.206,121.223,-78.7638,-139.25,-455.017,-344.814,-12.6816,331.423,-84.7754,-197.837,-542.366,-751.611,254.524,155.705,-507.401,-119.568,-87.1841,99.7555,250.739,-129.176,-302.095,-239.532,-328.904,231.961,617.281,-51.7689,110.37,205.208,268.85,-65.3399,-152.62,-1036.16,-387.41,39.6807,72.5067,37.3138,32.383,-226.093,130.268,432.843,682.202,108.828,516.269,225.006,220.221,424.585,410.994,53.0374,89.6939,-424.786,-562.636,-175.383,-223.368,-509.806,104.91,239.303,341.157,415.608,538.628,113.656,464.864,111.917,173.157,568.104,536.221,-102.562,-186.629,158.395,36.9109,3.68423,67.2422,149.087,547.808,553.46,307.928,75.4205,-92.9332,-95.6313,22.541,101.981,669.299,40.8774,-360.068,-160.394,-46.2952,-10.761,-321.961,-338.52,1.4681,64.0692,-225.939,-723.566,-803.116,-460.67,-267.805,-165.115,704.325,595.717,40.1701,63.0912,48.7187,-681.453,-576.418,-186.959,153.202,-12.949,312.205,-48.1098,-356.427,-473.871,-502.357,-445.819,220.892,390.452,191.092,469.027,226.935,17.1446,-290.31,93.0024,248.92,-218.364,-260.8,-373.054,-286.182,-618.633,-459.71,-74.9365,200.433,406.987,47.847,546.81,687.57,166.401,-403.886,-104.831,-156.961,-173.088,-1.37422,87.9779,179.846,-258.691,-192.359,-370.284,-340.74,-187.437,-103.109,676.396,515.543,500.656,119.789,199.49,97.4569,231.997,414.484,533.587,347.547,226.618,-25.7776,-114.356,-393.517,-156.992,25.0609,-108.029,309.77,490.601,226.361,-164.304,18.6593,24.2767,423.634,236.503,339.234,230.485,-175.83,-608.922,-288.875,-644.322,71.359,20.46,88.4219,51.5265,-22.0632,-15.0353,-28.8933,-362.642,56.8859,306.718,323.48,2.85912,-400.858,-574.214,-301.539,-613.812,-232.799,-427.617,-569.726,-539.713,-332.064,-88.0615,-117.773,-156.576,335.914,247.438,331.844,162.243,-123.304,-679.864,-1024.09,-311.748,-20.2433,-259.91,-22.4939,-72.1745,-99.793,-337.497,-135.357,-211.581,-153.613,369.909,500.933,450.695,304.202,-411.955,6.17856,28.8639,-149.157,-468.553,-424.844,-26.5658,218.757,-111.754,-300.305,-347.71,-150.697,471.03,689.356,29.5377,-50.38,-42.8731,-54.5082,94.8371,}},weight[]={-717.416,1970.07,-2269.31,-2754.88,-181.382,-249.338,-137.464,-160.078,-2662.76,-135.17,1392.67,-206.997,-2682.31,5207.5,-177.157,3014.32,-113.951,-2491.5,-3220.27,-3082.71};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv && i < right);

			if(i >= right) {
				bound = 0;
				nright = right;
				for(i = top; i < bottom; i++)	{
					path[bound].x = right;
					path[bound++].y = i;
					data[i][right] |= F_PATH;
				}
			}

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}