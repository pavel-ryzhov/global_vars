#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{35.7637,58.7116,-6.06553,29.8412,117.316,176.424,197.746,224.724,251.121,119.693,138.761,61.7176,-33.5341,74.6523,122.688,129.061,39.3128,68.9213,141.772,168.094,117.381,105.07,25.9796,25.7602,-138.392,-76.5275,18.182,6.95385,116.55,180.973,77.5461,121.838,119.359,177.863,172.852,152.05,7.41873,-37.1042,-163.371,-148.104,-133.512,-122.027,-68.6858,-41.4526,-103.503,-9.23868,52.637,59.1519,78.0331,197.478,227.068,114.198,-178.023,-82.5516,46.6285,69.4698,78.2999,-16.5485,-52.1591,-82.9866,-10.3526,-48.8015,21.6,-28.3515,25.2992,55.8104,125.637,-56.6873,43.5447,-31.8704,-3.66364,-179.403,-32.6185,-55.3735,-170.522,-229.463,-94.188,30.9015,19.5057,67.6094,67.344,155.125,184.396,-97.5676,-167.228,-10.7566,113.163,68.3709,-93.4979,-43.3198,-94.6781,-111.75,-84.3968,-27.655,80.7641,105.384,52.7097,128.41,191.269,-17.5673,-79.0161,-4.61029,104.133,-68.9602,-229.996,-161.92,-12.7459,130.263,156.882,40.8589,73.7937,98.6091,58.3133,74.624,89.7487,-87.8797,34.7043,-14.8988,90.568,-49.0238,16.9936,-45.3577,-2.41312,76.318,113.3,186.379,234.246,105.303,61.7291,49.7025,-54.3848,-6.96592,-3.92395,58.3448,-24.0264,46.2455,-66.3152,25.8852,38.4216,-109.81,-42.7034,37.8316,-55.348,-18.9943,15.2291,-145.598,-18.5683,18.298,-19.7651,41.271,210.541,-7.72997,-14.4522,17.369,15.1681,-5.03425,36.6941,108.074,120.341,116.185,-72.9403,-96.4137,-93.5688,-92.5304,-69.823,63.7492,25.8814,1.07533,-52.1337,-17.6224,-34.6792,63.7468,42.273,29.3052,26.5235,-31.2448,-83.6189,-39.9771,-97.0841,-90.5929,-23.5613,-99.4829,-31.7739,-133.483,-97.5634,-86.6978,-1.41613,6.26855,-21.6398,-3.17641,72.2934,-89.7037,18.1234,136.208,29.1971,-33.5003,-77.4549,6.73797,99.857,77.2298,-8.5662,17.1218,-81.6891,-314.491,-40.8087,-37.1429,167.893,-6.48585,-5.52418,62.4459,153.13,-22.3205,-86.6311,-33.8096,60.8378,99.3729,46.2418,-101.465,-194.178,-69.2555,-0.736381,140.05,95.0364,14.5061,35.618,-14.0313,34.7668,170.123,132.25,15.1118,156.154,131.691,-22.8862,-23.677,11.4052,78.8536,154.859,29.1021,20.1076,33.399,-0.106766,1.99887,120.451,169.684,284.799,123.853,66.8623,90.3208,-38.9149,18.3255,159.402,-34.6852,-86.3667,5.54241,8.12786,39.2985,},{79.7177,104.485,121.989,250,285.454,361.248,377.969,359.609,251.309,-101.059,-241.772,-322.547,-67.0844,85.6055,104.257,-71.7936,90.2046,260.44,349.099,375.053,188.606,182.652,111.194,25.3706,-89.0094,113.35,234.646,124.82,-23.4185,369.061,121.642,.805693,-134.998,137.849,534.33,359.362,213.508,69.222,14.6572,151.405,27.6665,-45.3339,-66.6965,102.987,494.612,456.588,170.439,-36.6159,155.133,98.4265,325.601,-32.0623,243.605,-106.756,-299.895,-224.898,-195.41,-129.626,69.5145,-164.41,18.9458,376.121,200.36,264.578,130.444,159.665,-31.3774,206.742,-157.185,2.73218,-73.9256,-91.2677,-224.565,24.6757,68.3935,30.1369,22.8302,147.565,42.9875,163.17,63.0975,-24.0659,-107.125,125.082,81.3652,117.758,-168.456,-129.451,-83.0743,-25.3704,58.6264,40.0623,198.558,206.293,-123.555,77.1019,23.1855,-154.773,-224.825,-406.242,286.033,425.8,275.404,66.7207,-209.904,-47.8943,-93.2112,4.79277,105.732,95.7197,-325.129,-172.399,-60.7505,-246.554,-384.736,-37.5206,-54.546,301.084,281.488,221.158,-154.021,-107.04,166.75,-128.616,-361.822,-72.9442,-246.43,-265.6,-167.795,-576.472,-467.556,-451.001,-226.328,-139.359,98.5786,371.039,79.975,16.6911,-114.565,-222.651,-186.609,-148.165,-63.5026,-256.241,-25.1637,-532.313,-544.154,-354.361,-28.4727,-267.428,-9.28707,153.4,4.46085,-208.411,-193.904,-140.124,33.8544,126.94,57.6336,-70.5336,-20.2104,-300.933,-165.052,-132.683,-334.223,-132.795,19.8689,47.6831,-157.752,-198.28,-154.384,-394.091,-50.3038,-98.4708,-12.8816,173.899,75.1513,120.211,-22.0938,-197.855,-143.801,150.737,139.111,105.17,-158.926,-66.8218,-51.971,-343.004,-113.246,217.347,43.6322,287.451,26.2538,98.9524,48.8342,-32.7589,-90.9175,-56.3927,-63.6376,88.1186,-37.802,-65.0127,6.41948,-154.83,-217.906,139.653,4.7557,231.587,-19.1324,277.134,101.963,258.916,25.5805,219.309,34.7603,107.594,-108.001,3.37737,-35.9716,-271.347,-19.1551,129.53,128.723,46.7604,29.3199,350.464,205.57,126.46,285.314,284.486,113.49,-6.8639,-221.747,-323.773,-170.822,141.726,-23.2245,293.781,183.83,59.994,189.592,395.888,376.198,330.847,79.1517,32.1976,-17.1752,58.423,5.95281,-293.138,-90.5303,175.317,211.95,106.025,14.396,31.8693,},{-226.958,-391.158,-277.576,-35.3599,-17.8147,33.9538,347.541,303.539,-37.9262,17.7781,-279.749,-213.878,114.349,8.00677,63.0784,-148.4,-244.37,-83.7014,23.3122,-159.023,117.168,-103.107,-247.517,-317.917,-325.519,-140.518,-130.846,-240.953,-312.888,-172.911,-262.257,-238.883,94.0723,-289.279,-446.533,-175.351,-87.9875,161.486,174.073,-17.903,197.945,-133.687,153.912,-152.204,-143.788,-521.711,-22.5019,103.175,-9.63248,42.8506,-56.0952,28.7359,231.753,230.064,521.843,194.342,249.654,187.878,-181.434,295.029,297.621,310.708,481.124,-226.07,-319.964,-77.2116,209.009,183.951,263.982,414.856,129.171,-130.001,232.509,11.7929,154.27,453.512,496.148,429.542,814.382,-31.5943,-100.308,-12.4259,6.17139,289.028,150.522,-12.5002,64.9974,77.4136,-142.349,-67.9262,14.7823,173.125,606.278,345.889,614.197,92.5158,-253.583,-190.489,-150.696,108.901,-506.933,-645.133,-257.092,-205.56,-267.031,-757.572,-706.967,-229.074,432.591,103.943,691.277,425.652,85.1097,110.382,-251.786,-560.827,-683.95,-298.804,-135.711,-116.759,42.6611,-194.292,-255.021,198.17,141.271,-198.42,210.94,313.035,183.405,659.835,-218.445,-576.969,-612.746,-392.796,-197.037,-301.568,-260.298,-321.227,-296.986,-275.576,-34.4765,-253.646,-148.522,146.485,31.877,282.447,-49.094,73.6579,-129.415,110.696,-141.611,-332.703,-183.997,-54.2346,-163.807,-322.148,-78.4857,-280.706,-372.118,-145.089,-90.1707,-253.501,-233,145.94,273.839,122.842,84.0943,-275.401,-5.95533,-49.9841,-173.501,23.9828,-62.9853,-495.036,-492.02,-127.129,-220.218,-431.829,-13.5513,512.404,213.907,-70.2335,63.3399,77.1345,33.835,-180.883,-205.159,70.6319,6.53459,-651.392,-395.816,-580.59,-106.164,-298.17,84.7396,417.467,229.946,267.594,149.251,-72.3244,-165.106,-168.665,-119.638,-84.6426,-278.503,-342.293,-269.058,-58.8407,-234.216,-229.611,-85.4631,58.7485,308.19,250.462,-52.007,-217.727,-61.5103,-189.902,24.4542,-260.967,79.5504,16.6114,-252.733,109.727,126.141,-43.4043,130.081,75.1586,358.47,173.935,159.636,94.4811,182.474,281.68,251.431,325.165,332.117,259.758,403.853,168.882,202.385,-17.2849,-287.053,10.7383,292.481,169.531,2.32357,-46.8032,16.2981,314.446,673.335,233.601,358.147,393.542,421.509,363.864,},{-11.8375,-31.5251,-51.6148,-19.1651,69.6487,-58.9452,112.002,-165.938,-386.248,-156.573,-304.129,-270.722,-164.4,-204.853,-98.1742,-82.5341,-11.1168,2.01165,-135.283,-162.595,-41.2996,16.4319,23.2479,-24.5241,-193.187,-189.489,-50.3871,-166.161,-227.767,-134.3,-121.065,-102.905,-39.1663,-231.387,-169.017,-56.7842,1.48213,191.856,-22.7411,-121.372,-46.4799,22.5096,291.622,-48.8945,-304.052,-437.711,-141.216,-84.0309,-232.109,-2.08264,103.424,34.6041,92.9144,28.9633,78.0416,-25.6547,-92.784,-14.8605,180.258,283.413,238.517,239.055,176.224,-297.227,-278.219,-20.5048,-19.1051,17.5641,109.742,69.4256,79.7855,-32.0312,-27.2798,-40.5147,54.4607,250.721,327.526,268.267,520.796,22.5608,-180.618,-40.5838,-133.296,149.753,98.6738,55.5349,34.827,-65.6098,-194.678,-214.832,-30.5129,155.986,337.12,348.91,517.826,99.4909,-67.5695,208.634,101.458,117.418,-86.9765,-167.932,-193.243,-221.427,-450.806,-686.248,-571.79,-177.765,203.562,268.482,637.638,413.481,151.39,316.233,51.9141,-144.547,-316.033,-240.62,-169.082,-335.469,-345.542,-408.432,-450.143,-271.163,-7.062,5.8799,451.712,306.947,172.81,668.16,125.291,-117.984,-446.571,-265.234,-95.7158,-153.577,-271.045,-359.576,-545.091,-414.458,-287.404,-27.8131,105.365,213.819,85.0842,543.658,313.091,264.968,-3.48323,-141.213,-301.958,-400.418,-433.303,-303.903,-147.206,-127.974,-79.2639,-270.497,-123.254,102.963,-4.48334,150.258,100.776,370.114,170.041,81.2309,-77.2423,-212.593,-257.837,-184.148,-77.6633,53.4807,-45.0142,-264.039,-198.766,-18.6529,-117.269,62.877,204.355,337.768,257.055,102.648,27.4882,-68.2542,-161.4,-167.484,-34.6694,76.545,-14.2405,-382.969,-22.7909,-384.722,-66.0599,-111.671,-6.69087,129.57,232.537,174.608,15.9979,-122.059,-191.148,-148.69,66.5851,-103.359,-355.703,-222.338,-46.3437,-313.75,-114.016,-319.189,-152.002,-133.877,115.022,240.19,145.583,-21.9814,-25.0343,73.7717,130.048,-261.293,-93.2957,-49.3172,-282.058,-92.4227,-108.102,-332.937,-151.164,-43.2729,165.879,92.8588,113.987,22.8893,-81.1417,-74.2612,-145.953,-156.048,-151.666,-170.02,-55.8226,-78.1693,-140.73,-308.173,-565.782,-446.215,-258.912,-160.499,-67.7357,22.8402,-108.683,-54.8851,-73.3065,-173.888,-236.712,-146.871,-120.85,-70.8879,},{27.5981,26.0263,4.93022,10.2107,31.6591,71.4162,72.8792,69.1629,78.8486,71.6724,80.14,40.6211,15.7916,7.45149,25.4671,19.1174,26.5554,31.4438,31.5702,61.0478,29.1151,56.6277,20.8844,1.49914,-14.3812,10.3596,11.6625,24.6759,79.419,54.3502,22.8397,13.1574,24.3588,30.5559,61.6993,46.5343,24.0917,6.12419,-15.0622,.126797,7.99421,-28.3126,6.92488,28.954,41.177,44.3693,22.7746,9.47875,27.3546,63.2815,61.123,42.2335,-15.1175,-4.8442,20.4938,36.3549,26.8829,15.5835,12.486,-0.340922,60.1929,29.9275,52.2986,7.77371,25.9347,51.2009,45.9528,-4.02638,8.21085,32.9619,33.2589,.435834,22.0693,34.1358,10.2447,5.36133,39.1857,54.7188,48.3207,30.8404,31.3567,53.3736,30.5188,-1.50765,12.7732,8.12067,33.4546,13.3598,-22.1789,2.42687,2.9628,-10.7149,48.9212,65.2165,50.4923,29.862,23.2074,10.9098,-0.854618,-13.3424,-11.3031,11.2643,-6.10783,-26.8257,-22.6915,28.9363,23.8937,19.6152,50.6129,37.3947,35.2823,20.1765,15.8835,2.65086,-12.5585,-20.2812,31.1963,27.6138,40.2207,22.9536,44.8087,60.7739,50.2274,22.5245,47.4236,41.8997,48.3607,23.2967,15.9244,37.0327,38.1545,66.4335,33.2181,29.4865,32.4591,32.5981,23.7855,58.3593,43.703,16.8267,30.9954,28.5698,17.6908,3.87938,12.028,29.2187,76.924,52.1044,29.279,27.9218,60.775,37.8803,32.9036,41.4295,41.3874,20.0387,57.0627,80.6742,50.628,11.3559,12.0826,43.4827,36.1648,20.4375,-2.54807,19.9039,29.296,11.6751,-1.70932,29.3845,25.5664,35.3526,44.1855,47.9743,23.4848,-6.37706,18.4663,58.0224,45.956,17.3255,12.1222,2.04816,6.4182,-13.0965,9.33932,29.6127,35.0257,16.7671,33.0174,42.6848,44.5198,-1.79229,31.7715,65.1152,46.192,18.379,27.6879,11.027,1.32753,30.3899,27.4315,47.0947,34.246,-1.15511,27.9123,34.2711,34.6579,13.3499,15.0929,40.1237,44.5585,34.7383,12.3229,25.9918,16.3723,46.383,25.184,20.8855,29.226,11.8161,29.5258,21.0159,20.819,7.81843,9.39929,29.9315,74.6627,80.5391,77.1032,21.7651,9.3481,-0.147451,3.49538,51.7465,49.933,17.5527,43.8861,28.0323,15.4945,9.54129,-5.12568,-16.644,34.4732,63.7229,77.7716,49.6578,23.4261,37.9537,23.653,29.9224,49.1337,7.07616,4.90175,10.5092,4.53302,16.202,},{23.8683,25.8281,-7.39255,3.26854,32.8937,78.5156,96.976,85.382,86.4014,57.9342,64.0006,-10.9455,-28.6592,-3.14101,34.7705,32.1063,21.7176,30.5893,36.0957,68.1393,38.5789,63.4837,17.5009,-17.5264,-58.9995,-0.305181,-20.9163,-8.8775,68.7092,61.5189,30.4442,21.424,33.8041,44.207,73.566,63.0363,22.2869,-3.66742,-52.0856,-21.1936,-14.1449,-70.27,-31.3056,-10.6036,2.35782,33.4715,20.6587,14.0846,31.9815,73.1138,77.2754,60.0571,-49.9558,-31.9021,14.9651,44.7633,11.0924,13.1304,-12.9057,-48.2517,27.7301,8.69369,46.8465,3.43124,31.6512,57.1125,62.0968,-14.5717,-2.65796,27.1761,39.7109,-37.9336,12.8501,21.4933,-19.039,-49.3896,5.3029,44.5335,44.0503,33.4465,39.2883,64.8321,38.8532,-15.1688,-7.74558,.697248,39.144,6.23654,-59.2033,-10.3451,-22.4263,-50.172,22.3469,54.4298,47.6848,37.5827,27.1745,3.56134,-9.69989,-49.7303,-23.8226,30.3673,11.6006,-34.3364,-65.9517,13.7904,16.1177,14.0431,38.095,20.6619,31.9479,27.2129,15.5221,-18.6133,-51.7463,-50.4336,59.3579,47.7396,59.6877,15.1528,31.6697,58.6722,47.2305,22.7792,50.6923,47.7919,52.9091,31.3696,15.4139,11.2576,-16.122,72.3436,29.6764,23.0944,9.73778,14.2728,-11.4849,60.9187,44.2242,-15.6317,4.16028,18.0975,-10.7773,-7.39646,1.93768,-10.877,87.1007,60.9743,31.4594,28.6439,74.5193,15.8335,5.97444,46.601,42.3918,-6.2019,44.9722,92.2384,73.9359,13.9915,-10.4423,10.2964,1.4517,-0.586382,-25.505,4.52952,-0.077023,-30.9913,-53.6024,2.38901,25.4977,44.5492,28.7377,28.1034,-10.9747,-35.327,.867703,34.0302,22.8228,1.6536,.472397,-22.1824,-17.5876,-54.0761,-36.3689,16.7961,43.4775,.193317,2.9643,38.3987,43.1727,-17.1776,20.5096,62.9708,32.7159,5.51867,6.64869,-6.80581,-5.29796,21.3031,9.10976,52.3955,29.3618,-58.042,.0238673,31.4356,52.4381,21.712,15.1136,52.6651,65.3201,28.4839,-5.87353,10.8115,8.09617,41.5762,10.9256,20.8705,14.4051,-14.5714,13.8707,35.1225,31.4104,9.83405,17.234,34.2921,79.1795,97.8825,84.7143,11.5846,8.98188,-1.7162,-4.75756,52.9995,48.3267,16.0687,35.9968,30.1657,15.7589,13.415,5.56426,-8.40866,45.4076,79.7517,97.3355,50.8091,19.7589,55.4283,22.7671,32.2287,63.8014,-2.56964,1.30258,26.2849,16.4764,23.5219,},{26.2347,26.3515,11.9321,16.7845,37.5468,75.6239,73.9181,69.4914,74.1243,66.1028,70.8326,38.0602,23.1538,19.6545,33.7289,28.5774,26.1921,32.4016,34.3157,61.905,38.6758,60.8615,32.6796,15.3511,-4.38919,12.6694,16.896,35.508,82.145,63.3847,29.8704,20.6704,24.8406,34.947,63.6624,52.6006,29.1103,16.8654,4.17974,11.3613,7.58527,-19.3845,18.6519,36.087,47.3378,48.201,28.162,10.5938,27.2703,62.7616,63.9466,52.9833,2.20833,9.71934,24.7355,31.2092,23.4079,24.9276,26.2919,14.425,63.895,33.9028,47.1461,8.48437,23.7595,55.1588,51.7353,7.78703,14.866,35.9362,22.4389,-8.89743,24.5783,42.3145,23.3796,16.7986,42.9455,51.591,42.8871,27.3301,32.3603,55.9155,35.9356,6.13046,7.77318,-1.56494,25.186,23.7599,-3.4226,21.5577,16.3414,5.23287,49.4277,58.3089,44.2677,26.543,20.2956,17.905,5.83106,-25.517,-17.671,20.8625,6.67895,-9.40055,-17.5804,30.6173,22.2195,29.2684,54.4614,37.7853,34.6108,18.4974,14.8837,9.5934,-7.77658,-24.4575,20.0229,31.7626,41.1507,29.3917,38.1422,58.2989,37.9548,25.9568,47.6855,43.1632,51.8528,21.703,14.4844,28.1081,19.6345,42.3992,23.9509,27.9397,33.0486,31.6109,19.1948,49.9715,35.9455,14.4975,30.3252,31.1286,23.3571,6.25101,7.4794,13.0052,54.1035,43.184,28.6849,32.0742,57.9534,38.0114,22.471,32.8555,37.8236,22.3601,55.4497,74.4751,49.0535,12.2491,-2.34874,25.3745,24.1206,22.4049,3.07934,28.5927,32.5716,15.8753,-6.04879,21.6837,24.4336,38.0036,45.403,46.1563,25.6027,-2.63125,1.56741,37.1855,37.8936,17.5899,13.2025,9.20988,12.0698,-10.0737,-3.70409,15.8233,32.2195,24.3894,35.1004,41.3358,44.1108,-6.0971,16.277,46.0126,28.646,10.2291,16.7189,8.93923,.868733,15.7313,14.7393,34.6903,23.9188,-4.66715,22.5184,28.1319,30.7404,12.1878,14.0015,37.2315,45.9154,37.2344,18.1047,31.6002,24.4217,42.8995,19.9951,19.4896,30.1285,17.9143,39.8735,25.5783,22.4524,8.51219,16.657,30.0616,73.2057,80.0013,75.9434,33.0219,24.533,18.0486,11.3704,49.5705,60.0574,32.5752,51.7132,29.9667,20.5665,14.1012,3.95275,-4.45131,33.0944,57.8442,75.4945,54.3169,32.2279,40.9862,20.027,32.7421,59.9195,18.0496,14.7738,15.5263,10.5458,18.8889,},{23.513,21.8214,4.98931,10.4261,33.4102,77.6287,78.8706,74.579,78.7744,68.563,74.5117,36.6189,14.5036,9.32797,25.5975,20.9434,22.4777,28.9757,31.5161,61.6415,37.5254,61.9945,28.6617,6.38118,-13.3164,11.6624,15.5843,29.9616,80.5735,56.9607,21.6356,11.9384,22.6547,32.9944,66.0012,54.7087,30.8791,14.5505,-4.49464,5.17577,9.3,-24.0275,10.6695,30.4246,45.6077,47.8134,23.4788,8.20524,29.4995,67.6104,67.5339,52.8487,-3.84639,3.11311,23.2586,36.3699,27.5304,19.2821,16.0773,3.15801,62.1513,35.021,52.9044,7.44156,28.5134,58.4238,53.2658,2.67614,11.2941,33.9481,29.0671,-3.73368,23.5976,36.4186,12.2694,6.43567,43.1125,56.2429,49.6168,30.1871,36.7693,59.8884,36.15,.943604,6.59632,2.22923,30.1201,19.4044,-13.0819,10.7208,5.63335,-5.50504,51.8325,64.4899,51.4753,29.8783,24.9572,17.0602,3.99387,-23.6874,-20.0406,12.4431,-3.95564,-20.1446,-23.2564,28.2516,21.5954,24.1267,55.3687,42.6753,37.476,20.3446,16.3447,8.83284,-11.4025,-27.2486,20.1932,24.5166,38.0095,23.0951,39.5952,59,43.543,24.4468,49.3369,47.4038,52.467,23.5469,15.7908,33.5388,28.1751,54.8128,27.9134,30.3458,35.2829,32.7688,23.845,59.8975,41.3069,14.0745,31.2967,31.6366,23.7501,5.83707,9.87396,20.224,65.1594,46.0108,27.8657,31.0864,58.4287,37.2333,30.5676,41.397,42.1726,21.0536,55.8372,77.1361,50.9715,12.8611,3.18712,31.6213,26.6749,17.8654,-3.20264,23.4515,28.0437,11.2212,-1.24634,31.0322,27.3915,36.7509,43.0506,45.0136,22.4841,-5.50929,9.01385,46.0805,38.1617,13.664,7.91866,.766534,6.09843,-12.7444,6.01203,26.0025,35.6512,18.8378,30.3622,37.7895,41.6964,-5.69071,24.1918,54.1304,35.9028,12.2246,17.9573,8.92757,1.24408,26.2547,24.7339,43.7593,30.0273,-5.10353,22.4947,28.8152,30.7481,12.4348,11.2387,36.2033,44.5726,33.1571,14.9273,30.8326,23.4036,48.6978,26.9215,22.4753,26.1823,10.9948,33.3078,20.7409,20.3288,8.4132,13.296,30.2209,75.4373,83.148,78.844,28.7669,17.8543,8.67898,9.02493,52.0884,55.3576,25.9372,49.6748,30.1483,20.2693,14.0842,1.14118,-7.39988,35.7459,63.0078,79.3027,54.6108,30.0312,41.0045,25.2686,37.9402,59.0981,16.2085,13.6922,17.1214,12.0354,20.188,},{-4.14327,-14.8939,-109.629,-39.9309,89.7047,-52.9718,10.8581,-115.604,-315.303,-68.9777,-231.385,-104.78,49.8499,25.9806,55.4218,-56.7143,27.3458,116.348,23.61,-117.432,-60.3976,23.475,52.6454,-30.6464,-156.088,-157.662,-137.581,-158.831,-50.6186,23.7255,-12.5718,-34.6966,-36.1546,-221.996,-233.58,-103.408,-56.6407,164.094,-53.9925,-95.2782,-30.0024,-30.3557,309.249,-20.7473,-200.43,-216.214,15.7636,27.5675,-231.935,-54.9713,-7.98247,-0.331588,85.1195,81.6501,193.717,28.6096,-32.053,59.0007,195.47,369.593,347.265,328.683,304.919,-206.488,-238.819,-25.1463,-73.6012,51.3309,158.186,148.783,39.6864,-102.931,-30.3959,-49.9875,118.233,360.681,451.66,462.655,529.261,68.681,-158.905,-13.2239,-238.166,90.0673,110.903,-93.2483,-117.611,-186.486,-251.174,-270.142,-47.8144,239.261,486.171,499.922,511.257,103.484,-97.1031,87.0415,-46.6458,4.98413,-231.603,-274.527,-258.009,-276.593,-417.202,-564.041,-336.581,42.326,446.374,340.718,611.599,372.264,153.965,231.995,-99.8439,-320.498,-429.09,-322.245,-258.326,-403.776,-295.888,-343.161,-320.14,-178.347,122.053,105.035,490.117,269.385,179.689,669.017,-55.242,-346.803,-571.44,-389.588,-199.713,-172.729,-259.309,-351.259,-480.479,-394.219,-142.585,72.2459,166.68,221.065,82.0108,450.235,149.142,171.797,-89.7927,-206.881,-332.108,-438.294,-455.418,-284.359,-102.115,-70.5905,42.0819,-71.7671,-22.0759,108.965,14.1965,1.4586,-121.428,173.345,9.74859,-86.2957,-252.096,-420.262,-423.091,-288.036,-55.5056,157.984,-6.51933,-229.227,-179.364,-43.6921,-66.8096,-4.70267,79.6501,220.774,136.541,-18.7814,-133.626,-205.513,-248.61,-265.223,-33.7529,126.949,61.1341,-305.439,21.3216,-319.772,-36.0579,-59.0014,-71.7404,86.626,218.049,152.434,-13.1867,-156.45,-193.657,-185.336,88.3097,-7.29546,-180.867,-89.5062,74.6,-188.719,-74.3506,-197.227,-178.116,-242.892,57.1975,204.725,43.4899,-99.3541,-99.2743,56.0052,193.691,-146.025,24.6729,174.552,-104.648,-30.8404,-89.0112,-385.687,-197.339,-188.295,52.6175,-63.562,-45.8759,-134.512,-117.666,-94.9257,-123.214,-119.773,37.7498,24.2114,103.363,-15.0845,-164.824,-398.376,-656.993,-509.969,-301.507,-136.816,-169.531,-73.0429,-165.386,-191.222,-172.34,-251.373,-167.423,8.68204,20.2416,-46.4978,},{32.0504,26.1619,18.0076,22.3247,45.2875,91.8643,90.4721,86.2964,85.2425,78.5333,88.0759,54.6509,31.3553,22.9275,33.1273,23.8354,33.2439,36.3806,39.2153,72.273,45.4538,68.0262,42.1774,19.4498,3.50116,24.0938,35.5124,53.1365,93.6996,69.866,28.0413,14.9363,23.266,30.8811,67.948,54.7339,34.3211,25.1338,15.9073,10.8544,17.2299,-3.63287,34.7986,56.6323,75.983,71.3611,35.3478,6.394,26.9341,67.1641,66.4939,50.8857,10.1828,17.075,23.6008,33.8934,30.4757,29.2823,38.0567,33.8716,85.5856,54.471,59.0128,9.40104,22.6129,57.9791,52.2822,8.88734,15.6108,28.8989,23.0682,-1.91572,29.0101,49.7509,36.8385,30.6878,57.5095,66.0365,56.7829,30.2451,34.6863,58.8725,38.4778,2.85069,.64337,-3.27615,22.9885,21.9364,13.6113,36.7877,25.2017,11.0877,60.3306,70.7495,56.3698,28.5901,22.1846,23.7293,14.1181,-27.3016,-28.7013,4.2553,-7.86117,-17.6589,-1.51059,39.5827,21.9926,24.9541,58.5098,54.4129,43.1703,20.4407,16.3311,20.8273,2.33805,-18.5748,7.1656,12.9517,23.5365,26.8628,46.8642,66.3477,33.7475,15.8752,41.1596,51.2317,57.8643,22.836,16.6362,38.4389,31.3494,46.1665,24.4016,30.5478,48.9018,51.2213,46.6699,63.757,36.237,11.1727,28.2428,29.3922,31.3697,8.14872,10.9549,23.318,55.1263,35.4233,19.8061,29.251,64.3981,52.819,38.6225,45.3546,42.0227,21.1226,44.6713,61.9507,39.0055,9.9427,3.26203,29.9741,24.6177,15.8161,-1.95448,36.0252,45.1587,34.6279,16.698,43.6972,28.1643,29.7818,35.455,36.719,18.9159,-8.13466,7.63877,42.8242,33.7488,12.4581,13.9232,19.3127,25.2824,2.92454,21.313,33.3355,32.843,19.306,26.9432,26.8821,30.1796,-13.288,22.8264,50.3475,35.1003,14.9272,30.1714,29.6537,15.4856,30.3801,32.8472,45.2131,26.2616,-2.47467,17.4977,21.0609,22.2103,3.9787,.682252,25.2756,39.598,39.1287,35.6692,53.4932,37.9645,53.5229,35.9668,25.1327,19.553,6.1318,33.4239,10.3601,14.6501,6.86773,6.35969,20.2443,77.1382,91.8149,87.1708,40.3348,27.9128,21.0071,19.207,46.0934,51.7384,24.6677,48.3205,28.2696,21.5219,16.9185,-4.28108,-10.7558,35.3976,66.0632,86.5666,63.0956,37.2216,39.1262,26.7804,40.3923,55.191,19.9947,15.161,18.1052,15.4335,20.0461,},{-9.18544,-28.8819,202.32,40.8664,-149.728,-1.21413,223.202,101.456,119.192,-43.5285,-21.0092,-436.003,-39.2035,10.2921,-111.39,-113.376,67.3632,-149.763,-382.731,60.6014,63.9693,-54.2726,95.103,-141.433,-11.1794,39.7739,-59.3961,-167.469,-263.443,-178.325,-10.4964,-202.167,-79.654,-60.3058,40.7355,-47.7048,-13.9929,-6.29704,45.754,-60.8895,-13.1706,-72.0377,-41.4721,-83.8856,298.821,317.546,-13.9857,-66.5784,-48.2101,-103.589,-22.1449,288.068,640.106,180.922,-76.2124,-156.778,-76.8208,52.9708,133.312,88.7745,167.593,350.587,298.837,126.562,33.7404,80.8005,295.856,247.054,-31.5302,-69.0064,-140.236,-14.8869,-115,-7.63979,-5.23995,-79.1397,103.038,141.287,274.145,-8.1965,90.2092,-154.567,104.138,248.962,-5.65237,-166.072,-261.688,-112.344,88.2903,-85.4575,-86.4954,-73.6189,97.8849,267.683,20.7621,-62.453,-49.4275,-336.021,-300.623,-331.133,-108.395,-39.1193,-8.03044,-87.9017,-41.9222,-157.116,-157.42,-65.6093,-316.743,139.82,-165.562,-140.319,-182.537,-376.871,-454.074,-133.709,-204.746,217.166,91.496,77.9782,-368.108,-41.1984,139.603,-167.785,-383.19,-454.749,-405.165,-179.28,-184.534,-415.905,-103.182,-104.143,-38.2165,-166.733,149.439,120.793,328.841,296.67,-16.628,-22.7852,-99.2295,-192.568,-210.38,-228.199,-31.2146,-26.0687,74.655,41.9988,-55.2958,-135.449,-107.115,-60.2564,-27.9625,72.0317,124.264,135.898,-231.262,-195.123,-125.903,-103.214,12.2679,-47.5884,231.513,12.7117,-69.6948,66.8538,-215.995,-331.479,-88.1473,-28.1426,137.14,-155.637,-227.409,-74.5781,-288.08,136.83,5.45888,46.5784,198.453,103.966,-101.652,108.53,-41.4572,-23.5261,-203.451,-59.4689,-30.2945,-302.317,-192.014,.617499,-377.812,115.997,1.556,22.5686,121.47,-184.329,123.644,-2.61891,-5.78439,-36.2909,-87.0821,-349.545,43.205,169.114,-229.391,190.612,-76.3345,226.662,-129.385,-40.9353,-53.4235,227.721,224.44,138.344,226.334,-139.939,-221.298,-25.3552,173.528,-100.689,-65.5899,-247.178,169.787,229.16,-50.3936,80.6375,183.069,250.965,-11.8965,61.5418,76.5865,81.9876,112.599,-32.3444,-102.701,-128.939,-80.5641,306.328,327.324,201.131,104.256,157.782,.141608,-57.4645,-118.465,77.2531,322.89,146.719,-38.1922,58.018,-121.56,143.082,273.26,122.44,201.682,102.543,},{19.4282,5.78951,-66.3734,-49.951,-13.5752,45.4279,77.0315,70.7747,69.635,25.8488,18.2436,-40.0204,-71.7016,-36.9545,25.119,21.3992,17.2474,4.26789,-12.8906,40.5258,18.5207,31.8647,-6.2788,-28.774,-85.5791,-53.535,-48.9129,-21.8739,28.6963,23.6027,9.806,9.09654,30.6438,31.8355,44.9595,35.6828,22.927,22.2552,-13.299,-18.1602,-41.5174,-62.1166,-0.385937,38.7354,44.7657,63.3064,42.0509,13.4234,30.1498,59.6989,54.1806,28.185,-32.9918,16.2693,14.7863,1.20533,.407453,7.44032,12.0652,-11.6666,24.0279,39.5783,50.5641,-0.333002,24.2678,29.7886,25.9065,-4.58888,19.902,10.5898,-1.04303,-52.1728,12.4618,20.3106,-15.836,-33.6943,11.7809,67.9173,58.585,43.7428,38.5539,34.7916,39.5799,-9.71888,-33.5314,-58.0968,-36.0589,-38.9725,-76.8141,-58.069,-68.3361,-75.8118,10.0134,52.0042,63.9546,51.4351,27.4713,-9.46754,-0.361126,-94.9365,-89.912,.595713,28.2827,-23.4551,-74.2866,-36.3308,-22.1812,-21.6615,-3.38638,-10.6221,34.7349,34.0667,14.3214,-22.4126,-60.4996,-71.7552,10.5846,46.7731,55.7804,25.4613,22.9261,20.1239,13.5711,17.7267,34.0349,40.4005,18.8895,31.8489,21.116,2.28846,-38.3931,19.3218,16.6257,41.5632,37.9897,57.2657,1.79927,33.3897,50.6527,-9.36896,1.44618,-5.91852,-54.0143,-50.2416,-4.56705,-59.995,34.7559,32.0031,4.93704,9.73355,72.2664,28.3315,-0.654276,24.4268,18.7582,7.64709,31.0435,52.0834,19.2691,-30.0161,-37.3631,-22.6387,-5.48685,-4.75307,-44.7149,7.36644,.413975,-4.87372,-62.3717,-29.1007,-4.46108,36.2596,33.1031,17.8483,-19.7356,-71.3892,-27.1409,19.3835,17.2665,-16.8763,-18.0189,-24.5045,-10.6626,-61.1877,-57.9727,-22.2483,13.3341,-12.8167,11.3659,29.4328,20.2798,-79.4672,4.33105,46.9401,12.6728,-33.886,-23.8076,-34.7601,-19.6353,-5.45432,-16.0369,6.25122,-30.8392,-117.522,-31.2629,-22.1197,15.978,7.18155,.776258,41.9385,41.4588,-0.136842,-14.3623,17.6185,-1.69834,23.1675,-18.277,-32.3196,-32.872,-29.8008,-19.9408,12.9704,7.83363,7.83243,-2.51377,13.1894,63.9946,67.8667,55.3103,-20.7219,-21.7929,-35.8076,-76.1942,-28.0068,-2.44083,-3.08944,16.6841,24.2139,11.872,18.4596,-25.7354,-32.0273,42.1848,73.1046,102.055,67.8367,16.6018,27.3187,-30.0269,-42.4812,36.0877,-3.8452,-10.845,19.2304,15.9238,21.2651,},{-12.2276,-31.0479,-62.4372,-13.3968,78.8298,-46.9014,144.641,-176.229,-406.788,-171.109,-298.306,-266.58,-150.607,-210.987,-114.137,-93.4011,-10.0316,-1.0589,-130.172,-139.03,-12.5799,21.9078,17.4898,-14.6768,-174.231,-195.461,-50.3643,-163.545,-218.858,-154.269,-113.617,-105.872,-24.7924,-230.008,-147.777,-53.4439,-11.9512,193.99,-37.6045,-130.39,-40.2954,36.5575,298.997,-54.9243,-314.593,-444.726,-138.679,-77.1224,-235.773,15.7313,97.9176,-2.75638,67.0723,4.02332,45.3486,-41.5948,-97.4583,-17.8162,172.886,285.893,217.696,265.755,208.317,-299.186,-283.178,-15.9892,-32.3472,6.42404,85.6382,42.4153,70.2002,-19.1193,-27.5111,-46.6571,69.2834,254.66,320.044,262.178,549.501,13.7843,-197.343,-63.2929,-159.64,129.741,88.1841,61.5085,41.4486,-68.85,-193.386,-212.155,-20.0168,157.441,334.003,346.756,517.713,94.9814,-63.7548,216.515,100.244,133.24,-75.5381,-169.267,-190.747,-211.911,-399.061,-677.784,-587.627,-198.311,163.683,249.676,643.858,406.048,146.369,311.016,58.9012,-112.157,-290.16,-240.647,-187.777,-335.618,-327.276,-395.789,-433.982,-282.908,-14.8908,5.33933,428.9,297.619,168.519,663.538,137.668,-88.3968,-426.743,-261.381,-92.1773,-147.41,-249.263,-340.661,-531.483,-421.953,-288.866,-27.4842,105.824,190.492,83.5827,550.713,324.669,258.852,-5.93021,-134.846,-295.548,-388.26,-415.393,-285.003,-150.375,-127.294,-88.3627,-278.061,-123.305,90.1739,11.3415,160.698,97.6732,365.377,176.324,84.6847,-77.332,-206.99,-249.261,-191.539,-84.4908,37.8855,-54.0315,-260.671,-192.645,-29.4431,-106.731,75.3349,198.427,335.873,279.714,126.924,35.655,-51.0992,-148.364,-155.864,-38.0415,59.2292,-16.5585,-371.08,-5.11052,-372.625,-67.1626,-94.2404,5.17504,132.304,251.382,182.523,26.7448,-110.045,-174.619,-154.726,65.1296,-97.0848,-352.233,-193.451,-38.9074,-307.41,-113.799,-314.919,-146.948,-139.737,126.537,253.076,130.077,-30.7223,-30.9944,75.3713,137.117,-255.183,-92.4507,-60.3579,-281.857,-77.594,-107.532,-340.937,-164.059,-59.7093,164.318,82.8947,102.691,18.6146,-57.1622,-59.3663,-132.505,-148.581,-183.878,-184.419,-57.5202,-72.2933,-147.642,-313.022,-567.754,-435.895,-258.09,-153.228,-62.512,50.4938,-75.9126,-54.6063,-91.5304,-175.489,-252.081,-150.23,-124.745,-73.6882,},{356.835,599.651,391.386,184.779,277.055,342.105,300.497,-185.312,201.109,94.7908,398.448,-417.803,-121.866,-135.195,62.2888,-100.77,317.248,87.5915,255.648,691.496,63.9771,183.286,351.147,154.512,224.69,600.989,-33.9366,-265.628,-332.429,-378.833,436.563,322.144,-144.87,259.351,504.747,-85.0665,242.877,12.541,212.424,-73.8035,136.168,398.758,265.221,256.433,80.1664,674.677,407.348,67.0137,276.837,355.938,-70.6352,25.7974,288.818,-248.172,-630.51,-665.829,76.6391,246.033,35.0078,-369.583,89.9135,526.861,223.709,245.651,798.46,86.6277,-50.84,337.142,94.9596,-410.971,-228.454,-224.642,-392.319,164.81,-143.228,267.707,308.167,126.957,118.44,134.527,486.843,60.9688,381.729,53.7255,39.7415,-83.3606,-403.024,-586.476,-425.784,-107.741,157.473,13.4945,-144.422,154.905,245.442,63.8468,601.424,296.818,-190.05,-509.457,-10.3844,-291.194,-238.912,-942.157,-764.123,-148.603,-151.85,-526.714,-466.034,145.023,106.97,254.475,37.6447,-219.504,-233.17,351.17,112.59,383.524,154.244,-139.202,-841.691,-493.311,-36.0796,-525.437,-365.914,413.341,41.1389,344.37,-170.063,-977.346,-378.27,247.051,619.96,539.096,224.711,186.595,-164.549,-140.804,232.675,-128.783,-1301.85,-195.776,-35.3717,-171.358,83.1341,-778.713,-302.104,715.969,673.594,43.4723,540.698,614.621,263.127,91.6418,-408.641,-549.338,-673.995,-379.87,313.083,-73.4939,20.7801,-226.789,-222.127,-30.3322,-222.654,254.229,668.667,485.525,136.255,432.144,602.905,-141.033,-286.728,159.566,150.716,104.979,105.219,76.9599,-344.183,-368.875,-201.033,7.91254,95.2769,-269.917,-347,163.707,354.002,-394.608,7.83278,318.051,-132.573,114.344,34.6347,-31.307,-118.048,-355.575,102.959,-284.817,-40.0607,-104.931,-183.172,155.024,296.424,-25.8595,423.15,49.1767,-681.626,333.467,-180.751,-47.0752,-36.0454,211.011,45.2742,-161.107,174.076,-250.867,-725.453,-242.126,.344973,-146.542,-317.701,-968.83,-287.95,144.894,-434.738,-696.727,-264.459,203.959,130.397,708.765,403.284,-28.7831,-276.552,-524.865,-585.968,-575.468,-1070.46,-420.221,-10.9989,117.96,-274.942,-542.499,-277.062,-333.61,106.584,19.5943,283.159,-178.83,-531.274,-802.57,-1308.88,-927.543,-668.25,-707.299,-467.234,-327.19,},{23.7662,21.7398,-9.17675,-9.13633,15.7452,63.8255,66.3692,64.9413,73.12,60.0525,73.7133,37.9558,9.58435,-1.25386,26.4605,19.0837,22.4105,22.4761,14.1823,54.01,23.1373,55.7041,17.1662,-1.54298,-14.2567,-0.093956,-1.44974,13.6982,71.2255,49.8997,15.4163,11.3322,14.8262,24.2281,59.9453,45.256,26.3759,9.97585,-3.55548,11.2613,15.261,-29.7417,6.19466,27.0346,37.1051,36.9995,15.2429,1.25722,25.5678,62.8379,61.2064,52.4436,.0216392,12.3994,36.0179,47.9587,37.3979,19.1347,16.079,-8.33364,54.8464,25.4196,46.9499,-1.00435,26.1291,52.1578,46.7318,3.04895,15.7085,44.81,40.4714,11.0855,32.5908,42.4818,5.08379,4.00674,33.5589,50.1316,44.2149,32.041,34.132,57.8322,38.5988,7.85473,16.7415,12.1237,35.4267,16.4816,-13.1575,-1.4811,-1.63013,-17.9919,41.861,63.9657,54.7227,31.2098,22.3336,13.1353,5.36655,-7.92312,-14.0891,10.7219,-2.96913,-20.3941,-18.1145,32.3424,19.5692,10.3167,41.697,39.9872,36.902,21.2127,18.4935,7.6895,-7.79014,-21.4738,24.6671,29.568,42.2308,24.7333,50.0754,59.3495,43.7381,15.6021,53.8035,46.0856,50.507,23.8559,19.4993,46.9817,46.2483,68.8547,37.2452,38.8617,39.7199,37.1803,29.3934,55.118,38.1045,20.1105,45.5743,39.7199,26.1902,2.78854,14.5274,36.1665,82.1531,53.0155,26.1739,24.5803,57.1529,39.5266,35.5957,34.6004,35.2511,23.0708,67.9766,86.2029,53.8159,9.02382,13.3009,46.0145,38.8326,19.3294,-8.65213,19.429,29.6745,15.7552,-3.37457,30.2437,21.4738,35.9389,48.5433,52.2298,30.0347,-7.61501,19.7095,60.8052,48.7025,12.8261,7.31717,-0.154414,4.70708,-17.1492,13.2266,35.8148,38.2826,19.0506,37.6049,42.5447,46.1001,-9.68557,32.162,68.0193,45.2222,13.5202,20.5356,6.26543,-3.39814,32.1022,35.3194,50.4733,35.6179,2.85267,30.4642,27.4303,29.6866,7.32962,10.7927,33.0105,36.1083,26.8727,.90614,24.4719,16.72,51.6503,31.118,23.5632,31.1066,13.0088,31.8956,17.8829,13.0215,1.5227,2.93734,25.3103,71.4687,75.1995,76.9322,16.1649,.313351,-11.8761,-3.16883,53.1925,53.7515,23.4567,49.4797,30.7497,17.1754,10.3065,-12.2825,-25.8051,27.8229,57.879,73.9503,45.2911,13.6234,25.4931,18.8832,29.7592,48.8626,8.48406,4.78918,5.83997,-0.142391,12.9215,},{-63.0519,-105.725,-188.302,-363.713,-515.626,-108.087,-222.631,-251.708,53.9241,22.5794,102.907,-405.747,-396.514,-117.71,-150.852,-63.2822,-109.488,-441.08,-645.899,-385.298,-425.878,-616.95,-231.365,108.577,225.566,86.4846,-128.628,-296.17,-849.941,-691.306,-172.027,93.5409,-263.719,-185.471,-335.998,-184.117,-381.054,-417.76,51.255,-119.462,-353.929,-208.064,-277.217,-11.9428,-348.432,444.249,-105.027,121.74,51.2691,-423.472,-182.739,26.0843,24.2259,71.203,74.1301,-376.794,-456.512,-28.4221,54.4774,-50.2712,166.786,-338.455,-258.762,209.946,406.119,77.657,229.259,403.083,158.32,-47.3144,-56.0452,-206.185,-275.263,125.139,165.286,466.353,234.752,105.162,-329.146,87.1862,352.085,79.6902,182.452,716.748,413.763,253.028,-253.225,-627.798,-183.239,-28.8942,427.422,517.421,264.651,508.182,-43.8804,-103.946,377.013,389.417,148.565,334.268,439.845,301.026,26.9893,-478.393,-531.624,43.3609,162.801,670.165,108.946,498.548,-138.45,-133.308,67.7018,66.5341,279.19,375.67,256.736,423.214,-76.5397,-188.491,-190.422,26.9027,121.424,109.029,-114.211,156.821,213.495,52.6033,-4.97531,-401.706,458.514,683.952,763.26,369.858,-135.229,-116.098,95.0719,54.8272,169.983,700.225,8.85045,304.459,167.448,1.64719,176.087,160.993,560.172,727.22,672.27,318.893,202.085,368.714,242.494,44.4918,386.349,744.992,286.882,-21.6632,371.535,-142.264,198.444,431.208,535.567,354.037,34.6436,271.172,34.8613,-148.889,-228.853,139.75,222.993,207.411,-22.5456,154.706,167.97,-14.4771,137.513,565.911,499.43,110.257,-225.685,151.254,-88.1994,-547.688,-120.792,198.898,222.372,-137.112,1.65767,434.886,-422.165,89.9539,-144.302,26.5235,-164.665,-656.909,-277.561,-417.142,-323.744,-529.094,-145.286,-82.4833,72.1001,128.077,-134.426,-204.204,-324.242,-11.4718,-242.074,-84.5114,-167.396,-55.0872,-44.2326,-151.772,-153.099,-285.785,-340.987,-33.5133,-78.7988,100.325,-528.4,-373.573,70.3657,2.73654,-400.417,-374.346,-207.486,57.7289,-363.31,-21.0825,-274.652,-323.899,-261.44,-558.828,-442.279,-307.468,-458.111,-19.5226,-81.2169,-23.931,-60.2791,-207.482,-271.351,-373.388,-251.763,349.811,575.003,195.188,-17.3996,-252.26,-500.201,-194.176,186.813,-36.7885,-144.391,-154.72,},{26.8826,21.6267,13.6917,15.3216,35.1258,77.9452,78.3108,77.9951,85.1571,82.0784,84.94,53.7463,28.1828,12.9418,22.6282,15.089,26.7601,29.753,32.0001,61.2019,36.0502,53.4875,27.1766,13.8307,6.4563,24.5605,36.8469,51.3967,79.795,53.955,18.8946,9.70841,16.5429,22.1462,56.1554,45.4767,25.6755,17.809,15.6521,15.7168,17.8919,-2.09224,34.7884,57.9874,77.5465,63.8849,24.2671,2.5738,20.9625,58.3073,56.4152,38.1264,11.2824,22.4354,26.0455,29.6446,30.2307,27.3119,36.8717,34.2351,81.1297,53.11,53.4853,6.21959,23.896,52.6122,45.0273,9.49824,17.0142,29.9221,23.2683,6.66304,27.1099,46.345,30.1906,32.7006,58.1028,63.5684,54.7535,29.6933,30.7128,53.8387,37.3903,8.37696,10.3625,4.02847,20.3072,14.4124,6.01211,20.4555,19.292,10.1339,61.2871,67.8527,56.0396,28.2494,22.9966,24.6092,16.3461,-5.59225,-13.9856,1.35932,-8.4287,-18.6133,-4.82054,28.8688,18.3174,18.0601,53.2179,53.6138,43.366,20.2747,18.3201,25.846,18.545,.802026,15.4707,19.3505,24.4798,23.2154,40.8812,59.4407,41.0305,19.8455,38.3199,46.2538,53.0435,22.6229,18.119,45.5546,54.7694,57.1167,33.5409,32.3744,43.9398,44.6216,43.1091,56.8375,40.4215,24.3472,37.7411,31.0488,31.4538,6.50609,15.0822,37.5673,67.0234,47.9576,25.7891,25.4855,55.2506,48.1888,35.9557,37.8932,41.6811,31.8104,53.4649,65.4996,39.2329,7.54888,13.5969,49.4162,47.483,27.8399,3.21312,29.578,37.3,30.5463,16.7572,41.3082,26.4262,31.4159,47.4441,47.5063,31.1004,-3.3719,17.8819,59.0539,52.0463,21.0076,17.262,17.2791,27.4529,8.7742,24.6885,31.5616,28.7907,18.9607,39.476,39.7576,39.4023,-6.43575,30.8824,59.6851,49.3254,19.597,32.6763,27.1684,15.0703,33.7362,32.1022,34.2832,25.5403,10.6439,29.4282,31.6745,22.4476,8.3735,10.2286,27.5172,32.2275,36.8992,35.7199,48.8312,32.4647,46.2257,25.9417,18.2205,30.0236,19.634,34.932,7.8593,9.60705,8.33401,5.98169,28.3222,74.2361,77.1098,78.0795,35.3986,18.1402,8.62347,8.39758,48.8243,53.3118,25.6198,38.2113,22.0265,16.2991,12.9885,-3.91455,-6.64736,42.0009,66.9608,81.8395,64.0881,42.6394,43.0539,34.9481,40.2652,48.6906,18.1141,14.0393,16.6499,13.479,18.3947,},{-6.73827,-21.2155,-63.7379,-18.2882,67.4499,-48.8649,127.36,-168.756,-391.075,-153.526,-232.206,-245.729,-171.961,-223.616,-113.826,-89.8222,-6.80906,18.0032,-126.387,-134.434,-43.4505,17.1947,11.0094,10.0961,-145.197,-179.652,-62.7914,-150.536,-132.898,-119.803,-111.139,-107.642,-25.602,-212.417,-132.436,-49.6112,-5.68487,170.104,-55.813,-106.564,-9.89069,47.1471,284.31,-25.1298,-296.232,-371.391,-116.002,-85.7193,-234.356,32.3863,71.2123,10.1529,59.3448,-16.0693,1.53401,-32.7215,-93.1602,-40.105,150.361,285.555,228.48,215.305,227.078,-282.639,-265.717,-0.457473,-38.5635,8.77084,72.6527,21.8267,29.5296,-14.0254,-24.7001,-59.1228,40.5637,228.215,302.92,235.985,484.441,3.15474,-176.493,-34.334,-170.187,108.047,64.6449,32.3408,3.85068,-52.767,-162.531,-219.51,-63.0871,121.407,309.414,314.675,472.879,85.5224,-46.8281,222.09,105.003,115.357,-86.3816,-154.347,-186.749,-174.656,-362.686,-637.972,-549.567,-168.396,184.489,230.896,594.957,353.748,130.82,297.256,62.3208,-71.7197,-263.328,-249.815,-207.675,-298.373,-304.874,-382.67,-453.633,-281.309,17.2471,10.8099,413.591,254.004,148.594,637.732,135.546,-98.043,-419.704,-268.488,-126.094,-144.803,-243.256,-338.622,-517.187,-395.249,-275.625,-21.221,102.736,189.722,72.1859,514.158,287.119,228.781,-28.8594,-141.827,-310.191,-369.604,-409.847,-301.695,-175.84,-140.18,-77.5518,-262.327,-125.753,92.4843,15.5356,152.168,81.9683,348.89,164.957,66.1082,-107.025,-199.442,-247.78,-207.198,-119.309,14.9048,-40.0751,-236.579,-168.809,-19.6209,-102.507,93.6081,200.557,339.118,276.485,123.793,20.44,-34.2463,-150.221,-174.693,-57.544,54.1659,-2.77759,-335.292,-14.6931,-333.111,-56.0608,-86.0646,2.41405,127.639,238.417,172.417,-0.436278,-97.268,-175.546,-162.673,50.1316,-95.0917,-331.472,-217.963,-35.7033,-282.524,-98.5849,-279.582,-116.064,-134.825,136.65,247.873,118.021,-22.7662,-24.9512,76.4103,151.482,-221.144,-100.986,-85.8265,-263.969,-91.8368,-105.563,-311.584,-131.988,-47.761,151.819,78.853,93.5346,46.7499,-25.4441,-45.7959,-123.851,-169.29,-188.103,-171.24,-64.7504,-86.6877,-134.056,-305.784,-541.578,-403.761,-225.989,-122.14,-54.5422,65.1487,-67.4839,-88.9427,-89.6113,-129.804,-231.78,-157.5,-127.901,-68.674,},{57.0537,31.9468,53.6923,133.039,236.895,-290.041,-268.611,412.659,84.7924,529.883,-11.7902,195.401,124.536,-77.9427,-64.3655,-7.97655,138.149,492.695,336.428,24.7008,292.321,273.304,142.123,-60.7323,-132.618,-80.1937,-34.2692,83.0862,34.45,102.311,-341.458,-173.073,364.002,118.435,21.5486,-138.066,117.461,127.492,264.239,199.711,99.6072,177.381,708.526,278.373,278.04,-113.871,64.6088,-167.389,-100.887,197.144,190.366,-209.625,-102.815,341.242,428.111,283.51,-26.5386,287.56,654.802,716.859,349.131,863.732,418.434,-229.063,-608.587,-220.488,-429.325,-381.329,-33.8032,191.898,164.571,-205.799,178.776,354.126,436.599,392.464,685.045,767.262,780.272,129.096,-371.453,-85.4158,-428.36,-308.249,-380.381,-433.265,-491.573,202.121,163.848,66.9475,-180.464,166.417,446.038,215.673,724.237,263.578,-382.414,-177.043,-321.517,-288.479,-723.774,-626.662,-133.801,82.5927,-106.067,-394.509,-284.698,-672.931,114.715,-13.7518,668.877,314.879,85.1327,228.005,-290.919,-546.729,-1000.19,-524.792,-146.564,-126.195,418.73,231.972,-46.315,118.011,-9.18798,-322.25,-2.98497,135.993,278.002,708.193,-620.02,-955.707,-894.282,-384.313,-19.7982,316.354,71.0533,-293.655,-560.917,-456.214,169.377,-145.747,-355.464,-68.5821,27.0375,217.256,-492.984,-456.15,-451.91,-98.2083,-69.9124,-188.395,-535.073,-450.996,-438.892,-513.583,-141.737,54.3518,-195.544,-29.5678,-261.591,-212.762,-385.642,-276.155,5.49911,147.256,54.641,-128.971,-409.391,-333.444,-338.886,-242.2,-177.859,-307.278,-98.8359,-293.762,-385.186,-471.213,-236.118,74.4031,232.673,338.355,516.89,75.4537,-152.977,-219.749,-181.598,-0.951478,-93.2736,-516.923,35.0387,-843.575,-164.789,-355.874,-40.8533,249.034,303.95,626.076,629.952,110.438,-49.619,-2.74336,-87.1247,-142.751,-52.8773,-235.971,-190.501,-509.529,165.828,-297.911,-405.348,-72.374,244.208,565.385,635.146,266.667,-8.56115,-163.9,221.553,-231.02,257.01,223.762,-606.448,-25.1389,210.622,29.8396,-48.6078,-77.8576,426.42,126.427,467.928,255.972,17.0204,-159.299,25.5067,207.022,327.785,-6.93622,103.962,62.1805,-45.4232,-103.091,-119.139,70.2137,178.029,194.171,239.96,-0.618082,64.748,282.052,491.398,-160.561,-123.465,217.064,136.505,134.453,},{-104.869,-176.039,-226.238,-253.475,-209.11,-407.195,-248.695,-61.8962,95.7784,379.83,-93.5602,189.196,308.695,-4.30214,185.44,66.7538,-84.3235,-143.621,-416.229,-294.645,-41.3231,295.348,-93.2767,-205.745,-549.891,-749.6,239.336,166.243,-466.884,-111.705,-130.018,8.78784,159.071,-204.432,-332.026,-302.071,-351.39,231.929,606.332,-1.98991,175.309,222.638,279.211,-19.7161,-105.935,-1054.26,-418.095,-20.7081,31.9991,55.047,10.6198,-228.103,143.997,439.393,676.283,169.862,558.109,218.945,224.852,461.178,381.521,40.1912,96.973,-418.987,-518.594,-154.176,-219.394,-492.602,125.084,240.057,334.547,396.725,526.224,126.713,452.793,92.906,123.217,542.234,516.45,-89.0801,-171.508,132.18,13.3108,-13.6366,28.3313,108.168,466.912,522.239,339.066,35.946,-122.827,-94.0578,12.0454,98.8873,639.662,35.8283,-346.041,-185.786,-61.0872,-22.4506,-344.844,-368.081,-66.7757,63.6919,-200.771,-731.684,-812.744,-451.729,-274.742,-182.584,663.33,540.478,47.1158,41.8439,30.9124,-664.911,-601.715,-225.857,117.855,2.52416,325.698,-70.2919,-362.395,-455.363,-492.072,-457.988,193.355,324.302,172.738,448.697,230.143,14.9176,-284.862,109.546,236.343,-205.218,-227.698,-362.254,-255.492,-562.202,-434.254,-55.6269,190.553,344.267,49.4856,533.336,661.939,191.285,-349.011,-60.5454,-196.39,-134.92,18.5007,82.5865,193.235,-240.851,-194.936,-362.167,-299.967,-213.539,-99.2326,629.924,488.58,466.105,93.4742,141.866,57.5872,254.113,433.885,498.155,307.516,212.943,-44.5068,-125.115,-382.594,-172.858,28.2146,-108.984,287.536,454.668,214.689,-169.035,-36.9364,8.5469,447.751,207.665,326.341,234.396,-174.002,-602.532,-285.224,-624.574,78.6373,7.48713,43.8824,66.815,4.70501,-26.4919,-71.4855,-348.522,95.5983,317.301,347.931,43.0506,-386.886,-545.373,-283.369,-597.575,-230.415,-424.245,-547.458,-499.9,-301.673,-106.536,-163.993,-138.899,375.359,259.964,333.836,178.015,-135.666,-697.838,-989.013,-324.334,-6.59227,-218.543,37.3017,-70.5258,-97.7653,-352.981,-132.704,-160.736,-95.8916,379.785,504.982,456.772,253.16,-418.419,-0.975283,4.60567,-131.305,-431.572,-379.982,34.8751,249.191,-93.9176,-288.823,-353.023,-154.37,460.171,637.702,-12.2815,-54.4942,-64.7637,-56.3992,75.5976,}},weight[]={-690.81,1957.48,-2251.06,-2715.43,-185.724,-236.153,-145.212,-165.926,-2632.1,-145.291,1381.55,-177.39,-2642.85,5208.73,-180.54,2996.26,-124.307,-2458.34,-3221.76,-3066.75};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv && i < right);

			if(i >= right) {
				bound = 0;
				nright = right;
				for(i = top; i < bottom; i++)	{
					path[bound].x = right;
					path[bound++].y = i;
					data[i][right] |= F_PATH;
				}
			}

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}
