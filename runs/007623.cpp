#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{33.8428,48.1285,16.7464,66.6322,153.986,221.445,143.711,152.588,169.626,49.3626,90.8908,89.2745,11.2058,92.5709,91.0917,104.589,34.0286,75.3734,126.941,190.788,130.629,121.467,77.5254,16.4156,-144.794,-67.4322,26.3527,44.6019,126.847,190.736,81.9656,94.8018,60.9057,108.302,117.298,143.446,41.0569,-5.70465,-92.7997,-99.3986,-91.8722,-58.4969,-71.7487,-91.9106,-108.688,14.394,68.014,30.2453,46.4544,189.643,190.934,96.5208,-138.648,-104.086,35.9081,32.0064,60.8039,-42.058,-79.3017,-66.1597,-17.6666,-47.2136,34.2379,-33.9713,20.3537,81.8174,112.898,-42.9853,20.2541,-51.7045,-35.8936,-183.791,-53.4159,-57.415,-119.598,-195.806,-69.1836,23.2747,22.4067,49.4348,61.5166,157.972,180.161,-128.387,-183.944,-77.9396,37.8117,54.2447,-121.603,-12.6894,-86.7857,-146.212,-104.921,-14.6662,85.9199,85.1475,44.7082,141.972,181.29,-29.0368,-121.592,-42.5344,30.677,-79.4577,-204.443,-107.512,-35.179,95.8863,181.641,66.3697,92.0674,90.0902,56.0991,85.8276,57.9412,-118.444,-46.4008,-55.6402,77.4816,-8.05203,29.8375,-30.0177,9.82156,106.096,135.147,191.037,229.417,98.8967,62.9724,75.2785,-29.128,-47.175,-17.737,72.8235,-0.287519,21.7912,-97.8498,4.56708,17.763,-99.769,-37.2918,82.5974,23.7334,46.2427,9.64558,-90.4611,-53.929,15.8335,-7.32045,34.2188,127.404,-22.0235,-43.2172,10.452,37.8015,-20.1117,20.7831,121.843,62.58,102.106,-61.917,-83.9626,-120.137,-108.256,-68.1157,12.4777,14.0022,-19.6203,-55.5686,-10.8758,-28.0078,66.4843,35.4446,32.5023,48.2613,-19.7692,-60.9104,-16.8311,-50.2563,-73.0301,-64.7381,-121.531,-85.3697,-133.24,-85.2849,-104.175,-40.8053,39.3819,32.4701,23.1582,81.5289,-72.0506,25.1635,91.4991,20.2128,3.10306,-13.3701,37.5405,61.2323,39.3539,-48.8653,.466989,-79.6023,-223.687,-11.8946,-1.57611,134.618,-2.08334,-22.6291,22.5489,106.61,8.03837,-39.1959,-2.16866,109.395,138.924,75.4529,-76.2735,-144.9,-48.8324,10.8373,107.393,57.0584,-5.47752,27.5847,-27.8774,93.4018,151.237,104.061,41.0504,177.075,154.766,-14.4545,-13.8407,6.94749,15.0474,143.74,7.28715,20.383,21.1957,-15.6947,-9.35987,92.9761,104.189,266.857,103.573,65.0218,68.273,-86.4096,-4.7198,109.105,-59.0335,-98.856,-29.3708,-12.4298,15.8064,},{80.7795,101.328,106.606,201.657,235.281,312.467,396.669,332.67,233.81,-122.884,-228.132,-282.337,-38.0609,80.58,106.067,-48.9897,95.671,169.31,265.554,366.754,151.825,143.336,86.7163,48.7062,-20.4112,162.544,248.656,106.315,51.1704,292.866,161.24,24.8445,-51.5108,224.101,552.041,330.344,91.373,84.3515,8.21156,121.978,45.8309,-44.405,-34.0243,196.231,499.378,415.256,121.785,-14.1974,163.461,100.379,299.838,-19.1327,189.959,-70.0084,-280.065,-229.881,-178.704,-132.153,64.0467,-71.7449,90.2288,333.779,149.553,202.37,128.606,104.265,-32.0927,118.465,-136.998,47.4397,-1.91892,-78.0241,-183.782,-48.8211,49.4138,100.388,95.0465,144.489,44.7459,97.255,71.0726,-89.0965,-100.395,96.0629,74.3983,180.532,-77.827,-169.737,-114.793,-60.1268,102.977,116.876,269.559,198.843,-120.315,22.8824,40.4491,-206.245,-258.675,-431.895,237.647,380.29,287.953,38.5092,-207.244,-54.0936,-49.3655,114.438,114.493,80.112,-312.68,-208.132,-81.1328,-306.633,-397.554,-83.4936,-30.3754,284.169,238.948,141.711,-145.143,-74.6848,166.441,-75.5628,-234.07,-35.2466,-253.662,-281.876,-166.538,-536,-517.288,-435.983,-290.029,-131.817,88.224,334.63,89.4059,29.4184,6.24227,-72.4295,-200.16,-171.618,-71.0777,-284.572,-41.5041,-498.7,-474.516,-458.275,-168.826,-271.912,96.2868,138.507,17.7623,-157.814,-135.088,-185.57,-64.3846,119.36,63.3184,-96.9501,-33.4394,-295.528,-148.732,-115.574,-332.284,-122.841,-64.2035,-39.6988,-173.96,-248.024,-180.101,-419.092,-88.5831,-76.0142,-13.2187,130.801,32.3009,120.791,-22.5555,-197.43,-149.772,165.957,203.773,97.4729,-150.238,-32.7147,-7.52262,-373.5,-150.706,226.456,4.17531,263.474,21.7185,113.566,89.8979,-48.3671,-127.065,-82.0744,.180348,98.338,-20.457,-86.8581,-11.9554,-163.161,-207.127,100.136,21.1563,210.753,16.5472,328.924,221.902,294.93,63.179,197.092,42.9847,33.0476,-137.887,-3.61407,-3.27923,-258.308,-66.3297,117.867,127.523,61.7153,53.7531,303.942,213.461,150.026,339.761,237.43,71.3379,-5.1452,-190.102,-259.483,-200.249,70.315,9.33718,329.017,178.821,78.4614,186.076,256.177,253.795,296.314,117.052,116.907,59.1963,113.108,-37.2635,-376.262,-109.994,154.602,208.206,116.662,27.4534,57.8555,},{-232.029,-362.852,-244.606,-26.0542,-36.9918,-9.93774,286.894,272.997,7.14229,46.1986,-252.064,-190.47,128.326,20.3116,26.8624,-134.502,-247.59,-56.9556,15.2217,-180.004,95.0768,-111.531,-270.963,-382.89,-395.727,-178.175,-82.2131,-141.81,-251.004,-175.691,-283.532,-250.954,69.2393,-314.281,-413.193,-192.103,-63.9482,114.264,174.85,-36.8001,173.672,-122.367,124.175,-121.283,-57.2292,-505.474,-36.6456,78.7708,18.3573,140.666,-57.8483,-20.2343,188.83,193.967,494.078,181.401,210.209,154.232,-133.947,228.016,225.177,322.97,447.975,-176.101,-315.057,-11.7813,162.586,143.85,242.323,384.83,154.028,-132.889,161.292,17.009,154.798,402.027,431.839,430.648,799.724,2.78583,-112.175,47.6908,-17.4494,243.333,118.572,23.9032,71.1457,75.8105,-135.841,-44.102,26.3192,146.129,558.169,376.144,615.186,97.0348,-290.558,-181.924,-154.199,92.0636,-508.515,-613.406,-231.241,-174.955,-276.744,-730.282,-688.261,-268.813,352.784,132.578,686.107,417.767,74.0195,131.041,-248.655,-584.167,-699.398,-268.083,-113.541,-59.9769,17.3126,-169.013,-230.427,153.184,46.3752,-180.975,223.802,312.872,145.669,578.408,-175.921,-535.542,-540.77,-369.293,-177.053,-339.779,-315.535,-318.889,-335.391,-337.972,-28.2099,-238.54,-145.703,149.049,6.72972,248.409,-122.017,74.5528,-41.6465,185.036,-185.339,-394.262,-229.004,-116.501,-200.615,-292.198,-42.0312,-255.233,-383.057,-116.538,-98.5668,-225.517,-221.188,141.817,283.207,146.074,137.12,-256.206,.743707,-18.5643,-139.181,78.8711,-8.18707,-454.904,-442.828,-87.6006,-204.952,-419.205,1.96049,477.688,222.037,-53.4344,106.6,131.043,34.9884,-162.283,-173.205,142.34,42.4445,-601.03,-325.655,-525.747,-94.8326,-300.617,72.6899,338.125,185.73,243.209,142.958,-96.0064,-202.595,-133.908,-61.0716,-50.6207,-297.754,-334.731,-284.597,-48.1193,-253.146,-282.748,-129.161,32.8608,227.174,224.623,-19.9451,-176.932,-41.5587,-184.846,13.5808,-210.24,117.179,-60.0813,-256.151,104.589,124.707,35.8057,164.05,160.161,361.135,216.488,157.162,48.0494,153.342,248.517,266.153,332.813,295.307,244.729,386.159,152.527,211.305,120.579,-138.461,78.1389,271.443,160.025,-4.45494,-88.1249,2.32182,356.071,643.19,256.122,351.581,356.101,396.464,342.183,},{-12.1119,-31.2549,-44.7562,-30.4883,41.7948,-88.2986,82.2161,-163.377,-342.747,-149.041,-318.959,-226.287,-134.452,-159.699,-81.198,-80.6545,-10.4895,-1.64291,-138.147,-196.553,-68.9783,-4.34778,-4.56575,-38.5921,-204.322,-202.793,-33.4748,-135.566,-240.567,-137.472,-124.338,-94.2179,-41.8323,-235.766,-177.659,-78.4011,.72868,169.719,-10.4607,-117.106,-68.4212,1.43916,262.262,-30.8699,-246.189,-423.52,-126.259,-79.7606,-204.873,-8.78122,61.1187,33.7135,100.909,37.9147,74.3333,-8.3325,-73.5816,-39.2819,161.393,243.619,210.103,245.785,135.845,-252.466,-265.496,-22.4104,-43.4752,30.6777,114.075,54.7392,96.6156,-11.7084,-28.7816,-40.0665,30.3603,224.237,300.649,263.331,487.405,42.156,-192.628,-36.8242,-119.283,169.219,87.4013,34.9523,44.9173,-42.5572,-180.944,-200.781,-36.0645,135.032,314.096,336.087,486.887,87.6872,-90.4066,192.579,113.862,132.308,-84.1706,-164.986,-171.552,-203.304,-438.121,-637.999,-519.957,-196.055,157.38,260.62,606.021,381.251,136.662,297.578,58.5742,-158.875,-329.813,-224.022,-141.694,-293.222,-314.841,-387.162,-401.7,-257.923,-50.078,-0.890401,431.445,278.371,143.554,589.715,148.596,-85.6421,-409.366,-279.804,-96.3278,-165.205,-270.925,-332.45,-497.5,-414.531,-246.033,-21.9366,83.2676,191.598,67.127,480.84,265.838,260.05,25.5353,-118.778,-268.356,-351.341,-382.82,-289.36,-140.09,-108.266,-43.7825,-232.402,-131.313,95.0274,-11.5467,151.512,110.545,353.792,152.37,74.3421,-12.9048,-157.203,-212.265,-140.429,-49.1299,77.9472,14.9432,-215.328,-185.771,-23.0418,-99.9888,50.9662,197.225,296.153,217.499,63.0014,36.6498,-45.5893,-150.578,-159.023,-30.9767,111.622,25.5861,-361.047,-32.1606,-377.558,-59.2304,-156.389,-18.1868,100.178,201.179,138.852,3.86083,-108.247,-172.848,-106.13,88.6313,-69.3575,-334.805,-221.377,-93.9017,-297.513,-115.557,-334.952,-184.477,-110.047,72.5296,194.211,128.137,3.89411,-0.266486,49.859,112.135,-213.928,-71.8175,-77.1157,-295.363,-87.4469,-106.991,-298.286,-150.383,-61.7189,145.269,88.0336,96.0155,9.90093,-91.12,-100.584,-144.648,-152.376,-181.406,-205.571,-57.3134,-76.2758,-123.659,-230.656,-473.382,-388.677,-276.043,-208.427,-114.973,-33.9258,-134.104,-60.3389,-99.7023,-189.541,-239.379,-131.758,-108.794,-63.178,},{27.6432,25.6823,10.8423,13.8817,35.4261,74.5867,67.423,65.0193,75.5554,69.3778,76.3665,59.2769,30.0967,15.3503,22.248,19.1236,27.6341,31.852,30.2979,59.9561,31.8287,57.9851,27.59,5.70828,-8.81749,4.47411,19.0923,35.4046,78.8803,53.5378,18.9799,13.2363,21.2321,24.7061,54.2334,44.6697,25.865,8.34483,-5.64519,2.09415,5.20573,-19.0424,11.1054,33.4604,46.6845,42.761,21.2677,8.76082,25.1499,64.3309,58.983,41.7908,-5.30581,1.08871,20.2279,28.9273,31.2877,8.33292,10.7656,8.80273,62.226,33.722,53.42,9.17225,23.2463,50.141,41.4606,-1.25879,9.78851,27.6033,21.2236,.451378,20.8636,29.7353,10.7239,13.4765,44.8685,56.3756,48.9632,29.874,30.7922,53.0642,27.8823,-3.55306,6.95579,-0.0315723,24.8093,21.8591,-10.3855,3.87039,3.62025,-4.28907,54.1167,64.2159,51.667,27.943,22.6849,16.5639,4.69597,-10.6288,-16.6268,1.91471,-14.3725,-24.8609,-20.8711,21.1096,17.0924,26.0239,55.6823,43.8484,37.9714,19.2444,17.3002,12.0824,-3.2906,-24.2067,7.72087,15.6176,33.2266,23.4676,42.1257,49.3575,43.5521,27.3189,46.6347,42.2989,52.1057,22.8267,16.8618,39.6348,48.3745,50.6465,27.1713,28.6999,34.3617,30.41,21.6543,47.2983,34.9917,18.0035,33.918,31.041,23.8697,7.8733,12.8499,31.1392,62.5752,42.7912,24.2198,23.9192,49.0268,34.8805,31.3547,34.4057,40.0189,24.8707,55.0381,72.8718,37.0004,7.48583,13.1509,45.0431,39.8585,20.9238,-0.4967,19.3185,31.6894,16.0844,9.1713,36.8588,24.2574,29.3772,43.2242,49.9052,28.5086,-0.456348,16.457,55.5277,46.7837,16.5867,6.75978,-2.98054,2.56936,-7.58312,18.3075,25.9089,27.7573,22.3656,40.051,42.3364,42.1133,-5.48068,31.2417,61.407,48.3639,20.5879,28.2746,13.2519,.638823,31.3026,30.13,41.9359,29.3124,9.53695,32.8837,36.1195,29.5648,10.1616,10.882,30.0714,38.2672,38.9763,16.7038,26.3306,20.0448,50.7605,31.2807,16.1517,28.0116,18.1936,36.441,16.0195,15.3079,6.96675,7.69151,24.228,70.1121,77.8375,74.1676,27.4205,16.0738,10.5507,10.9889,47.7973,49.3518,22.4986,46.6262,24.4552,15.2027,9.45859,-6.56659,-13.958,32.8402,59.1627,73.0339,49.7178,26.4778,32.1644,18.2198,27.7954,45.967,5.85869,-1.98281,6.53413,2.46437,14.0578,},{23.7357,24.5703,3.89131,13.9198,43.7721,88.4292,81.7491,73.7259,79.7327,53.6408,53.4849,37.7736,8.29641,14.6872,27.7867,29.8755,22.9172,33.439,36.9633,70.0288,45.5962,70.1835,32.9323,-4.15859,-45.2987,-17.2034,-1.66247,24.4226,81.5547,64.0281,25.57,18.8938,24.4084,31.2648,60.097,61.2169,29.3541,3.68947,-29.5185,-13.5682,-16.7881,-43.5087,-17.7947,2.68429,18.9523,33.6083,18.5792,11.0441,26.2002,73.3273,72.366,57.3578,-29.1438,-25.645,13.6962,26.3245,24.8037,-6.69907,-15.9072,-19.5761,40.1585,14.8102,50.0263,5.87068,26.7355,57.1975,54.4184,-7.24072,-1.03284,17.8493,14.5529,-35.3446,8.55019,12.7316,-9.63869,-22.8499,23.3066,46.7802,44.1746,30.4793,37.5147,65.1379,35.3897,-22.6914,-18.9099,-19.0431,16.3755,25.194,-37.6875,-4.08131,-15.7069,-33.1243,36.8408,53.85,48.428,32.6302,25.8836,14.9405,-1.21,-45.4877,-35.6013,12.0017,-8.88816,-29.8996,-57.1157,6.72138,9.16972,33.8835,58.4907,33.8242,35.891,24.2959,17.9102,-0.37322,-34.4789,-65.0007,1.49162,19.9427,48.8617,22.9389,32.2919,41.512,42.5598,44.8151,59.0056,49.9992,59.8777,29.1962,17.1695,20.3297,10.2215,32.2771,13.5357,21.2805,16.1465,8.79203,-17.3769,38.4205,32.0495,-2.38098,18.542,27.8318,7.26755,4.61977,2.28004,-5.9071,47.6098,38.0644,23.4168,23.3803,47.9013,13.0517,5.67685,31.1587,43.7916,9.32421,46.436,82.8792,44.9775,7.82408,-8.06684,17.4425,10.5271,6.01664,-13.7547,7.09157,15.0918,-12.7003,-22.8113,22.8676,25.7479,37.251,34.5295,44.2793,14.4068,-14.7984,-3.29394,31.2086,27.5365,1.68195,-10.707,-32.357,-29.3105,-41.6465,-17.3324,4.93143,29.1771,21.3595,27.823,41.0291,43.4006,-20.8889,20.9619,51.376,32.6571,10.442,11.5824,-1.69589,-12.6116,17.9218,8.99893,42.0129,24.7279,-22.8553,18.6678,34.5461,38.5642,13.8832,8.03892,34.9884,52.2499,36.2754,6.01909,14.4692,17.8333,54.0335,25.6625,13.3029,20.2324,8.26036,32.6817,24.7514,18.6398,6.21016,14.7828,25.2211,78.9553,91.778,79.8032,23.2288,23.6369,18.9326,9.64265,47.2768,52.1629,24.8053,47.965,19.4872,15.3547,11.9394,2.38067,-5.00158,41.1982,69.1615,89.3704,49.6615,23.8067,38.6449,3.11296,24.305,59.4847,-3.65335,-11.705,12.3279,8.81752,17.999,},{26.3047,26.2413,15.4985,18.4197,38.9956,76.5265,68.8587,65.2505,70.3415,62.6012,65.9724,52.1761,33.71,25.7708,31.8662,28.5995,27.0184,32.8624,32.8777,60.1242,39.4859,60.9852,36.617,17.3225,-1.59938,5.59337,20.1585,41.9567,80.3571,62.0399,27.0217,20.61,22.7847,30.9667,57.3095,49.7935,30.3046,18.4735,10.5935,12.0804,4.33743,-13.9632,20.2469,38.1004,50.5798,46.019,26.0976,10.03,25.8245,63.1196,61.2844,51.9936,9.10567,13.4761,23.9972,24.2969,26.5613,17.3943,22.5261,19.6026,64.317,35.8462,47.4023,9.45376,21.8647,53.8551,47.4117,9.36078,15.5072,31.1507,12.2546,-8.73387,23.7245,37.2796,21.3316,21.0799,45.9583,52.2155,43.1015,26.6661,31.9205,55.2202,33.2985,4.20777,2.73735,-9.43335,17.4415,29.676,4.5607,19.7325,13.5589,7.65197,52.3957,57.2334,45.1159,25.1346,19.8325,21.354,8.9392,-24.3115,-23.7013,12.4854,-0.716582,-8.51701,-16.7413,23.3431,16.2851,33.4422,56.269,41.5747,36.3926,17.798,16.0212,15.7464,-2.15533,-29.7082,.255119,22.3497,35.2528,29.4194,35.7227,47.7044,31.6762,29.449,46.4125,42.4205,53.8757,21.3057,15.3311,30.0794,27.2252,29.2578,19.1634,27.4897,35.0384,30.2606,16.848,40.4359,28.1679,14.2635,32.2158,32.6279,27.2548,8.43133,8.14362,14.0658,41.8114,35.8842,24.5087,28.9142,49.0079,35.937,21.9731,26.8795,35.8293,24.8683,53.2033,67.7229,37.1773,8.62015,-1.80381,25.8351,26.1014,21.6941,3.43072,26.479,33.3043,17.9112,1.47329,26.8203,22.5324,31.8686,42.5386,45.6894,27.0383,1.24493,.0766068,35.0867,37.8959,16.251,8.7168,4.45835,7.54732,-6.72425,2.96349,11.8088,25.6173,28.0172,40.1006,39.6983,39.9073,-10.1404,16.3732,42.7357,30.0272,11.6774,17.6556,10.9335,.300984,17.0148,17.2968,30.1007,19.3765,2.92677,26.1237,28.9482,26.1976,9.8444,10.7857,29.3403,40.2572,39.6394,20.4263,31.2482,26.4419,46.2556,24.5634,14.2606,27.9518,21.6815,44.2417,20.8025,16.9925,7.71552,15.3053,26.1749,69.2149,76.8514,72.83,35.823,27.9592,24.1538,15.1031,44.4636,57.5266,34.4229,51.6708,26.1099,20.1691,14.1279,2.92655,-2.41052,32.0672,54.7236,71.9659,53.5626,32.6247,34.0138,13.3546,29.367,56.3087,14.8166,7.96594,11.814,8.8111,17.3781,},{23.5692,21.5405,9.4557,12.9028,35.811,79.2327,72.9143,69.5852,74.3835,64.876,69.6342,53.7486,27.2528,16.43,23.0629,20.8712,23.395,29.1774,29.7069,60.0406,38.7673,62.0496,33.1587,8.72646,-9.83078,4.08672,20.4099,38.3367,79.2178,55.6351,18.1152,11.9026,20.1542,28.0503,58.9547,52.1196,32.0595,16.3401,3.31325,6.36263,6.15817,-16.4962,13.7061,33.9404,49.94,45.7111,21.798,7.60776,27.6589,68.0697,64.874,51.9916,4.46827,7.90815,22.4091,28.7687,31.4914,11.29,13.2125,10.7271,63.5755,37.5746,53.4981,8.68782,26.2562,57.2592,48.7513,4.92398,12.2126,28.6628,17.6956,-3.89748,22.2497,31.4597,11.5806,13.0597,47.66,57.2759,49.769,29.4764,36.2739,59.3999,33.8132,-0.83169,.977429,-6.14273,21.3034,26.288,-3.55743,9.96312,4.37147,-1.01692,56.0534,63.4426,52.3093,28.3221,24.4961,21.6206,8.40835,-21.6574,-25.7929,3.38278,-11.82,-18.6563,-21.983,20.3523,15.4133,29.5739,58.8695,47.5175,39.5532,19.5387,17.6148,16.3548,-4.069,-31.8692,-2.07904,13.7664,31.7204,23.3583,36.7891,47.5825,37.1365,29.1457,48.6381,46.908,55.1047,23.0779,16.7214,35.82,37.442,39.4122,21.894,29.5887,37.3518,30.8568,21.4216,49.0622,32.9162,14.8844,33.7736,33.5172,28.4026,8.79383,10.5939,21.7247,51.2168,37.1051,22.9415,27.381,47.9943,34.5811,29.1525,34.3649,40.2913,24.8493,53.8892,69.7296,37.7111,8.90623,4.11618,32.9892,30.0645,18.3307,-1.47807,22.4185,30.0725,14.8428,8.12472,37.2238,25.6679,30.9429,41.5819,46.3159,26.2103,-0.419663,7.16077,43.681,38.6377,12.6561,2.82777,-4.26213,1.87861,-8.56936,13.3625,21.5481,28.718,23.9542,36.7401,36.677,38.0443,-9.83299,24.0048,50.4573,37.6182,14.2844,18.9184,10.929,.540156,27.1323,27.059,38.4417,25.3238,4.51171,27.0457,29.9207,25.6158,9.58389,7.49991,27.1583,38.4142,36.503,18.1184,30.7977,26.3107,52.464,32.1143,17.1358,24.5724,16.3683,38.9655,15.6599,14.573,7.45526,11.7546,25.4284,70.8743,79.4304,75.4779,32.8626,22.874,16.7767,14.0747,46.7525,53.3438,29.1835,50.8316,26.0556,19.8109,14.0425,-0.0141393,-5.412,34.0243,58.8407,74.8623,53.8575,31.2614,33.8324,18.2009,34.1719,55.4118,13.7974,6.52085,12.8541,9.88021,18.491,},{-4.78733,-17.9501,-79.4033,-21.6165,90.5273,-33.8096,-6.40344,-165.651,-298.343,-79.0494,-203.906,-36.5887,89.3725,70.1887,60.8506,-49.9741,23.8395,90.9821,1.72845,-138.648,-76.1488,10.7376,52.9629,-12.7896,-138.879,-146.64,-82.0666,-110.015,-52.5693,51.3269,-14.7873,-27.4824,-36.0783,-219.613,-245.275,-140.264,-41.1656,140.703,-47.9441,-89.0826,-23.0877,-13.653,291.372,8.40901,-160,-215.292,39.037,23.6139,-204.474,-44.898,-50.9182,-15.1073,79.3985,60.0909,166.186,42.3326,-15.6187,26.8902,173.407,324.037,298.925,325.341,288.613,-159.188,-235.057,-13.7376,-89.7955,50.3271,133.12,110.297,62.0563,-84.0364,-38.8465,-39.0234,93.4423,311.04,403.862,436.316,523.436,93.3619,-174.543,1.92538,-214.024,104.349,71.449,-89.6362,-90.3725,-150.61,-213.196,-231.679,-33.857,206.414,428.955,478.951,512.102,107.459,-117.09,97.7615,-28.8796,18.9694,-228.653,-273.806,-249.535,-255.248,-408.823,-533.414,-318.527,1.55977,355.908,360.409,615.092,363.164,135.301,232.909,-97.1944,-340.443,-463.682,-329.035,-227.91,-344.688,-270.974,-336.579,-302.693,-165.168,66.1863,122.379,505.139,263.715,142.239,573.085,-5.72421,-304.601,-558.267,-404.93,-188.038,-182.118,-244.966,-308.732,-447.132,-409.26,-134.981,95.0473,169.549,225.793,59.6704,397.699,84.8905,162.899,-42.8371,-174.768,-328.792,-408.51,-405.53,-282.021,-99.3196,-50.5502,68.3282,-60.1378,-20.9827,122.831,1.04295,24.6654,-93.0958,157.707,.109934,-64.5336,-144.696,-322.872,-330.284,-212.387,-14.5016,165.866,54.3661,-150.127,-147.736,-37.1759,-55.3484,5.44035,73.743,168.03,99.41,-49.0598,-102.277,-161.344,-214.604,-230.949,-31.601,134.09,96.2975,-254.52,37.9677,-311.662,-37.1524,-107.267,-81.4652,26.2419,172.47,109.489,-30.98,-149.955,-180.646,-141.04,96.2035,26.3333,-144.043,-71.1285,28.5371,-191.111,-90.5064,-263.314,-211.799,-206.939,7.06345,144.267,27.9536,-68.357,-67.552,25.2397,156.748,-66.9515,86.2867,112.855,-132.96,-36.4749,-98.2515,-328.728,-164.769,-135.392,41.0172,-51.873,-62.3509,-136.156,-113.717,-108.099,-97.754,-77.8284,-18.7145,-1.3347,98.6651,-25.2474,-141.871,-287.685,-528.77,-420.316,-302.657,-200.933,-202.676,-121.722,-168.643,-142.718,-186.631,-214.797,-136.296,12.6869,9.8382,-49.8967,},{32.1329,26.1697,20.4038,22.9303,45.6457,91.1394,84.8699,81.187,80.5761,73.8464,82.9734,65.8159,39.7528,28.1239,31.885,24.0175,33.8262,36.0902,37.1428,70.1862,45.0586,66.4136,43.213,18.8978,3.79903,16.8244,35.8346,56.1232,90.6294,68.6073,26.1127,15.1003,22.0955,27.938,62.1306,51.7495,34.5196,25.3231,19.8382,11.3548,14.5242,-0.33506,34.8563,57.2672,77.2275,68.7288,33.2619,6.08975,25.9743,66.7752,63.422,49.6399,14.8083,19.6596,22.5668,28.258,32.819,22.1627,33.8314,36.7147,85.3693,54.9,58.6829,10.18,21.4591,56.752,48.1345,9.02323,15.1667,24.7367,15.0673,-2.5036,27.6772,45.0343,34.1746,33.1576,59.2528,65.7156,56.5042,29.8693,34.2706,58.2177,35.9598,.787251,-3.82993,-9.95304,16.4218,25.7504,18.5666,33.6515,22.1404,12.0565,61.8022,69.6367,56.8855,27.6405,21.8897,26.183,15.8802,-26.6111,-33.9262,-3.27033,-14.3377,-17.5123,-1.74076,32.688,16.8785,27.2141,58.9649,56.8726,44.4655,19.9357,17.3636,24.8488,5.75336,-23.1738,-8.95342,5.09992,18.387,25.804,43.5661,55.9979,27.8257,18.055,40.0285,49.8417,59.109,22.5331,17.4151,39.846,37.406,34.7916,19.436,29.5504,50.4041,50.1176,44.3288,54.8954,28.4279,9.54838,28.4794,29.9597,33.0582,9.3604,11.7234,24.5301,45.565,29.2643,16.1217,26.7155,58.0667,51.0992,37.8202,39.3272,39.3373,22.0526,42.3048,55.9027,29.1769,6.70955,3.81247,30.7123,27.1568,15.5739,-1.48523,34.6604,46.2115,36.3491,21.8447,46.6012,25.8885,24.9061,33.0014,36.1801,19.3421,-5.56196,6.3347,40.9054,33.9327,11.5685,10.4843,15.7395,22.1384,4.94745,25.2409,29.1682,27.3298,21.824,30.5104,25.3366,25.774,-17.4128,22.6821,47.3091,36.4499,16.4824,31.3536,31.373,15.4819,31.567,34.3123,40.4766,22.1524,3.01268,19.8589,21.4279,18.0824,1.93619,-2.24527,18.1437,34.6404,41.5992,37.4276,53.1906,39.3798,55.8577,38.5398,19.6417,17.081,8.55452,36.5117,6.27147,9.65648,6.20503,5.08635,17.0129,72.8057,88.0669,84.8087,42.2846,29.826,24.4134,20.6443,40.3307,48.2553,25.9317,47.3097,24.6146,21.1292,16.9929,-4.66213,-9.18876,34.0958,63.3847,83.1261,60.9375,36.2397,32.4923,20.329,36.2446,51.6037,16.7196,9.58109,15.1245,14.0665,19.2091,},{2.45164,-15.0759,204.811,66.6133,-110.71,-15.9211,231.886,137.258,118.041,-40.6765,-45.6169,-385.066,-79.0668,-5.64652,-69.1658,-117.038,57.5111,-156.422,-312.109,48.0591,70.9323,-34.8603,16.8863,-129.308,-1.09473,73.0164,-40.7213,-156.028,-248.118,-140.051,29.5459,-169.534,-55.1804,-75.388,80.3929,3.32873,-33.8256,10.4399,-17.348,-77.318,-33.5278,-74.7572,-17.2989,-24.1488,263.535,302.283,28.8505,-68.458,-24.2768,-125.941,-27.1352,263.544,553.892,170.524,-151.9,-154.045,-72.0161,18.2367,121.699,91.2774,192.529,350.854,245.792,100.18,59.1439,86.8745,290.252,241.25,-33.1816,-77.7936,-170.787,-29.3528,-103.624,8.63388,2.27471,-57.2576,72.5933,134.069,219.05,18.7752,84.568,-135.516,102.51,258.695,28.6545,-128.486,-260.547,-143.312,77.1906,-87.1746,-72.9823,-22.0611,87.2534,244.038,43.4691,-4.26221,-21.5744,-285.668,-268.699,-281.219,-48.2996,10.0278,-3.58331,-68.8852,-31.3589,-194.107,-169.778,-107.005,-257.809,171.189,-98.4068,-109.273,-164.832,-339.525,-360.655,-68.4633,-119.87,269.147,98.8971,25.3785,-356.303,-18.8212,131.748,-207.415,-339.445,-348.029,-319.593,-140.837,-167.499,-395.395,-135.178,-39.5781,-35.6303,-193.219,53.482,78.3214,291.904,239.687,.722458,31.7609,-61.6579,-160.283,-200.013,-191.759,-46.5322,-107.094,74.751,-29.2402,-115.053,-121.33,-46.4167,24.8642,.810627,41.3406,44.2896,120.715,-152.485,-165.332,-111.386,-93.4739,-6.12063,-67.8769,207.523,29.1778,-78.5634,52.1004,-185.334,-249.13,-103.74,-67.8693,89.1701,-120.097,-206.864,-45.8608,-225.845,87.841,-11.1055,20.845,146.465,75.2624,-47.6997,118.901,-2.37266,-36.9922,-217.385,-53.3804,42.7692,-267.932,-179.962,-26.1901,-361.886,103.725,-41.1208,-10.6317,87.1241,-146.934,88.8566,-41.0137,-6.69789,-11.9867,-53.2059,-300.238,47.7239,113.712,-243.828,101.592,-87.5494,148.456,-94.067,-2.13922,-0.0172791,196.615,215.426,142.923,135.717,-134.317,-207.568,.352704,181.098,-83.1794,-98.8183,-251.901,147.413,203.75,-32.5297,93.4875,139.679,183.957,74.7535,91.4435,68.881,33.2515,71.9027,-23.2414,-78.5725,-125.897,-80.4205,272.378,270.884,195.683,124.07,151.52,-8.26981,-44.349,-163.105,30.7555,260.708,166.047,7.89505,-24.3245,-112.251,127.01,274.772,152.688,220.028,121.086,},{21.3561,11.7478,-27.3188,-11.0913,26.6373,83.0584,78.6919,69.9828,76.9361,32.0298,25.0072,.646128,-24.5861,1.07829,17.483,22.401,18.6273,8.9328,10.9911,65.2432,48.4947,60.1,31.8984,3.03663,-55.5395,-38.1273,-20.4921,18.38,51.3856,51.2721,15.3901,8.43204,14.8441,17.7305,46.3191,58.0347,38.3265,23.7569,2.78871,-3.26596,-31.875,-43.6021,-6.11048,24.911,38.1602,56.2324,31.9391,6.68355,22.303,67.3595,66.9679,43.6648,-4.20593,9.04568,15.3026,-5.17332,5.65874,-8.37261,.326294,2.68701,28.417,34.5032,56.7414,2.22292,24.4517,43.4119,43.1098,13.975,21.0731,4.29234,-18.0102,-56.1661,-3.86084,7.40047,-11.3864,-21.418,15.8284,57.0459,54.9486,35.0543,38.4397,52.0032,52.3541,-14.741,-43.5128,-59.7107,-31.2504,.215645,-39.4981,-14.8249,-32.2928,-51.2978,15.5781,51.3121,59.4601,40.0747,26.6838,18.6269,27.3059,-69.6472,-84.3046,-15.6976,-2.89181,-28.2515,-71.8874,-36.1531,-36.3542,5.33362,39.5666,27.3782,45.3471,29.3299,18.7587,14.4186,-21.5219,-66.3649,-27.6479,17.4798,44.8003,30.6708,17.3944,7.77752,9.39647,26.5035,40.5165,58.6686,53.0651,32.1421,21.5318,18.0622,-14.556,-3.07072,9.57394,41.4831,44.2234,46.6025,-12.7776,13.2106,29.3015,-14.5866,6.06424,14.1599,-10.0445,-14.1137,-2.26104,-42.8993,6.07723,26.8066,15.2012,15.6823,52.2055,21.334,-9.97996,5.11461,18.2348,9.96158,26.4261,57.4259,17.5167,-12.3336,-34.6606,-16.2635,-8.81605,-5.75145,-34.5199,9.55605,10.9456,-5.29785,-52.3727,-20.3486,-2.72621,30.0362,29.662,31.2779,14.6884,-37.822,-26.9828,16.0226,25.2863,-8.20133,-19.0617,-24.3045,-24.3984,-56.869,-51.4836,-38.2983,-4.77917,3.58686,31.709,39.8955,38.0928,-58.1731,1.42212,40.258,21.5264,-13.9158,-3.24009,-13.6974,-22.8388,-15.1686,-29.3903,-9.94631,-33.2718,-79.5144,-12.988,.115114,11.8799,4.1333,-6.56685,25.46,42.102,32.5692,21.0177,35.7078,28.6772,47.8491,-0.691906,-34.7973,-22.5323,-12.7127,8.0691,14.6194,9.72007,5.68739,-0.71247,5.04243,73.4933,86.3856,75.3227,24.0817,28.5914,12.3115,-35.5691,-6.75296,19.3659,15.5123,41.6205,16.6565,16.9511,14.3197,-24.7642,-20.9608,43.4935,66.9213,102,66.1782,40.7839,34.8744,-29.028,-23.2428,31.2364,-7.79719,-19.4392,3.06268,6.65328,12.5117,},{-12.5041,-30.7033,-54.3828,-21.4899,54.8915,-71.4014,123.232,-168.226,-357.783,-158.295,-309.836,-226.127,-122.491,-168.772,-99.21,-92.0092,-9.35582,-4.41814,-130.617,-166.916,-31.1682,6.72756,-7.53246,-26.6058,-184.359,-209.374,-33.0656,-130.182,-228.01,-158.637,-119.844,-97.5926,-27.9051,-235.186,-151.039,-69.218,-11.5566,170.007,-28.4937,-128.909,-64.1218,12.3002,266.266,-38.625,-252.103,-429.746,-123.662,-73.2743,-207.741,16.2079,62.0211,-4.52591,73.6634,9.51555,39.6394,-26.6844,-81.0948,-43.5155,150.269,241.801,187.35,278.658,173.669,-254.375,-269.916,-10.806,-52.5212,18.1088,86.7,26.1345,82.7634,-2.07161,-29.4503,-47.4627,41.8489,225.961,292.722,263.087,523.255,35.9924,-208.663,-53.9958,-144.722,148.065,76.0562,41.3318,49.3371,-46.6575,-179.38,-200.107,-27.027,134.91,310.367,337.572,492.389,86.1123,-86.0888,203.627,109.429,146.913,-74.6109,-167.636,-170.842,-194.873,-388.566,-634.353,-541.711,-220.611,114.548,244.594,617.98,378.221,129.746,292.735,63.6473,-127.21,-305.437,-225.669,-160.882,-292.799,-294.394,-374.663,-391.773,-279.267,-63.5957,3.02919,414.262,274.415,137.985,583.107,155.102,-60.5647,-391.922,-275.347,-93.5408,-160.387,-247.733,-312.569,-485.94,-427.819,-254.959,-22.1969,89.7597,173.103,64.0122,487.04,270.992,250.873,22.2408,-112.832,-261.738,-336.983,-362.581,-272.043,-145.775,-111.209,-56.4115,-241.751,-127.949,83.6559,2.81801,161.921,102.001,341.904,155.126,77.0132,-12.8942,-151.368,-203.062,-147.25,-55.9716,55.7077,-2.97856,-213.732,-177.473,-32.6672,-89.5414,65.5497,187.145,288.307,237.479,85.675,43.4533,-29.1296,-137.55,-148.366,-36.1084,87.2736,15.075,-348.729,-8.57681,-365.375,-60.3077,-133.254,-6.55215,98.1663,217.882,147.058,14.7866,-96.6198,-155.28,-112.297,84.1288,-69.7698,-335.437,-187.451,-83.9309,-291.075,-115.708,-330.593,-174.931,-117.212,82.2505,207.157,114.965,-2.70558,-5.16453,51.5371,114.618,-210.629,-65.3726,-88.0193,-296.151,-72.9763,-106.7,-303.479,-160.897,-72.3143,142.788,81.1074,88.7523,7.36005,-66.2671,-85.7884,-130.156,-141.132,-213.258,-218.088,-59.2327,-70.6765,-130.782,-233.854,-473.373,-376.751,-272.508,-197.652,-107.608,-4.99089,-97.0083,-52.6692,-115.541,-190.437,-254.584,-136.36,-113.802,-66.3994,},{357.048,578.197,363.315,180.912,264.94,279.408,270.545,-152.854,172.031,71.2685,361.326,-450.093,-161.337,-163.824,28.4142,-117.564,320.299,66.7863,238.278,664.82,19.9885,128.697,358.404,174.082,222.466,588.341,-67.7718,-313.885,-381.109,-433.458,375.972,278.478,-146.027,238.296,447.114,-85.8648,168.93,14.1613,178.706,-139.576,119.537,383.551,275.547,291.996,53.9257,610.194,299.567,74.0084,262.459,280.435,-61.7523,19.2497,251.507,-244.742,-634.24,-653.863,79.5296,269.327,78.3577,-304.173,76.9464,479.884,202.965,225.615,791.626,71.6028,-8.57958,318.664,57.7523,-436.365,-220.048,-251.393,-397.608,186.161,-132.94,241.959,257.213,126.85,117.087,100.811,475.701,51.4165,420.11,45.3106,41.3739,-76.6044,-441.564,-593.364,-427.701,-157.455,123.015,37.2059,-153.752,154.332,236.979,24.7456,609.701,261.336,-179.429,-466.937,9.31817,-265.23,-241.099,-912.607,-763.133,-161.585,-133.293,-472.266,-413.645,149.623,97.2235,217.096,54.3762,-243.488,-187.968,392.388,113.025,385.155,154.999,-154.872,-814.227,-492.932,-12.8977,-487.284,-318.959,411.054,22.7203,289.589,-140.705,-922.227,-403.437,232.07,676.404,551.406,208.841,168.455,-193.082,-160.839,269.365,-63.6376,-1216.64,-162.531,-64.6093,-222.439,89.849,-758.418,-243.524,673.613,573.432,55.3349,546.895,594.529,240.893,154.814,-344.273,-564.343,-690.665,-321.859,324.445,-97.2458,26.045,-202.875,-171.9,-10.3763,-217.015,255.848,582.797,459.5,105.677,399.119,593.21,-108.899,-323.819,159.534,156.106,73.3537,99.9069,68.0896,-348.03,-341.548,-113.331,55.0425,79.0664,-306.462,-350.469,153.464,392.059,-358.552,10.5012,293.721,-185.649,103.901,44.0046,5.9671,-114.045,-295.931,151.41,-258.985,-34.1615,-107.973,-195.352,130.407,315.562,-16.2432,399.34,14.8045,-710.243,321.126,-144.543,30.036,24.5934,229.304,106.581,-109.795,177.436,-233.852,-696.237,-204.699,44.5945,-112.785,-400.888,-956.966,-294.516,143.055,-420.956,-714.536,-275.395,157.455,153.523,694.987,406.043,-12.1694,-275.673,-530.744,-610.719,-618.926,-1055.1,-425.086,-22.9652,122.923,-263.939,-630.292,-339.266,-353.02,103.283,12.0234,259.433,-175.234,-554.202,-896.536,-1308.97,-934.471,-667.625,-689.405,-444.758,-311.424,},{23.7935,21.4481,-1.96946,-4.25996,20.9124,68.2845,62.4643,61.5909,71.1014,59.0132,71.3726,56.5743,24.2681,7.16194,22.8412,19.228,23.5308,22.2904,13.3477,53.9295,27.5898,58.0597,24.8718,3.59824,-7.9126,-4.29541,7.7753,25.4819,71.6679,49.6107,11.3059,11.2894,11.9595,19.0303,53.4745,45.2453,28.1814,11.4335,4.8044,12.8,13.0439,-20.2116,10.3813,31.7946,42.8783,34.6032,12.9566,.400993,23.2806,64.7439,60.2338,52.5739,8.91156,17.3272,35.6641,41.5514,42.2088,12.7517,15.1983,1.17744,56.8001,29.1506,47.8906,.239959,23.0878,51.1924,42.9703,5.18452,16.8094,39.6433,29.6518,10.2876,30.7277,38.358,5.60927,11.9561,39.2859,52.0752,44.9042,30.8883,33.7343,58.0487,35.6657,5.25406,10.6742,5.91652,28.6451,25.4392,-1.15896,1.33711,.297763,-10.5353,48.0154,62.6293,55.7873,29.0043,21.7454,18.8345,10.777,-5.24369,-18.333,1.85949,-11.2916,-19.3657,-17.5096,23.3862,11.537,17.6167,47.903,47.6286,39.8021,20.2193,19.6988,16.7722,1.85537,-24.5089,2.78154,17.8799,35.6406,25.0032,46.8,47.867,37.7303,20.4541,52.9166,47.4928,55.2297,23.5066,20.0102,48.3101,55.1124,53.0141,30.9043,37.3793,40.8854,34.2614,26.0737,43.9854,29.6895,20.7461,47.5805,41.3506,32.2283,7.23021,15.2406,37.7193,68.1242,43.8781,21.4552,20.9131,46.2181,35.274,32.8693,28.2757,34.1971,27.8993,65.5463,78.7122,41.4309,6.06241,14.4002,47.9109,42.7393,20.3696,-5.99715,20.1274,32.1974,18.9331,7.5156,37.969,20.967,30.4663,48.0336,54.4881,35.702,-1.33511,17.3199,57.8543,49.2257,12.0649,2.11067,-5.1626,.59233,-12.2942,22.1552,32.6831,31.7257,24.8283,43.8693,42.3883,44.4652,-12.6659,31.1907,64.5315,47.7359,15.6961,20.5568,8.08379,-3.98969,32.7012,38.0122,46.2034,31.322,13.4866,35.5249,30.088,25.3906,4.05181,6.43376,22.4554,30.0799,31.6145,5.67368,24.3071,20.5877,55.7632,37.5393,19.5357,30.0644,19.4583,39.4218,13.0927,8.48611,.894276,1.21453,18.8967,66.5632,73.7753,74.6446,22.8727,8.85674,.891612,6.34948,51.47,55.0943,30.1192,53.7283,28.3232,16.8699,10.2129,-13.9209,-22.9486,26.7105,53.869,69.616,45.7267,18.3258,21.5919,14.8509,29.2109,46.6318,8.51535,-1.42765,2.44866,-2.10984,10.6259,},{-60.6568,-108.738,-185.697,-353.605,-501.511,-109.881,-222.524,-205.207,61.8238,74.5276,99.2086,-355.563,-370.21,-155.919,-158.001,-57.3119,-110.36,-436.743,-593.834,-391.352,-399.72,-531.618,-256.283,50.5198,154.39,63.3759,-142.282,-295.459,-767.194,-605.638,-114.474,99.1478,-263.749,-194.95,-334.434,-151.209,-351.074,-348.117,29.6892,-121.241,-346.401,-254.155,-283.249,11.5756,-313.104,432.605,-105.237,121.741,46.3574,-409.695,-183.505,91.7629,71.5663,62.7708,62.2139,-371.528,-464.816,-34.4558,30.9917,-69.2021,134.658,-349.403,-324.573,156.21,384.967,32.4753,255.796,423.764,200.073,-37.2732,-90.795,-233.103,-288.679,135.302,140.027,416.755,161.962,87.9396,-339.429,45.6609,328.886,39.16,276.535,720.57,410.491,273.073,-253.831,-640.253,-213.877,-30.7226,394.094,448.932,234.606,502.917,-56.1689,-121.498,354.337,372.275,210.073,296.5,386.062,262.819,38.8215,-446.17,-515.58,52.5368,152.859,666.73,173.122,502.511,-138.675,-127.951,53.5969,76.3681,288.403,299.05,321.256,429.596,-99.5986,-241.824,-250.277,3.63474,104.609,73.4844,-60.3565,199.675,225.298,54.2614,-12.622,-352.595,451.71,633.408,692.999,340.369,-159.895,-129.303,56.1716,22.0176,178.877,719.651,-22.2562,303.97,148.846,-14.9611,145.544,146.426,571.252,645.218,618.37,297.595,233.245,377.66,252.074,103.087,392.636,681.748,261.956,-20.2415,370.569,-151.59,154.08,387.146,519.003,333.38,25.5777,238.371,-10.5001,-154.339,-229.963,102.736,179.758,188.588,-26.4411,162.557,174.904,-19.9016,95.2101,521.105,524.333,122.791,-214.04,133.266,-97.1783,-538.407,-123.535,164.998,215.164,-151.995,-25.2749,385.578,-401.421,102.446,-164.874,50.1107,-126.373,-541.111,-260.752,-410.565,-321.463,-504.423,-150.162,-69.5327,95.4335,90.4588,-149.189,-256.901,-305.116,-16.3204,-220.435,-29.2581,-100.877,-31.8861,11.7969,-112.269,-141.99,-239.764,-334.043,-11.7895,-52.2835,114.346,-529.883,-320.95,95.8785,30.755,-379.087,-387.475,-203.204,38.1189,-330.734,-61.2281,-252.691,-321.411,-252.209,-475.908,-469.383,-384.854,-403.36,20.8118,-89.4894,-29.6469,-59.6148,-244.068,-295.314,-390.675,-222.058,366.897,553.445,183.231,-39.767,-340.278,-485.373,-162.506,181.816,-85.999,-164.786,-160.212,},{26.949,21.6445,16.4078,16.4322,36.2076,78.3176,74.7272,74.7714,82.3649,79.6251,82.1109,61.3386,34.2181,16.3839,20.9159,15.2092,27.3368,29.6957,30.7477,59.9263,36.4346,52.9283,28.9468,14.2087,7.53874,20.5172,38.1448,53.976,77.5162,53.0101,16.8913,9.7211,15.3096,19.3931,51.6188,43.7844,26.1084,18.0397,18.8791,16.2735,16.0262,.65361,35.0152,58.4238,78.4967,61.7299,22.5434,2.20462,19.9967,58.5099,54.6692,37.7343,15.0726,24.5172,25.5958,25.9779,31.8108,23.0072,34.3001,36.48,80.6888,53.7456,53.3543,6.77949,22.7093,51.7488,42.1496,9.69618,17.0286,26.8874,17.107,6.18134,26.2441,43.3304,28.3775,34.471,59.3761,63.6939,54.7612,29.3051,30.4934,53.4108,35.0648,6.73744,7.18028,-0.305496,16.2405,17.8101,10.4587,19.316,17.5094,11.128,62.8178,67.0739,56.5835,27.4371,22.7601,26.677,18.1957,-4.56894,-17.5041,-4.46579,-13.4699,-18.7783,-5.34864,23.2752,13.0454,19.3745,54.0955,56.3397,44.7041,19.9034,19.0872,29.578,22.0444,-1.8453,4.12129,13.3571,20.6271,22.6445,38.5774,52.0919,36.3593,20.8037,37.0103,45.6806,54.6399,22.4696,18.6492,46.5641,58.9327,49.7694,30.5042,31.632,44.6105,43.4668,41.0664,50.451,34.8256,23.1935,37.815,31.5387,33.3463,7.9192,15.7566,38.5382,60.6071,44.0054,23.2219,23.565,50.1918,46.2637,34.9722,34.1153,40.0421,32.7853,51.6003,60.7941,32.1813,5.35893,13.9604,49.4882,48.865,27.2506,3.12299,28.3821,37.1874,30.9097,20.5946,43.7992,24.8896,27.4782,45.463,46.5785,31.3384,-1.54227,16.7951,57.503,52.0891,20.53,14.6971,14.5755,25.0939,10.5904,28.5233,29.5,24.6517,20.4707,41.8745,38.8188,36.8174,-9.01131,30.4976,57.5103,50.4342,20.6348,33.0267,27.9833,14.6952,34.5473,33.6035,31.4448,22.3019,14.4665,31.1295,32.3409,19.6331,6.64821,7.90173,21.9723,28.7378,38.927,37.3158,48.3038,33.4713,48.0409,28.4595,15.0034,28.2786,21.3578,37.5428,4.77236,6.47196,7.89471,4.9972,25.5033,70.7437,75.1786,76.1753,37.1142,20.2092,12.5126,10.7784,45.8419,51.6405,27.1309,38.0822,19.9787,16.0046,13.0049,-4.4341,-5.38542,40.953,64.7521,78.9805,62.9803,43.0998,39.5806,31.7523,38.6212,46.1921,16.1629,10.0121,14.7767,12.5692,17.5453,},{-6.93106,-20.4455,-50.0286,-18.6491,53.3845,-59.9852,114.005,-159.463,-341.298,-138.116,-229.662,-193.503,-132.036,-171.88,-96.7032,-87.6212,-6.12837,15.0659,-120.665,-153.645,-56.7109,5.08694,-9.20697,5.43264,-145.796,-184.167,-42.3049,-115.506,-135.823,-113.71,-116.169,-97.9005,-29.0416,-216.986,-129.603,-64.6283,-8.31837,142.48,-47.8616,-104.903,-34.8046,17.1175,244.816,-16.0252,-238.808,-353.915,-97.3373,-81.239,-207.473,41.7242,41.0458,4.77263,64.0787,-11.359,-7.3791,-20.726,-80.03,-65.5727,120.859,234.139,193.837,226.838,198.182,-235.831,-252.765,9.72205,-54.5791,22.3905,70.348,.774155,35.6247,-1.80065,-26.4533,-61.5352,5.7427,192.283,273.334,236.735,455.479,25.7917,-186.542,-22.1625,-150.556,127.469,50.1301,8.98947,11.2779,-26.4837,-140.849,-202.344,-69.5859,96.1821,282.951,305.517,445.056,76.2241,-66.7397,212.08,117.012,129.821,-84.8618,-153.847,-170.497,-159.02,-354.298,-594.207,-500.854,-186.847,136.476,230.863,567.798,324.397,115.346,286.567,71.5634,-89.8572,-286.217,-245.913,-185.108,-256.991,-270.444,-359.855,-416.777,-281.865,-31.9834,11.0459,402.635,230.973,119.444,562.446,153.115,-81.3501,-396.876,-291.837,-132.645,-159.893,-238.773,-309.745,-479.435,-409.912,-242.097,-12.7444,89.5818,175.64,54.6882,457.412,238.226,216.892,-8.58965,-131.456,-287.421,-324.53,-360.283,-292.095,-177.178,-130.315,-44.587,-220.453,-126.73,89.8844,8.89505,157.682,86.9941,315.109,132.35,48.3828,-49.7127,-147.478,-202.59,-165.564,-96.563,23.2528,5.31414,-187.64,-154.63,-23.3488,-82.3386,91.6302,191.745,286.587,224.413,73.8316,24.37,-13.9901,-139.417,-169.658,-63.2904,70.3329,24.5235,-306.563,-13.7821,-323.109,-47.4388,-114.28,-4.44053,91.6369,197.184,130.734,-16.8419,-85.9252,-156.52,-123.811,59.1118,-77.1999,-314.812,-207.535,-73.6663,-265.128,-101.441,-294.67,-137.184,-107.574,90.3264,195.997,97.4144,2.56766,-0.321632,50.0646,122.8,-180.627,-68.1739,-110.307,-274.888,-86.4226,-105.102,-272.988,-120.6,-48.2021,133.823,83.2719,81.9489,38.9729,-30.2477,-67.0735,-118.214,-154.811,-215.033,-198.975,-65.1743,-84.934,-117.605,-226.296,-447.771,-342.521,-236.586,-159.031,-89.2882,20.0069,-73.5897,-73.5952,-110.661,-140.737,-230.836,-141.502,-115.962,-61.6253,},{75.8796,61.9469,80.1966,114.81,195.339,-294.827,-261,363.268,48.5829,498.362,62.6856,198.064,153.908,-38.976,-51.1956,-8.85549,159.264,503.359,323.992,-7.75048,261.661,244.844,133.085,-103.962,-139.115,-104.965,-48.487,128.096,32.9419,141.869,-344.824,-134.037,345.861,134.058,18.4731,-139.668,140.281,100.209,262.991,194.911,87.8599,199.86,700.19,196.213,318.346,-69.0053,78.4211,-177.316,-95.6812,208.452,158.809,-212.153,-70.3502,307.079,385.918,227.432,-54.4258,280.59,643.782,638.54,286.58,811.116,400.599,-197.364,-619.353,-195.62,-393.969,-303.88,-8.84874,196.601,186.567,-193.977,169.505,309.788,399.172,331.457,675.228,772.81,810.206,144.467,-398.237,-93.4302,-405.126,-230.716,-330.723,-377.257,-385.137,221.612,85.9562,83.3693,-119.401,192.456,434.021,248.406,766.997,238.009,-406.548,-209.357,-292.823,-216.683,-617.048,-567.836,-60.7331,78.9879,-104.505,-389.769,-316.87,-659.432,72.4156,59.6005,663.329,291.399,62.5982,188.025,-294.627,-517.485,-997.892,-583.573,-161.495,-85.9495,424.307,195.253,-157.151,33.4263,-92.8666,-309.992,23.1888,114.49,235.913,628.721,-493.078,-798.617,-823.925,-432.211,-6.89434,315.397,136.288,-214.752,-478.849,-508.999,113.12,-182.383,-339.801,-87.2759,15.6069,239.31,-480.142,-439.442,-426.93,-88.1069,-40.8115,-194.422,-519.616,-502.674,-416.05,-436.25,-163.468,-9.96455,-249.977,7.84839,-231.93,-136.329,-345.233,-241.582,70.9458,199.444,127.836,-127.906,-395.124,-288.21,-265.6,-183.181,-134.925,-284.756,-127.838,-218.269,-363.382,-447.838,-243.779,66.647,225.354,294.166,462.117,68.3975,-212.443,-221.932,-227.758,70.754,-65.7462,-526.065,-8.33379,-854.547,-134.919,-288.277,20.5352,208.584,275.161,619.357,593.796,92.7149,-58.2373,-8.44512,-73.4072,-79.8523,-106.685,-230.79,-196.27,-455.612,134.281,-293.984,-368.785,-65.4266,193.204,507.584,649.138,303.192,33.8256,-153.483,223.566,-246.926,238.211,198.049,-541.362,-6.15877,201.81,34.9394,1.77597,-35.1819,408.276,179.239,423.105,221.353,16.5195,-215.408,.669186,240.91,244.22,22.7234,143.669,47.8328,-52.1083,-10.2639,-87.9114,68.0402,169.796,161.1,85.4751,-125.981,16.303,345.957,520.916,-91.6026,-87.0198,206.951,118.773,115.508,},{-110.124,-170.049,-216.881,-209.481,-166.4,-361.962,-251.764,-125.864,53.0384,322.315,-88.8225,136.383,268.045,-5.41087,103.51,-7.6719,-92.9353,-122.56,-356.374,-278.028,-69.5456,196.402,-163.549,-294.725,-551.219,-716.901,229.508,186.177,-423.674,-123.803,-201.484,-127.449,-27.7538,-387.058,-433.749,-374.698,-373.884,203.16,611.158,10.2892,126.53,188.59,274.096,26.0342,-18.7973,-1027.57,-491.894,-133.262,-36.962,35.7852,5.588,-192.252,239.022,503.158,701.564,143.732,493.482,191.097,226.778,467.623,364.297,81.0179,89.5015,-423.528,-454.454,-42.789,-183.226,-337.187,281.234,314.425,316.532,278.854,459.275,134.351,443.813,89.4141,103.152,490.752,499.349,-100.17,-158.155,141.818,18.6668,70.1335,70.8502,62.5763,333.314,338.066,275.727,25.9618,-148.936,-157.855,-18.6113,86.2461,623.578,11.571,-356.864,-177.361,-11.4202,28.0192,-310.368,-360.991,-189.453,-50.7922,-229.73,-701.629,-817.095,-506.863,-345.499,-198.536,617.878,505.741,25.0973,36.182,46.8429,-639.308,-599.667,-233.289,77.4812,-76.0094,240.914,-72.3864,-350.853,-439.187,-461.685,-470.824,151.854,277.114,146.346,465.433,233.957,8.74472,-253.957,134.798,243.421,-261.084,-251.786,-325.999,-193.591,-492.397,-342.06,23.9186,179.971,325.783,5.33405,537.559,591.123,222.156,-209.949,88.5575,-191.789,-101.239,7.39369,70.3519,145.675,-247.549,-128.977,-289.124,-270.14,-240.561,-103.879,599.017,468.55,427.254,72.7673,36.9986,94.3612,195.333,373.124,467.423,226.244,162.626,-44.7892,-89.7993,-328.511,-211.134,19.69,-59.4853,329.441,383.827,150.91,-192.639,-95.3797,-40.3064,440.932,270.436,282.791,209.141,-131.353,-527.086,-245.767,-639.861,92.8593,-35.341,88.2152,54.3284,37.5465,-20.0131,-110.403,-406.897,117.82,364.637,358.347,40.6737,-352.494,-425.448,-214.571,-578.944,-236.51,-423.461,-453.149,-395.372,-278.572,-117.931,-226.275,-188.161,334.143,221.219,281.35,116.116,-64.8027,-626.321,-921.31,-349.463,2.10425,-146.841,124.353,7.1605,-1.90677,-316.136,-135.323,-262.809,-154.528,321.93,483.432,435.452,235.198,-450.438,-11.1909,-38.0613,-114.284,-329.372,-278.913,113.335,277.443,-41.4916,-278.74,-370.387,-122.538,457.987,507.975,-150.766,-130.739,-110.758,-63.3929,38.0251,}},weight[]={-644.027,1938.74,-2210.39,-2568.58,-187.198,-204.567,-151.495,-170.148,-2491.95,-155.113,1329.95,-119.455,-2494.9,5256.45,-181.791,3045.72,-133.739,-2315.46,-3289.36,-3085.9};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv);

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}
