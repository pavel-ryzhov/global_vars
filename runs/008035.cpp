#include <iostream>
#include <fstream>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <set>

using namespace std;

char image[200][1000];
bool c[200][1000];
int width = 0;
int height;

struct pixel_set{
    set<pair<int, int> > s;
    double xc, yc;
    int left, top, right, bottom;
    pixel_set()
    {
        xc = yc = right = bottom = 0;
        left = top = 1e9;
    }
    void add_pixel(int x, int y)
    {
        s.insert( make_pair(x, y) );
    }
    void merge(pixel_set &b)
    {
        for(set<pair<int, int> >::iterator it = b.s.begin(); it != b.s.end(); it++)
            s.insert(*it);
        calculate_info();
    }
    void calculate_info()
    {
        xc = yc = 0;
        for(set<pair<int, int> >::iterator i = s.begin(); i != s.end(); i++)
        {
            xc += i->first;
            yc += i->second;
            left = min(left, i->first);
            right = max(right, i->first);
            top = min(top, i->second);
            bottom = max(bottom, i->second);
        }
        xc /= s.size();
        yc /= s.size();
    }
};

struct digit{
    char mat[100][100];
    int width, height;

    digit(){memset(mat, 0, 100*100);}
    digit(pixel_set s)
    {
        memset(mat, 0, 100*100);
        width = s.right - s.left + 1;
        height = s.bottom - s.top + 1;
        for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
        {
            mat[it->first - s.left][it->second - s.top] = image[it->first][it->second];
        }
    }
    void print()
    {
        for(int i = 0; i < width; i++)
        {
            for(int j = 0; j < height; j++)
            {
                switch(mat[i][j])
                {
                    case 0: cout << '.'; break;
                    case 1: cout << '%'; break;
                    case 2: cout << '#'; break;
                    case 3: cout << '@'; break;
                }
            }
            cout << "\n";
        }
        cout << endl;
    }
};

int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dy[] = {1, -1, 0, 0, 1, 1, -1, -1};

bool check(int i, int j)
{
    return i >= 0 && i <= height && j >= 0 && j <= width;
}

void dfs(int i, int j, int min_color, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1 ;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(check(ni, nj) && image[ni][nj] >= min_color)
                dfs(ni, nj, min_color, cur_set);
        }
    }
}

bool inside(pixel_set s, double x, double y)
{
    return y >= s.top && y <= s.bottom;
}

bool can_merge(const pixel_set &a, const pixel_set &b)
{
    return inside(b, a.xc, a.yc) || inside(a, b.xc, b.yc);
}

void bfs_add(pixel_set &s, int len)
{
    queue<pair<int, int> > q;
    int dist[200][1000];
    memset(dist, 0x0f, 200*1000*4);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        dist[it->first][it->second] = 0;
        q.push(*it);
    }

    while(!q.empty())
    {
        pair<int, int> p = q.front();
        q.pop();
        if(dist[p.first][p.second] < len)
        {
            if(image[p.first][p.second] == 1)
            {
                bool bad = 0;
                for(int k = 0; k < 8; k++)
                {
                    int ni = p.first + dx[k];
                    int nj = p.second + dy[k];
                    if(check(ni, nj) && image[ni][nj] > 2)
                        if(s.s.find(make_pair(ni, nj)) == s.s.end())
                        {
                            bad = 1;
                            break;
                        }
                }

                if(!bad)
                    s.add_pixel(p.first, p.second);
            }
            for(int k = 0; k < 8; k++)
            {
                int ni = p.first + dx[k];
                int nj = p.second + dy[k];
                if(check(ni, nj) && image[ni][nj] == 1 && dist[ni][nj] > 100)
                {
                    q.push(make_pair(ni, nj));
                    dist[ni][nj] = dist[p.first][p.second] + 1;
                }
            }
        }
    }
    s.calculate_info();
}

void dfs_set(int i, int j, pixel_set &s, pixel_set &cur_set)
{
    if(!c[i][j])
    {
        c[i][j] = 1;
        cur_set.add_pixel(i, j);
        for(int k = 0; k < 8; k++)
        {
            int ni = i + dx[k];
            int nj = j + dy[k];
            if(s.s.find( make_pair(ni, nj)) != s.s.end() )
                dfs_set(ni, nj, s, cur_set);
        }
    }
}

pixel_set make_one_component(pixel_set &s)
{
    vector<pixel_set> sets;
    pixel_set cur;
    memset(c, 0, 200*1000);
    for(set<pair<int, int> >::iterator it = s.s.begin(); it != s.s.end(); it++)
    {
        int x = it->first;
        int y = it->second;
        if(!c[x][y])
        {
            dfs_set(x, y, s, cur);
            cur.calculate_info();
            if(cur.s.size() > 10)
                sets.push_back(cur);
            cur = pixel_set();
        }
    }
    if(sets.size() == 1)
        return sets[0];
    return sets[1];
}

vector<digit> split_image()
{
    vector<pixel_set> sets;
    vector<digit> res;

    pixel_set cur;

    for(int j = 0; j < width; j++)
        for(int i = 0; i < height; i++)
            if(image[i][j] >= 2 && !c[i][j])
            {
                dfs(i, j, 2, cur);
                cur.calculate_info();

                sets.push_back(cur);
                cur = pixel_set();
            }

    bool *merged = new bool[sets.size()];
    memset(merged, 0, sets.size());

    vector<pixel_set> blacks;
    for(size_t i = 0; i < sets.size(); i++)
        if(!merged[i])
        {
            cur = sets[i];
            for(size_t j = i+1; j < sets.size(); j++)
            {
                if(can_merge(cur, sets[j]))
                {
                    cur.merge(sets[j]);
                    merged[j] = 1;
                }
            }

            if(cur.s.size() > 10)
                blacks.push_back(cur);
            merged[i] = 1;
        }

    delete[] merged;

    for(size_t i = 0; i < blacks.size(); i++)
    {
        memset(c, 0, 200*1000);
        pixel_set s = blacks[i];
        bfs_add(s, 5);
        res.push_back(digit( make_one_component(s) ));
    }

    return res;
}

digit scale(digit d, int w, int h)
{
    digit res;
    res.width = w;
    res.height = h;

    for(int i = 0; i < w; i++)
        for(int j = 0; j < h; j++)
        {
            res.mat[i][j] = (d.mat[i*d.width/w][j*d.height/h] > 0 ? 3 : 0);
        }

  	for(int i = 0; i < d.width; i++)
        for(int j = 0; j < d.height; j++)
        {
            int ii = (double)i * w / d.width;
            int jj = (double)j * h / d.height;
            if(d.mat[i][j] == 3)
	            res.mat[ii][jj] = 3;
        }
    return res;
}

#define SIGMOID(x) (1.7159*tanh(0.66666667*x))

double a1[]={-0.141,
0.0487,-0.295,-0.205,-0.194,0.851,0.362,0.195,-0.0192,-0.0643,0.445,0.48,-0.235,0.00673,-0.0262,0.132,0.364,0.525,0.731,0.169,-0.0776,0.167,-0.201,-0.0438,-0.016,0.27,1.02,0.624,0.655,-0.143,-0.0398,0.181,0.464,0.235,0.35,-0.0696,-0.144,0.107,0.041,0.139,-0.374,-0.218,-0.272,-0.341,0.131,-0.445,-0.934,-0.528,-0.895,-0.635,0.929,0.532,-0.182,-0.09,-0.385,0.189,0.854,0.835,0.128,-0.246,0.419,0.262,0.536,-0.0258,0.0803,-0.169,-0.197,-0.119,-0.0588,-0.399,0.267,-0.12,-0.2,-0.392,-0.368,-0.354,0.325,0.409,0.52,0.454,-0.552,0.263,0.802,0.595,0.216,-0.623,-0.424,0.243,0.331,0.27,-0.468,-0.369,-0.155,0.00995,0.565,-0.288,-0.123,0.0828,0.0985,0.353};
double a2[]={0.353,
0.306,0.305,-0.176,0.267,-0.39,0.248,0.219,0.00389,0.0457,-0.344,0.147,-0.0616,-0.115,-0.231,-0.278,0.101,-0.286,-0.306,-0.264,-0.208,-0.216,-0.0772,-0.00133,-0.0149,-0.156,0.0239,-0.0729,-0.0148,-0.0364,-0.0916,0.0399,-0.00681,0.249,-0.0343,-0.103,-0.0178,0.0811,0.138,0.202,-0.265,0.0158,-0.201,-0.289,-0.241,-0.172,-0.353,0.203,-0.218,-0.226,0.325,0.209,0.249,-0.0628,0.00776,-0.145,0.579,0.256,0.303,0.000678,0.097,0.217,0.285,0.184,-0.0582,-0.478,0.00166,-0.333,-0.181,-0.515,-0.522,0.0175,0.105,-0.23,0.0167,0.122,0.371,-0.0243,-0.116,0.0834,0.0672,0.37,0.193,-0.0102,0.0156,-0.151,0.101,0.226,-0.133,-0.144,0.0471,-0.0928,-0.21,-0.329,-0.272,0.109,-0.284,-0.169,-0.198,-0.225,-0.154,-0.198,-0.131,-0.116,-0.11,-0.283,0.13,0.0762,0.214,0.29,-0.103,0.233,0.0167,-0.0146,0.2,0.136,0.119,0.00413,0.0893,-0.0569,-0.0948,0.15,-0.265,-0.121,0.0114,-0.275,0.0297,-0.136,-0.101,0.0977,0.211,-0.255,-0.0993,-0.24,-0.252,-0.181,-0.247,-0.0347,0.106,0.0593,-0.039,-0.137,-0.0248,0.00456,0.163,0.27,-0.159,-0.00659,0.133,0.296,-0.342,-0.312,-0.197,0.0293,0.0678,-0.116,0.0663,0.103,0.0234,-0.246,-0.165,0.193,0.163,-0.0116,0.213,-0.0472,0.354,-0.0415,-0.159,-0.0729,0.138,0.0477,0.0041,0.00768,-0.165,-0.457,-0.136,0.058,0.217,0.271,0.0887,0.0192,0.0571,-0.215,-0.325,-0.18,-0.0749,0.459,0.283,-0.0171,-0.0189,0.177,0.146,0.0767,0.115,0.131,-0.054,0.156,-0.124,-0.138,-0.0763,-0.139,-0.233,0.0255,-0.0033,0.0489,0.00153,-0.0918,-0.146,-0.181,0.0599,-0.087,-0.0884,-0.0317,0.12,0.245,-0.199,-0.132,0.0498,0.182,0.114,0.319,-0.188,0.118,0.194,-0.101,-0.0152,-0.219,0.0968,-0.0482,-0.0933,0.00102,-0.0756,-0.0171,-0.0673,-0.222,-0.17,0.0101,0.0174,-0.218,0.0572,-0.216,0.0397,-0.127,-0.108,-0.032,-0.358,-0.161,-0.319,0.14,-0.181,-0.0519,-0.275,-0.175,-0.0529,0.134,-0.0398,-0.231,-0.143,-0.0231,0.324,-0.13,-0.111,-0.0942,0.0728,0.182,-0.136,-0.164,-0.0098,0.0905,0.346,-0.0933,-0.263,0.22,0.11,-0.336,-0.0825,-0.101,0.13,0.313,0.518,-0.271,-0.0971,0.101,0.32,-0.0349,0.0266,-0.134,0.21,0.00178,0.388,0.0419,0.019,0.0488,0.227,0.112,-0.0262,-0.014,0.0877,0.126,-0.18,-0.0648,0.355,0.173,-0.0674,0.32,-0.0964,0.101,0.143,0.0872,0.132,-0.0334,-0.0155,0.039,0.118,0.255,7.53e-005,-0.363,-0.118,-0.018,0.14,0.242,-0.153,-0.295,-0.453,0.0279,-0.195,0.0504,0.0656,0.0425,0.0577,-0.103,0.0909,0.175,-0.0358,-0.0556,-0.104,0.177,0.0921,0.0877,-0.165,-0.478,-0.118,0.0731,0.204,-0.0364,0.249,-0.242,-0.112,0.135,-0.0789,0.0473,-0.108,0.326,-0.18,-0.00906,-0.117,-0.0567,0.217,0.19,0.177,-0.0637,0.0275,-0.0761,-0.0455,0.136,-0.168,-0.103,-0.112,0.189,0.109,0.104,-0.219,-0.141,0.00895,0.153,-0.0238,0.225,-0.163,0.0026,0.0252,-0.14,0.2,0.357,-0.212,0.137,-0.119,0.168,0.224,0.0065,0.111,-0.154,0.0422,0.258,0.348,-0.2,0.125,-0.145,-0.174,0.185,-0.452,-0.387,0.206,0.237,0.147,0.0964,0.0428,-0.221,-0.0792,0.188,0.225,0.0654,0.0507,-0.0902,-0.362,0.17,-0.0565,-0.139,0.0465,-0.0427,-0.375,-0.036,0.158,0.156,0.00461,-0.421,0.0254,0.24,0.0786,-0.0626,0.0125,-0.234,0.0642,0.0514,0.132,-0.0566,0.157,-0.187,-0.332,-0.182,0.355,0.1,0.0471,0.0968,-0.0686,-0.0364,-0.0445,-0.111,-0.306,-0.0956,-0.869,-0.0792,0.123,0.175,0.038,0.166,0.152,-0.265,0.185,0.332,0.104,0.13,0.0291,-0.347,-0.229,0.234,-0.101,0.034,-0.0351,-0.198,-0.116,-0.0608,0.0358,-0.0108,-0.0112,0.0662,0.143,0.00716,0.241,0.0879,0.246,-0.194,0.169,0.184,0.0949,0.0844,-0.0247,-0.254,-0.0913,0.0295,0.217,0.207,0.116,-0.188,-0.147,-0.241,0.0624,0.0966,-0.00663,-0.261,0.213,
-0.0352,0.0986,-0.102,0.0722,0.15,0.0345,0.0478,0.106,0.352,0.254,-0.0173,-0.133,-0.0522,0.0029,0.126,-0.155,-0.247,-0.149,-0.156,-0.0621,0.173,-0.232,-0.353,-0.0058,-0.279,-0.0188,-0.148,-0.377,-0.292,-0.0819,-0.114,0.184,0.101,-0.0568,-0.037,-0.0787,0.248,0.128,0.468,0.19,-0.399,0.0178,-0.00362,-0.311,0.148,-0.0165,-0.113,-0.16,0.0524,0.136,0.125,-0.00257,-0.166,-0.178,-0.112,0.0319,-0.177,0.123,-0.171,0.0341,-0.0397,0.0795,0.0153,0.315,0.389,0.194,-0.157,-0.15,-0.146,-0.0904,0.0106,-0.105,-0.0332,-0.145,0.114,-0.0888,-0.228,-0.161,0.0458,0.0113,-0.0979,-0.0287,-0.0447,-0.171,0.0324,-0.0193,0.043,0.158,0.361,0.113,-0.0311,-0.105,-0.0792,-0.153,0.234,-0.222,0.0253,-0.105,0.104,-0.116,0.367,0.186,-0.0493,-0.00336,0.0903,0.198,-0.206,-0.213,0.112,0.0275,0.341,0.12,-0.0377,-0.0594,-0.0313,0.0752,0.091,-0.0866,-0.0924,-0.0143,-0.369,0.184,-0.0244,-0.187,0.325,0.239,-0.098,-0.134,0.136,0.0492,0.0237,-0.00519,-0.0684,0.0384,-0.0313,0.0303,-0.0611,-0.00802,-0.0508,0.041,0.0158,-0.195,0.158,0.096,-0.0695,0.237,0.198,0.0421,-0.123,0.441,0.469,0.0966,0.0118,0.217,0.404,-0.0145,0.0717,-0.0663,0.047,-0.0646,0.365,0.155,-0.238,-0.179,-0.00617,0.189,-0.0863,-0.0986,-0.21,0.138,0.183,0.119,-0.094,-0.0806,0.482,0.263,-0.137,0.243,0.106,0.311,-0.0226,-0.25,-0.00745,-0.096,0.221,0.169,-0.156,0.0186,0.0439,0.0711,0.0342,-0.0917,-0.136,-0.202,-0.0791,-0.0398,0.206,0.0667,-0.0625,0.387,0.0486,0.155,-0.0987,0.0484,0.112,-0.00512,-0.0185,-0.00698,0.0455,0.0146,-0.14,0.00955,-0.231,0.0268,-0.101,-0.291,-0.123,0.0216,-0.0534,-0.0175,-0.334,-0.0938,-0.0498,0.205,0.279,0.0845,0.0639,-0.148,-0.186,-0.18,0.214,-0.127,0.105,0.0757,0.139,0.0254,0.0176,-0.0973,0.0554,-0.0123,-0.277,0.079,-0.142,-0.291,-0.00698,0.281,0.041,-0.0285,0.166,0.624,0.376,-0.0272,0.0291,-0.274,-0.189,0.353,0.124,0.0871,-0.196,-0.133,0.0239,0.0202,-0.0215,0.114,0.0175,-0.343,-0.000793,-0.242,-0.0694,0.0808,-0.0954,-0.36,-0.0848,-0.0536,0.262,0.157,0.201,-0.0617,-0.49,-0.521,0.277,0.00597,0.117,-0.00196,-0.051,0.168,0.208,0.141,-0.181,-0.29,-0.0662,0.0461,-0.114,-0.15,-0.46,0.205,-0.252,0.0346,0.0671,-0.0451,-0.235,-0.0342,0.0976,0.239,0.182,0.0659,-0.145,0.0505,-0.0861,-0.0615,0.0136,0.112,-0.0774,-0.114,-0.18,0.0376,0.182,-0.0595,-0.0215,-0.136,0.611,0.0463,-0.0416,0.0032,-0.251,-0.0772,-0.0538,0.263,0.314,0.105,-0.258,0.0917,0.0169,-0.0402,0.197,-0.0143,-0.28,0.0476,0.156,-0.117,-0.146,0.142,-0.0267,0.067,-0.141,-0.0145,-0.195,0.0412,-0.0229,-0.707,-0.372,0.0943,0.0866,0.188,0.0547,0.0946,-0.0612,0.184,0.126,0.0825,0.126,-0.213,-0.113,0.1,0.0416,0.123,0.253,0.121,-0.117,-0.151,0.127,0.153,0.21,-0.114,-0.118,0.0349,0.089,0.164,0.535,0.448,-0.158,-0.111,-0.00473,0.0315,0.128,-0.26,-0.00698,0.104,-0.00659,-0.0775,0.0833,-0.0988,-0.022,0.00481,0.114,-0.00129,-0.038,0.0332,-0.0266,-0.28,-0.11,-0.175,0.151,0.139,0.342,-0.194,-0.285,-0.000185,-0.102,-0.204,-0.246,-0.115,-0.0693,-0.0253,0.0854,-0.0662,-0.0681,0.394,0.318,0.00188,-0.0137,0.162,0.131,0.0646,0.264,0.161,-0.129,0.0874,0.174,0.276,0.00344,0.125,-0.113,-0.237,0.2,0.00864,-0.126,-0.253,-0.248,-0.00286,-0.302,0.147,-0.0338,-0.0409,-0.181,0.366,-0.193,0.231,0.238,-0.369,-0.036,0.0289,0.205,0.228,0.36,-0.349,0.0303,-0.0698,0.036,-0.0525,-0.117,-0.461,-0.0644,-0.153,-0.0773,-0.271,-0.0168,0.138,-0.121,0.0563,0.0532,0.0752,0.111,0.482,0.11,0.0101,0.09,0.0483,0.369,0.0225,-0.27,-0.0509,0.103,0.204,0.196,-0.36,-0.325,-0.0439,-0.077,-0.389,0.117,-0.0428,-0.121,0.242,-0.166,0.24,0.0491,0.437,-0.0475,0.235,
0.192,0.207,0.173,0.232,-0.238,0.11,0.251,-0.0969,-0.034,0.351,0.0817,0.0395,0.231,-0.0167,-0.193,-0.0224,-0.142,-0.14,-0.175,-0.0033,0.193,-0.388,-0.366,-0.342,-0.127,-0.176,0.0787,0.13,-0.0267,-0.128,0.0689,-0.0425,-0.149,0.16,0.134,0.422,0.184,0.203,0.171,-0.209,-0.101,0.0388,-0.134,0.205,0.00293,-0.126,0.00634,-0.13,0.0493,0.3,0.432,0.143,0.153,-0.136,-0.0259,0.448,0.157,0.13,0.0622,0.25,0.344,0.17,0.155,0.162,-0.154,-0.113,-0.023,-0.0905,0.0339,-0.0457,0.129,-0.0684,-0.252,-0.323,0.0152,0.0766,-0.0872,-0.115,0.0487,0.099,0.271,0.0173,-0.237,0.182,0.228,0.212,-0.0828,0.145,0.158,-0.0621,-0.0568,-0.241,-0.0509,0.125,-0.13,-0.246,-0.108,-0.224,-0.0317,-0.262,0.023,0.0233,0.0839,0.087,0.111,-0.0207,-0.0685,0.0699,0.117,0.32,0.00397,0.0502,-0.128,0.069,-0.165,-0.00296,0.209,-0.111,-0.00163,-0.0883,0.0306,-0.00929,-0.00306,0.0222,-0.113,0.00227,0.0383,0.178,-0.116,-0.0211,0.0731,-0.0163,0.112,0.0944,0.256,-0.0386,-0.0773,0.00964,0.0236,0.16,0.068,0.0552,-0.0838,-0.113,-0.114,0.205,0.168,-0.0868,-0.261,-0.475,-0.00679,0.324,0.169,0.298,0.204,-0.146,-0.0922,-0.0766,0.209,0.366,-0.0915,0.0367,-0.0678,0.0957,0.0301,0.0206,0.284,-0.135,0.13,-0.0583,0.00976,0.02,0.0803,0.0206,0.176,0.196,0.073,0.233,0.171,0.118,-0.299,0.169,0.0942,0.198,0.35,0.0811,-0.0794,0.129,0.0182,0.025,0.206,0.0789,-0.0161,-0.135,-0.305,0.24,0.114,0.262,-0.236,-0.26,0.0603,-0.0168,-0.0723,-0.321,-0.398,-0.273,0.0322,0.0453,0.181,-0.198,0.0262,-0.143,0.0606,0.0779,0.0201,0.00778,0.274,0.00208,0.188,-0.187,0.767,0.277,0.0902,0.0796,-0.118,0.109,-0.119,-0.225,0.182,0.434,-0.102,0.436,0.107,0.0296,-0.464,0.0864,0.0477,0.11,0.138,-0.0788,-0.175,0.0197,0.19,-0.00173,0.103,0.0873,-0.296,-0.0932,0.217,-0.102,-0.436,-0.353,-0.156,-0.161,0.0496,-0.141,0.118,0.131,-0.14,-0.187,-0.192,-0.0408,-0.106,-0.00605,-0.0169,0.158,0.0554,0.101,0.0923,-0.114,0.326,0.148,0.0244,-0.105,-0.293,-0.0616,-0.247,0.0564,0.153,-0.0451,0.116,-0.00679,0.0507,-0.201,-0.248,-0.184,-0.124,-0.12,-0.036,0.182,-0.0434,-0.0721,-0.259,0.0107,0.0582,0.0843,-0.0473,-0.136,-0.218,-0.266,-0.0619,-0.128,0.0178,-0.251,0.0574,-0.101,-0.0498,0.0254,0.039,0.159,-0.135,0.0705,-0.117,0.0336,0.0878,-0.124,-0.0769,0.0427,0.171,0.192,0.408,0.118,0.271,0.44,0.0541,0.16,-0.0934,-0.099,-0.0317,-0.169,0.106,-0.0479,0.224,-0.0229,-0.159,0.186,0.256,-0.0256,0.0637,0.0885,-0.0152,-0.0248,0.108,0.00778,-0.202,-0.324,-0.39,-0.231,-0.419,-0.178,-0.0877,-0.133,-0.089,-0.137,-0.0673,0.00573,-0.225,0.116,0.348,0.144,-0.00656,0.117,-0.105,0.149,0.315,0.0837,0.198,0.0625,-0.134,-0.291,0.131,0.219,0.000561,-0.0262,-0.0303,-0.165,-0.163,-0.295,-0.279,-0.119,-0.325,-0.47,-0.105,0.118,0.13,-0.179,-0.313,-0.192,-0.0545,0.242,-0.112,0.0341,0.131,-0.0757,0.217,0.0424,0.0061,0.355,0.411,-0.205,-0.224,-0.235,-0.0402,-0.235,0.0236,-0.133,-0.126,-0.135,0.245,0.0471,-0.202,0.0941,-0.114,-0.0249,0.135,0.0166,0.214,0.398,0.128,-0.0164,0.482,0.407,0.118,0.192,-0.145,-0.115,-0.027,-0.0167,0.064,0.21,0.151,0.0267,0.136,0.0738,0.062,0.0235,0.061,0.0889,-0.037,0.0392,-0.273,-0.0232,0.211,0.0128,0.141,0.0878,-0.158,-0.0761,0.125,-0.337,-0.432,-0.339,0.0298,0.0485,-0.134,-0.372,-0.225,-0.248,0.0192,0.0616,-0.41,-0.0799,-0.0773,0.0411,0.0571,-0.25,0.082,0.0561,0.119,0.206,0.0943,0.0362,0.305,0.274,-0.4,-0.218,-0.00999,0.00351,0.283,0.701,-0.129,-0.0158,0.145,-0.232,-0.0437,-0.0263,-0.116,0.275,-0.147,-0.138,-0.148,0.151,0.0471,0.052,-0.0406,0.148,0.158,0.000857,0.00136,0.249,
0.295,0.159,0.154,0.173,0.0337,0.125,0.163,-0.22,0.0296,0.0701,0.171,0.0984,-0.0252,0.0224,-0.173,0.0238,-0.133,-0.0985,-0.0284,0.0731,0.269,0.0459,0.128,-0.0856,0.405,0.309,0.0249,0.125,0.133,-0.00957,0.214,-0.111,0.175,-0.00344,-0.0296,0.113,0.0352,-0.0436,-0.118,-0.201,-0.0641,-0.0608,0.0522,0.15,0.2,-0.163,0.00675,-0.338,-0.192,0.619,0.642,0.311,0.428,0.496,0.0876,0.34,-0.0267,-0.00927,-0.126,-0.146,0.0268,0.0138,-0.264,0.0589,-0.152,-0.0596,-0.00878,-0.313,-0.159,0.127,-0.195,-0.184,0.0233,-0.0438,0.248,0.148,0.0385,0.114,0.00127,-0.173,0.0313,-0.0873,-0.201,-0.172,-0.266,0.0272,-0.241,-0.181,0.112,0.184,-0.418,-0.177,-0.226,-0.088,0.126,-0.085,-0.00225,-0.0587,-0.244,-0.0214,0.14,0.215,0.195,-0.0112,0.00183,-0.106,-0.169,0.13,0.0761,0.0699,0.0152,-0.129,0.14,0.175,0.0859,-0.0434,0.169,0.125,0.219,0.111,-0.0525,-0.0593,-0.0526,0.0468,0.0776,0.0602,0.0681,-0.00467,-0.275,-0.397,-0.0223,-0.00486,-0.141,0.0599,0.0493,-0.0589,-0.0888,-0.0988,-0.0678,0.204,0.0613,-0.2,0.113,0.0944,0.222,0.00612,0.183,0.0121,0.0135,-0.11,0.12,-0.0544,0.238,0.0387,-0.176,-0.0988,0.122,0.242,0.13,0.138,-0.0501,-0.0866,-0.0303,-0.131,0.21,0.0165,0.166,0.165,0.195,0.0202,-0.127,0.258,0.205,-0.0516,0.053,0.103,0.22,-0.0419,-0.157,-0.327,0.0218,0.0977,0.0453,-0.000698,0.0497,-0.0253,0.0585,-0.04,0.158,0.0233,0.0926,0.0795,0.181,0.0521,-0.0139,0.277,0.332,0.0381,-0.0571,0.00803,-0.00773,-0.0846,0.223,0.201,0.184,-0.0756,-0.0336,0.00855,-0.149,0.0851,-0.128,0.225,0.164,-0.046,-0.0395,0.0647,0.137,-0.0381,-0.0493,-0.19,0.147,-0.0489,0.0266,-0.328,-0.0621,-0.137,-0.0955,0.14,0.0377,-0.219,0.292,-0.0486,-0.177,-0.237,0.121,0.117,0.0977,0.138,-0.067,-0.179,-0.183,0.148,0.203,-0.00834,-0.235,0.286,0.156,0.153,0.346,0.0405,-0.0823,-0.0871,0.00995,0.388,0.0678,-0.0609,0.076,0.109,0.293,-0.0415,-0.0748,0.0326,0.235,-0.0577,-0.0557,-0.0301,0.239,-0.0246,-0.106,-0.287,0.325,0.176,-0.0606,0.00878,0.0224,-0.117,0.0958,0.189,0.408,0.168,0.36,-0.0331,0.0689,0.0934,0.251,0.187,0.209,0.0851,-0.121,-0.265,0.0693,0.0229,0.0877,-0.162,-0.238,0.0223,0.0288,-0.0353,-0.273,0.292,0.0155,0.148,-0.113,-0.0208,-0.288,-0.0282,-0.00711,0.128,-0.0245,-0.0733,0.0184,0.0321,0.333,0.0838,-0.0197,-0.231,-0.0614,0.0585,0.225,-0.00331,0.168,0.396,0.271,0.327,0.422,0.203,-0.219,-0.0875,-0.0748,-0.134,0.335,0.111,-0.167,-0.00433,0.0221,0.0653,0.191,0.223,0.016,-0.0464,-0.144,0.0119,-0.0799,-0.213,-0.211,0.0748,0.0301,-0.15,-0.382,0.656,0.212,0.2,-0.093,-0.317,-0.469,-0.159,-0.145,0.124,-0.138,-0.186,-0.181,-0.0614,0.254,-0.0386,-0.248,-0.0174,0.0391,0.113,0.0578,0.149,0.12,-0.171,-0.0516,0.337,0.247,0.284,0.00776,-0.193,-0.0671,-0.318,0.19,-0.3,0.0747,-0.177,0.189,-0.258,-0.107,-0.0813,-0.0311,-0.143,-0.142,-0.0493,-0.0937,0.0575,-0.0323,0.151,-0.0579,0.0813,0.19,-0.408,-0.00911,0.158,0.0462,-0.12,0.0912,0.0227,-0.245,0.0594,-0.0558,0.142,-0.0833,-0.173,-0.0962,0.00449,0.0875,-0.0404,-0.138,-0.0713,0.11,-0.00604,0.217,0.271,-0.438,-0.121,-0.0992,0.185,-0.126,-0.173,0.1,0.121,-0.0799,0.175,0.163,0.178,0.0897,-0.101,0.172,-0.0334,0.0409,0.295,-0.354,-0.219,0.207,0.0833,-0.181,0.169,-2.53e-005,-0.143,0.188,-0.155,0.0435,0.269,0.0554,0.111,0.371,-0.292,-0.0597,-0.0447,0.196,0.127,0.0156,-0.204,0.0149,-0.0469,0.136,-0.141,0.0454,0.00118,-0.0781,0.0937,0.0864,-0.238,-0.118,0.0221,0.0279,0.191,0.11,0.31,0.209,-0.0719,-0.0992,0.156,0.145,0.364,0.119,-0.197,-0.279,0.0936,0.223,0.151,0.144,-0.0474,-0.21,0.341,0.166,0.00962,-0.069,0.0334,-0.0317};
double a3[]={-0.00723,
-0.0907,-0.00876,-0.25,-0.135,0.28,-0.000838,-0.242,-0.0393,0.346,0.155,-0.242,-0.257,0.0764,-0.178,0.0651,0.114,0.196,0.0298,0.184,-0.284,0.158,-0.275,-0.0371,-0.0925,0.24,0.0895,-0.194,-0.119,-0.0945,0.251,0.0347,-0.0826,-0.0976,0.248,0.31,0.0302,-0.161,0.167,-0.0257,0.29,0.193,0.207,0.00539,0.158,0.207,0.0991,0.0678,0.536,0.254,0.199,-0.17,0.122,0.0507,0.283,0.0447,0.129,0.382,0.123,0.0179,0.0506,0.143,0.00648,-0.248,-0.0888,-0.0161,-0.0152,-0.25,0.0503,0.0322,-0.224,-0.291,-0.408,-0.208,-0.318,0.0214,0.0279,-0.222,-0.218,0.0856,-0.0493,-0.0618,0.0534,0.0227,-0.61,-0.285,0.294,-0.00464,-0.0468,0.0344,-0.0222,0.119,-0.133,0.0128,0.0757,0.173,0.705,0.248,0.059,-0.028,0.0855,0.074,-0.0769,-0.175,0.0567,0.0869,-0.308,-0.246,0.275,-0.000543,-0.131,-0.151,-0.0422,-0.0516,-0.265,0.136,0.231,-0.0717,-0.131,-0.145,-0.448,-0.109,0.169,-0.0546,0.0912,-0.0889,-0.0602,0.153,0.256,-0.0268,0.0852,0.0738,-0.317,0.0575,0.045,-0.104,0.0892,-0.0655,-0.0277,0.00774,0.327,-0.128,-0.0121,-0.053,0.292,0.113,-0.456,-0.112,0.121,-0.266,-0.0104,-0.157,0.125,-0.0291,0.19,-0.0738,-0.0838,-0.322,0.0148,0.146,0.22,-0.102,0.15,-0.147,0.0187,0.43,0.261,0.11,0.154,0.148,-0.513,0.319,0.103,0.0554,0.184,0.0389,0.061,-0.0149,0.266,-0.104,-0.696,-0.133,-0.149,-0.0767,0.131,-0.122,-0.0776,0.0713,0.266,0.081,-0.00474,0.235,0.0573,-0.00851,0.0317,0.0128,0.168,0.221,-0.106,0.0276,0.325,-0.0182,-0.0584,0.173,-0.0527,0.164,-0.274,-0.0501,0.113,-0.159,-0.00398,0.0471,0.164,0.0909,-0.251,-0.322,-0.753,0.122,0.327,-0.243,0.197,-0.0946,0.051,0.044,-0.0716,0.0577,0.154,0.175,0.17,0.0315,0.14,0.0439,0.276,0.0926,0.138,-0.0388,-0.049,0.324,0.101,-0.466,-0.00654,-0.156,0.0881,-0.196,0.301,-0.0916,0.0258,0.0544,-0.562,-0.101,0.465,-0.277,-0.239,-0.0674,0.454,-0.195,0.0937,-0.0322,-0.324,0.039,0.0709,-0.258,0.103,-0.118,0.0801,-0.0512,-0.0543,-0.0742,-0.0572,0.122,0.11,0.328,0.146,0.263,-0.242,0.17,0.0774,0.295,-0.0507,0.0424,0.223,0.154,0.388,-0.124,0.299,0.0512,0.126,-0.23,0.367,-0.0445,0.336,0.172,0.149,0.109,0.0506,0.0377,0.389,-0.0619,0.0938,0.022,0.0659,-0.133,0.0406,-0.308,-0.0977,0.0471,-0.182,0.134,-0.0568,-0.13,0.0137,-0.063,-0.219,-0.0318,-0.0639,-0.23,0.028,-0.152,0.0457,-0.125,0.0639,-0.0143,0.327,-0.119,-0.262,0.0493,-0.038,-0.342,0.131,0.186,0.274,-0.0704,0.153,0.0923,0.287,-0.0717,0.296,-0.0376,-0.0366,0.138,0.0267,-0.199,-0.373,-0.0296,0.0951,-0.032,-0.201,0.13,-0.0931,0.261,0.157,0.119,0.236,-0.265,0.0846,-0.218,0.322,0.262,-0.156,-0.00212,0.138,0.0885,-0.361,-0.303,0.0211,-0.197,-0.151,-0.118,-0.12,0.326,0.0393,-0.0961,0.2,0.159,-0.0435,0.0721,-0.0727,-0.00726,-0.092,0.00229,-0.138,0.148,0.436,0.0236,0.000412,-0.0164,-0.356,0.102,0.308,0.234,0.178,0.053,0.0746,0.114,0.0516,-0.274,-0.157,-0.204,-0.0291,0.211,-0.212,0.0574,0.0597,-0.0189,0.0421,0.228,0.0812,0.611,0.0295,0.0174,-0.149,-0.0706,-0.191,0.00788,0.204,0.1,-0.172,-0.131,-0.28,-0.054,0.215,0.314,-0.148,0.08,-0.468,0.0637,0.14,-0.0943,-0.14,0.199,-0.229,-0.533,0.0801,0.000211,0.153,0.181,-0.498,-0.0734,-0.154,0.0859,-0.0375,-0.0268,0.0113,-0.126,-0.0196,0.024,-0.0911,0.0891,-0.0222,0.00214,-0.0157,0.146,0.0129,0.158,-0.208,-0.392,-0.315,-0.231,-0.243,-0.144,-0.0621,-0.157,0.0925,-0.087,-0.146,0.14,0.151,0.476,0.274,0.231,0.381,-0.0683,0.178,0.329,0.0113,-0.0537,0.185,0.236,-0.22,0.0676,-0.107,0.0306,0.089,-0.0424,0.238,-0.117,0.021,-0.12,0.188,0.168,0.224,-0.0216,-0.194,0.0444,0.321,0.171,-0.138,0.0131,-0.103,0.00845,-0.108,
-0.183,-0.156,-0.0905,-0.192,0.0793,0.162,-0.114,0.095,-0.0382,0.146,-0.149,-0.0392,0.444,-0.556,-0.123,-0.218,-0.0601,0.00297,0.0965,-0.00544,-0.267,-0.232,-0.206,0.0278,0.11,-0.295,-0.405,-0.3,-0.0642,-0.0201,-0.145,-0.0765,0.0653,0.0746,-0.0143,-0.187,-0.167,-0.0348,-0.0483,0.119,-0.192,0.00648,0.227,0.133,0.0115,-0.0208,0.201,-0.0317,0.076,-0.0592,-0.11,0.236,0.109,0.0847,0.0877,0.0103,0.139,0.18,-0.192,-0.181,-0.535,0.2,0.0368,0.112,-0.153,-0.241,-0.185,0.0276,-0.0328,0.161,0.0601,-0.202,-0.0445,-0.0374,0.115,-0.248,-0.129,-0.0881,-0.0347,-0.0352,-0.0428,-0.0474,0.124,0.118,-0.00129,0.112,0.171,0.0408,-0.114,-0.166,-0.0742,0.0712,-0.0144,-0.125,-0.131,0.0388,-0.0621,-0.112,0.0804,0.18,0.151,0.0607,0.0765,0.123,0.179,-0.122,0.0335,0.000625,-0.0244,-0.0597,-0.28,0.0478,0.0693,0.0412,0.134,0.0554,0.0477,0.0855,-0.15,-0.188,-0.0756,-0.134,-0.137,0.0791,0.0166,0.0411,-0.0773,-0.0822,-0.0735,0.131,0.23,-0.121,-0.0936,-0.0615,-0.0158,0.00896,-0.0874,-0.24,-0.334,-0.0805,-0.173,-0.199,-0.114,-0.0748,-0.0286,0.0749,0.0384,-0.071,-0.246,0.0431,-0.0933,0.0426,0.0253,-0.0271,0.0512,-0.139,0.0872,-0.126,-0.0967,0.244,-0.0254,-0.0124,-0.0848,-0.0283,0.116,2.75e-005,0.096,0.0562,0.106,-0.121,-0.0232,-0.164,-0.12,-0.0758,-0.103,0.144,0.0261,0.182,0.112,-0.256,0.0495,-0.0781,-0.146,-0.169,0.185,-0.0449,0.0206,0.0119,0.205,-0.101,-0.0144,-0.0205,-0.235,0.0445,-0.0324,0.111,0.00223,0.0608,-0.179,0.168,-0.078,0.0811,0.132,0.03,-0.206,-0.149,0.307,-0.158,0.102,0.142,-0.0857,-0.184,0.308,0.00624,-0.128,-0.0824,-0.21,-0.164,-0.0458,0.394,-0.213,-0.207,0.0716,-0.161,-0.183,-0.0697,-0.0956,-0.00523,-0.0656,-0.035,-0.0558,-0.124,-0.166,0.155,-0.0328,-0.0354,0.303,-0.0587,-0.0482,-0.0917,0.106,0.0936,0.216,0.366,0.258,-0.0634,0.0765,-0.0116,0.0814,0.163,0.0278,-0.0718,-0.105,0.236,-0.105,-0.195,-0.285,-0.336,0.0681,-0.0666,-0.0755,-0.0888,0.0798,-0.106,0.114,0.122,0.0817,-0.469,-0.181,-0.112,-0.0575,-0.268,-0.0587,-0.0707,0.117,-0.186,-0.115,0.0123,-0.0176,0.128,-0.0441,-0.145,0.0821,0.0335,-0.27,0.102,0.0299,-0.038,0.184,0.0695,0.167,0.17,-0.0521,-0.0327,-0.00668,0.092,-0.145,0.185,-0.0835,0.0493,0.0264,-0.018,-0.0533,0.00203,-0.305,-0.455,-0.129,-0.218,0.0241,-0.054,0.0479,0.0298,-0.137,0.0614,0.082,-0.172,-0.0717,-0.101,0.248,-0.165,0.00896,-0.196,0.17,0.149,0.0436,-0.194,0.0115,-0.18,0.00118,0.142,-0.079,-0.0465,-0.0908,-0.0995,0.134,0.00459,0.0893,-0.115,0.00137,0.145,0.299,0.197,-0.0849,-0.0674,0.0682,-0.034,-0.146,0.107,-0.146,-0.0139,-0.21,0.00964,-0.0188,-0.229,-0.0738,0.0408,-0.0386,-0.00874,0.0351,0.0933,0.0868,0.1,-0.0761,-0.145,0.0276,0.29,0.00203,0.133,0.0307,0.0162,0.108,0.0548,0.124,0.0546,0.237,-0.0337,0.145,0.154,-0.077,0.146,-0.0355,-0.145,-0.0122,0.119,0.216,0.13,-0.311,-0.213,0.11,-0.11,0.167,-0.0603,-0.0715,-0.07,0.0525,-0.159,0.201,-0.145,0.06,0.274,0.173,0.0457,0.0912,-0.0761,-0.00643,0.181,0.00408,0.057,-0.0717,-0.0378,-0.0457,-0.13,-0.057,-0.194,0.0965,0.181,-0.133,0.0234,-0.00976,-0.149,-0.0281,0.177,-0.0933,-0.118,-0.175,0.285,-0.0704,0.046,-0.0874,-0.102,-0.0777,0.11,0.00683,0.156,-0.046,0.131,0.00777,-0.0424,-0.185,0.145,0.208,-0.0503,0.0808,0.0688,0.0137,0.042,0.0534,-0.0686,-0.168,0.0276,-0.0888,0.0232,-0.0797,-0.13,0.0269,-0.0139,0.0392,0.0296,-0.155,0.116,0.238,0.123,-0.216,0.274,0.337,0.389,0.0901,0.324,0.238,0.3,0.19,-0.189,0.0289,0.0203,0.221,-0.00139,0.231,0.324,-0.321,0.000396,0.0866,-0.0857,0.341,-0.223,0.0172,-0.155,-0.0428,-0.112,0.14,-0.152,-0.044,0.053,0.329,-0.0759,-0.225,0.0891,0.111,-0.038,0.285,0.00537,
0.244,0.16,-0.311,-0.236,0.149,-0.259,-0.391,0.236,-0.141,0.247,-0.571,0.352,0.238,0.197,-0.162,0.405,0.0457,0.0641,-0.174,0.0328,0.14,0.366,-0.166,-0.0717,-0.00598,-0.455,-0.102,0.148,0.323,0.16,0.0876,0.243,0.122,0.115,0.0856,-0.0908,-0.283,0.0919,0.296,-0.00913,-0.101,-0.0107,-0.288,-0.135,0.254,0.106,-0.0635,-0.118,0.0449,0.391,-0.0265,0.0337,0.0641,0.0433,0.12,0.31,0.0453,-0.112,0.057,-0.0269,-0.0692,-0.415,-0.12,0.38,0.0308,-0.145,-0.059,0.437,0.0465,0.000233,-0.221,0.0173,-0.304,-0.0181,-0.074,0.372,-0.0877,-0.364,-0.0148,0.0604,0.336,0.13,-0.199,-0.0293,-0.0436,-0.0235,0.13,-0.0233,-0.0295,0.0904,-0.388,0.237,-0.244,0.171,0.102,-0.177,-0.111,-0.222,-0.23,0.0562,-0.286,0.14,-0.267,-0.177,-0.231,-0.386,-0.0581,-0.152,0.0103,0.037,-0.0459,0.0945,-0.273,-0.513,0.335,-0.069,-0.369,-0.0291,0.0698,-0.0478,-0.0732,-0.203,-0.0518,-0.0183,-0.0341,-0.0536,-0.449,0.104,0.0506,-0.364,0.175,0.182,-0.0547,-0.0352,0.0831,-0.0742,0.0275,-0.193,0.104,-0.276,0.0399,-0.067,-0.37,-0.222,-0.191,0.0562,0.0514,-0.327,0.0297,-0.148,-0.35,0.0522,-0.0423,0.242,0.407,-0.132,-0.0516,0.302,-0.1,0.0523,-0.137,0.0885,-0.154,0.0314,-0.0178,0.0265,-0.0612,-0.0251,0.0731,-0.132,0.143,0.199,0.14,-5.07e-006,0.00938,-0.326,0.0356,-0.121,-0.17,-0.239,0.0838,-0.00465,-0.0379,0.0354,0.416,-0.0314,-0.0578,0.357,0.0203,0.365,0.0129,-0.0946,0.115,-0.0199,-0.0925,0.182,0.604,-0.0529,-0.281,0.196,0.103,-0.191,-0.0824,-0.124,-0.0576,0.0376,-0.0955,-0.298,-0.112,-0.27,-0.23,-0.376,0.0451,0.342,-0.0329,0.0296,-0.108,0.188,-0.00823,0.155,0.0337,0.124,0.181,-0.274,0.0741,0.252,0.016,0.088,-0.04,-0.0634,0.073,0.108,-0.0178,-0.207,-0.0538,-0.309,-0.259,-0.177,0.167,-0.0915,-0.185,-0.137,0.278,0.0836,0.089,-0.31,0.31,-0.734,-0.0852,-0.515,-0.0404,-0.44,0.0916,0.118,0.0903,-0.563,-0.287,-0.00122,-0.046,-0.0464,-0.117,-0.231,0.115,-0.161,-0.268,-0.039,0.0706,0.0623,-0.0653,-0.223,0.0814,0.305,-0.0965,-0.187,0.0326,0.0712,0.0562,0.026,-0.00616,-0.0321,-0.0725,-0.124,0.11,0.687,-0.371,-0.476,0.00642,-0.0784,-0.167,-0.00425,-0.203,0.115,-0.234,-0.14,-0.0672,-0.491,-0.206,0.272,0.133,-0.117,0.0877,0.168,0.0932,-0.139,0.257,0.0889,0.141,-0.352,-0.259,0.0329,0.0165,-0.0298,0.0397,-0.104,0.036,-0.0841,-0.0898,0.277,0.09,0.2,-0.182,-0.273,0.0341,0.106,0.0768,-0.0136,-0.177,0.095,0.0241,-0.172,0.0646,-0.294,-0.304,-0.479,-0.0545,-0.12,0.03,0.112,0.0439,-0.207,0.0711,0.0667,0.317,-0.0773,0.418,0.744,-0.0734,-0.118,-0.141,-0.135,-0.0345,-0.0185,0.0816,-0.21,-0.189,-0.163,0.184,-0.115,0.0927,-0.0796,0.0137,0.0104,0.0809,-0.119,0.0189,-0.173,-0.181,-0.389,-0.0617,0.38,0.0333,0.0019,-0.128,-0.0357,0.019,-0.0132,0.18,-0.00644,0.028,0.494,0.0312,0.00294,0.159,0.0827,-0.0959,0.0155,0.0026,0.0516,0.124,-0.119,-0.0703,-0.00232,0.0227,-0.308,0.117,0.102,0.21,0.0656,0.037,-0.0552,0.188,0.338,0.14,-0.0414,-0.208,0.0595,-0.109,0.0962,-0.0507,0.179,-0.0756,-0.033,-0.0541,0.315,0.13,0.538,-0.0974,-0.124,0.162,0.0768,0.15,-0.0243,0.082,0.184,-0.0522,-0.0212,-0.135,-0.406,-0.187,-0.131,0.0539,-0.054,-0.0809,-0.00531,0.111,-0.0903,-0.0133,0.0769,0.321,0.488,0.1,-0.0756,0.206,-0.25,0.188,0.453,-0.00199,-0.224,0.34,0.181,0.292,0.0104,-0.108,0.0915,-0.319,0.102,0.121,0.0335,-0.0114,-0.00638,0.0592,-0.178,0.389,0.0191,0.299,0.312,0.165,-0.106,-0.000989,-0.0447,-0.141,-0.134,-0.0732,0.103,-0.0715,0.0806,0.0419,0.0922,0.0115,0.289,0.273,-0.0384,0.314,0.153,-0.0186,0.432,0.479,0.378,0.15,0.17,0.224,0.159,0.152,-0.109,-0.0325,-0.028,0.146,0.00792,0.162,-0.153,
0.123,0.0342,-0.0521,-0.0491,-0.191,-0.00739,-0.212,-0.11,0.362,-0.32,0.147,-0.384,-0.413,-0.405,-0.0264,-0.0377,-0.145,-0.164,0.0967,0.063,0.325,-0.0391,-0.141,-0.56,-0.352,-0.00799,-0.197,0.0418,0.0125,-0.309,-0.0103,0.163,0.0157,0.174,0.502,0.798,0.136,0.0256,-0.023,0.102,0.159,0.23,-0.258,0.085,0.0604,-0.163,-0.547,-0.132,0.0153,-0.209,-0.163,-0.267,-0.087,0.0571,0.128,0.406,-0.12,-0.276,-0.285,-0.342,0.183,0.337,-0.124,0.0355,-0.177,-0.0697,-0.0295,0.291,0.13,0.158,-0.117,-0.114,-0.0119,0.144,-0.000212,0.144,0.0197,-0.295,0.188,0.342,-0.143,0.15,0.252,0.0706,0.257,-0.357,-0.231,0.097,-0.0715,-0.0558,-0.332,0.156,0.0164,-0.254,-0.0708,-0.0208,-0.191,0.162,0.238,0.256,-0.0768,0.195,0.206,0.155,-0.00513,-0.000222,-0.0964,0.262,0.0753,-0.572,0.102,0.12,-0.105,0.0273,0.0417,0.169,-0.0745,0.367,0.207,-0.361,0.062,0.13,-0.071,-0.276,-0.159,0.0363,0.0794,0.169,0.0441,-0.0475,-0.113,0.088,0.0311,0.147,-0.103,-0.223,0.348,-0.0697,-0.145,0.504,0.0333,-0.138,0.217,-0.0491,0.37,0.0104,0.126,0.189,-0.0937,-0.121,0.0196,0.238,0.0668,-0.273,-0.12,-0.295,0.038,0.307,-0.288,-0.0443,0.0384,-0.057,0.144,0.0902,-0.34,0.117,-0.674,0.178,-0.0513,0.0766,0.138,0.168,-0.0298,0.0483,0.0779,0.0583,0.3,0.345,-0.201,0.337,-0.538,-0.416,0.0155,-0.312,-0.184,0.106,0.0373,-0.166,0.0556,0.0385,0.0129,-0.079,-0.37,0.0386,-0.137,0.0945,0.0967,-0.196,-0.0409,0.16,0.159,0.0162,0.0642,0.257,0.266,-0.0602,0.0761,-0.103,-0.111,0.322,0.0923,-0.218,-0.149,0.204,0.178,-0.0601,-0.273,-0.143,-0.248,-0.262,-0.163,0.194,0.178,-0.00626,0.328,0.0223,0.0347,-0.294,0.00656,0.045,0.34,-0.323,0.11,-0.143,0.156,0.0193,0.0178,0.0143,0.218,0.056,0.0996,0.0164,-0.282,0.0922,0.195,0.199,-0.181,-0.00333,0.114,0.221,0.0593,0.0585,-0.0771,-0.0941,-0.357,0.137,-0.328,-0.00647,-0.194,0.142,0.187,0.318,-0.0998,-0.219,-0.315,-0.412,-0.0645,0.142,0.214,0.212,0.0156,0.149,-0.107,-0.0171,0.0155,0.0756,-0.175,-0.00896,0.417,-0.195,-0.0745,-0.362,-0.157,0.149,-0.0753,-0.0155,-0.0381,-0.583,0.155,0.0772,-0.251,0.0163,-0.302,-0.0935,-0.0552,0.381,0.00786,0.16,0.166,0.377,0.0505,-0.175,-0.213,-0.0446,0.0316,-0.118,-0.05,-0.069,0.129,0.233,0.0635,-0.0203,0.101,-0.167,0.188,-0.205,0.0357,-0.0108,0.199,0.163,0.134,0.0109,0.244,-0.219,0.227,0.134,0.249,0.359,0.372,-0.0205,0.411,0.138,0.116,0.0678,0.159,0.241,0.211,0.389,0.0877,0.153,0.222,0.161,0.231,0.036,0.171,-0.0783,-0.12,0.00428,-0.0211,0.0367,-0.00961,0.063,0.105,0.298,0.166,-0.166,0.0717,-0.00271,0.18,0.422,0.21,-0.132,0.0541,-0.269,0.0378,0.303,0.0424,-0.103,0.078,-0.0246,0.0849,-0.186,0.265,-0.0823,0.0194,-0.058,0.119,-0.0787,0.0218,0.187,-0.168,-0.0193,0.299,-0.169,-0.22,-0.101,0.0592,-0.147,-0.116,-0.29,0.111,-0.0133,-0.048,0.143,0.0712,-0.0644,-0.00316,0.027,-0.255,0.0756,0.175,0.106,0.23,0.238,-0.324,0.0314,0.0554,0.039,-0.0718,-0.0521,0.268,0.407,-0.0488,0.347,0.0377,0.07,-0.119,-0.27,0.0113,-0.0293,-0.0448,0.00691,-0.0418,-0.0354,0.162,0.097,0.0271,0.22,0.0375,-0.109,0.0653,-0.0399,0.0455,-0.268,-0.0559,-0.0917,0.0614,-0.071,0.0412,0.0715,-0.0438,0.041,-0.0008,0.0883,-0.175,-0.108,0.026,-0.04,-0.0555,-0.0153,0.0238,0.0367,-0.13,0.262,0.0965,0.0554,-0.0305,-0.0528,-0.128,-0.114,-0.00547,-0.0835,-0.00878,-0.0985,-0.213,0.0632,-0.173,0.188,0.0976,0.0951,-0.0791,-0.101,-0.0458,-0.00807,-0.229,0.17,0.0523,-0.0451,-0.0416,0.0292,0.0142,-0.0371,-0.0796,-0.0719,-0.0948,-0.0417,0.112,-0.108,-0.243,0.208,-0.106,-0.119,0.118,0.0855,0.0894,-0.00372,0.136,-0.0322,-0.0223,0.0992,
0.114,0.0173,0.116,-0.0113,0.241,0.198,0.101,0.0313,-0.0153,-0.215,0.0112,0.0231,0.0456,0.0603,-0.0908,0.0651,0.00302,-0.0996,-0.0494,-0.0262,-0.0221,0.0011,-0.00442,-0.0131,-0.161,0.0641,0.0879,0.00554,0.0641,0.161,0.13,-0.153,0.0788,-0.0468,-0.01,-0.149,0.0624,0.116,-0.0491,0.0486,0.000692,0.118,0.00431,-0.0855,0.011,0.0109,0.128,0.0218,-0.152,0.0155,0.116,0.183,-0.00373,0.177,-0.12,0.024,-0.161,0.119,0.0274,-0.105,0.155,-0.104,-0.0493,-0.0252,-0.138,-0.176,0.0567,0.00539,0.0461,-0.0176,-0.167,-0.146,-0.153,0.143,0.0366,-0.0213,-0.196,-0.0193,-0.0414,-0.0874,0.0772,-0.0142,0.0268,-0.0538,-0.0327,0.0758,0.0747,-0.0394,-0.0568,-0.0439,-0.0986,-0.0215,-0.00727,-0.0623,-0.0927,-0.0214,0.0122,0.0686,0.0462,0.189,0.0867,-0.0293,0.141,0.0816,-0.0458,-0.172,-0.00972,0.131,-0.178,0.181,0.117,0.0844,0.0337,0.0074,-0.0115,0.115,-0.14,0.0328,-0.0496,0.179,0.115,-0.0615,0.0865,0.0305,-0.178,0.158,-0.0749,-0.0304,-0.115,0.0938,-0.0572,-0.109,-0.0218,-0.0562,0.154,-0.00509,0.126,0.0857,0.0458,-0.0501,0.0974,0.111,-0.0399,0.0557,0.127,0.0966,0.0366,0.088,-0.0444,0.00295,-0.138,0.0335,-0.0208,-0.0617,0.0737,0.0819,0.0641,0.0992,-0.0715,0.333,-0.218,-0.184,-0.139,0.0986,-0.34,-0.0544,0.0211,-0.335,-0.232,-0.0983,-0.425,0.0535,-0.15,-0.0799,-0.304,0.02,0.0722,-0.364,0.0638,0.235,-0.0345,-0.0335,-0.0426,0.34,0.284,-0.0525,-0.0903,0.104,0.0895,0.214,-0.116,0.0609,-0.131,0.321,-0.104,-0.116,-0.312,-0.192,0.0236,0.0053,-0.0182,-0.0998,0.423,0.396,-0.453,0.176,0.204,-0.101,0.122,-0.0186,0.354,-0.0987,-0.349,-0.369,-0.105,-0.323,-0.0905,0.0196,0.139,0.0956,4.9e-005,-0.0305,-0.0591,0.0067,-0.267,0.252,0.0808,-0.288,-0.133,-0.052,-0.12,-0.201,-0.0609,-0.22,-0.123,-0.0315,-0.205,0.0905,-0.102,0.0662,0.116,-0.216,-0.197,-0.0774,-0.103,-0.136,-0.123,-0.239,0.127,-0.489,0.133,0.0293,0.0434,0.049,0.0343,-0.115,0.0597,0.00486,0.112,0.0306,0.266,0.0784,0.208,-0.17,0.0762,0.226,-0.116,-0.159,0.332,0.293,-0.0767,0.00113,-0.245,-0.161,0.273,-0.101,0.073,0.288,-0.259,0.0845,0.102,0.263,-0.0876,0.189,0.062,0.326,-0.201,-0.216,0.288,0.0671,0.186,-0.138,-0.146,0.0772,-0.134,9.68e-005,-0.0424,-0.0127,0.0134,0.196,0.177,0.134,0.216,0.104,-0.00588,-0.0629,-0.00632,0.205,-0.122,0.3,-0.0727,0.0292,0.388,0.298,-0.277,0.131,-0.085,0.0151,-0.0457,0.278,0.15,0.0969,-0.132,-0.0808,0.479,0.455,0.255,-0.144,0.00868,-0.0952,0.00791,-0.0333,0.00131,-0.0983,0.0842,-0.0225,0.234,0.136,-0.0172,0.236,0.0618,0.0988,0.186,-0.0138,0.244,-0.131,0.149,0.228,0.00477,0.394,0.00573,-0.169,0.15,-0.124,-0.0489,0.072,0.014,0.0682,-0.035,0.172,-0.1,-0.0179,-0.124,-0.0148,-0.274,0.45,0.13,0.221,-0.422,0.137,0.0141,-0.193,-0.02,-0.0386,-0.0672,0.0938,0.193,0.282,-0.0215,0.153,0.0984,-0.0586,0.0856,0.022,-0.00766,0.273,-0.244,-0.21,-0.235,-0.302,0.00275,0.293,-0.329,-0.146,0.0393,0.0399,-0.673,0.00865,0.206,0.269,0.13,0.133,0.0629,-0.252,-0.183,0.0955,0.193,0.23,0.111,-0.0368,0.449,-0.273,0.118,0.118,-0.145,-0.137,0.248,0.0504,-0.0375,-0.0366,-0.177,0.0413,0.167,0.0223,-0.0221,-0.0435,0.264,-0.158,0.146,-0.0255,-0.0437,-0.251,0.163,0.0741,-0.14,0.0608,0.186,0.241,-0.247,-0.422,-0.0191,0.0418,-0.0757,-0.115,0.341,-0.0158,0.0794,-0.113,-0.146,-0.0161,-0.162,0.0811,0.101,0.0374,-0.0676,0.109,0.064,-0.0919,0.186,0.0595,-0.134,-0.0137,0.245,0.0189,0.171,-0.535,-0.175,0.175,-0.0229,0.123,0.273,0.0598,0.00353,0.0865,-0.133,0.166,0.112,-0.19,-0.0269,0.136,-0.3,-0.174,0.0936,0.116,-0.191,0.0481,-0.0519,0.0603,0.133,0.268,-0.0679,-0.0257,-0.174,-0.0813,0.0477,-0.0631,-0.0695,-0.118,0.154,-0.148,
0.0177,-0.328,0.0185,0.0773,-0.0222,0.225,0.132,0.00764,-0.202,-0.126,-0.091,0.289,0.139,-0.136,-0.243,0.188,0.0781,-0.287,-0.0231,0.0524,0.22,0.422,0.118,-0.131,0.324,-0.25,0.105,0.248,-0.493,-0.0167,-0.139,0.139,0.203,0.219,0.195,-0.0307,-0.0461,0.238,0.0768,-0.0825,-0.0247,-0.289,-0.186,-0.153,-0.0159,-0.258,-0.137,-0.157,0.108,-0.367,-0.062,0.0967,-0.17,-0.162,0.43,-0.134,-0.178,-0.259,0.194,-0.291,-0.101,-0.276,-0.0886,0.293,-0.00597,0.117,-0.458,-0.343,-0.0269,-0.436,0.0806,0.266,-0.035,-0.116,0.081,-0.0117,-0.197,0.2,0.0855,0.207,-0.0247,-0.0181,-0.162,-0.128,-0.129,-0.0439,0.0312,-0.0833,0.118,0.101,0.0378,0.00112,-0.118,0.0725,0.0894,0.207,-0.105,0.0911,-0.262,-0.254,-0.11,0.168,-0.167,-0.106,0.302,0.065,-0.0274,0.226,-0.0278,-0.157,-0.0947,0.0864,0.0147,-0.00264,0.0748,-0.0368,0.0202,-0.318,0.0623,-0.132,0.00678,-0.0669,0.12,0.19,0.121,-0.108,0.449,0.187,-0.0239,0.07,-0.101,-0.0314,0.109,0.11,0.0609,-0.212,0.185,0.00465,-0.238,0.132,0.109,-0.0126,0.109,0.14,0.0234,0.171,0.0782,-0.227,0.064,0.168,0.0823,-0.132,-0.126,0.201,-0.00791,0.101,0.0087,0.146,0.0642,-0.145,-0.0703,0.0383,0.101,-0.0593,0.24,0.0709,-0.221,0.0622,0.136,-0.0819,-0.093,0.0564,0.396,-0.461,-0.123,-0.148,-0.241,0.107,0.0231,0.202,0.00102,-0.0988,-0.0849,0.117,0.105,-0.104,0.132,-0.333,-0.143,-0.125,0.0841,0.108,0.0752,0.0562,0.122,0.035,-0.229,0.0355,0.138,-0.024,-0.0487,0.14,-0.0537,-0.0453,0.0713,0.128,-0.127,0.0891,0.191,-0.171,0.0143,0.0168,-0.166,-0.281,-0.0835,-0.0663,-0.259,-0.041,0.023,-0.097,-0.167,-0.103,-0.0735,-0.191,-0.386,-0.192,-0.0462,0.0799,0.0388,0.0953,-0.091,0.124,0.0241,-0.253,0.24,-0.0484,-0.156,0.0213,0.0631,-0.0304,0.0759,-0.0192,-0.101,-0.0415,0.00351,0.0024,0.00613,-0.0734,-0.139,-0.297,-0.207,0.0231,-0.0244,-0.0424,0.0253,0.0969,-0.17,-0.112,-0.068,-0.113,-0.0708,-0.106,0.0976,0.0814,-0.0511,-0.147,0.066,0.0945,0.147,0.0385,-0.119,-0.123,0.115,-0.116,0.121,-0.0183,0.119,0.00369,-0.136,0.0995,-0.0948,0.0977,0.00317,0.0262,0.0972,0.331,-0.14,-0.0113,-0.109,0.147,0.0875,0.0677,0.0681,-0.303,-0.149,0.0243,-0.0283,-0.122,0.113,0.106,-0.142,0.119,0.067,0.0499,0.151,-0.144,-0.167,0.0858,0.0425,0.0351,0.0949,-0.0205,0.0143,-0.0148,0.17,0.0528,0.023,0.0264,-0.0102,-0.133,-0.0539,-0.0307,-0.212,0.0154,-0.0898,0.025,0.0732,-0.108,0.145,-0.19,-0.229,-0.0846,0.00162,0.0669,-0.0804,-0.0608,0.228,0.108,-0.013,0.0554,-0.264,0.0915,-0.00451,-0.172,0.0838,-0.0407,0.00555,0.107,0.117,0.103,-0.00293,0.0188,0.0985,0.007,-0.176,-0.0262,-0.0383,-0.00859,-0.157,0.106,0.0265,0.0204,-0.0413,-0.0212,-0.356,-0.236,0.0116,-0.0502,0.0165,0.055,0.147,-0.00677,0.0803,0.0252,-0.186,-0.104,0.142,-0.0758,0.0261,0.0989,-0.158,0.116,0.0121,0.473,-0.145,0.196,0.245,-0.385,-0.116,0.455,-0.0233,-0.203,-0.226,0.5,-0.425,0.0444,-0.0637,-0.3,-0.25,-0.134,-0.421,-0.159,0.178,0.152,-0.138,0.103,0.0333,0.0177,0.301,-0.00167,0.166,0.0964,0.0383,0.0745,-0.261,-0.258,0.0585,-0.023,-0.116,0.249,-0.199,0.118,0.366,0.297,-0.42,0.37,0.431,-0.11,0.109,0.0348,-0.0674,0.107,0.212,-0.532,-0.0777,0.225,-0.137,0.386,0.146,0.303,-0.274,-0.0745,-0.354,0.0467,0.0122,0.047,-0.264,0.109,0.345,-0.0372,0.11,-0.166,-0.241,-0.0245,-0.00847,0.254,0.0294,-0.2,-0.177,0.373,0.426,-0.113,0.0149,0.214,0.15,-0.194,-0.261,0.0549,-0.0247,-0.174,0.0653,0.217,-0.175,-0.191,0.0839,0.117,0.0241,-0.164,0.308,0.066,-0.184,0.16,0.0297,0.252,0.239,0.332,-0.101,-0.0382,0.24,0.145,0.18,0.225,0.0598,0.143,-0.109,0.299,0.191,-0.112,-0.319,0.733,
0.198,-0.0875,-0.0647,0.0381,0.17,0.139,-0.0563,-0.105,0.142,-0.0411,-0.121,-0.103,0.51,0.15,0.135,-0.0735,-0.0687,-0.116,0.0526,-0.223,0.0594,0.361,-0.2,0.0856,0.171,-0.066,0.0626,0.075,0.0111,0.0605,-0.218,-0.0701,0.0622,-0.241,-0.0558,-0.38,-0.148,-0.213,0.316,-0.0675,0.0489,0.13,-0.104,0.18,0.319,-0.136,0.3,-0.413,0.206,0.268,-0.289,-0.00252,0.13,0.0907,0.0972,0.114,-0.508,0.222,0.353,0.0962,-0.0924,0.154,0.133,-0.0525,0.0382,0.0964,-0.263,0.207,0.186,0.344,-0.393,0.101,0.026,-0.0225,-0.00692,-0.3,0.00822,-0.165,-0.593,-0.00813,0.166,0.202,-0.0885,0.124,0.134,0.702,0.0708,0.177,-0.0953,2.97e-005,0.0528,-0.0411,0.122,-0.34,-0.353,-0.0473,-0.122,0.043,0.0356,0.0616,-0.172,-0.039,0.0252,-0.0521,0.57,0.321,-0.175,0.0406,0.224,0.201,-0.296,0.0313,-0.0143,0.0331,0.041,-0.0504,-0.000166,0.302,0.312,-0.232,-0.0982,-0.0827,-0.0841,-0.00421,0.137,-0.239,-0.204,-0.147,-0.0474,-0.0919,-0.209,0.171,0.0768,0.0697,0.0163,-0.0359,-0.0472,-0.298,-0.0194,0.00981,-0.0133,0.162,-0.0542,0.052,-0.177,-0.0521,-0.0619,-0.0493,0.034,-0.101,-0.0034,0.0183,-0.231,0.186,-0.0668,0.0704,-0.0687,-0.0564,-0.0269,-0.068,-0.107,0.168,-0.0862,0.0903,-0.197,0.0195,0.00172,0.0526,-0.0834,0.0552,-0.0105,-0.0412,-0.0157,-0.0485,-0.0273,-0.218,0.0659,0.119,-0.0788,-0.0165,-0.00932,-0.0609,0.00472,0.0567,-0.0021,0.108,0.129,-0.122,-0.243,-0.0371,-0.0684,-0.00389,-0.0523,0.0999,0.0273,0.0938,-0.0975,0.0922,0.0663,-0.031,0.0975,0.0194,0.0398,-0.0122,0.0559,-0.086,-0.065,-0.0975,0.156,-0.166,0.079,-0.0407,0.0746,0.134,-0.153,-0.108,-0.0128,0.0699,-0.0576,0.157,0.0665,0.285,0.0236,-0.0311,-0.0689,0.00442,-0.0981,-0.0722,-0.00544,0.165,0.0636,0.0936,0.0145,0.107,0.0697,-0.0267,0.0518,0.0939,-0.103,0.0173,-0.0566,-0.139,-0.0843,-0.0378,-0.0494,0.101,-0.087,0.0209,0.0333,0.0921,0.125,0.139,0.0181,-0.0411,0.00509,-0.136,0.00915,-0.0239,-0.00338,0.0461,-0.037,0.0156,0.223,0.0959,0.0433,0.115,0.119,-0.00363,-0.0383,-0.0168,0.0709,-1.68e-005,0.0265,0.203,-0.282,-0.126,0.0843,0.0801,-0.0864,0.179,0.037,0.159,-0.128,-0.112,0.171,0.0258,0.0688,-0.0257,0.0436,0.0433,0.0283,0.0081,0.0341,0.0759,-0.142,-0.0225,0.0706,-0.00235,-0.0549,-0.0288,-0.00372,-0.00542,0.0255,-0.0272,-0.00337,0.109,0.0556,0.0563,-0.00272,0.105,0.0465,-0.00223,-0.0673,-0.0689,-0.0717,-0.0179,0.0929,-0.0848,0.0938,-0.073,0.103,-0.0744,0.00158,0.0882,-0.106,0.12,-0.132,0.00166,-0.0372,0.0193,0.0309,0.0258,-0.0455,0.0141,0.0107,0.0197,0.0258,0.117,-0.00976,-0.00393,-0.0941,0.0739,0.0213,-0.00765,0.146,0.24,-0.136,-0.0125,-0.0166,-0.164,0.0236,0.0482,-0.124,-0.118,-0.00301,0.0108,-0.235,0.0525,0.298,0.0874,0.189,0.0237,-0.0827,-0.0611,0.31,0.215,0.0694,0.49,-0.215,0.319,0.415,-0.044,0.289,0.104,0.473,-0.218,0.234,-0.0114,0.187,-0.159,-0.0623,0.163,0.515,0.257,-0.029,-0.213,-0.0851,-0.084,0.0395,0.0928,-0.0387,-0.0381,0.169,0.217,-0.325,-0.0939,-0.0521,-0.132,0.163,-0.268,0.174,-0.306,-0.0925,-0.198,-0.222,0.117,-0.0742,0.2,0.139,0.27,-0.501,0.151,0.0937,0.109,-0.424,0.172,-0.0307,0.14,0.278,0.185,0.0508,0.285,0.275,0.256,-0.131,-0.126,0.197,-0.00661,0.0404,-0.202,0.13,0.0181,0.387,0.325,0.193,0.0997,0.245,-0.0698,0.257,-0.0844,0.347,-0.0922,-0.0491,-0.117,0.271,0.303,0.0518,-0.0397,-0.167,-0.134,-0.094,-0.175,0.305,-0.0555,0.361,0.18,-0.247,-0.0161,-0.0296,-0.0447,0.214,-0.0425,0.151,0.267,-0.052,-0.0663,0.0355,0.473,0.0742,0.0169,0.127,-0.294,0.0566,0.0328,0.0188,-0.214,-0.0217,-0.507,-0.163,-0.299,-0.00265,0.324,0.0132,-0.0506,0.121,-0.09,0.00873,0.123,-0.457,-0.00239,-0.367,0.395,-0.0403,0.194,0.0477,-0.232,0.0341,0.03,-0.0528,-0.02,
0.261,-0.052,-0.276,-0.251,-0.483,-0.344,-0.227,-0.217,-0.149,-0.169,-0.221,-0.249,0.00139,0.387,0.198,-0.153,-0.19,-0.281,-0.0991,-0.0192,-0.0848,-0.16,0.132,0.246,0.124,0.366,-0.506,0.0747,0.235,-0.213,0.101,0.0917,-0.211,-0.124,0.115,-0.0639,0.094,0.311,0.273,-0.156,0.0947,-0.118,-0.11,-0.091,-0.0615,-0.083,0.0202,0.197,-0.286,-0.0297,-0.198,0.0576,-0.247,0.0757,0.213,0.124,0.0295,-0.0512,-0.0171,-0.3,0.17,-0.162,-0.118,-0.11,0.101,0.132,0.0566,0.156,-0.0221,0.0175,0.0574,0.312,-0.225,-0.13,-0.297,-0.667,0.39,-0.0785,-0.148,0.0264,0.00861,-0.184,0.147,-0.152,0.194,-0.0875,0.13,-0.149,-0.108,0.153,-0.24,0.122,0.281,-0.0198,0.0814,-0.045,0.214,0.221,-0.115,0.137,-0.0446,-0.0894,0.0284,-0.0162,0.0231,-0.111,-0.0344,-0.0671,-0.0279,-0.0478,-0.187,-0.0972,-0.101,-0.15,-0.0906,0.0262,0.008,-0.0471,-0.00434,0.0532,0.0803,0.0137,-0.0841,-0.0193,0.134,-0.0214,-0.0598,-0.0716,-0.0583,0.0209,0.0607,0.0574,0.0362,0.116,0.0298,0.05,-0.0384,-0.185,-0.139,-0.00729,0.0141,0.0516,0.023,0.0548,-0.0481,0.136,-0.0366,0.2,0.0866,-0.0307,0.0226,-0.0392,-0.0175,-0.114,-0.0397,0.0228,0.00292,0.0436,0.0381,0.0293,0.0838,0.0608,-0.00755,-0.166,-0.083,0.132,0.00257,-0.125,-0.0378,0.0256,-0.0686,-0.133,-0.0104,-0.146,-0.123,0.0222,-0.195,0.0241,0.0528,-0.0406,0.114,-0.0197,-0.152,-0.096,0.0108,-0.0548,0.0714,0.0529,0.184,-0.124,-0.137,0.0804,0.038,-0.0391,-0.123,0.115,0.0921,0.00592,0.159,-0.00621,-0.0389,0.0737,0.0408,-0.154,0.0336,-0.0393,-0.052,-0.139,0.143,0.202,-0.158,0.0326,-0.159,-0.0654,0.0133,-0.0141,0.0316,0.077,-0.183,0.0449,-0.0204,-0.0951,-0.0304,-0.00264,-0.0216,0.105,-0.079,-0.113,0.0454,0.075,0.046,-0.107,-0.0364,-0.0614,0.0104,-0.0755,-0.0204,-0.0282,-0.00148,0.0949,-0.0381,0.000951,0.223,-0.0923,-0.0241,0.08,0.0999,0.0307,0.00446,0.0677,-0.0197,-0.0232,0.165,0.0837,-0.103,0.0925,0.0737,0.0679,0.0389,0.113,0.0861,0.0979,0.0637,-0.0524,0.0543,-0.0141,0.204,0.178,0.0659,0.0735,0.0614,-0.0219,0.0791,0.0407,-0.0199,0.0334,0.0214,0.0547,-0.0599,-0.0607,-0.0245,-0.0831,0.032,-0.0847,0.0722,0.0593,0.0493,0.0156,0.0028,-0.0053,0.0125,-0.0732,0.114,-0.00425,0.0473,0.0558,0.0274,-0.135,0.122,0.201,-0.0247,-0.00733,-0.0336,0.0717,-0.0759,0.0396,0.0757,-0.00529,-0.0789,0.186,0.0604,-0.0153,0.128,0.0236,0.0776,-0.0205,0.0933,0.0563,-0.0703,-0.171,-0.0178,0.0232,-0.0758,0.0954,0.0258,0.0543,0.000864,0.124,-0.0515,-0.0738,0.119,-0.0231,-0.158,-0.0364,-0.126,0.165,-0.142,-0.00925,0.132,0.053,0.0405,0.0453,0.0989,0.0727,-0.0493,-0.0146,-0.000493,-0.169,-0.0786,0.0803,0.0399,0.0173,0.00387,-0.226,0.0097,-0.082,0.064,-0.127,0.0809,0.0183,-0.0897,-0.125,-0.00633,0.0307,-0.0465,-0.133,0.0415,0.026,-0.0063,0.0811,-0.0732,0.0742,0.026,0.0961,0.12,0.0953,0.119,0.0719,-0.0952,0.121,0.118,0.0783,-0.0444,0.0427,-0.00974,0.0275,-0.0818,0.397,0.118,0.159,-0.0648,0.2,0.0815,-0.105,-0.173,0.222,0.0789,0.00542,-0.0286,-0.0298,-0.0512,-0.0221,-0.0836,-0.0859,-0.0767,-0.0366,-0.0927,-0.0705,-0.184,0.0303,-0.0635,-0.112,0.00543,-0.0158,-0.0426,-0.0329,0.0059,-0.0502,-0.165,-0.0179,-0.0202,0.00676,-0.0106,-0.241,0.214,0.274,0.0657,0.0901,0.175,0.0611,0.0367,0.0488,-0.0252,0.25,0.0712,0.281,0.00487,0.0536,-0.0561,0.0187,0.029,-0.0164,0.0562,-0.00902,-0.0621,-0.0241,-0.0932,0.117,0.108,0.12,0.041,-0.0607,0.0893,0.0764,0.013,0.057,-0.00486,0.0179,-0.0653,-0.114,-0.0386,0.0422,0.0538,-0.0258,-0.056,0.0061,0.126,-0.0328,0.119,0.153,-0.0662,0.0728,0.0856,0.156,0.0551,0.127,0.0454,-0.0193,-0.0167,0.0512,0.171,-0.0445,0.0308,0.0534,-0.067,-0.312,-0.0449,0.0902,-0.0506,-0.0272,0.105,0.023,0.0605,0.111,-0.0519,-0.106,-0.00251,-0.0412,0.112,0.0071,
-0.0914,-0.13,-0.166,0.00431,0.0702,0.0896,0.314,0.146,-0.043,-0.224,-0.0318,-0.0376,-0.113,0.000919,0.00574,0.064,-0.187,0.0425,-0.00202,-0.0907,0.0836,-0.0826,-0.0303,-0.088,-0.0653,-0.0592,0.0473,0.0759,0.0206,0.0686,-0.151,-0.0269,-0.058,0.136,-0.00176,-0.138,-0.069,-0.121,0.139,-0.00389,0.023,-0.1,0.0979,0.058,-0.027,-0.0382,0.137,0.0193,-0.0808,-0.00328,0.0713,-0.0815,0.102,-0.062,-0.204,-0.185,0.0923,0.00582,0.137,-0.0589,-0.134,-0.116,-0.121,0.0426,-0.047,-0.0276,0.0652,0.124,0.115,0.157,0.136,0.0595,0.108,0.0209,-0.00177,0.205,0.0091,-0.0495,-0.0256,-0.261,-0.0985,-0.165,-0.305,0.23,0.0469,-0.00955,-0.179,0.151,0.0708,0.00969,-0.188,0.0845,0.177,-0.201,0.0334,0.0554,-0.00608,-0.333,0.12,0.061,-0.179,0.269,-0.251,-0.0411,-0.128,0.104,0.0088,0.0912,-0.0593,-0.0323,-0.289,0.225,-0.146,0.289,0.082,0.191,-0.0739,-0.234,0.215,-0.0521,-0.117,0.175,0.0258,0.346,-0.0868,-0.126,-0.296,0.124,0.198,0.0369,-0.00402,-0.14,0.115,0.0528,0.0104,-0.249,0.289,-0.104,-0.306,0.0179,0.0075,-0.243,-0.0887,0.0965,0.0763,-0.216,-0.0774,-0.26,-0.0555,0.0036,-0.106,-0.183,-0.0457,0.125,-0.27,0.108,-0.0859,0.0907,-0.0397,-0.04,-0.116,0.073,0.0988,-0.179,0.167,0.116,0.145,-0.275,-0.0145,-0.335,0.0816,0.023,0.12,0.239,0.0475,-0.0504,-0.0207,0.0507,0.000517,0.0785,0.0643,0.293,-0.0683,-0.235,-0.0965,-0.00858,0.14,0.248,0.0323,0.199,0.377,-0.0773,0.293,-0.0561,0.0573,-0.405,0.0185,0.184,0.0525,-0.109,-0.254,0.175,0.0628,0.112,-0.109,-0.112,0.000898,0.0966,0.101,0.0794,0.156,-0.276,-0.035,0.0195,-0.16,-0.0262,0.0762,0.573,0.0771,-0.0682,0.223,0.0749,0.0308,0.165,-0.106,-0.383,-0.159,0.042,-0.0838,0.0101,0.187,-0.0327,0.137,0.219,-0.366,0.0943,-0.0495,-0.137,-0.365,0.134,0.0908,0.183,-0.226,0.0661,-0.062,0.271,0.296,0.123,0.0144,0.0433,0.146,-0.134,-0.0211,0.0296,-0.0514,0.0232,0.313,0.0622,-0.171,0.133,0.022,-0.00158,0.176,0.283,0.0881,-0.0495,-0.073,0.0369,0.0811,0.175,0.528,0.295,-0.156,0.105,-0.332,0.135,-0.026,-0.17,0.079,-0.000124,0.107,0.0812,-0.062,0.032,-0.15,-0.154,0.0294,-0.218,-0.0706,0.249,-0.0215,-0.265,-0.193,-0.0302,0.205,0.209,0.0984,0.168,0.139,0.229,-0.00487,-0.0119,0.0112,0.0254,0.215,-0.0263,0.0217,-0.0806,0.121,-0.142,0.0593,0.0679,-0.0639,-0.297,-0.143,-0.0755,-0.598,-0.13,0.0208,0.167,0.187,-0.113,0.238,0.0797,-0.197,0.102,0.113,-0.203,-0.106,0.203,0.0385,-0.00808,-0.0239,0.456,0.0198,0.238,-0.324,0.125,-0.128,0.0156,-0.102,-0.0292,0.187,-0.00434,0.122,0.351,-0.0162,0.0607,0.161,-0.0559,-0.082,-0.0197,0.461,-0.751,-0.0634,-0.336,0.0697,0.343,-0.18,0.077,-0.0523,-0.181,0.0366,0.119,0.14,-0.0275,0.0856,-0.25,-0.213,0.15,0.121,0.142,0.0737,-0.118,0.136,0.351,-0.466,-0.0312,0.47,0.0101,-0.29,0.0638,0.0043,-0.0169,0.143,0.121,0.184,0.104,0.094,0.0872,0.0608,1.17e-005,-0.291,-0.134,0.0823,0.0321,-0.00971,0.0444,0.1,-0.111,-0.531,0.0514,-0.0588,0.111,-0.298,-0.0159,-0.315,0.521,0.0929,0.26,-0.179,0.0453,-0.216,-0.321,-0.142,-0.125,-0.104,0.114,-0.128,-0.116,-0.0957,-0.226,0.216,0.0191,0.0488,0.167,0.182,-0.0866,-0.157,-0.334,-0.193,0.251,-0.282,-0.0717,0.0393,0.234,-0.0882,-0.113,-0.06,0.428,0.13,-0.214,-0.0252,-0.252,0.0782,0.0409,-0.0408,0.00375,0.226,-0.0534,-0.165,0.0808,0.108,-0.0641,0.266,0.00391,-0.0554,-0.272,-0.287,-0.131,-0.087,0.132,-0.247,-0.239,-0.0301,0.086,0.0159,-0.086,0.22,-0.0396,0.19,0.031,-0.0156,-0.345,-0.393,-0.169,0.279,0.114,0.0449,-0.0914,-0.194,-0.215,0.0966,-0.092,-0.453,-0.497,0.0735,-0.0358,-0.208,-0.214,-0.159,-0.134,0.181,-0.00216,-0.0283,-0.0437,-0.389,-0.156,-0.0904,-0.0363,
-0.156,0.0343,-0.145,-0.318,-0.11,-0.00498,0.000731,-0.174,0.167,-0.252,-0.396,-0.00954,0.144,-0.2,-0.0776,-0.171,-0.0721,0.336,0.228,-0.0779,-0.3,-0.0685,-0.00611,0.00143,0.171,-0.098,0.258,0.1,0.146,-0.0172,-0.0401,0.0145,0.0685,0.0669,0.0489,0.235,-0.243,-0.19,-0.275,-0.255,0.0745,-0.00102,-0.00451,0.244,-0.467,-0.219,-0.237,0.04,0.251,0.242,0.0422,-0.157,0.0747,0.209,-0.119,-0.066,0.231,0.036,0.109,-0.0583,-0.0301,0.054,0.0449,-0.193,0.0848,-0.337,0.0157,0.0936,-0.431,-0.352,0.0602,-0.0635,0.142,-0.0388,0.219,-0.063,0.103,0.182,0.111,-0.0199,0.108,0.191,-0.391,0.0108,0.00603,0.291,-0.0955,0.0667,-0.0729,0.0781,-0.00961,-0.0763,-0.377,-0.167,0.0658,-0.0877,-0.292,-0.00268,-0.0511,0.0494,-0.249,-0.229,0.107,-0.0887,-0.28,0.00192,0.0951,-0.421,0.0447,-0.219,0.0707,-0.32,-0.194,-0.022,0.0236,-0.172,-0.0922,0.0144,0.204,-0.289,0.0723,-0.158,0.225,0.0186,-0.0797,0.426,0.0185,0.0483,-0.28,-0.213,-0.0322,0.205,-0.0094,-0.235,0.27,-0.0934,0.144,-0.133,0.236,-0.076,0.046,-0.175,0.186,0.247,-0.0992,-0.146,0.0779,-0.0438,-0.222,-0.198,0.00451,0.0882,-0.111,-0.105,-0.146,-0.426,-0.119,0.0153,-0.0828,0.103,0.101,0.102,0.0851,-0.0466,-0.00999,0.261,-0.0216,0.122,-0.345,-0.0596,0.0647,-0.0266,0.281,0.0846,0.283,-0.501,-0.153,0.176,-0.159,-0.186,0.0972,0.115,0.214,0.0141,0.0597,0.339,0.00283,0.174,-0.285,-0.0958,0.0753,-0.135,-0.093,-0.0923,-0.148,-0.161,0.219,0.102,0.259,0.0809,-0.0407,-0.235,0.174,-0.014,0.151,0.354,-0.16,-0.0523,-0.047,0.153,-0.0177,-0.00135,0.24,0.135,-0.177,-0.0433,0.164,0.0661,-0.621,-0.0186,-0.122,0.211,0.0584,-0.029,0.000467,-0.127,0.0913,-0.0121,0.0388,0.0354,-0.0716,-0.121,0.0502,0.0875,-0.11,-0.103,0.0664,0.0236,-0.163,0.0617,-0.0387,-0.177,-0.127,0.234,0.184,0.21,0.243,0.0857,-0.24,-0.0535,-0.0551,-0.109,0.0248,-0.145,-0.107,-0.0104,0.0725,-0.0138,0.27,-0.0473,-0.0311,0.00526,0.0927,-0.00665,-0.141,0.0411,-0.142,0.199,0.0325,0.135,-0.288,-0.0899,-0.114,-0.0156,0.117,0.238,0.0908,0.127,0.0582,0.118,0.0703,-0.122,0.174,-0.00226,0.00829,-0.189,-0.154,-0.285,-0.255,-0.358,-0.0249,-0.0386,-0.0828,-0.0443,0.185,-0.118,-0.297,0.282,0.36};
double a4[]={-0.252,
0.117,0.019,-0.0433,-0.132,0.385,0.138,0.012,0.171,-0.062,-0.0191,0.268,-0.0759,-0.0824,0.143,0.0979,0.315,0.0432,-0.135,0.523,0.765,-0.373,0.144,0.173,0.0235,0.574,-0.234,0.0872,0.0506,-0.232,-0.088,0.109,0.527,0.0334,0.0736,-0.0295,0.215,0.158,0.396,0.163,0.514,-0.00234,0.17,-0.071,0.0582,0.48,-0.448,0.02,-0.045,-0.0888,-0.0198,-0.111,0.074,-0.176,-0.046,0.189,-0.171,0.0714,-0.0746,0.139,-0.214,0.399,-0.132,-0.176,-0.0635,0.674,0.281,-0.0992,-0.0529,-0.402,0.105,-0.111,0.0553,-0.0453,-0.0503,0.0912,-0.203,-0.148,-0.404,0.394,-0.0511,0.0196,-3.56e-005,-0.00858,0.573,0.12,0.0189,0.00848,0.0857,-0.011,-0.00145,0.111,-0.0158,0.00937,-0.567,0.00491,0.125,-0.00126,-0.0357,0.577,-0.103,0.0597,0.0592,0.0926,0.339,0.368,0.113,0.363,-0.0189,0.215,0.252,-0.0212,-0.0165,0.0475,0.0166,-0.0686,0.219,0.0552,-0.0499,0.385,0.0248,-0.0116,-0.00111,0.00362,-0.573,0.476,-0.0139,-0.00129,-0.0161,0.0151,0.000674,-0.0257,0.00774,0.00166,-0.0227,-0.0219,-0.0956,-0.00322,0.0116,-0.577,-0.529,0.293,-0.313,-0.0826,-0.575,0.58,0.00708,-0.116,-0.16,0.332,0.122,-0.231,-0.534,0.185,0.465,-0.168,-0.126,-0.244,0.367,-0.819,-0.152,0.0932,0.0601,0.114,0.353,0.383,0.141,-0.271,-0.0105,0.232,-0.361,0.00617,-0.014,0.00656,-0.0138,-0.0909,-0.336,0.0789,-0.0734,-0.18,-0.0024,-0.597,0.00173,-0.0125,0.00416,0.669,0.00293,0.00458,-0.00265,-0.000828,0.00671,-0.00186,-0.00232,0.0072,0.00436,0.00465,0.0796,-0.00648,-0.00271,-0.594};

struct NConnection{
    int nIndex;
    int wIndex;
    NConnection(int n=0, int w=0) : nIndex(n), wIndex(w){}
};

struct NLayer{
    NLayer *prev;
    size_t n;
    vector<vector<NConnection> > cons;
    vector<double> w;
    vector<double> out;

    void calculate();
    size_t size(){return n;}

    NLayer(){}
    NLayer(int size, NLayer *prev = NULL) : prev(prev), n(size)
    {
        cons.resize(n);
        out.resize(n);
    }
    void createFullConnections()
    {
        w.clear();
        if(prev != NULL)
            for(size_t i = 0; i < n; i++)
            {
                cons[i].resize(prev->size());
                for(size_t k = 0; k < prev->size(); k++)
                {
                    cons[i][k].nIndex = k;
                    cons[i][k].wIndex = w.size();
                    w.push_back(0.0);
                }
            }
    }

};

void NLayer::calculate()
{
    if(prev == NULL)
        return;
    for(size_t i = 0; i < n; i++)
    {
        double sum = 0;
        for(size_t j = 0; j < cons[i].size(); j++)
            sum += prev->out[ cons[i][j].nIndex ] * w[cons[i][j].wIndex];
        out[i] = SIGMOID(sum);
    }
}

struct NNet{
    vector<NLayer*> layers;

    void calculate(vector<double> &in, vector<double> &out);

    void addLayer(int n)
    {
        NLayer *prev = 0;
        if(layers.size() !=  0)
            prev = *(layers.end() - 1);
        layers.push_back(new NLayer(n, prev));
        cerr << "added layer " << (*(layers.end()-1))->n << " " << (*(layers.end()-1))->prev << endl;
    }

    void read()
    {
        //random_init();
        for(size_t j = 0; j < layers[1]->w.size(); j++)
            layers[1]->w[j] = a1[j];
        for(size_t j = 0; j < layers[2]->w.size(); j++)
            layers[2]->w[j] = a2[j];
        for(size_t j = 0; j < layers[3]->w.size(); j++)
            layers[3]->w[j] = a3[j];
        for(size_t j = 0; j < layers[4]->w.size(); j++)
            layers[4]->w[j] = a4[j];

        cerr << "readed\n";
    }
};

void NNet::calculate(vector<double> &in, vector<double> &out)
{
    for(size_t i = 0; i < layers[0]->size(); i++)
        layers[0]->out[i] = in[i];

    for(size_t i = 1; i < layers.size(); i++)
        layers[i]->calculate();

    out.resize(layers[layers.size()-1]->size());

    for(size_t i = 0; i < out.size(); i++)
        out[i] = layers[layers.size()-1]->out[i];
}


void createNet(NNet &net)
{
    net.addLayer(19*25);

    int lay1_mc = 4;
    int lay2_mc = 20;

    net.addLayer(9*11 * lay1_mc);


    int kernel1[] = {
        0, 1, 2, 3, 4,
        18, 19, 20, 21, 22,
        36, 37, 38, 39, 40,
        54, 55, 56, 57, 58,
        72, 73, 74, 75, 76
    };

    NLayer *lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc * 25);
    for(int map = 0; map < lay1_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 9*11; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/9)*18*2 + (ney%9) * 2;
            for(int c = 0; c < 25; c++)
                lay->cons[map * 9*11 + ney].push_back(NConnection(base + kernel1[c], map*25 + c));
        }
        //cerr << endl;
    }

    int kernel2[]={
        0, 1, 2, 3, 4, 5,
        9, 10, 11, 12, 13,
        18, 19, 20, 21, 22,
        27, 28, 29, 30, 31,
        36, 37, 38, 39, 40
    };

    net.addLayer(3*4 * lay2_mc);
    lay = *(net.layers.end()-1);
    lay->w.resize(lay1_mc*lay2_mc * 25);

    for(int map = 0; map < lay2_mc; map++)
    {
        //cerr << "map " << map << endl;
        for(int ney = 0; ney < 3*4; ney++)
        {
            //cerr << ney << " ";
            int base = (ney/3)*9*2 + (ney%3) * 2;
            for(int f_map = 0; f_map < lay1_mc; f_map++)
                for(int c = 0; c < 25; c++)
                    lay->cons[map * 3*4 + ney].push_back(NConnection(f_map *9*11 + base + kernel2[c], map*25*lay1_mc + f_map*25 + c));
        }
        //cerr << endl;
    }

    net.addLayer(20);
    net.layers[net.layers.size()-1]->createFullConnections();

    net.addLayer(10);
    net.layers[net.layers.size()-1]->createFullConnections();
}

int main()
{
    char str[100];
    NNet net;
    createNet(net);
    //ifstream fin("perceptron");
    net.read();

    while(cin.getline(image[height], 1000))
        height++;
    width = strlen(image[0]);

    for(int i = 0; i < height; i++)
        for(int j = 0; j < width; j++)
            switch(image[i][j])
            {
                case '.': image[i][j] = 0; break;
                case '%': image[i][j] = 1; break;
                case '#': image[i][j] = 2; break;
                case '@': image[i][j] = 3; break;
            }

    vector<digit> digits = split_image();
    //cerr << "splited";
    for(size_t j = 0; j < digits.size(); j++)
    {
        //digits[j].print();
        digit d = scale(digits[j], 25, 19);
        //d.print();
        vector<double> x;
        for(int i = 0; i < 25; i++)
            for(int j = 0; j < 19; j++)
                x.push_back( (d.mat[i][j]>0) ? 1 : -1 );
        vector<double> y;
        net.calculate(x, y);

        int jm = 0;
        for(int j = 0; j < 10; j++)
        {
            //cerr << y[j] << " ";
            if(y[j] > y[jm])
                jm = j;
        }
        //cerr << endl;
        cout << jm;
    }
    return 0;
}
