#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{34.7725,53.5656,16.3296,46.3761,141.069,201.616,239.624,258.977,298.626,141.022,136.27,62.2264,-41.9884,60.1812,137.658,151.112,49.3858,56.4567,135.226,168.883,126.963,102.825,2.80716,52.6647,-113.595,-97.4635,31.763,-5.33349,110.937,196.222,93.8184,152.297,151.68,203.138,196.58,180.639,4.1479,-43.6889,-183.604,-165.404,-149.859,-136.144,-66.3353,-15.977,-100.824,-18.2881,79.0287,82.8796,91.2469,210.591,267.661,139.823,-186.43,-53.564,23.7359,64.385,82.0768,-11.2871,-52.0373,-70.6854,1.57226,-69.8303,-1.18424,-15.2617,17.272,67.0487,133.329,-57.1544,20.9006,-55.7836,-16.6914,-194.526,-25.0913,-74.2427,-198.812,-211.051,-78.0534,26.4838,4.19517,78.6035,74.0026,139.194,194.98,-74.7231,-174.708,22.266,143.929,39.7061,-84.6812,-46.2478,-87.6661,-98.7051,-82.1409,-69.0338,76.8014,116.215,53.4455,100.688,213.31,-15.0838,-62.0984,8.75892,115.762,-58.1547,-226.087,-172.242,-10.07,127.637,140.227,18.4135,38.7117,109.019,56.5335,54.3349,74.8951,-105.552,58.2426,-0.770895,112.293,-46.4303,30.7803,-36.3004,26.672,72.3562,92.5751,139.496,207.6,112.622,57.8115,1.33961,-90.5852,-7.16959,-15.7457,46.7015,-41.4846,59.3852,-32.0191,27.4249,28.4271,-119.19,-37.9715,6.34832,-79.138,-46.9756,2.3192,-215.843,-21.3796,-4.51709,-64.1961,13.8962,202.9,-7.3759,9.91235,43.6663,-28.5465,-28.6958,40.89,76.5206,118.529,106.296,-82.9461,-116.339,-83.2472,-96.1064,-85.3333,72.1279,9.61525,15.2623,-38.4315,-15.8345,-75.1433,27.1242,62.7234,28.8925,6.10306,-49.4016,-90.5136,-28.0899,-95.661,-120.318,-41.0675,-136.374,-40.6084,-142.892,-105.422,-88.1229,-21.5867,-35.741,-30.6754,-18.3119,51.6731,-119.9,17.5728,170.069,40.1056,-44.7316,-100.054,-33.7944,64.8959,75.7057,28.2423,-6.41872,-116.821,-336.851,-20.7501,-55.1592,156.564,-19.4434,1.31744,95.0311,158,-35.0677,-113.993,-35.9692,63.9299,105.052,53.0766,-101.402,-183.009,-72.3523,1.66861,122.575,70.3062,25.7358,40.2477,-11.014,9.72641,185.189,113.689,-0.827524,168.083,157.598,1.72054,-22.8769,1.00423,85.309,140.218,17.2063,13.5021,46.4174,8.45661,12.7804,153.215,218.915,290.623,104.586,68.7985,112.209,-29.3597,-2.65332,142.924,-49.9114,-81.6601,38.1872,25.7778,64.3483,},{79.8741,107.571,122.604,257.164,275.164,375.053,349.086,341.143,228.41,-91.7052,-269.263,-381.341,-65.2151,47.0339,70.5976,-127.242,60.3803,286.414,386.029,372.891,185.727,223.62,179.704,76.3146,-58.381,154.171,257.807,136.507,-54.8181,382.022,126.121,-69.5888,-234.184,73.3642,505.301,384.224,275.674,44.1123,-25.9998,125.608,-12.7563,-55.0138,-100.526,73.6325,560.068,449.435,188.128,-85.9931,110.285,31.0563,340.012,-51.8842,233.042,-169.545,-314.047,-204.898,-220.049,-133.805,91.5507,-179.583,3.60292,452.263,254.804,236.728,152.643,244.404,34.2689,310.434,-120.569,15.6025,-106.101,-113.566,-284.913,96.4034,79.6522,.732954,-22.9685,106.749,52.9537,156.994,58.7902,41.7006,-60.776,140.858,116.837,95.5391,-204.325,-99.2427,-59.3841,-14.9833,34.3394,8.17204,183.476,186.201,-132.126,79.7631,52.4675,-118.79,-219.46,-432.343,338.479,444.516,328.448,163.507,-165.235,2.11004,-105.001,42.8266,131.225,71.6514,-351.76,-175.02,-45.6039,-210.833,-381.698,-26.5656,-12.0094,303.222,280.587,263.541,-223.216,-148.428,123.323,-165.119,-353.796,-27.04,-245.239,-300.34,-162.167,-571.664,-473.126,-456.64,-217.141,-126.599,110.112,398.604,57.5677,15.9069,-190.088,-326.1,-201.846,-141.026,-9.12913,-284.741,-0.241303,-546.334,-580.668,-327.548,19.9426,-312.347,-33.1584,181.371,33.3666,-175.623,-176.211,-130.959,-12.0418,110.332,75.7711,-90.0459,5.8112,-290.622,-201.579,-172.898,-337.831,-152.223,27.7377,88.3335,-129.874,-144.68,-124.929,-409.302,-84.2874,-123.761,-17.8612,172.36,106.803,123.409,-20.4178,-206.556,-148.981,136.027,92.6607,122.442,-124.458,-39.9057,-41.2401,-340.495,-161.269,224.039,88.3704,333.575,35.3913,128.737,54.5537,7.39343,-107.755,-80.5691,-120.282,84.8793,-43.9407,-41.9578,8.76409,-162.19,-290.704,148.043,23.1649,256.249,-37.7277,253.349,97.1832,241.179,-9.92135,169.867,-10.7027,116.619,-145.394,8.52747,-77.1683,-329.496,-28.3507,143.712,148.69,34.5294,15.0346,369.936,220.305,117.691,302.344,317.52,120.315,-20.5358,-256.825,-294.194,-180.991,121.048,-24.6249,268.387,201.843,34.8884,168.445,420.084,376.037,303.884,84.5507,54.9763,-58.4681,13.7369,15.2146,-279.951,-43.4854,194.893,218.407,60.2019,4.35225,-7.11334,},{-225.084,-405.238,-303.045,-53.9799,-30.9025,74.72,340.912,302.43,-64.8518,20.1801,-357.541,-252.857,112.443,3.19098,73.2965,-147.979,-246.22,-107.888,-13.9329,-167.097,146.258,-97.3906,-233.316,-273.247,-288.461,-161.609,-173.941,-277.502,-378.614,-228.782,-283.328,-230.468,115.457,-293.345,-473.567,-160.808,-135.05,123.953,147.749,-68.4766,162.531,-158.58,173.234,-154.627,-175.272,-545.503,-97.9042,114.826,-23.6061,18.3586,-32.9339,37.2949,236.648,215.54,533.778,191.407,277.104,224.935,-230.439,358.494,340.815,316.761,433.67,-243.481,-319.018,-7.18066,280.324,237.627,225.786,396.128,143.058,-129.79,270.886,42.5901,167.953,478.848,572.743,453.797,832.628,-72.2313,-104.482,.235571,19.7125,299.11,162.195,-13.445,98.7478,76.1521,-145.895,-43.0916,-15.6938,223.697,626.094,353.192,611.218,86.4717,-257.199,-164.758,-120.662,96.5166,-512.965,-677.49,-267.76,-248.367,-292.114,-727.594,-695.5,-219.626,470.313,105.092,714.027,476.279,83.8213,143.638,-260.501,-585.507,-694.456,-317.09,-87.5847,-118.373,59.6859,-173.079,-238.074,241.92,164.519,-181.481,226.674,355.433,209.606,714.785,-242.083,-596.471,-644.624,-411.923,-148.204,-261.519,-215.168,-285.197,-245.82,-253.426,-43.9311,-263.838,-166.291,193.692,22.1422,298.821,-28.6108,73.6478,-150.699,98.3973,-115.2,-324.971,-194.747,-35.0139,-186.229,-312.801,-79.3617,-304.845,-392.955,-153.679,-97.7573,-247.516,-254.513,132.247,279.095,108.28,85.2696,-313.163,-49.7167,-45.1322,-178.992,-2.39181,-48.095,-499.373,-523.879,-145.756,-231.369,-440.219,-47.3995,498.863,177.494,-94.0897,91.5095,60.8529,41.1135,-140.569,-222.284,16.1818,20.8118,-659.583,-413.333,-643.876,-122.061,-323.54,45.1323,432.983,208.211,253.999,164.671,-66.9729,-143.758,-145.653,-149.628,-143.514,-237.644,-345.853,-257.459,-61.2763,-238.986,-229.653,-79.712,74.9415,336.336,238.206,-59.8652,-255.667,-75.0314,-205.784,-8.73548,-286.405,127.222,64.7301,-285.296,87.4782,120.895,-106.045,86.7821,79.4864,375.239,193.606,174.281,75.984,136.27,282.792,274.045,348.679,373.146,269.349,385.804,170.049,199.241,-85.3168,-328.105,-5.05134,379.883,204.794,34.9485,-22.8777,6.26897,299.815,679.083,270.201,366.047,404.071,426.759,373.545,},{-11.7622,-31.7937,-56.6609,-18.7657,71.3273,-69.8919,97.1117,-174.821,-413.996,-163.248,-372.898,-331.013,-193.68,-243.052,-115.452,-87.189,-11.4357,1.5235,-150.594,-189.808,-17.6811,19.8022,31.7817,-12.2938,-173.897,-177.105,-60.8029,-200.768,-278.667,-153.73,-137.062,-113.282,-38.2435,-237.873,-194.269,-37.248,1.24414,208.625,-19.8261,-186.512,-100.17,46.8289,314.68,-60.5202,-356.698,-462.978,-171.818,-87.615,-249.437,-30.5513,142.085,27.5123,88.8403,29.2288,96.0424,-69.2612,-126.111,35.8651,206.641,311.569,253.607,242.166,201.16,-313.287,-292.447,-9.25288,-14.0473,5.01977,111.357,80.1724,98.0811,-58.3938,-38.924,20.5428,94.0288,283.703,354.326,292.58,562.022,-7.28928,-187.144,-29.2116,-141.262,139.477,106.379,78.0652,73.3989,-93.9235,-222.742,-158.856,10.1799,184.05,366.482,380.7,565.023,94.7433,-70.5734,229.237,98.3218,105.058,-91.2242,-157.358,-173.176,-264.998,-498.813,-679.403,-589.076,-178.585,225.991,293.613,680.482,465.324,137.625,335.366,34.7288,-156.599,-303.467,-235.718,-144.309,-385.459,-384.407,-364.397,-441.027,-273.894,15.7819,9.01446,477.939,361.295,192.188,711.298,100.699,-133.364,-450.677,-243.491,-57.9279,-173.052,-299.966,-328.712,-546.308,-415.967,-315.414,-16.8348,120.866,273.806,71.6225,573.966,331.1,265.375,-7.81618,-130.131,-285.687,-457.298,-484.441,-253.981,-124.513,-140.801,-90.002,-281.57,-126.038,118.118,-16.7355,143.438,85.6247,377.378,183.166,91.1679,-75.8276,-272.938,-310.395,-154.247,-56.684,65.4586,-72.5034,-283.416,-207.196,-34.4124,-131.545,82.5217,211.544,360.587,289.745,136.201,63.3995,-100.121,-183.982,-107.837,-8.23396,72.6935,-25.2374,-383.792,-8.15091,-416.181,-73.2891,-107.511,2.88808,139.956,257.028,205.276,48.3469,-151.347,-218.513,-111.943,82.5836,-113.437,-349.389,-219.552,-18.6729,-333.557,-113.995,-326.438,-122.38,-151.777,136.449,274.819,170.576,-73.7498,-71.6085,121.891,158.475,-274.607,-86.8998,-24.2958,-304.296,-99.132,-109.153,-359.347,-179.053,-8.38597,164.203,80.3904,124.742,-27.4978,-128.349,-39.2405,-139.653,-152.242,-128.3,-184.351,-64.9376,-83.1444,-151.55,-354.066,-616.993,-478.145,-250.314,-126.097,-46.2955,46.3788,-86.3008,-38.9589,-62.396,-150.787,-270.747,-164.475,-136.939,-78.5274,},{27.0139,23.3523,6.96595,12.4682,33.0939,73.6629,77.3882,70.311,78.8426,67.6736,77.2089,27.4751,4.28803,.229348,26.1348,19.0548,25.8563,28.2868,28.7394,60.3166,24.2676,53.1225,12.7604,-2.80522,-21.3309,3.93008,-2.07257,9.95805,72.3785,52.1414,23.551,13.496,23.1698,26.8355,61.4555,46.2618,23.3273,4.09481,-23.239,-6.29404,3.13031,-39.7274,-3.65856,17.9471,28.4613,40.3879,23.6245,8.95557,23.6699,62.2742,61.2234,41.6934,-20.0171,-8.21422,17.5868,36.1147,21.7532,12.8555,3.75117,-9.15508,52.4445,22.8824,49.0307,8.41949,25.5925,56.7636,47.9293,-3.46234,6.82285,31.0688,33.5027,.762348,21.6527,31.1507,3.20606,-3.09814,33.2067,51.0682,45.8743,32.0838,31.9374,54.2133,29.7742,.421666,11.9657,8.28534,33.3476,4.90724,-28.3824,1.13182,-4.69876,-20.8185,40.3752,64.171,49.2861,31.2588,24.4555,9.30337,-0.973981,-16.3418,-10.6453,15.0617,-8.97125,-32.9393,-24.7108,31.9323,21.1088,11.2075,45.0273,34.0204,33.2382,20.6729,16.8982,.772351,-18.8851,-26.2106,39.3173,28.9571,40.3896,21.3151,44.416,64.5336,51.2447,18.3093,43.991,39.8419,45.7264,23.0502,17.2317,36.1491,31.5695,74.5658,37.0987,30.459,32.6965,33.9434,26.2709,63.4863,45.2895,13.553,28.2652,29.765,19.1562,5.63864,11.5702,24.5447,80.6935,53.4458,28.9651,25.6753,59.5199,33.9002,32.1235,46.049,37.3987,13.2027,55.3897,79.7342,52.7556,12.9343,11.2121,38.8411,30.4675,16.4121,-7.77085,14.6888,22.1983,5.46234,-8.35652,24.5555,20.967,31.6036,41.3762,42.8742,17.5609,-10.2756,21.6852,65.0976,48.5854,16.1394,13.5456,.930618,5.40433,-18.0674,4.86937,28.6896,33.1993,9.49311,32.7226,42.3621,45.0007,1.22759,32.8008,69.2473,46.4828,17.8573,29.2066,5.2619,-4.72277,27.2328,28.8135,46.9163,33.045,-6.99594,27.4449,32.2891,37.9032,16.3418,16.9169,44.9606,46.6764,33.2684,8.18824,24.4313,12.3722,44.0579,24.536,22.2065,31.6186,6.93987,25.1112,22.0435,24.0437,7.16227,8.9476,29.6378,73.3678,78.2206,72.2638,15.3787,4.44018,-6.81182,-3.61489,49.2957,46.0956,9.56691,38.6103,29.0744,13.8172,8.63516,-4.38277,-19.7454,33.0771,64.0449,76.9706,45.882,20.835,38.6189,21.9594,27.1326,43.3962,2.09342,4.02446,11.1202,4.64727,17.7054,},{22.3754,19.0458,2.19727,11.112,40.1663,89.5642,116.818,96.082,92.8682,54.5538,62.4079,-39.2148,-58.8135,-19.0484,40.126,35.7783,21.6794,23.0533,30.9708,71.4668,34.7134,60.4254,5.68813,-18.9809,-65.0192,-7.61468,-46.1483,-39.7346,48.9164,62.3045,38.7327,30.1405,36.1987,39.2359,76.9172,69.6189,26.5834,-1.82091,-64.1048,-31.3239,-23.675,-93.0538,-51.279,-27.238,-24.021,31.9211,31.6707,15.9856,25.4915,75.6498,82.2749,69.2411,-57.5194,-28.7469,7.20598,46.0941,-6.91184,7.18335,-32.3271,-63.5961,11.8664,-2.37059,37.4856,6.49811,29.9542,70.8167,70.2678,-7.91582,-3.55259,20.7287,41.5833,-41.3045,7.72422,12.8502,-31.0819,-60.3729,-6.93826,38.6369,39.4083,38.0304,41.2668,65.7355,41.1674,-3.3349,-6.54499,4.28821,36.7347,-21.2962,-67.4463,-5.28938,-33.5199,-67.6268,-0.412901,49.7246,45.977,42.3768,30.2115,.42213,-4.40085,-54.5625,-19.8659,40.5451,5.53351,-38.2059,-59.6341,31.0308,21.6593,1.50143,19.3568,10.9624,25.8344,30.0868,18.4963,-21.1778,-66.7471,-57.5789,84.3632,48.0517,61.4728,13.9877,33.6622,75.8554,56.8779,17.2435,40.6995,40.0669,44.0369,32.3568,18.9887,6.3073,-30.988,96.372,32.0589,21.2219,10.3261,21.0101,1.04708,76.3586,47.9775,-21.6162,-2.64117,22.8445,-7.10923,-1.23184,1.78486,-23.3151,100.848,59.5997,23.0395,20.7992,74.6894,12.1847,5.41512,61.8603,31.2977,-23.3256,43.0797,91.034,80.3254,15.3414,-14.7262,-2.19502,-11.7353,-12.1468,-41.9141,-7.13422,-17.0931,-41.318,-69.9909,-6.31791,13.3932,32.664,24.2245,17.931,-27.7817,-46.5811,8.5601,55.081,32.6325,1.31854,.702922,-26.4537,-16.0448,-63.5123,-46.0523,15.9474,38.936,-19.3091,4.33096,37.455,42.7141,-13.5373,21.3821,73.4211,33.7757,6.66415,6.72477,-25.2265,-21.6374,12.2673,14.2103,51.3359,26.1599,-71.9484,.660477,27.5954,58.1503,25.4826,19.9952,69.6624,74.0148,29.5863,-10.9037,13.2484,6.57132,42.9808,14.9578,29.4731,24.6736,-21.473,3.78491,36.8976,37.7934,9.81228,16.2266,35.4093,76.2138,94.6302,71.6953,2.14412,4.87408,-7.8791,-13.7451,48.7535,40.295,-2.81448,20.4256,33.5264,11.006,13.4309,7.61798,-12.9957,45.5741,84.1836,98.6249,48.8534,24.1386,64.5357,27.6577,24.6281,50.9434,-15.7515,-4.14876,31.2055,20.2794,29.4135,},{25.8721,24.7202,12.7688,17.9834,38.3276,77.1396,76.9426,70.6143,74.6979,64.2667,69.929,29.6338,15.5182,14.5817,33.5791,28.4476,25.696,30.4441,32.5784,61.4459,35.9232,58.8854,27.8733,13.4532,-7.67465,9.99039,9.32289,26.6283,77.8987,61.8719,29.8962,20.6457,24.1069,32.791,64.0704,53.0505,28.631,15.5058,-0.622199,7.59695,5.40063,-25.7698,12.6742,29.3723,39.2261,45.9034,28.9637,10.2546,25.2974,62.1934,64.61,52.8711,-0.409707,8.02854,23.6221,32.419,21.046,24.3265,21.8377,9.22941,59.6204,29.5654,45.5628,8.93994,23.6188,58.5533,53.389,8.79428,14.2962,35.1395,23.8529,-7.69215,24.6461,41.1417,19.537,12.0346,39.5865,49.3302,41.378,28.0468,32.7494,56.8128,36.0215,7.60694,7.07943,-0.166737,26.3255,18.8626,-6.53721,22.0096,12.9381,.0998753,44.201,57.5832,43.4198,27.378,21.3049,17.5466,6.60254,-27.0061,-16.0906,24.1755,5.48689,-13.1613,-18.7731,33.5582,20.7612,24.0543,51.3234,35.9622,33.3861,18.7933,15.6221,9.38201,-10.4721,-26.9742,26.5971,33.5975,41.8486,28.9698,38.6208,62.4584,39.2773,23.261,45.093,42.078,50.4377,21.5649,15.3996,27.8865,15.694,48.6948,27.2932,28.9562,33.2461,32.6711,21.2583,54.5771,38.1179,12.9456,28.3681,31.6694,24.5068,7.71287,7.24482,10.2254,57.5033,44.6548,28.7588,30.8053,57.2654,35.5638,22.116,36.4825,36.3552,18.6851,54.0641,73.7076,50.6861,13.3832,-2.56418,23.3554,21.247,20.6154,.234999,26.2725,28.6751,12.7301,-9.53703,19.5732,22.5341,36.2608,44.0618,43.4695,22.6704,-4.95393,3.65401,42.1106,40.0507,16.8865,14.2843,9.28243,12.3514,-12.6473,-6.28093,16.3775,32.2939,20.0365,34.3715,41.1567,44.9568,-4.00323,17.1226,49.3307,29.0828,9.73158,17.6004,6.20477,-2.04753,14.2117,15.9975,35.6103,24.0475,-8.0679,22.172,27.128,33.5545,14.4769,15.2053,40.3758,47.5222,36.0488,15.5565,30.8044,21.9656,40.9719,19.6672,21.4007,32.1228,14.4301,36.793,26.3459,25.0341,8.18066,16.6062,29.9324,72.8015,79.3306,73.8213,29.5947,21.9256,14.1729,7.86297,49.3141,58.983,28.3477,49.1017,31.2967,19.9064,13.5808,4.52742,-6.23567,32.3942,58.2158,75.1656,52.0103,30.9749,41.8789,20.2754,32.6507,57.344,16.0287,15.0154,16.2579,10.8432,19.8823,},{23.0446,19.8548,6.4379,12.1604,34.6254,79.7521,82.9683,76.1724,79.6384,66.0749,72.507,25.27,4.68151,3.11302,25.8216,20.8429,21.8618,26.5989,29.475,61.1467,34.4439,59.892,22.7741,3.89433,-17.8866,7.67013,5.33692,18.3954,74.9468,55.138,22.0347,11.9672,21.7187,30.3225,66.3563,55.277,30.5661,12.8943,-10.8469,.204159,5.91085,-32.9526,2.18335,21.1641,35.2378,44.8001,24.1066,7.74177,26.9861,66.9587,68.2678,52.7579,-7.46185,.482351,21.4392,37.1977,23.8544,17.8439,9.37264,-4.16793,56.0903,29.5474,50.6876,7.83217,28.305,62.5903,55.0585,3.33,10.1615,32.5424,30.0858,-2.72418,23.4652,34.4389,6.60716,-0.398139,38.0955,53.3253,47.8884,31.0102,37.2542,60.7302,35.6708,2.39859,5.49144,3.09032,31.0709,13.0037,-17.484,10.6578,.255013,-13.1776,44.8391,63.5407,50.5699,30.887,26.0653,16.0625,4.24638,-26.23,-19.0455,16.0223,-6.08824,-25.2093,-25.019,31.2336,18.9026,16.964,50.9731,40.3032,36.0025,20.7257,17.1662,7.83809,-15.9647,-31.6447,27.8186,26.2211,38.5712,22.352,39.8965,63.1528,44.448,20.5568,45.9561,45.9769,50.6573,23.3951,16.8084,32.6845,22.4723,62.2588,31.576,31.3966,35.4678,34.1309,26.0439,64.8834,42.9962,11.291,28.7725,32.2411,25.1642,7.53169,9.4775,16.2924,68.8571,47.567,27.7926,29.4395,57.7395,34.1818,30.1426,45.5912,39.4939,15.7437,53.9052,76.286,52.9612,14.1618,2.51764,28.004,22.0144,14.4971,-7.57906,19.5925,22.4295,6.22769,-6.44849,27.7217,24.2716,33.6941,40.5085,40.7897,17.8181,-8.91233,11.6462,52.0844,40.5622,12.5466,9.1556,.245416,5.59158,-16.3265,2.79615,26.11,34.7337,12.7266,29.4881,37.4792,42.3519,-3.21796,25.1293,57.9057,36.2949,11.406,18.8299,4.86288,-3.03646,24.1513,26.189,44.5419,29.4471,-10.0299,21.7275,27.3928,33.8798,14.9603,12.7462,40.1264,46.4072,31.6847,11.7137,29.7319,20.2874,46.7594,26.6303,24.3651,28.1579,6.38929,29.3518,21.5855,23.2679,7.99697,13.1958,29.9909,74.802,82.2751,75.8303,24.0534,14.3863,3.812,4.42325,51.5986,53.2047,19.9615,45.8996,31.6328,19.3939,13.507,1.74983,-9.46087,35.0333,63.5463,78.9499,51.8758,28.4223,42.1709,25.283,37.3052,55.0798,12.7642,13.5098,18.0883,12.5503,21.3767,},{-4.03368,-11.02,-117.542,-45.0241,90.0038,-66.6367,-1.84914,-99.8842,-327.107,-72.2149,-292.978,-148.531,36.8616,12.3515,53.9419,-54.3035,29.5638,128.982,18.4006,-137.376,-47.9155,23.1001,52.5824,-28.994,-161.605,-167.11,-161.477,-176.802,-69.2307,.361155,-35.7011,-35.0056,-37.8405,-236.378,-255.685,-80.1571,-69.3931,184.519,-40.5804,-121.328,-61.8317,-26.8149,320.103,-39.3736,-236.963,-226.416,-11.133,34.5939,-247.546,-82.0465,12.3201,-2.32126,102.035,102.645,231.642,30.5273,-33.6132,102.987,207.541,390.412,352.915,329.034,308.677,-205.781,-236.371,7.87466,-67.1383,51.1323,172.631,181.289,66.8486,-106.709,-33.9838,-12.6974,161.981,395.043,465.689,482.367,537.417,57.5988,-153.767,15.2121,-250.192,76.2624,123.772,-73.1734,-89.9291,-201.379,-272.446,-238.822,-15.5529,265.074,507.618,530.028,529.392,106.908,-106.266,95.9443,-46.2551,-2.72729,-234.346,-248.359,-237.953,-300.162,-442.711,-547.693,-327.618,60.0843,491.149,360.332,639.167,410.373,154.373,257.13,-90.7354,-317.992,-409.037,-293.536,-235.837,-440.704,-328.561,-303.295,-288.084,-174.15,153.985,119.459,507.358,304.785,202.808,729.973,-69.9382,-370.266,-563.342,-367.648,-175.931,-165.173,-270.677,-342.61,-490.967,-384.117,-140.917,81.9846,181.884,258.794,78.1598,478.028,157.669,185.86,-83.3944,-185.86,-313.491,-470.658,-506.758,-270.463,-77.9304,-64.793,53.4386,-62.246,-33.7081,114.288,14.2147,.960916,-133.249,190.665,39.4485,-65.049,-249.977,-475.971,-477.223,-276.966,-34.7381,190.294,-20.8043,-248.355,-187.976,-50.6741,-72.057,.342435,80.732,239.116,163.57,6.30965,-110.748,-230.689,-272.731,-238.382,-3.20935,135.303,58.6138,-319.871,22.0692,-347.329,-40.5679,-61.1806,-75.2175,102.728,245.529,175.582,15.8232,-160.459,-203.236,-159.562,122.003,-3.40206,-166.447,-93.0378,85.2047,-208.55,-67.7946,-186.804,-167.129,-267.38,77.1951,246.179,77.1831,-118.623,-113.867,104.799,236.102,-147.59,33.672,205.721,-126.991,-49.4942,-84.0922,-412.961,-235.311,-193.946,58.635,-58.5757,-16.5168,-150.35,-145.912,-70.8416,-114.903,-126.044,76.0114,10.3044,86.4827,-26.7524,-178.386,-453.022,-712.803,-553.796,-301.837,-98.7574,-140.869,-45.7629,-164.134,-208.932,-172.124,-269.417,-212.18,-10.6578,1.48683,-63.7286,},{31.8881,25.3116,18.2293,23.1127,45.9109,93.13,92.754,87.3599,86.2708,77.8969,87.332,47.8341,25.3287,18.7162,32.7705,23.5664,32.9181,35.4617,38.4443,72.2299,44.0722,67.3733,39.3486,19.0031,1.97952,23.0057,31.2549,47.6343,91.2779,68.7275,27.9642,14.6873,22.9077,30.0442,68.9222,55.6561,34.2403,24.3004,12.6889,7.96494,15.9149,-7.62158,31.2909,51.9556,70.626,70.138,36.0643,6.20991,26.0304,66.9179,67.4723,50.678,8.65346,15.4569,23.0833,35.0988,29.2912,29.9253,35.7398,30.3196,83.094,51.8293,58.2757,9.64843,22.5777,59.9376,53.4883,9.85646,14.9765,28.2404,24.2358,-0.618392,29.3495,49.5949,34.444,27.5251,55.1964,64.7049,55.9798,30.6432,35.0083,59.7555,38.6432,3.86015,-0.622033,-2.21548,24.2716,18.8211,11.7704,37.6925,23.4137,7.91336,56.9627,70.2937,55.8795,29.0771,23.0626,23.7503,14.9671,-28.8774,-27.4311,7.45541,-8.29922,-20.7172,-3.07907,41.878,20.74,20.6983,56.4405,53.3842,42.4237,20.6078,16.8137,20.8952,.87317,-20.3646,12.4069,14.7903,24.6204,27.1073,47.749,70.3624,35.1004,14.0236,38.8404,50.7411,57.1006,22.7417,17.2058,38.0914,27.8845,50.6036,27.0963,31.4071,48.8751,52.0873,48.2629,67.8504,38.2405,9.88942,26.9488,29.2249,32.3346,9.26973,10.5848,20.9715,57.1645,36.5311,20.0809,28.3848,63.8852,51.1556,38.3041,48.1985,41.4557,18.767,43.3865,61.4185,40.2759,10.9913,3.23264,28.5226,22.0061,14.2118,-4.07136,34.3872,42.2956,32.2529,14.158,42.5823,27.3005,28.4087,34.4151,34.6899,17.0754,-9.55499,9.27236,46.567,34.9274,11.0615,14.5466,19.3473,25.291,1.25028,19.5295,34.1058,33.1806,15.9441,26.1285,26.5176,30.9112,-11.4833,23.6209,53.2183,35.3974,13.8165,30.3564,28.1047,13.8614,29.591,33.71,46.6176,26.7135,-5.16123,17.1424,20.1514,24.7191,5.88254,1.71898,27.7801,40.9954,37.8174,33.7387,53.1094,36.5074,52.2817,35.9536,27.2898,21.2158,3.28387,31.0864,10.9788,16.9714,6.66912,6.41114,19.8508,77.0729,92.1512,86.2804,38.0718,26.4153,18.7635,17.6733,47.0729,51.6399,21.8099,46.5962,29.7851,21.3176,16.5803,-4.13787,-12.1161,34.8969,66.3098,86.7078,62.308,36.5593,39.913,27.4488,41.099,53.5825,18.8866,15.4046,18.6486,15.5984,20.4868,},{-0.290654,2.56869,140.179,-2.74466,-165.891,45.3319,234.612,164.048,163.837,-8.59419,-1.35657,-490.722,-44.2398,22.2158,-133.041,-124.029,73.611,-140.556,-411.268,104.166,93.6265,-40.7748,116.619,-148.066,-29.2215,-2.87609,-86.9745,-178.929,-334.946,-242.116,-58.4404,-240.427,-70.9048,1.63765,44.5999,-57.6148,10.865,-88.5428,46.0716,-102.928,-71.2853,-129.528,-75.7088,-132.999,330.966,266.837,-108.705,-34.3769,1.7083,-144.219,-3.21011,335.616,663.703,136.264,-70.8564,-187.652,-129.695,24.2189,121.827,85.9123,195.264,365.416,303.912,125.026,50.4048,41.8877,316.122,267.238,50.0548,-66.8366,-151.863,-32.5387,-136.995,-9.40367,-23.7628,-44.923,101.784,152.087,275.119,-21.9513,78.8989,-119.429,172.952,266.469,17.6413,-135.851,-201.45,-4.85694,132.315,-82.5699,-106.169,-89.2664,127.375,253.959,19.9619,-77.2022,-61.3993,-356.618,-256.835,-311.937,-88.7181,-55.165,23.3347,-62.1936,-36.8117,-167.678,-185.46,-76.7254,-394.461,113.78,-162.27,-138.053,-200.79,-427.067,-430.936,-111.44,-230.925,230.573,97.5564,125.679,-356.779,-43.2122,129.112,-132.494,-360.422,-466.238,-404.081,-180.881,-202.71,-475.034,-136.597,-122.741,-30.0538,-104.651,210.174,148.135,339.896,358.805,3.24262,-51.4105,-81.322,-176.686,-228.41,-235.776,-28.04,-11.8787,115.598,92.5042,-52.364,-149.092,-48.0793,-50.259,11.4855,112.127,192.767,172.098,-267.133,-166.282,-110.95,-118.353,24.1959,-4.71034,264.608,-52.8239,-91.6177,100.239,-241.349,-388.696,-94.2543,-11.1872,199.505,-121.166,-254.544,-67.8927,-322.413,122.229,5.92271,58.3129,220.273,80.0866,-112.402,140.049,-52.9247,-19.6395,-228.311,-97.9417,-44.4913,-251.373,-249.169,11.0767,-418.169,128.161,29.5664,10.8108,134.904,-216.021,80.8122,33.3662,23.2238,-32.0868,-148.19,-400.756,21.285,207.132,-268.671,219.493,-100.951,250.99,-165.883,-142.555,-78.2988,254.936,217.087,118.773,232.148,-172.68,-260.603,-72.3081,150.457,-130.284,-71.4364,-229.992,129.723,235.58,-59.5891,50.3122,182.173,292.87,68.4129,15.3168,18.1531,76.1008,173.758,29.6769,-124.989,-106.148,-60.4508,273.341,365.922,225.137,117.053,147.146,-31.3651,-66.7584,-98.7022,115.013,307.197,104.868,-26.522,104.835,-96.7138,98.915,264.234,104.34,213.393,107.549,},{16.3949,-9.30244,-67.4307,-46.7625,-12.843,38.2669,86.3661,65.3906,64.9686,25.5893,15.9623,-38.7812,-93.2804,-55.5489,36.7084,28.5781,17.8674,-1.82677,-27.378,29.7968,2.27652,15.759,-28.0442,-34.2841,-89.4442,-60.6111,-61.4981,-46.6463,21.0063,23.442,20.3793,23.464,46.15,29.6391,44.434,33.5515,28.0513,39.977,-19.9362,-29.9388,-55.2578,-67.0746,7.62832,58.5487,30.865,77.9329,69.9772,18.6248,20.4578,60.673,43.8955,19.1647,-45.1779,25.3288,5.29876,-2.41569,-8.01243,15.4441,12.8943,-7.04771,21.4795,26.7664,32.1371,5.20642,10.5421,40.08,19.1359,-6.09917,4.66232,3.11472,2.0374,-51.5356,20.2062,28.9598,-8.10592,-35.588,16.1643,74.9881,61.3782,54.3223,40.915,30.0814,28.636,6.96381,-24.3324,-61.0053,-65.0623,-97.0352,-110.287,-72.7607,-91.7747,-92.3446,-1.28988,54.9701,66.7866,62.4777,29.7628,-17.3838,-10.487,-105.237,-98.8591,12.7919,23.0191,-23.8481,-67.2916,-11.9207,5.92543,-41.1303,-23.0966,-32.0446,24.5328,42.6187,16.5188,-33.1916,-90.3274,-90.8407,23.4942,52.1734,59.8764,22.2573,24.7484,38.6696,43.0236,41.2484,28.261,23.0869,-7.53795,36.1766,28.741,-1.86455,-54.8253,17.7982,4.81359,19.5603,27.158,63.8122,15.5393,47.3825,58.8419,5.40373,2.6972,-12.6537,-68.8388,-54.6542,-6.62308,-82.3843,29.7609,11.7391,-18.533,-5.93334,57.0116,26.4009,-1.2094,44.2047,4.26429,-8.02213,43.3724,33.4542,11.5219,-29.5077,-44.6736,-43.1949,-19.6708,4.38215,-57.6244,-7.2523,-2.67826,10.1054,-63.5024,-31.9458,-26.6604,23.1735,52.0285,11.2174,-32.3113,-77.1044,-21.0107,37.4439,14.5083,-22.176,-31.2004,-40.2138,-0.873668,-65.0295,-66.082,-12.3402,12.6772,-40.2018,27.341,20.6533,18.1177,-91.749,3.58472,57.5427,9.79409,-32.7938,-26.8382,-72.1111,-45.7755,-12.7324,-8.19462,21.6202,-32.8865,-138.05,-13.9078,-36.3771,22.9343,6.71324,6.96106,71.3574,53.3325,-13.2903,-27.5618,16.761,-15.4048,19.1201,-18.5089,-10.9627,-18.7428,-16.8789,-24.0109,16.1371,13.2964,5.43179,-11.7382,11.1895,58.7181,53.1941,23.5992,-44.9493,-46.7299,-71.7273,-119.614,-62.0652,-12.9536,-27.9138,1.25969,35.1023,-1.94846,18.0233,-29.7133,-48.4008,31.6848,61.9518,97.7249,70.1008,16.4567,38.6287,-26.3078,-62.8264,40.9949,8.31678,-10.8134,30.5489,19.4186,31.5014,},{},{356.146,603.122,396.322,175.208,269.796,354.312,308.739,-198.671,182.311,69.3835,376.715,-424.065,-122.63,-139.353,49.4471,-111.369,311.003,87.4289,266.304,713.724,47.2682,184.299,320.104,107.582,187.958,583.355,10.2098,-233.614,-342.449,-393.654,437.108,312.315,-150.204,267.791,539.833,-97.2233,260.51,-7.92589,213.886,-67.1993,153.462,431.119,292.486,289.261,122.132,649.153,406.791,63.2885,294.37,395.139,-80.4522,18.7991,303.18,-263.951,-639.041,-675.456,69.6839,231.803,53.743,-361.179,130.258,517.313,215.981,241.78,813.862,62.7505,-88.1073,323.533,102.179,-425.898,-227.992,-216.71,-391.607,166.779,-129.366,277.271,358.765,129.465,108.845,135.994,490.888,50.3868,369.243,66.9492,36.5906,-100.615,-394.39,-574.288,-412.597,-103.528,164.645,27.0307,-85.4647,158.33,228.853,61.2504,604.738,305.115,-194.909,-521.719,3.11169,-301.928,-254.171,-954.267,-794.789,-150.123,-136.873,-531.16,-452.826,130.868,86.9095,256.11,22.6986,-216.123,-260.564,338.618,131.194,384.133,151.364,-127.576,-854.608,-488.292,-26.7765,-527.957,-362.481,390.241,26.1162,358.47,-186.736,-1007.18,-367.01,259.425,603.637,551.297,227.599,142.655,-197.542,-127.926,265.128,-134.725,-1323.62,-240.169,-37.9594,-159.105,81.2866,-772.032,-295.294,745.019,699.096,13.4368,527.875,607.74,242.588,47.7486,-434.596,-511.873,-640.639,-412.118,296.126,-73.5797,34.696,-203.64,-221.406,-39.2763,-229.728,257.257,671.312,470.273,116.827,409.697,616.355,-120.117,-223.737,161.355,145.391,119.641,118.419,99.2262,-335.85,-363.972,-220.833,-15.9503,95.5558,-280.265,-385.275,125.631,357.818,-370.031,23.9887,318.118,-107.672,136.932,40.6393,-53.829,-130.906,-349.152,97.2042,-287.69,-33.7127,-115.781,-211.299,134.994,300.604,-5.48206,439.152,56.0699,-657.952,359.35,-208.206,-119.208,-73.7638,232.884,49.1874,-183.362,150.246,-295.914,-779.249,-276.565,-19.0543,-169.242,-270.59,-967.523,-277.473,150.225,-458.683,-750.091,-297.493,221.696,111.574,706.16,387.551,-41.0368,-278.19,-509.519,-576.414,-549.251,-1069.6,-417.77,-1.8084,122.5,-288.51,-541.751,-304.761,-375.58,80.6103,1.82223,278.651,-177.891,-523.51,-774.231,-1305.7,-924.049,-674.934,-715.394,-470.336,-327.424,},{23.019,18.4094,-6.9368,-6.81967,17.1515,65.8336,69.8258,64.9891,71.8805,55.368,70.6439,24.942,-2.26012,-8.96117,27.5102,19.0661,21.5168,19.365,10.9425,52.6372,17.013,51.2267,7.9951,-7.31558,-22.4081,-6.99945,-15.8275,-1.58584,63.6375,47.3072,16.5535,11.9343,13.0182,19.3437,59.1267,44.2737,25.4498,8.31343,-11.499,5.02303,10.6955,-40.692,-3.89631,16.5535,24.4974,33.6206,16.8882,.5275,21.3134,61.711,60.7829,51.5942,-4.87103,9.29179,33.0907,47.6012,32.4519,16.4997,7.778,-16.247,46.8423,18.2428,43.555,-0.1406,25.7754,58.7148,48.2954,3.51253,14.1946,43.1641,40.7111,11.6002,32.2728,39.955,-0.615852,-4.24908,27.7674,46.1943,41.6716,33.5377,34.6559,58.4027,37.5546,9.76083,16.2185,11.7037,34.7904,7.40585,-20.2023,-3.32728,-9.87866,-28.7647,32.895,63.3362,53.6734,32.9018,23.5781,11.1886,4.43319,-11.5397,-13.7972,14.9883,-5.2321,-25.8725,-19.4133,36.0698,18.0483,2.23318,36.0364,36.0504,34.7867,21.7625,19.455,4.96716,-15.4167,-27.9957,32.4642,30.9762,42.2667,22.7913,48.8779,62.7449,44.6667,12.2457,50.8727,43.3384,47.3692,23.5255,20.8264,46.1134,39.7604,76.734,40.8501,39.9268,40.2743,38.6572,32.59,59.9256,39.5819,17.3296,42.773,40.8397,26.8832,4.10772,14.0158,31.4278,85.7973,54.5023,26.0789,22.6697,56.2234,36.4938,34.9076,38.9649,31.4352,16.4618,66.867,85.3578,55.6153,10.31,12.4206,41.4517,33.38,15.5676,-13.7024,14.086,23.4206,10.6373,-10.1331,25.2986,16.8687,32.711,46.2861,47.2186,23.8561,-11.7128,23.2164,68.2559,51.465,11.9368,8.95863,-0.806544,4.84741,-21.9529,8.21023,34.5099,36.3653,12.3101,38.4153,42.4788,46.3679,-6.75363,33.4213,71.7701,45.1673,13.5293,22.9197,.594037,-9.23147,28.9562,36.5304,49.7827,34.6328,-2.07909,30.503,25.1144,32.5028,10.4545,12.7358,38.1433,38.0131,25.4153,-3.31982,23.7385,13.3659,49.4117,30.0539,25.1281,34.4803,9.22242,27.5466,18.8657,16.0431,.707404,2.71944,26.0655,70.9182,71.9765,71.1004,9.58952,-5.08128,-19.1278,-11.8759,49.951,49.6484,14.8502,43.7883,31.4383,15.668,9.5991,-10.9546,-28.548,26.4672,57.871,72.8125,41.9205,11.0839,26.342,16.3147,26.2278,43.5514,3.73928,4.4056,6.74548,.411105,14.9767,},{-63.2102,-112.883,-196.43,-375.156,-523.684,-103.787,-346.105,-214.804,108.128,57.7504,71.4121,-361.273,-310.524,-67.324,-149.453,-87.3898,-109.732,-449.208,-625.572,-374.379,-499.05,-631.766,-234.075,76.1725,194.877,52.1257,-87.838,-264.951,-927.294,-694.293,-118.721,98.5563,-263.701,-145.217,-414.312,-189.408,-399.547,-477.91,114.43,-81.7477,-345.11,-125.553,-263.504,-130.442,-305.468,436.249,-101.19,155.784,67.837,-499.568,-215.634,15.5245,-29.7078,137.646,80.3109,-391.395,-437.954,.246769,67.0667,-98.0017,53.4061,-331.519,-266.273,209.329,450.008,13.2895,250.228,384.791,215.062,-10.6175,-25.0885,-160.525,-252.384,127.974,180.556,498.661,251.607,135.075,-313.987,62.1599,322.374,.563035,194.861,592.995,451.752,237.247,-204.246,-543.902,-136.193,11.0898,493.63,564.891,280.094,570.267,4.76729,-95.782,393.13,316.896,108.437,278.633,536.183,284.69,79.203,-581.209,-629.549,-33.7791,110.08,776.026,102.994,570.989,-107.453,-130.983,68.4566,-0.961701,270.667,334.059,285.321,369.005,-135.711,-169.516,-157.491,41.0349,52.5065,54.0708,-148.183,187.604,289.891,51.284,-8.71475,-486.211,477.319,707.54,770.493,480.117,-122.105,-121.94,108.652,76.449,236.173,627.885,-23.379,351.723,173.975,60.1182,190.82,153.243,596.777,711.646,716.409,341.343,233.452,398.74,252.168,22.7515,393.177,796.473,156.685,16.3549,426.042,-146.568,209.775,434.764,608.742,255.34,88.899,286.669,12.1853,-196.924,-264.974,120.032,208.11,225.226,-121.211,148.34,171.588,-40.2045,111.596,571.049,579.902,99.6693,-131.771,213.085,-64.6811,-561.931,-125.053,198.183,229.816,-88.5625,-91.2421,475.141,-406.296,122.12,-104.869,30.6316,-81.8169,-648.07,-271.637,-344.426,-300.209,-539.288,-160.229,-101.188,86.2401,192.766,-217.454,-147.963,-273.059,-25.658,-246.728,-159.241,-183.494,-42.041,-107.263,-143.184,-125.955,-309.346,-361.955,-20.0708,-21.5614,78.858,-572.395,-326.205,23.3619,32.6172,-408.034,-358.321,-279.387,43.3209,-362.888,-38.9085,-306.997,-173.11,-101.513,-423.414,-498.031,-328.114,-464.562,-124.902,-54.1374,-22.7406,-61.6166,-224.79,-308.772,-384.44,-345.315,293.661,546.827,179.517,-39.7387,-275.384,-466.224,-260.862,172.595,4.1449,-112.183,-149.971,},{26.6925,20.6686,13.813,15.9074,35.4317,78.6337,79.7316,78.316,85.3129,80.9842,84.2864,49.0805,23.7641,9.89359,22.6172,14.9225,26.4173,28.6167,30.8782,60.8182,34.2853,52.2697,24.244,12.6653,4.44781,22.7528,32.692,46.6783,77.5728,52.7174,18.7931,9.54003,16.1115,20.9552,56.5014,45.656,25.2233,16.9492,12.7068,13.1897,16.6019,-5.56317,31.7908,54.3332,73.144,62.6523,24.8169,2.36461,19.8568,57.8119,56.8076,37.6331,9.81524,21.1553,25.4733,30.2909,29.2669,27.1507,34.8431,31.6885,78.8871,50.7433,52.7701,6.4845,23.8054,54.5372,45.9284,10.0053,16.332,29.5441,24.1324,7.36913,27.3051,45.8802,28.4539,30.2881,56.2962,62.2997,53.982,30.084,30.9027,54.4751,37.4468,9.06082,9.66169,4.60206,20.69,11.6857,4.09571,20.5279,17.5502,7.39873,58.3476,67.4329,55.6056,28.6731,23.6793,24.5262,16.7061,-6.75909,-12.8979,3.82604,-8.75331,-20.8198,-5.74999,30.5358,17.8956,15.1778,51.5112,52.5053,42.6238,20.3676,18.7645,25.6308,17.1537,-0.827944,18.9429,20.447,24.9319,22.9117,41.0176,61.7093,41.9355,18.6859,36.9084,45.7365,52.2227,22.4477,18.6407,45.6273,52.5138,59.9562,35.2559,32.9736,44.0644,45.2088,44.3968,59.4785,41.7725,23.4323,36.7925,31.1276,32.0997,7.25186,14.8673,35.9883,68.2718,48.4318,25.9334,24.7604,54.6589,46.8767,35.6585,39.672,40.9539,29.9724,52.6483,65.0333,40.121,8.50778,13.6942,48.6694,45.8673,26.9745,2.08705,28.4944,35.5873,29.1569,14.9634,40.2172,25.6611,30.7421,47.0206,46.2383,29.9593,-3.99612,19.2684,61.9022,52.8348,19.9755,17.7653,17.1244,27.3043,7.14886,22.8263,31.5802,28.9872,16.7883,39.1392,39.4823,39.8622,-4.87247,31.4601,61.6321,49.3957,18.8868,33.1194,25.6832,13.4515,32.7645,32.5166,34.7536,25.9355,8.98042,29.2777,30.7551,24.2148,9.94169,10.999,29.3437,33.0636,35.9222,33.9724,48.4915,31.1647,45.0392,25.6285,19.2742,31.5507,17.8189,33.2768,8.45101,11.2149,8.11174,5.90296,27.9119,73.9068,76.5721,76.862,33.2982,16.6375,6.45976,6.33474,48.6146,52.8838,23.3906,36.8173,22.8195,15.9693,12.6548,-3.74308,-7.90104,41.4261,66.9632,81.6718,62.9727,41.574,43.1364,34.4399,39.8107,47.4296,17.2804,14.3152,16.8709,13.445,18.8251,},{-6.66323,-21.9328,-71.0785,-20.3887,68.7072,-57.923,110.209,-174.967,-414.205,-158.639,-288.619,-298.941,-205.373,-262.436,-128.78,-93.7761,-7.13084,16.6541,-142.816,-159.187,-26.4845,22.9603,18.0912,19.2741,-134.595,-177.152,-80.0217,-184.295,-172.518,-130.942,-124.586,-117.259,-24.9778,-217.99,-155.653,-30.528,.747587,192.378,-50.5202,-158.152,-53.2054,72.7441,309.452,-31.4872,-346.966,-387.931,-139.346,-88.3519,-250.112,9.06552,105.848,11.5626,59.8789,-10.7631,22.8211,-61.0731,-115.404,6.02005,179.895,317.771,242.55,214.346,250.395,-290.536,-276.622,12.9175,-28.121,2.02041,81.5279,40.4729,54.0845,-29.4361,-32.2111,-5.45398,78.4376,259.815,328.086,256.825,522.12,-17.8936,-179.265,-19.8263,-175.521,96.3151,71.6175,57.2008,43.8877,-75.5661,-191.272,-176.986,-28.7383,147.872,337.918,346.403,517.335,85.7652,-47.2802,242.362,104.116,103.362,-92.9633,-141.001,-165.79,-213.105,-406.114,-632.301,-564.23,-167.294,208.707,256.461,635.607,398.771,121.503,312.704,44.983,-84.86,-249.345,-235.608,-178.582,-337.789,-340.967,-347.443,-438.977,-275.772,39.5579,11.6291,442.621,301,166.198,676.622,113.908,-109.592,-416.684,-239.078,-83.4122,-152.473,-267.816,-315.397,-514.801,-390.718,-298.762,-10.1818,120.287,241.801,59.9528,537.965,303.53,229.752,-28.488,-119.044,-286.142,-412.125,-451.079,-254.113,-152.759,-151.188,-85.1659,-271.229,-127.744,111.04,2.70523,143.072,68.5983,361.787,187.606,84.1474,-101.993,-247.776,-290.782,-180.623,-98.1728,30.0635,-61.8936,-252.685,-177.744,-28.5563,-119.304,106.712,207.21,362.194,312.409,159.02,52.331,-58.9113,-167.347,-120.814,-24.8081,59.0312,-8.435,-338.676,-5.85888,-355.984,-64.7474,-91.0287,7.86939,137.176,263.898,200.774,26.989,-114.768,-192.428,-126.743,71.8757,-97.1931,-323.281,-222.734,-9.89086,-299.419,-97.7742,-286.273,-98.9622,-152.427,158.331,279.272,142.995,-60.3615,-61.3816,121.069,185.083,-228.269,-104.425,-66.5935,-278.702,-97.6985,-105.812,-335.323,-160.52,-31.2859,147.744,63.5566,102.968,3.05853,-67.7675,-18.4291,-120.544,-173.266,-168.64,-181.305,-72.1436,-90.6175,-143.945,-350.865,-591.32,-436.231,-224.565,-96.4743,-38.3455,83.8368,-59.255,-85.4306,-80.9084,-108.678,-260.713,-173.177,-141.854,-74.848,},{68.3532,42.0202,79.8871,172.148,262.263,-300.227,-300.061,413.57,95.1462,507.238,-96.1037,226.31,119.802,-88.8765,-46.0547,10.106,153.015,492.038,263.489,-23.0601,303.71,294.311,169.503,-24.3572,-124.382,-93.6536,-60.5421,63.2899,-30.2179,72.7151,-314.738,-158.164,386.038,108.838,-52.1617,-100.149,146.322,178.007,275.477,143.986,5.20023,165.938,712.825,256.699,212.322,-139.909,56.9005,-173.997,-119.06,180.428,186.557,-178.832,-78.0051,397.356,472.401,261.778,-49.1668,321.278,610.921,719.849,367.661,856.894,388.206,-217.699,-623.941,-190.15,-383.514,-358.368,-6.65791,233.465,183.054,-221.086,176.182,400.216,513.745,425.602,704.278,785.009,805.094,114.991,-386.702,-65.2576,-442.795,-337.64,-363.108,-406.283,-474.872,204.529,160.067,127.576,-156.899,154.029,467.032,246.597,734.169,268.326,-398.625,-146.342,-325.606,-283.486,-678.778,-553.98,-91.7966,44.879,-161.58,-374.123,-275.141,-693.13,162.206,-11.5852,693.464,346.049,78.1485,274.145,-280.304,-555.683,-1010.62,-558.102,-146.143,-171.336,386.869,290.824,11.7939,88.6648,-58.7004,-370.481,-36.8196,178.303,312.036,763.444,-673.359,-1030.21,-951.637,-359.731,45.6989,372.873,54.8631,-304.853,-636.181,-485.601,158.241,-150.291,-406.888,-28.3667,23.5617,256.679,-464.534,-460.77,-487.11,-115.186,-45.1337,-208.02,-570.792,-401.581,-443.084,-548.244,-154.708,58.4934,-227.952,-55.0615,-277.572,-194.39,-364.989,-255.198,30.1405,133.552,66.4333,-130.546,-422.375,-304.676,-332.679,-239.673,-203.314,-347.25,-97.8808,-336.066,-382.444,-415.437,-190.964,112.415,224.517,355.816,586.896,67.4331,-178.637,-210.499,-158.063,-8.58324,-102.635,-555.217,47.4145,-888.639,-186.771,-374.064,-33.6258,287.671,320.239,620.144,687.923,101.309,-76.8545,63.7009,-58.8546,-153.359,-58.9575,-256.033,-181.818,-552.126,210.927,-296.142,-379.761,-35.6398,280.27,606.859,662.272,246.925,-32.1487,-157.461,229.919,-234.324,235.923,231.979,-611.584,-22.5765,229.679,26.7313,-89.8572,-80.2065,480.607,189.488,576.423,252.653,-53.2846,-116.312,58.4179,167.113,375.738,.249795,90.2032,78.7481,-22.1047,-115.5,-100.798,73.4624,202.287,217.697,319.104,45.7268,73.7237,272.151,521.523,-137.635,-200.804,212.525,147.753,144.588,},{-103.855,-175.804,-253.383,-316.749,-271.425,-469.458,-252.515,-33.6319,132.897,412.63,-123.372,215.805,351.667,23.6049,252.758,147.619,-76.4066,-136.459,-467.766,-353.112,-13.3683,354.967,-84.5556,-190.749,-548.836,-757.03,261.688,153.218,-517.866,-106.211,-68.1216,133.855,284.792,-104.911,-285.309,-211.379,-321.63,245.58,618.072,-72.0672,96.9617,194.684,268.137,-70.0355,-171.169,-1045.34,-365.829,63.6356,80.709,39.9044,52.1904,-210.29,125.421,432.128,671.129,95.9323,496.974,224.753,227.198,427.183,431.075,45.0686,89.7991,-413.843,-577.627,-184.227,-212.193,-519.75,80.4947,220.094,327.89,406.96,526.446,107.525,459.621,109.54,192.837,591.105,543.521,-94.4111,-192.67,159.373,53.685,4.92583,61.678,154.535,548.469,556.654,307.34,83.3355,-88.0397,-87.8415,35.0868,112.672,682.284,47.4596,-358.635,-150.43,-24.8298,-3.23425,-318.767,-359.362,-10.7188,75.8062,-228.121,-724.669,-812.588,-462.339,-258.281,-161.167,714.975,611.375,49.5018,78.8309,68.2188,-680.504,-580.075,-206.979,151.48,8.96601,330.431,-36.8033,-359.377,-478.75,-516.347,-451.51,234.884,404.361,204.712,476.933,251.155,15.5669,-310.336,70.4905,255.122,-203.775,-261.678,-370.398,-297.236,-633.79,-474.369,-77.7186,211.666,431.523,56.5235,560.855,720.022,165.446,-430.904,-119.526,-154.807,-181.737,-4.73827,96.6719,185.475,-273.119,-192.55,-371.251,-334.385,-167.255,-103.41,691.615,538.668,514.994,135.443,232.936,96.9863,251.569,416.815,542.986,350.288,227.174,-25.3479,-104.031,-382.138,-131.983,20.9102,-114.759,316.532,509.149,234.084,-174.823,8.16585,-1.39469,387.782,220.353,337.562,224.631,-188.575,-625.357,-306.626,-653.849,68.0413,23.3764,94.9126,67.4741,-25.9669,-26.5204,-48.4504,-385.707,35.4864,299.628,314.865,3.35293,-395.588,-583.509,-318.266,-628.76,-230.588,-414.354,-557.295,-514.136,-303.698,-68.8767,-96.9121,-135.566,339.295,248.011,343.977,180.995,-119.302,-691.974,-1035.94,-301.61,-25.496,-270.791,-47.4394,-93.7992,-111.205,-326.591,-126.217,-208.278,-163.05,377.973,517.746,449.973,286.454,-429.218,-7.74894,30.0564,-162.416,-500.015,-454.35,-51.9192,199.22,-130.905,-296.895,-345.62,-158.687,465.22,681.795,24.9242,-75.7117,-72.1298,-76.8683,93.4376,}},weight[]={-746.64,1946,-2284.17,-2820.44,-174.038,-268.482,-125.445,-150.371,-2716.99,-119.869,1450.04,-247.22,-2747.24,5253.85,-170.218,2901.71,-98.7632,-2552.29,-3239.71,-3073.48};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv && i < right);

			if(i >= right) {
				bound = 0;
				nright = right;
				for(i = top; i < bottom; i++)	{
					path[bound].x = right;
					path[bound++].y = i;
					data[i][right] |= F_PATH;
				}
			}

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}
