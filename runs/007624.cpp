#include <iostream>
#include <cmath>

using std::istream;
using std::cerr;
using std::cout;
using std::endl;
using std::cin;

namespace neuro {

	const int SIGNALS_SZ = 256, NUM_NEURON = 20;

	double n_weight[NUM_NEURON][SIGNALS_SZ]={{36.1691,58.9225,.353219,40.1041,127.495,184.092,183.551,196.686,221.705,87.8051,106.038,45.0041,-46.3866,57.4608,99.279,105.432,37.6101,71.8103,145.764,172.78,116.579,104.677,28.863,13.0357,-151.631,-81.5738,9.23376,5.93961,113.385,176.327,70.5838,101.059,88.6031,144.792,146.031,142.846,7.72268,-37.2722,-154.767,-143.211,-124.31,-116.508,-83.0006,-56.7445,-102.665,-6.44451,46.4229,37.9438,61.3321,185.336,212.731,106.078,-182.817,-95.9839,37.2395,66.2995,75.2918,-22.0354,-60.5627,-85.7574,-12.7397,-43.5324,20.3846,-32.3514,30.5211,67.6779,133.899,-47.8228,49.286,-34.9964,-11.2961,-185.803,-45.7298,-56.8438,-165.8,-231.417,-91.2103,29.9293,16.4013,60.1266,65.6244,156.324,184.378,-104.334,-169.663,-30.1373,88.2961,52.4104,-108.329,-45.7121,-102.377,-128.394,-87.2856,-24.3424,79.8507,97.3351,50.961,131.019,190.136,-21.9025,-88.3735,-15.985,79.4168,-79.3855,-224.932,-159.31,-33.4084,118.682,165.71,45.5364,73.4718,91.3438,55.6799,78.4989,83.58,-91.7412,21.4379,-28.3229,85.2238,-42.087,17.5588,-38.8067,-8.63648,71.2437,117.304,189.015,232.002,96.962,61.6207,55.685,-56.2139,-9.62966,-2.99746,58.681,-23.1747,36.2989,-72.8259,23.7832,34.3308,-106.93,-49.0022,46.6025,-40.0033,-8.40031,14.5227,-136.645,-26.1065,23.3966,-15.1886,41.639,194.862,-11.4202,-18.7476,18.8909,21.8099,-16.2246,29.7796,109.291,108.211,107.461,-74.3206,-98.6065,-104.032,-103.34,-74.8079,50.2782,25.3396,-5.21899,-55.4343,-15.9152,-44.4105,52.0461,32.3677,24.7901,30.35,-29.9918,-78.7004,-32.0213,-90.0302,-90.3294,-35.9134,-106.4,-46.691,-139.539,-96.6688,-91.4255,-19.1498,-2.72428,-23.7331,-8.39387,78.7665,-85.9178,20.6105,134.502,29.2422,-20.4371,-65.4963,9.7206,96.4371,75.3626,-11.2282,20.1267,-86.0204,-307.525,-43.383,-28.3655,172.694,-3.14391,-8.95212,57.5139,157.064,-11.9973,-70.1166,-23.7932,70.8861,112.867,58.351,-93.5374,-194.001,-74.5204,-2.16739,144.36,98.9289,11.319,35.875,-17.5378,44.2847,173.742,129.528,19.6514,156.345,130.01,-26.2019,-20.4478,7.97168,56.8416,161.184,24.4418,16.4185,24.2013,-3.66909,-1.95206,117.855,160.596,285.063,121.212,57.989,72.3141,-57.4146,14.6374,154.331,-43.8094,-92.1911,-4.77054,2.73149,30.2792,},{79.8984,102.998,117.667,238.628,280.751,364.589,401.811,407.381,279.73,-80.8831,-204.892,-281.861,-38.3859,86.7251,118.132,-48.0552,93.0875,249.867,337.757,380.303,205.408,203.088,98.9906,5.41982,-107.904,104.394,232.066,130.382,.842682,391.665,159.85,34.6577,-89.4183,182.236,563.317,374.414,202.125,64.946,7.54913,136.469,17.8358,-52.7198,-60.4156,107.974,502.693,453.806,200.293,-5.93458,177.1,119.992,330.834,-24.9862,251.889,-111.659,-304.06,-242.601,-203.562,-136.485,57.1738,-157.129,14.7364,372.033,171.264,261.618,121.195,131.209,-56.265,171.454,-179.068,-7.04263,-64.5596,-80.4701,-197.219,10.0769,68.6381,49.6178,36.9443,146.871,36.8791,162.892,59.9251,-51.1515,-112.771,118.934,67.0037,141.566,-142.706,-125.129,-90.3251,-29.5407,67.1705,58.0191,206.054,201.709,-125.024,77.8169,12.4735,-157.942,-232.152,-407.308,260.484,421.092,290.023,63.1439,-223.241,-59.8891,-96.4339,37.7968,108.835,91.234,-324.295,-166.514,-74.5811,-260.355,-392.146,-58.2409,-37.9276,299.652,270.31,212.13,-122.502,-88.9734,157.458,-138.05,-349.561,-62.628,-246.494,-252.973,-180.601,-583.637,-471.874,-441.857,-239.512,-135.73,92.0481,361.179,85.2684,22.6824,-90.8222,-200.378,-216.861,-155.407,-58.6539,-253.817,-43.1023,-528.945,-538.355,-381.271,-57.5448,-267.42,13.3427,158.229,13.0902,-200.699,-183.072,-150.039,14.4635,110.054,66.4105,-62.8116,-33.1992,-299.925,-167.445,-139.387,-344.184,-128.699,19.5037,43.0985,-152.549,-200.448,-147.737,-388.193,-62.1892,-105.115,1.57949,182.576,59.9683,117.619,-22.5944,-199.569,-147.752,160.185,159.531,108.176,-166.002,-66.618,-46.1296,-340.969,-126.776,213.97,48.8782,286.03,25.7286,106.238,60.7604,-35.9991,-101.669,-52.7946,-46.7324,90.6589,-37.3796,-64.6744,10.7392,-160.096,-219.349,134.656,7.43232,230.925,-9.67524,284.885,125.086,249.117,18.7791,221.083,40.3016,102.694,-98.6533,9.0278,-28.5889,-258.599,-17.7619,123.199,129.345,62.1199,35.3753,351.772,217.368,151.144,286.874,262.44,110.571,-1.8422,-216.154,-323.618,-186.273,135.728,-32.012,311.122,185.477,69.2343,194.819,381.903,362.479,323.084,94.9949,46.8863,-19.379,64.7548,3.50742,-319.051,-94.5751,193.142,215.194,99.855,12.9171,41.7429,},{-228.681,-386.995,-272.665,-32.7309,-15.2945,29.2113,338.245,299.272,-31.5623,21.4973,-282.401,-212.517,111.379,5.492,56.294,-153.727,-244.23,-74.9362,25.0039,-168.348,109.007,-101.826,-246.971,-320.654,-331.59,-144.489,-125.26,-234.797,-312.161,-182.957,-261.694,-242.94,84.8957,-304.531,-457.109,-180.987,-86.3078,155.167,189.482,-6.88729,198.927,-133.882,148.421,-144.986,-141.403,-513.282,-24.7908,98.3068,-11.5069,42.4715,-71.6281,19.2723,219.239,223.971,526.837,209.373,250.49,190.635,-172.373,293.828,284.34,312.014,485.222,-222.585,-320.704,-79.9262,196.563,179.087,262.239,411.736,138.72,-119.736,231.117,17.0722,156.081,444.162,478.705,424.703,811.601,-28.5472,-107.965,-16.2282,-2.4526,279.879,150.99,-1.43976,70.0617,91.6598,-136.343,-66.4371,17.9556,171.838,599.293,343.849,607.102,89.4625,-260.32,-198.022,-157.432,105.198,-503.364,-636.921,-245.328,-188.867,-259.731,-758.334,-711.717,-234.432,421.204,104.737,685.166,420.823,82.5009,109.444,-260.055,-564.194,-685.163,-287.537,-127.091,-99.6043,40.1156,-185.709,-253.615,203.57,126.422,-200.787,206.414,309.119,178.998,650.655,-214.29,-577.884,-608.492,-390.098,-192.4,-298.262,-267.632,-321.15,-297.072,-275.379,-35.4088,-256.873,-153.594,145.147,30.1608,284.993,-50.5082,80.7732,-115.732,117.77,-147.014,-332.844,-184.717,-59.4416,-167.159,-313.691,-75.9918,-271.887,-372.844,-144.685,-92.0281,-251.154,-232.866,140.109,272.325,123.778,90.9147,-268.745,-4.28807,-45.5633,-171.789,29.7426,-58.0978,-497.091,-491.53,-123.065,-216.684,-429.967,-7.90778,511.628,206.952,-73.7489,66.3165,90.8732,40.2746,-175.21,-206.292,76.248,13.168,-651.04,-396.393,-566.759,-102.498,-301.311,83.5949,406.912,218.903,260.737,151.927,-68.2183,-166.904,-167.145,-120.087,-74.8637,-278.602,-346.039,-274.431,-50.2609,-235.526,-239.704,-99.5342,50.4319,290.906,242.858,-48.5425,-213.55,-65.7443,-196.241,21.8292,-247.43,82.1035,7.64669,-252.667,110.332,126.125,-37.7234,131.138,93.8824,362.416,175.897,156.235,96.1899,182.516,281.996,252.911,321.593,327.367,263.215,405.96,167.597,202.054,1.49173,-263.435,22.1669,292.764,190.107,10.1701,-51.7534,20.1038,328.793,680.608,247.317,367.904,396.029,422.539,361.945,},{-11.8706,-31.3981,-50.3364,-19.764,66.5445,-65.5009,105.179,-167.271,-381.223,-154.809,-307.492,-268.489,-166.818,-204.692,-98.3164,-82.8394,-11.0516,1.61445,-134.683,-168.094,-41.4666,19.2352,23.487,-21.8572,-193.311,-191.45,-52.7357,-166.441,-231.959,-138.609,-121.236,-101.296,-39.3211,-233.136,-172.267,-57.544,7.56109,191.79,-20.7147,-120.866,-50.4747,18.1896,285.315,-49.4345,-298.69,-430.366,-140.043,-82.9866,-229.714,-4.16562,96.3863,36.4171,89.5576,28.7654,77.4235,-23.4782,-92.76,-18.8876,175.433,275.204,230.773,240.787,174.378,-294.068,-278.071,-23.0866,-21.7814,15.1378,109.836,69.6287,81.8183,-30.4422,-29.3966,-43.6433,49.2586,247.364,321.143,265.237,516.713,24.603,-183.258,-39.9675,-132.724,148.189,97.914,57.014,36.1499,-62.8281,-195.541,-213.671,-32.4395,153.764,331.072,344.885,513.691,97.4321,-72.5198,202.899,98.957,114.867,-87.1652,-166.133,-191.696,-223.33,-450.792,-683.119,-566.749,-178.935,195.809,265.238,632.973,409.06,149.147,312.762,48.4176,-149.558,-320.109,-236.256,-166.79,-331.938,-342.183,-406.232,-444.441,-269.173,-15.8483,.495891,449.203,302.324,169.393,658.395,127.077,-119.625,-444.264,-269.38,-97.0198,-154.001,-269.696,-355.487,-542.405,-418.714,-284.839,-29.1671,100.855,211.88,83.4036,537.742,309.636,265.343,.843879,-139.756,-300.345,-395.967,-428.826,-303.151,-147.981,-126.635,-80.6133,-264.945,-121.143,102.837,-7.76875,148.401,101.228,364.54,165.017,78.1345,-71.8962,-209.324,-254.842,-179.896,-76.8256,51.0793,-43.2657,-261.615,-197.441,-20.9962,-116.05,62.4715,203.827,330.77,249.419,97.6985,27.2302,-65.7436,-159.507,-167.505,-37.2157,75.552,-12.2704,-382.28,-22.4847,-380.811,-65.5964,-117.785,-8.94395,122.61,226.815,170.637,15.7007,-119.821,-188.844,-146.717,65.8431,-99.1139,-354.636,-220.045,-47.6084,-311.552,-114.166,-322.592,-159.418,-131.677,108.46,235.037,145.869,-17.6861,-24.6655,70.2987,128.343,-253.4,-93.7755,-46.5913,-281.427,-91.7608,-107.995,-329.939,-155.618,-46.9851,161.517,88.054,109.896,21.8153,-79.9207,-74.867,-146.415,-156.206,-147.268,-169.478,-55.566,-77.9297,-139.526,-302.379,-559.747,-443.289,-263.858,-165.526,-72.669,16.2418,-110.128,-53.5086,-71.3029,-172.182,-234.07,-144.432,-119.209,-70.0034,},{27.7495,26.3178,6.09866,10.97,32.6406,72.7611,73.4104,69.6276,79.5454,72.3562,79.6399,42.5981,17.3482,8.82636,25.0917,19.0909,26.8829,32.2966,33.1935,62.7454,31.1273,58.9279,24.9778,4.21293,-11.6549,10.9592,12.3196,26.6244,80.0754,54.8414,23.0692,13.3736,24.0316,30.4229,62.1738,47.6718,26.1083,8.43427,-11.3591,2.30828,8.44231,-27.1328,6.79717,30.3405,42.4946,45.5674,22.8576,9.24554,27.085,63.9927,61.4558,42.7931,-14.4073,-3.36581,20.7833,36.1671,27.2805,14.8544,11.7838,.808359,60.6075,31.0981,52.9856,8.06128,25.9118,51.1985,46.1308,-3.64718,9.38738,32.7477,31.3884,.676549,22.1317,34.1084,9.97357,6.28654,40.2309,55.5205,48.7574,30.6852,31.1663,53.4693,30.5603,-1.64231,13.2667,6.90092,32.5201,15.585,-19.5894,3.38461,2.27072,-9.98058,50.0445,65.4167,50.5995,29.3759,23.1861,11.1779,-0.293579,-12.8416,-11.9827,9.67198,-6.71784,-25.1798,-19.9472,29.0796,22.7683,20.9929,51.6237,38.2317,35.3478,19.7537,16.0163,3.58394,-12.0419,-20.3238,27.2604,26.3891,40.7084,24.8594,45.8832,60.7819,49.1525,23.6748,47.4364,42.2197,48.536,22.8655,16.1958,36.9751,38.5044,64.279,33.0057,29.8407,33.9545,33.8721,25.0944,57.872,42.9942,18.1795,32.4543,29.6137,18.3267,4.27758,12.3662,29.191,75.2002,51.4699,29.1803,28.2041,60.4914,39.6529,34.3908,41.3113,41.1836,21.0795,57.6858,81.3849,49.4829,10.7282,11.7133,41.9197,35.3089,19.4868,-3.44584,18.849,29.4123,12.3916,-0.742753,30.0864,24.442,34.7368,43.695,47.6398,22.7768,-6.72344,18.3296,57.1658,45.402,16.9999,10.5975,.681574,5.62912,-11.6245,11.7986,30.272,33.5433,17.4951,33.752,42.2467,44.2029,-2.37739,32.0605,65.0988,46.1995,18.3849,27.5161,11.3706,1.96576,31.9579,29.2811,47.797,33.1028,.493758,28.6794,34.913,34.0552,13.2447,14.8161,39.5247,43.7312,34.9787,12.945,26.0056,17.4758,48.8475,27.8131,21.438,28.1389,12.767,30.2686,21.2689,20.5323,7.72196,9.30129,29.1189,74.4966,80.8134,77.3427,23.1234,10.5073,2.93099,6.24597,52.6146,49.6607,17.9298,45.5189,27.9452,15.402,9.50049,-5.46775,-16.4862,34.8831,64.1826,78.5062,51.2652,25.0313,38.4647,24.6582,31.6159,50.2712,7.44369,4.44446,10.6935,4.47326,15.9775,},{24.2999,26.3535,-5.24197,5.52471,35.5301,81.4406,96.0086,83.1609,85.1845,56.1622,58.719,-9.0412,-26.7894,-2.07252,32.0197,29.8352,22.2148,32.3876,39.598,71.316,41.6653,67.4707,24.5798,-12.9052,-55.0044,-1.37716,-21.026,-5.39886,70.9252,62.0306,29.8861,19.3777,30.0032,40.6597,71.7955,63.8409,25.5382,.26418,-44.9532,-16.9146,-13.2198,-68.257,-32.988,-10.0976,5.09786,35.5087,19.2961,11.352,29.7411,72.9966,76.8153,59.7982,-48.1809,-30.2079,16.0064,43.7245,12.2169,10.9215,-15.0355,-46.6108,28.7631,10.7436,48.0674,3.64185,32.0133,58.2934,63.2334,-12.3794,.754914,27.5784,35.9227,-38.2586,12.0929,21.1814,-19.8464,-48.654,7.66356,45.7689,44.4288,32.3815,38.6824,65.3914,38.801,-16.0393,-6.99157,-2.78798,35.1727,9.80176,-54.9612,-8.94616,-24.6421,-50.8007,24.436,55.1994,47.6062,35.9378,26.9576,4.34766,-8.75161,-48.852,-25.8314,26.9132,8.81389,-32.2584,-60.798,13.7639,11.367,14.7843,41.6278,23.0368,31.9256,25.7415,15.4961,-16.4002,-50.5674,-52.2297,49.2311,44.1323,60.9887,19.8379,34.9191,58.8355,44.4417,24.8696,51.6504,48.7915,53.544,29.8584,15.7737,11.7916,-15.8745,66.0676,29.4298,24.2703,12.8279,15.4241,-9.81245,58.9905,42.1237,-13.1201,7.43466,21.3954,-8.13802,-5.45139,2.11436,-11.345,80.9977,59.5444,32.4547,30.0397,72.7355,18.3929,8.31981,45.3882,42.0029,-5.52332,45.9954,94.2946,71.0357,12.5444,-11.4264,6.80705,-1.10448,-2.91324,-26.8173,1.9491,.637572,-30.0331,-51.8805,3.14398,21.7962,41.7631,27.4178,28.101,-10.5163,-35.371,.375726,32.114,21.4493,.246681,-3.30744,-25.3263,-21.1929,-52.9699,-32.9826,16.0794,38.3156,.692828,4.20847,37.2587,43.5511,-18.2918,21.4267,62.8913,33.0555,6.63629,8.02732,-5.12868,-4.67372,23.3122,11.7663,53.4502,26.3395,-54.1503,2.27083,34.0905,52.0811,21.5429,14.4681,51.5655,64.7667,30.3014,-2.68924,11.9402,10.721,46.5417,16.363,21.9585,12.5177,-12.9431,16.1399,36.5058,31.284,9.25133,17.3593,33.1724,80.7628,99.3352,85.8184,14.8139,11.1897,3.16283,-0.313798,55.0724,48.0644,15.2356,39.9105,29.3076,15.2126,12.3836,4.95389,-8.07643,46.423,80.6985,98.9795,53.2913,21.7825,54.0263,22.1242,34.3493,64.4537,-3.99897,-1.05025,24.9185,15.3518,22.1812,},{26.3189,26.5527,12.6526,17.1709,38.0488,76.3837,74.1891,69.6699,74.4713,66.4229,70.2739,39.4325,24.1982,20.6718,33.4971,28.5886,26.4048,32.981,35.2932,62.8847,39.8264,62.2833,35.4553,17.0683,-2.70858,12.6639,16.859,36.5395,82.3096,63.5123,29.893,20.8192,24.6806,34.8878,63.8422,53.1256,30.4682,18.486,6.69168,12.7292,7.6219,-18.8692,18.2066,36.8702,48.0599,48.8606,27.9988,10.4494,27.1116,63.1824,63.9786,53.2931,2.61512,10.7513,24.8585,30.8726,23.644,24.1611,25.3951,15.0134,64.0107,34.582,47.5885,8.6953,23.722,55.0248,51.6707,7.87265,15.6319,35.6632,20.846,-8.74771,24.6933,42.1124,22.8502,17.2036,43.4864,52.1013,43.1853,27.239,32.2202,55.8614,35.7852,5.90581,8.07689,-2.70969,24.3101,25.2932,-1.62429,21.8445,15.3853,5.477,50.1684,58.439,44.3469,26.1976,20.2731,17.9068,6.0158,-25.3131,-18.42,19.5517,6.07408,-8.2784,-15.6732,30.5228,21.3399,30.1406,54.8994,38.2216,34.6351,18.1879,14.9923,10.1038,-7.68147,-24.7848,16.8771,30.8509,41.3886,30.6319,38.7944,57.9694,36.8906,26.6575,47.546,43.2152,51.8221,21.3696,14.715,28.0267,19.7894,40.6878,23.8079,28.2766,34.2497,32.589,20.1141,49.5447,35.1862,15.2138,31.2706,31.7672,23.6548,6.36629,7.75144,12.9116,52.7159,42.7533,28.6209,32.3236,57.7366,39.3573,23.6882,32.768,37.5061,22.9206,55.7571,74.8146,48.0149,11.6887,-2.65691,24.0667,23.3809,21.5755,2.29482,27.6134,32.495,16.2328,-5.44791,22.0663,23.4343,37.3512,44.6653,45.489,24.6255,-3.03568,1.48543,36.5079,37.3056,17.2652,12.0711,8.08905,11.3126,-9.08384,-1.92089,16.1411,30.9178,24.7753,35.4831,40.7085,43.5062,-6.70199,16.5108,45.8866,28.517,10.1584,16.6742,9.21867,1.31206,16.936,16.1477,35.096,22.903,-3.65589,22.919,28.4201,30.1844,12.1296,13.7721,36.7437,45.1574,37.2912,18.4246,31.5109,25.1297,44.6812,21.8779,19.6544,29.0516,18.3683,40.138,25.624,22.0932,8.43095,16.5437,29.4811,72.9001,79.9279,75.8558,33.6698,25.0556,19.9535,13.0712,49.8085,59.3827,32.5321,52.6218,29.6811,20.4682,14.0897,3.68614,-4.36461,33.3117,58.0637,75.8413,55.2668,33.0741,41.0057,20.4049,33.7375,60.5588,17.9307,14.224,15.5872,10.4576,18.7377,},{23.6454,22.0671,5.88912,10.9929,34.1305,78.621,79.1819,74.8087,79.1869,68.9835,73.9358,38.3819,15.8494,10.5366,25.3002,20.947,22.7569,29.6595,32.7146,62.9281,38.9753,63.6972,31.9041,8.36184,-11.3456,11.6989,15.6809,31.3412,80.9266,57.2404,21.7178,12.1315,22.447,32.8939,66.2939,55.4652,32.4733,16.4203,-1.53216,6.79202,9.37969,-23.3081,10.2744,31.4653,46.6011,48.708,23.462,8.0395,29.2898,68.1208,67.6791,53.2573,-3.35309,4.31946,23.3308,35.9524,27.7639,18.4095,15.196,4.02979,62.4496,35.9157,53.4579,7.71433,28.4793,58.3531,53.3116,2.84962,12.1945,33.6317,27.197,-3.69801,23.5996,36.2586,11.8504,7.12571,43.9275,56.8999,49.9598,30.0925,36.6102,59.9261,36.1296,.75045,6.94875,.962423,29.0664,21.1405,-10.9944,11.2369,4.72587,-5.06137,52.7646,64.6661,51.5639,29.4943,24.9333,17.2054,4.34285,-23.3687,-20.818,10.9208,-4.59787,-18.8124,-20.9584,28.2075,20.5819,25.2338,56.082,43.2734,37.5157,19.9922,16.4487,9.49938,-11.1639,-27.4587,16.5578,23.4172,38.3498,24.6058,40.3769,58.7514,42.3827,25.3084,49.3161,47.5867,52.524,23.1673,16.0305,33.4287,28.3936,52.7597,27.6683,30.6634,36.6226,33.8211,24.911,59.347,40.4572,15.0689,32.4421,32.4623,24.1904,6.08246,10.1614,20.1258,63.4893,45.3998,27.7482,31.3626,58.149,38.7376,31.8424,41.2133,41.8199,21.8174,56.3141,77.6197,49.8303,12.25,2.83408,30.148,25.8675,16.9862,-4.03732,22.403,28.0406,11.6985,-0.563711,31.4375,26.2297,36.1266,42.4322,44.4894,21.6139,-5.89372,8.87629,45.2626,37.5534,13.3321,6.54285,-0.528618,5.27962,-11.6083,7.98894,26.3507,34.1939,19.4273,30.9286,37.1942,41.173,-6.32747,24.4511,54.0417,35.8193,12.2125,17.864,9.21918,1.75893,27.5576,26.2619,44.1965,28.8756,-3.77451,23.0672,29.2296,30.1132,12.351,10.9753,35.6471,43.7533,33.2772,15.3612,30.7761,24.2793,50.7307,29.0934,22.7155,25.0235,11.6919,33.7719,20.8598,19.9661,8.31394,13.1724,29.5079,75.1313,83.1192,78.8148,29.6654,18.6086,11.0071,11.0698,52.4145,54.7127,25.998,50.8951,29.8891,20.1489,14.0562,.838681,-7.35888,35.9778,63.276,79.7972,55.7732,31.1063,41.0757,25.7117,39.0678,59.8879,16.2382,13.121,17.1651,11.9136,20.0187,},{-4.22648,-13.385,-104.987,-36.8141,89.8927,-56.189,6.95656,-126.93,-317.551,-70.7965,-229.94,-92.1696,59.3197,36.7751,56.9511,-54.0688,26.8849,114.795,22.1514,-122.671,-64.2339,18.4862,50.9847,-28.066,-152.442,-150.764,-126.826,-145.515,-48.3233,21.4194,-12.4067,-31.1311,-35.4609,-223.758,-238.281,-112.553,-54.2735,163.836,-49.1991,-89.3366,-22.3164,-19.8454,313.576,-7.28581,-195.356,-210.999,12.7531,29.4774,-228.709,-54.5795,-18.4614,-3.32252,81.594,84.8863,197.636,39.5802,-23.7558,65.7612,201.888,374.393,345.657,329.865,306.587,-200.825,-238.002,-27.8138,-78.9704,49.1623,159.891,150.246,44.879,-101.489,-30.6671,-44.7416,122.174,366.736,450.913,459.437,527.388,72.9332,-161.398,-14.7919,-242.076,85.6782,110.594,-87.0901,-115.324,-181.558,-245.799,-261.221,-39.5413,248.967,485.902,496.407,507.344,102.832,-102.5,75.9277,-54.9405,-0.467923,-231.042,-276.253,-261.65,-279.449,-416.876,-559.981,-330.74,46.4322,435.84,339.651,607.505,370.179,150.425,224.166,-110.329,-326.864,-442.511,-321.929,-254.213,-397.576,-292.715,-336.121,-310.103,-165.197,113.68,99.9163,484.775,267.254,174.52,652.251,-54.8583,-352.453,-574.277,-396.189,-202.262,-176.287,-259.38,-343.217,-473.299,-387.228,-134.975,70.8907,156.519,220.38,79.5663,443.687,143.248,172.391,-82.6486,-203.325,-333.506,-435.98,-449.388,-280.56,-95.1066,-56.8699,48.2698,-64.645,-23.2977,109.911,9.88332,-3.80542,-122.903,166.249,4.38137,-87.4797,-244.881,-416.476,-417.224,-275.3,-45.1177,165.326,3.14641,-223.839,-182.291,-46.9389,-66.2091,-7.39605,74.3248,211.703,128.75,-23.9335,-133.686,-203.723,-242.554,-255.843,-28.9581,134.927,71.9412,-301.698,17.3021,-316.361,-35.6696,-67.9161,-79.9535,73.948,209.951,146.083,-16.2854,-156.69,-190.465,-177.104,93.1618,8.18543,-170.622,-85.207,65.3152,-186.587,-75.6701,-205.019,-189.367,-242.627,48.2306,196.035,41.8111,-97.0782,-97.7764,55.5054,196.981,-124.739,34.2982,172.821,-110.506,-30.2242,-89.8857,-381.318,-198.412,-184.144,48.7552,-64.7881,-51.2803,-134.734,-113.758,-89.3746,-114.01,-102.86,45.4741,26.0472,100.468,-15.0519,-163.413,-390.216,-648.049,-504.546,-308.437,-143.042,-173.093,-80.1103,-165.358,-181.695,-169.925,-245.38,-162.94,11.2497,17.9455,-46.7837,},{32.0804,26.2901,18.5078,22.6033,45.6118,92.2711,90.5119,86.3104,85.4319,78.7304,87.6885,55.9525,32.3734,23.9109,32.9262,23.8511,33.3607,36.7181,39.7446,72.8699,46.1381,68.762,44.0124,20.2088,4.3746,23.7141,35.0756,53.7214,93.6284,70.0101,28.0293,15.0623,23.2157,30.846,68.0146,55.0478,35.2757,26.1241,17.4166,11.5562,16.9959,-3.47276,34.1646,57.2338,76.4188,71.75,35.156,6.34463,26.8474,67.3998,66.492,51.1966,10.2054,17.7793,23.2852,33.4245,30.5134,28.4317,37.0792,34.2571,85.6217,54.8652,59.3609,9.61152,22.5898,57.8981,52.3275,8.69243,16.003,28.4768,21.5201,-2.11366,28.8926,49.3854,36.2161,30.9739,57.8302,66.3655,57.0189,30.2223,34.5781,58.9004,38.3921,2.51952,.804049,-4.39463,22.1069,22.8678,14.7376,36.7151,24.2707,11.2402,60.8058,70.854,56.4515,28.3572,22.2107,23.7549,14.1494,-27.2493,-29.4265,2.96806,-8.55254,-16.9909,-0.147757,39.3631,21.4031,25.7374,58.7653,54.7014,43.1994,20.2131,16.4434,21.1113,2.17204,-18.7984,4.57902,12.1241,23.5187,27.4334,46.8703,65.7009,32.692,16.1947,41.0318,51.2925,57.8266,22.5712,16.849,38.298,31.4543,44.6988,24.0825,30.6589,49.7106,51.8182,47.181,63.172,35.2612,11.5442,28.7634,29.7632,31.4985,8.1555,11.2522,23.3121,54.0564,35.0162,19.68,29.4638,64.2201,53.746,39.4572,45.1049,41.4812,21.4634,44.8562,62.1569,38.2055,9.47696,3.02516,28.9187,24.0915,15.1636,-2.61973,35.2364,44.9971,34.7159,16.9169,43.6607,27.1507,29.2968,34.7683,36.1074,17.9592,-8.52899,7.58656,42.2818,33.2964,12.3136,13.0384,18.4475,24.7083,3.53364,22.4321,33.3079,31.6872,19.6153,27.1997,26.3329,29.543,-13.8405,22.9735,50.2315,34.9704,14.9533,30.1639,29.846,15.7987,31.1982,33.7261,45.2099,25.2789,-1.76436,17.6727,21.1828,21.6634,3.95621,.454377,24.8448,39.0357,39.2266,35.8446,53.3398,38.4113,54.7106,37.1491,24.9028,18.4367,6.40947,33.4726,10.3733,14.33,6.80533,6.23854,19.8229,76.7952,91.6589,87.0224,40.687,28.1176,22.1378,20.1721,45.7664,50.844,24.4987,49.0547,28.032,21.4698,16.9343,-4.47473,-10.7331,35.4614,66.1126,86.7222,63.5199,37.5531,38.8014,26.6134,40.8399,55.697,19.8362,14.6751,18.1124,15.3687,19.9885,},{-11.2217,-28.8944,208.283,51.3924,-141.179,1.04469,221.517,104.27,118.259,-24.3103,3.45538,-406.08,-28.6196,16.4513,-102.615,-116.895,65.26,-157.44,-391.552,51.424,65.9527,-53.4254,89.3366,-139.713,-3.50057,52.0896,-51.8738,-165.493,-258.308,-171.085,-12.436,-196.302,-74.7664,-56.5241,41.1862,-54.3583,-25.4977,-17.5728,21.0136,-77.6801,-24.5277,-68.598,-35.4101,-80.4725,288.869,309.581,-1.62256,-59.0673,-44.7075,-103.49,-29.3214,281.111,628.24,173.76,-105.597,-178.64,-94.0997,39.4975,121.204,88.1388,179.374,349.384,300.666,124.65,31.6526,71.1727,287.626,234.498,-45.5041,-80.1163,-160.546,-36.3933,-125.281,-9.25786,-4.61576,-77.6811,105.521,147.312,269.073,-7.12342,88.4567,-151.391,99.2726,248.874,-1.66309,-160.003,-264.896,-125.856,80.7738,-83.506,-89.3676,-65.2004,96.8389,266.44,23.2073,-54.9928,-45.0188,-323.03,-301.18,-325.564,-102.818,-35.3586,-15.5435,-93.3029,-42.1249,-153.148,-142.274,-66.5696,-312.568,143.346,-158.629,-134.546,-179.33,-369.497,-446.862,-117.34,-183.953,212.172,87.2599,74.4263,-369.706,-47.3609,139.49,-182.348,-368.717,-431.949,-389.976,-171.955,-182.736,-409.317,-100.216,-86.915,-32.5208,-165.513,140.648,110.871,317.348,290.455,-18.232,-24.097,-96.744,-180.375,-199.254,-220.715,-32.9785,-30.925,76.1186,32.4507,-63.6816,-129.585,-109.49,-67.5158,-34.5584,70.3926,107.161,135.511,-225.5,-198.196,-115.983,-92.207,12.2391,-46.277,227.486,21.978,-61.84,65.755,-219.021,-332.264,-87.6315,-32.7984,133.703,-149.586,-228.356,-69.7141,-272.136,133.506,1.85159,43.3645,186.604,103.519,-84.5038,113.172,-43.4772,-32.915,-205.095,-67.7772,-25.2919,-298.351,-184.603,8.99336,-372.113,113.241,-6.59892,17.0831,115.814,-177.861,121.521,-10.6318,-11.6371,-41.7392,-88.1778,-357.323,37.6122,158.754,-228.284,186.204,-74.2663,212.876,-126.56,-34.8746,-41.6401,223.156,219.073,137.746,218.617,-148.868,-236.996,-34.73,172.815,-96.4008,-67.7184,-254.648,170.769,226.753,-50.4492,93.2536,190.095,244.421,-6.10037,63.3005,77.4719,64.2217,100.041,-42.5968,-98.3577,-124.14,-86.4136,303.11,324.311,203.738,106.101,161.618,-3.37631,-53.7593,-113.381,74.719,315.437,151.477,-36.5017,42.6952,-126.3,140.855,269.047,119.361,202.869,103.361,},{20.9235,8.48734,-57.8597,-39.8144,-3.60947,54.1591,78.1125,64.0629,65.6377,19.8293,10.9517,-44.6184,-73.1283,-34.687,19.175,15.3184,17.6082,6.65626,-4.26788,46.7407,21.6822,33.7226,.600687,-23.8103,-81.6497,-51.3244,-48.4583,-19.5156,27.9866,23.1161,4.96173,.904705,17.1862,19.2571,38.7775,34.2956,22.223,20.3015,-13.2651,-18.1344,-41.8438,-66.1131,-10.1903,29.5044,37.381,58.4871,31.0537,3.38921,23.485,57.6006,55.8158,30.2064,-31.4008,12.431,13.1043,-0.407703,-3.11516,1.2871,4.64372,-17.2673,19.2784,35.7476,52.3609,-1.06166,27.5665,37.4594,37.2987,6.42718,27.6325,12.7568,-3.72053,-58.8499,2.3603,13.6165,-21.9316,-40.9947,5.08236,61.8305,56.459,39.2059,39.0764,41.05,47.0591,-5.72192,-31.2445,-58.2745,-36.8735,-36.6991,-73.1487,-53.436,-67.6648,-80.155,5.2204,49.3936,61.2606,46.2241,28.461,-3.31043,8.30549,-86.2389,-83.2016,1.07403,22.252,-26.7136,-74.3185,-38.4584,-29.4978,-22.6239,2.60631,-5.1525,34.5898,29.9654,15.2389,-14.3373,-51.1769,-65.6506,5.69509,43.1496,54.0013,22.6238,17.7328,17.1647,9.58144,17.2676,34.1604,43.2107,25.3214,28.5147,21.8236,7.15726,-34.4956,18.2567,19.3455,42.2901,36.6011,49.1681,-4.76359,26.9946,43.581,-13.3634,3.31293,.750771,-44.5263,-43.5603,-3.02116,-56.0423,32.0757,36.589,10.78,11.164,65.9205,21.1063,-8.25474,15.8307,14.9528,2.15133,30.1679,58.8297,23.2811,-26.9471,-36.7167,-22.5578,-6.62631,-6.33471,-44.4115,4.93886,-2.30785,-12.6346,-69.6166,-34.3867,-11.0631,28.5881,29.314,21.0884,-12.7236,-65.5677,-25.145,20.471,18.8503,-15.3444,-19.0907,-26.5289,-18.3348,-68.367,-63.8293,-29.7587,3.11912,-17.3317,10.2782,31.7551,27.4215,-74.129,5.48216,49.5817,17.0111,-27.9293,-17.776,-30.0039,-21.837,-11.3043,-22.1173,.113956,-36.3449,-115.531,-30.2421,-13.7108,20.4893,9.13413,1.04671,43.8537,46.827,11.3219,-3.60666,21.0498,2.30741,24.926,-16.9204,-34.3821,-35.5896,-32.2194,-16.5719,17.9012,10.5245,5.42685,.0394983,13.6518,70.3105,76.6397,63.8727,-7.83587,-13.2854,-29.3276,-70.4949,-22.4563,1.58633,-2.15842,21.5157,20.7477,10.6788,14.6235,-24.0264,-28.0684,46.9435,77.5817,105.68,69.5201,21.5963,25.9874,-31.0286,-36.7136,33.1961,-11.667,-17.5386,14.0531,12.6958,17.1011,},{-12.2622,-30.9203,-61.0248,-13.7384,76.0811,-52.8315,138.7,-177.758,-401.84,-168.914,-301.378,-264.427,-152.907,-210.973,-114.628,-93.7877,-9.96549,-1.41078,-129.301,-143.646,-12.0432,25.1152,18.1105,-11.655,-173.999,-197.318,-52.4861,-163.295,-222.909,-158.794,-114.061,-104.371,-24.9514,-231.68,-150.336,-53.8794,-6.11385,193.886,-35.523,-130.056,-44.5283,31.9235,292.363,-55.4034,-308.936,-438.095,-137.75,-76.254,-233.327,14.2548,91.4231,-1.50104,63.3736,3.48358,44.3599,-39.9991,-97.9582,-22.1407,167.583,277.282,209.829,267.521,206.631,-296.321,-283.03,-18.3436,-35.1472,3.45626,85.0972,42.2612,71.4498,-18.1547,-29.6529,-49.7198,63.7922,250.862,313.424,259.391,545.682,15.7674,-200.051,-62.8822,-159.466,127.851,87.3198,62.9778,42.3688,-66.2238,-194.021,-211.031,-22.2049,154.937,327.838,342.96,513.633,92.8631,-68.6144,210.738,97.0439,130.389,-75.766,-167.565,-189.273,-213.585,-398.788,-674.847,-583.117,-199.87,155.534,246.439,639.377,401.737,143.87,307.477,54.7675,-117.148,-294.548,-236.56,-185.465,-331.76,-323.481,-393.401,-429.107,-282.152,-24.1378,.297092,426.329,293.092,164.953,653.708,138.505,-90.8363,-424.759,-265.223,-93.3265,-147.864,-247.604,-336.285,-528.728,-426.558,-287.255,-28.935,101.437,188.565,81.7457,544.896,320.43,258.698,-1.89131,-133.823,-294.509,-384.079,-411.125,-284.54,-151.657,-126.154,-90.1098,-272.959,-121.47,89.8016,8.0693,159.027,97.5691,359.194,171.081,81.5879,-72.115,-203.846,-246.28,-187.298,-83.8572,34.9093,-53.0938,-258.894,-191.657,-31.9408,-105.347,75.2596,197.452,328.405,271.846,121.885,35.2073,-48.7606,-146.47,-155.92,-40.8422,57.6418,-15.5091,-371.01,-4.82397,-368.936,-66.5687,-99.6004,2.72763,125.125,245.7,178.795,26.562,-107.884,-172.244,-152.496,64.0636,-93.5431,-351.889,-191.451,-40.3914,-305.288,-113.978,-318.336,-153.929,-137.693,120.073,248.11,130.593,-26.2556,-30.1779,72.0497,134.881,-247.828,-92.875,-58.1705,-281.768,-77.0485,-107.474,-337.82,-168.08,-62.705,160.124,78.6912,99.2198,18.0063,-55.7397,-59.7852,-133.155,-148.92,-180.118,-184.142,-57.5204,-72.1544,-146.533,-307.159,-561.345,-432.53,-262.338,-157.867,-67.1476,44.0633,-76.7297,-52.483,-89.8688,-174.041,-249.802,-148.193,-123.471,-72.9349,},{356.866,592.356,386.28,188.775,276.067,316.847,273.124,-172.617,180.212,78.3309,383.952,-438.662,-140.122,-148.975,39.2268,-119.978,319.149,79.7318,245.044,692.228,39.9793,159.048,336.38,131.316,200.782,581.906,-48.4639,-277.352,-350.786,-400.986,398.904,292.357,-144.35,257.895,503.495,-109.184,215.922,-10.2474,183.818,-106.388,142.482,412.818,281.563,267.252,82.3346,646.622,374.347,70.839,274.516,357.747,-64.3054,6.63795,269.563,-264.356,-643.983,-669.84,77.8813,263.213,56.6172,-354.68,79.4879,522.707,233.376,247.149,800.94,99.9914,-41.3493,316.008,66.9555,-439.927,-225.859,-230.463,-388.369,191.673,-136.333,238.63,288.055,148.507,139.131,136.655,489.529,79.3197,399.898,47.7394,17.2033,-101.45,-423.949,-582.142,-410.428,-124.589,137.165,9.91603,-144.704,175.935,269.37,70.6519,606.644,312.885,-173.963,-498.596,-31.984,-310.381,-260.919,-933.714,-787.337,-154.119,-146.233,-523.68,-446.316,169.259,128.823,261.575,41.0783,-209.9,-210.25,374.934,102.01,363.858,141.466,-162.551,-851.218,-493.108,-28.2214,-517.232,-338.718,439.479,63.1807,349.043,-166.068,-969.582,-365.919,266.29,643.926,536.837,214.203,161.138,-187.512,-140.104,240.478,-118.556,-1270.67,-162.646,-14.8542,-165.273,84.8724,-772.555,-296.603,714.447,654.248,53.585,531.474,594.623,238.543,109.333,-394.525,-540.372,-656.023,-352.313,336.281,-65.3678,21.8752,-222.986,-218.618,-55.8569,-244.454,261.557,648.307,464.573,111.564,416.672,614.166,-128.696,-278.281,183.777,173.692,106.846,102.616,77.4623,-367.531,-386.497,-180.597,21.4124,91.6689,-307.741,-376.323,138.842,364.601,-383.66,21.8458,340.225,-121.592,112.658,36.1127,-33.2874,-144.375,-341.775,123.571,-272.091,-40.1603,-122.468,-217.458,136.125,308.856,-17.6042,436.171,68.2975,-678.051,330.269,-175.194,-53.1066,-33.3974,224.289,72.1883,-147.358,152.823,-284.092,-746.59,-232.226,18.1495,-130.89,-313.72,-963.429,-284.228,146.461,-437.846,-705.904,-263.068,222.152,124.171,682.11,380.653,-43.9779,-280.139,-525.018,-576.769,-565.212,-1061.78,-416.896,-6.94513,121.88,-268.606,-558.487,-290.084,-339.478,102.859,-3.73804,280.503,-178.422,-530.916,-809.089,-1298.04,-920.621,-661.803,-699.396,-457.254,-321.688,},{23.9807,22.1078,-7.79689,-8.20501,16.949,65.3258,67.072,65.4957,73.9927,60.9201,73.4072,39.9752,11.2315,.262531,26.1697,19.1815,22.8021,23.3025,15.9834,55.9866,25.4427,58.0772,21.2706,1.28941,-11.3793,.789497,-0.426066,15.9243,72.1348,50.5219,15.7587,11.6392,14.5538,24.2076,60.6285,46.6655,28.3027,12.0612,-0.0980264,13.3438,15.7038,-28.5922,6.08306,28.4267,38.4266,38.1848,15.3072,.989217,25.2714,63.6862,61.7227,52.9734,.583287,13.6008,36.2092,47.7436,37.7189,18.3833,15.4304,-7.17662,55.2649,26.6698,47.605,-0.762642,26.0958,52.1798,46.945,3.3484,16.7487,44.5901,38.6632,11.0469,32.4866,42.4227,4.74718,4.92445,34.6629,50.9814,44.67,31.8405,33.9675,58.0058,38.6174,7.65599,17.1077,11.1237,34.6648,18.6353,-10.6202,-0.362033,-2.17927,-17.1342,43.0772,64.0766,54.8003,30.6623,22.3086,13.4482,5.91886,-7.40484,-14.5952,9.21521,-3.59821,-18.985,-15.6445,32.2894,18.1501,11.7628,42.8681,40.9731,36.9665,20.767,18.6055,8.56771,-7.17949,-21.4547,20.9185,28.3691,42.7008,26.4712,50.9871,59.343,42.7181,16.8606,53.8223,46.5547,50.8125,23.4397,19.6977,46.7273,46.4289,66.5751,36.8531,38.9694,40.9367,38.1413,30.3701,54.4111,37.3151,21.3068,46.9081,40.6302,26.8338,3.27576,14.8416,36.0683,80.4095,52.3578,26.0579,24.8057,56.8515,40.9139,36.7014,34.2654,34.975,24.0324,68.5658,87.0187,52.8241,8.5168,12.9533,44.5211,38.0384,18.4245,-9.51231,18.4913,29.6515,16.0983,-2.68597,30.8448,20.3857,35.2877,48.1467,52.0205,29.5476,-7.82453,19.5449,59.9441,48.2332,12.4898,5.78003,-1.57904,3.78812,-15.9989,15.4146,36.4376,36.8409,19.7703,38.2745,42.2002,45.964,-10.1502,32.4336,68.0988,45.3772,13.548,20.2914,6.56343,-2.86279,33.3615,36.9393,51.2053,34.4963,4.48639,31.3127,28.2125,29.218,7.21209,10.5394,32.3799,35.3187,27.2471,1.64355,24.4126,17.7129,53.8685,33.6858,24.1359,30.01,13.9538,32.8318,18.1939,12.7945,1.43371,2.83629,24.3512,71.3284,75.7595,77.4459,17.7579,1.64994,-8.56917,-0.205913,54.3467,53.7729,24.1445,51.3053,30.8459,17.0472,10.242,-12.6512,-25.6577,28.3082,58.4575,74.7648,47.0128,15.4592,26.1817,20.0427,31.5986,50.0092,8.97943,4.34332,6.03113,-0.247649,12.6392,},{-62.7649,-111.166,-193.217,-368.872,-520.634,-121.44,-248.4,-223.975,64.2189,41.2415,120.458,-367.519,-385.485,-164.016,-156.888,-64.5986,-109.547,-446.377,-640.856,-392.079,-402.519,-561.496,-254.834,64.6352,176.712,69.2392,-149.629,-298.75,-802.992,-605.689,-110.007,100.509,-264.957,-191.84,-343.001,-169.145,-372.412,-431.961,50.3503,-113.113,-353.725,-211.163,-272.996,-4.28386,-302.082,470.729,-42.5896,130.8,47.2122,-420.367,-190.033,64.6906,41.9454,49.7314,71.6239,-384.221,-471.482,-35.734,49.0551,-59.7417,149.052,-329.051,-293.848,193.842,393.26,56.3678,246.183,411.958,152.681,-48.6651,-57.5959,-226.3,-283.836,127.941,159.118,453.475,209.934,85.6337,-345.736,85.5849,346.817,71.6796,233.09,739.033,400.563,278.885,-263.577,-664.05,-222.945,-49.6666,404.69,492.243,239.85,491.929,-55.4687,-109.555,353.733,414.153,184.507,338.961,405.944,296.774,42.9605,-476.213,-550.248,42.7107,153.803,699.568,111.439,484.987,-152.619,-135.032,53.418,81.28,294.142,351.679,311.054,431.54,-97.6983,-198.186,-186.149,27.5425,97.243,81.1928,-99.1268,178.005,218.177,48.5541,-28.5082,-385.282,481.505,690.431,740.763,346.953,-149.474,-123.36,84.2199,53.5065,163.371,692.011,-33.7595,306.373,175.757,-7.1443,150.59,176.522,580.745,713.876,669.228,319.17,206.15,364.411,232.02,51.5373,389.572,732.874,270.983,-37.0336,397.267,-142.357,175.308,444.802,550.505,351.818,32.7988,268.798,27.5373,-160.44,-238.894,142.284,220.429,195.601,-36.6885,150.951,185.185,-13.5356,112.049,577.82,541.149,119.545,-220.809,153.345,-89.3566,-556.213,-130.772,197.436,224.412,-144.64,-1.73931,430.96,-403.668,98.987,-139.904,38.8654,-124.011,-627.022,-284.96,-413.533,-327.886,-539.261,-157.154,-76.5858,77.2529,119.353,-153.498,-216.033,-312.143,-17.8389,-238.588,-89.466,-143.601,-56.6779,-53.5803,-147.58,-155.404,-290.423,-353.099,-23.1888,-65.7414,111.107,-543.37,-378.544,79.4002,14.1626,-397.513,-364.691,-189.516,95.3245,-349.604,-62.9474,-278.099,-339.608,-272.163,-546.031,-477.782,-359.224,-488.237,2.17657,-83.3523,-30.7576,-55.9472,-202.423,-266.523,-368.765,-208.059,390.929,556.017,165.154,-44.1627,-300.108,-508.148,-148.953,197.602,-67.8466,-154.379,-159.136,},{26.9259,21.7699,14.2476,15.6364,35.5195,78.4415,78.4995,78.1633,85.4772,82.4307,84.8309,54.7367,28.9718,13.6976,22.4614,15.1122,26.89,30.1276,32.642,61.8949,36.8346,54.3172,28.9568,14.8016,7.56759,24.7122,36.8602,52.0597,79.8757,54.1234,18.9519,9.83845,16.4798,22.1501,56.3366,45.9045,26.5603,18.7669,17.1429,16.5564,17.9303,-1.77042,34.4808,58.5716,77.9251,64.2751,24.1825,2.51521,20.8802,58.6187,56.522,38.422,11.3732,23.0562,25.9219,29.4451,30.2974,26.804,36.2602,34.6045,81.174,53.5015,53.7865,6.37237,23.8811,52.5755,45.0758,9.45221,17.4449,29.6904,22.1388,6.6354,27.0676,46.1651,29.7915,32.9802,58.4127,63.887,54.979,29.6614,30.6372,53.8614,37.3228,8.21166,10.6096,3.29372,19.8421,15.3204,7.04394,20.6391,18.6915,10.3587,61.7501,67.9319,56.1073,28.052,23.0275,24.6598,16.4882,-5.39811,-14.4081,.390879,-8.92078,-18.0281,-3.67174,28.7606,17.7472,18.7006,53.5032,53.9346,43.4014,20.096,18.4294,26.156,18.6051,.808547,13.6481,18.7598,24.5668,23.8363,41.0158,59.1696,40.3536,20.2534,38.1936,46.3321,53.0761,22.4241,18.2959,45.4824,54.9155,56.1843,33.4015,32.4535,44.5565,45.1649,43.5521,56.4568,39.8629,24.8591,38.3169,31.3757,31.604,6.57738,15.3397,37.6095,66.3691,47.772,25.7224,25.6255,55.1654,48.9488,36.6232,37.7831,41.4044,32.2253,53.7249,65.7837,38.6533,7.21358,13.4404,48.6236,47.1086,27.362,2.68993,28.9982,37.1622,30.6548,17.0192,41.4636,25.7612,31.0699,47.0252,47.1392,30.4413,-3.65395,17.8576,58.6805,51.8011,20.9435,16.5887,16.6069,27.0537,9.38166,25.784,31.8141,28.0054,19.2404,39.7505,39.4681,39.0268,-6.78846,31.0137,59.6623,49.3037,19.6149,32.5813,27.2432,15.3058,34.4528,32.9394,34.4979,24.86,11.2702,29.6692,31.8411,22.0343,8.33069,10.0801,27.2264,31.8145,36.9992,35.9086,48.7119,32.8513,47.2928,27.0783,18.2936,29.2513,19.9488,35.0971,7.8518,9.41108,8.27392,5.90292,27.9508,74.0254,77.1572,78.0853,35.8715,18.4709,9.86593,9.48109,48.9215,52.8992,25.6407,38.8457,21.9413,16.2429,12.9962,-4.08986,-6.61616,42.1302,67.1231,82.0791,64.6904,43.2182,43.1641,35.2472,40.9757,49.2119,18.1916,13.7349,16.7434,13.4621,18.3315,},{-6.76318,-21.0377,-61.7545,-18.0896,65.4817,-53.4225,122.55,-170.887,-386.734,-151.364,-234.055,-242.805,-173.825,-222.815,-114.193,-90.1533,-6.74334,17.7211,-124.774,-137.693,-42.7278,20.0283,12.4224,14.2971,-143.804,-180.283,-63.8805,-149.876,-136.436,-124.104,-112.205,-106.164,-25.7493,-213.796,-134.025,-50.3722,-0.619332,169.785,-53.5238,-105.645,-13.8409,42.5127,277.666,-25.759,-291.515,-365.012,-115.463,-85.0004,-231.979,32.0049,64.9349,10.0707,54.8185,-16.5582,.276209,-31.1505,-93.9601,-44.6706,144.768,276.603,220.784,216.051,225.961,-279.584,-265.471,-2.52262,-41.8707,5.31996,71.8746,21.5297,30.3862,-13.1981,-26.8744,-62.3314,34.7013,223.96,296.583,233.295,480.165,5.03579,-178.988,-33.9931,-170.904,105.835,64.0986,33.6805,4.79002,-49.3222,-162.306,-217.738,-64.9724,118.844,303.241,310.88,468.302,83.1747,-51.5051,215.885,101.107,112.557,-86.0726,-152.767,-186.051,-176.459,-362.668,-635.082,-544.591,-169.749,176.717,228.02,590.08,349.003,128.207,293.756,57.8077,-76.5705,-268.951,-246.704,-205.587,-294.134,-300.834,-380.005,-449.472,-281.349,7.5769,5.49915,411.157,249.322,144.948,627.782,135.675,-101.494,-418.497,-272.853,-127.619,-145.147,-241.294,-334.137,-514.638,-400.431,-274.295,-23.1177,97.83,187.983,70.4341,508.268,282.567,228.328,-25.3427,-141.792,-310.14,-365.723,-405.88,-301.727,-177.508,-139.374,-79.1327,-257.652,-124.633,91.9633,12.5217,150.622,81.6192,342.315,159.244,62.6529,-102.027,-196.116,-244.747,-203.04,-119.058,11.2115,-39.1611,-235.087,-168.504,-22.7115,-100.857,93.8445,199.061,331.571,267.989,118.36,19.8471,-31.6887,-148.053,-174.764,-60.726,51.7865,-1.94897,-335.45,-14.9524,-329.551,-55.2713,-90.7405,-0.612783,120.114,232.339,168.5,-0.73825,-94.9351,-173.051,-160.493,48.5907,-92.3355,-331.268,-216.398,-37.599,-280.51,-98.8605,-283.021,-122.776,-132.961,130.382,242.545,118.183,-18.0929,-23.9532,72.9459,148.867,-214.454,-101.226,-84.251,-264.276,-91.4579,-105.574,-308.574,-135.526,-49.9003,147.657,75.8695,90.5965,47.256,-23.218,-45.4416,-123.602,-168.936,-184.409,-171.26,-64.9875,-86.5646,-132.988,-299.784,-535.028,-399.906,-229.891,-126.368,-57.7078,60.3582,-66.2664,-85.2642,-87.7578,-128.472,-229.432,-155.097,-126.617,-67.9562,},{63.0133,39.2914,42.9762,108.62,212.605,-308.229,-265.961,399.055,87.3422,543.007,10.4742,214.274,152.439,-52.9905,-66.6068,-13.6713,140.901,497.109,332.402,-5.82867,288.668,270.167,137.822,-73.6773,-133.064,-77.5219,-34.7403,95.4732,46.2631,106.626,-345.419,-157.382,364.251,117.203,11.9344,-133.555,126.488,123.936,258.219,192.111,85.9302,174.927,715.368,283.81,285.607,-93.26,65.3199,-168.457,-100.088,184.356,177.511,-212.242,-105.76,339.164,413.032,273.961,-39.4695,291.475,668.546,715.276,353.995,870.867,414.705,-227.397,-615.809,-234.732,-431.464,-362.178,-18.0773,205.292,173.271,-205.953,178.382,358.445,438.498,404.26,700.084,777.258,781.026,133.865,-384.886,-97.3325,-429.806,-297.884,-354.016,-406.313,-465.673,205.328,152.843,73.576,-174.408,181.137,458.668,229.111,726.502,261.463,-384.631,-185.173,-318.125,-277.197,-687.401,-597.571,-106.526,79.891,-99.954,-404.685,-292.641,-654.262,113.89,5.59786,665.685,312.51,82.6459,225.898,-290.337,-544.196,-984.092,-502.917,-137.146,-120.719,395.831,219.58,-70.5289,112.416,-27.5813,-314.472,1.8713,134.045,274.016,702.558,-601.638,-934.194,-892.246,-379.927,-12.3246,313.608,78.1854,-291.449,-554.061,-466.703,157.902,-164.448,-373.463,-80.5436,26.5354,218.77,-485.525,-452.624,-432.364,-85.9218,-69.3295,-189.368,-531.569,-465.239,-452.733,-501.675,-146.624,48.5385,-214.61,-24.8643,-260.401,-209.429,-382.829,-252.572,29.5618,153.625,66.5956,-132.559,-407.997,-324.854,-345.844,-232.888,-173.893,-311.344,-131.978,-282.959,-386.977,-474.185,-224.848,96.1397,241.075,336.488,515.599,98.4224,-144.216,-202.689,-188.097,9.09823,-88.048,-524.082,10.9988,-843.824,-155.484,-338.74,-4.22476,241.65,289.868,629.704,629.94,114.321,-38.1231,2.38292,-96.7724,-130.906,-57.8706,-246.556,-199.028,-496.437,165.172,-281.117,-387.109,-80.4115,225.921,548.004,639.171,273.753,-7.3879,-169.783,214.801,-233.396,247.619,232.712,-600.272,-24.2637,214.603,43.0781,-38.6734,-60.4875,447.155,139.951,456.252,246.974,8.14161,-172.357,8.82016,207.802,316.894,8.2738,103.829,56.6636,-47.8859,-93.1859,-116.172,64.4289,169.798,196.015,200.418,-38.3453,51.5016,289.006,500.974,-139.267,-107.495,228.139,135.369,134.623,},{-105.369,-167.283,-207.669,-212.262,-163.47,-352.675,-236.845,-119.577,53.6131,325.334,-140.564,144.893,256.088,-52.0866,110.125,-24.6078,-96.9401,-146.3,-392.524,-304.706,-62.4293,238.535,-143.359,-234.492,-567.985,-750.486,230.372,173.108,-459.423,-122.204,-181.045,-107.138,-4.4014,-365.584,-450.947,-373.011,-382.03,204.116,593.214,-7.26872,164.149,214.047,267.97,-5.00219,-67.1796,-1040.76,-466.989,-125.945,-49.0972,25.2645,-0.821704,-183.707,189.319,479.651,684.726,164.661,526.909,192.301,202.428,463.985,395.922,86.7125,111.022,-434.907,-474.908,-57.0737,-132.078,-360.876,241.196,295.957,319.757,293.917,430.982,104.871,444.509,109.819,132.596,548.485,524.517,-115.154,-156.154,155.749,37.2444,22.9072,44.463,88.9679,379.2,367.156,260.389,4.72898,-117.606,-108.846,7.81725,121.848,643.301,4.89004,-340.914,-171.472,-36.6106,-5.2374,-325,-385.105,-166.599,-65.4165,-250.358,-741.07,-837.546,-467.077,-300.04,-178.276,658.409,506.608,46.4056,64.7691,59.835,-639.317,-578.998,-247.894,61.0436,-68.9896,282.693,-73.146,-367.114,-454.095,-482.005,-448.548,208.363,289.031,170.16,486.26,266.196,49.8777,-267.672,114.484,206.471,-255.813,-248.084,-354.477,-222.323,-531.16,-425.256,-13.1159,213.457,335.327,51.8593,564.265,674.588,242.45,-268.569,-9.12905,-214.324,-164.359,6.21049,88.541,199.034,-260.102,-196.074,-330.286,-259.503,-224.241,-95.7934,635.915,506.907,485.033,124.782,130.021,43.6172,224.083,414.059,495.466,269.261,169.146,-64.6238,-100.776,-342.834,-181.789,33.9215,-63.4028,317.425,467.736,209.728,-176.672,-102.548,-65.6708,424.829,206.524,295.229,193.482,-192.655,-588.167,-257.033,-643.797,93.0166,39.9534,79.1266,102.621,56.0796,-17.7106,-121.197,-417.172,94.1667,339.328,352.345,40.8087,-387.477,-491.599,-233.809,-602.354,-227.873,-385.55,-467.945,-441.963,-246.285,-95.0477,-190.102,-160.064,373.745,261.742,329.954,162.807,-137.239,-663.697,-961.333,-345.62,7.05326,-162.254,110.05,-9.17457,-53.1624,-319.064,-131.961,-214.222,-126.477,380.149,504.827,425.441,225.499,-437.438,-22.3618,-34.9352,-121.948,-381.391,-319.539,114.855,314.149,-50.9457,-305.884,-409.008,-186.655,430.78,559.053,-89.8244,-129.479,-116.724,-73.5562,42.0888,}},weight[]={-687.128,1977.9,-2260.38,-2691.38,-186.501,-231.892,-147.256,-167.682,-2618.16,-148.749,1351.98,-173.461,-2618.61,5220.29,-181.183,3018.22,-127.012,-2434.69,-3213.15,-3082.51};

	inline double neuron_out(double sum)
	{ return 1. / (1. + exp(-sum/3.)); }

	int netout(const double *signals)
	{
		register int i, j;
		double sum, sumout(0.);

		for(i = 0; i < NUM_NEURON; i++) {
			for(sum = 0., j = 0; j < SIGNALS_SZ; j++)
				sum += n_weight[i][j] * signals[j] / 1000.;
			sumout += neuron_out(sum) * weight[i] / 1000.;
		}
		int out = floor(neuron_out(sumout) * 10. + .5);
		if(out > 9) out = 9;

		return out;
	}
}

namespace splitter {
	const int MAX_PX = 256, MAXSZ = 512;
	enum { WHITE, GRAY };

	struct step { int dx, dy, color; }
		s[] = { { 0, 1, WHITE }, { -1, 1, WHITE }, { 1, 0, WHITE }, { 0, 1, GRAY },
			{ 1, 0, GRAY }, { -1, 0, WHITE }, { -1, 0, GRAY } };

	struct coord { int x, y; } path[MAXSZ];
	int bound, nleft, nright;

	class canvas {
	public:
		int left, right, top, bottom, validw;

		inline int width() const { return right - left + 1; }
		inline int height() const { return bottom - top; }

		void tclear() {
			register int i;
			while(top < bottom) {
				for(i = left; i <= right; i++) if(get(top, i)) return;
				top++;
			}
		}

		void rclear() {
			register int i;
			while(right > left) {
				for(i = top; i < bottom; i++) if(get(i, right)) return;
				right--;
			}
		}

		void bclear() {
			register int i;
			while(bottom > top) {
				for(i = left; i <= right; i++) if(get(bottom - 1, i)) return;
				bottom--;
			}
		}

		void lclear() {
			register int i;
			while(left < right){
				for(i = top; i < bottom; i++) if(get(i, left)) return;
				left++;
			}
		}
	private: virtual int get(const int, const int) = 0;
	};

	class numeral : public canvas {
		int validh;
	public:
		double data[MAX_PX][MAX_PX];

		numeral(const int width, const int height):validh(height/2) { validw = width/6; }

		inline bool is_valid() const
		{ return width() >= validw && height() >= validh; }

		void tidyup()
		{
			const int padding = 5;
			register int i, j;
			int white (0);

			for(i = left; i <= right; i++)
				for(j = top; j < bottom; j++) if(!get(j, i)) white++;

			if((white * 3)/2 > width() * height()) {
				int t = padding, b = bottom - padding - 1,
					l = left + padding,	r = right - padding;
				for(i = l; i <= r; i++)	if(get(t, i)) return;
				for(i = l; i <= r; i++) if(get(b, i)) return;
				for(i = t; i < b; i++) if(get(i, l)) return;
				for(i = t; i < b; i++) if(get(i, r)) return;
				right = r; top = t; left = l; bottom = b;
				lclear(); rclear(); tclear(); bclear();
			}
		}
	private: int get(const int i, const int j) { return (int) data[i][j]; }
	};

	class image : public canvas {
		enum { F_MARKED = 010, F_PATH = 020, F_VALUE = 7 };
		int data[MAXSZ][MAXSZ];
	public:
		image() {
			top = right = bottom = 0;
			left = MAXSZ;
		}

		friend istream &operator>>(istream&, image&);
		inline int value(const int v) { return v & F_VALUE; }
		int get(const int i, const int j) { return value(data[i][j]); }

		void tidyup() {
			register int i, j;

			for(j = left + validw; j > left; j--) {
				for(i = top; i < bottom; i++)
					if(get(i, j) > GRAY) break;
				if(i == bottom) { left = j; break; }
			}
		}

		bool try_split(numeral &n)
		{
			register int i(left), j(top);
			bool retv;

			nleft = MAX_PX;
			n.top = n.left = nright = bound = 0;

			do {
				while(value(data[j][i])) i++;
				retv = next(j, i);
				i++;
			} while(!retv);

			n.bottom = bottom - top;
			n.right = nright - left;

			for(i = 0; i < bound; i++) {
				int &x = path[i].x, &y = path[i].y;
				for(j = left; j <= x; j++)
					n.data[y - top][j - left] = value(data[y][j]);
				for(; j <= nright; j++)
					n.data[y - top][j - left] = 0.;
			}

			n.tclear(); n.lclear(); n.bclear(); n.rclear();

			if(n.is_valid()) {
				for(i = 0; i < bound; i++) {
					int &x = path[i].x, &y = path[i].y;
					for(j = left; j < x; j++) data[y][j] = 0;
				}
				n.tidyup();
				left = nleft;
				lclear(); tidyup();
				bclear(); lclear(); tclear();
				return true;
			}
			return false;
		}

		bool is_good_way(const int j, const int i, const int c) const
		{
			const int &v = data[j][i];
			return i > left && i <= right && (v & F_VALUE) == c && !(v & F_MARKED);
		}

		bool next(const int l, const int c)
		{
			bool retv = (l == bottom);

			if(!retv && c == right) {
				for(register int k(l + 1); k < bottom; k++)	{
					path[bound].x = right;
					path[bound++].y = k;
					data[l][c] |= F_PATH;
				}
				retv = true;
			}

			data[l][c] |= F_MARKED;

			for(int i(0); !retv && i < 7; i++)
				if(is_good_way(l + s[i].dy, c + s[i].dx, s[i].color))
					retv = next(l + s[i].dy, c + s[i].dx);

			if(retv) {
				if(c > nright) nright = c;
				if(c < nleft) nleft = c;
				path[bound].x = c;
				path[bound++].y = l;
				data[l][c] |= F_PATH;
			}
			return retv;
		}
	private:
		inline int value_from(const char pixel) const
		{
			int v;

			if(pixel == '%') v = 1;
			else if(pixel == '#') v = 3;
			else if(pixel == '@') v = 4;
			else v = 0;

			return v;
		}
	};

	istream &operator>>(istream &s, image &o)
	{
		register int i(0);
		int ch, v, &l = o.left, &r = o.right,
			&b = o.bottom, add_ln(0);

		while((ch = s.get()) != -1) {
			if(ch == '\n') {
				if(add_ln) b++;
				add_ln = i = 0;
			} else {
				o.data[b][i] = v = o.value_from(ch);
				if(v != 0) {
					if(l > i) l = i;
					if(r < i) r = i;
					add_ln = 1;
				}
			}
			i++;
		}
		o.validw = o.width() / 6;
		return s;
	}
}

namespace resizer {

	const int SZ = splitter::MAX_PX;

	double r[SZ], s[SZ], b[SZ], c[SZ], d[SZ], pressed[16][SZ], calc[SZ],
		*a, resized[neuro::SIGNALS_SZ];
	int m(1);

	double phi(const double arg)
	{
		int i = floor(arg) + 1;
		double t = arg - i;
		return a[i] + b[i] * t + c[i] * pow(t, 2.) / 2. + d[i] * pow(t, 3.) / 6.;
	}

	void marching(const int dim)
	{
		register int k;
		double prev = a[0], curr = a[1], next;

		c[dim] = b[dim] = d[dim] = c[dim - 1] = 0.;

		for(; m < dim - 1; m++)
			r[m] = -1. / (calc[m] = r[m - 1] + 4.);

		for(k = 1; k < dim - 1; k++) {
			next = a[k + 1];
			s[k] = (6. * (prev - 2. * curr + next) - s[k - 1]) / calc[k];
			prev = curr; curr = next;
		}

		for(k = dim - 2; k > 0; k--)
			c[k] = s[k] + r[k] * c[k + 1];

		for(k = 1; k < dim; k++) {
			d[k] = c[k] - c[k - 1];
			b[k] = c[k] / 2. - d[k] / 6. + (a[k] - a[k - 1]);
		}
		a[dim] = a[dim - 1];
	}

	double *resize16x16(splitter::numeral &n)
	{
		register int i, j;
		int w = n.width(), h = n.height(), t = n.top;
		const double rw = (double) w / 16., rh = (double) h / 16.;

		for(i = 0; i < h; i++) {
			a = n.data[i + t]; a += n.left;
			marching(w);
			for(j = 0; j < 16; j++)	pressed[j][i] = phi(rw * j);
		}

		for(i = 0; i < 16; i++) {
			a = pressed[i];
			marching(h);
			for(j = 0; j < 16; j++)
				resized[i + (j << 4)] = phi(rh * j);
		}
		return resized;
	}
}

int main() {
	int answer(0);
	splitter::image im;

	cin >> im;

	splitter::numeral n(im.width(), im.height());

	while(im.try_split(n)) {
		answer *= 10;
		answer += neuro::netout(resizer::resize16x16(n));
	}
	cout << answer;
	return 0;
}